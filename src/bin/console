#!/usr/bin/env php
<?php

use Symfony\Bundle\FrameworkBundle\Console\Application;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\ErrorHandler\Debug;
use Symfony\Component\Yaml\Yaml;

set_time_limit(0);

require __DIR__ . '/../vendor/autoload.php';
require __DIR__ . '/../RequirementChecker.php';

$getZikulaEnv = function(ArgvInput $input) {
    $defaultEnv = $input->getParameterOption(['--env', '-e'], getenv('ZIKULA_ENV') ?: 'dev');
    // prefer install and upgrade commands default to prod environment
    $isInstallUpgradeCommand = ((strpos($input->getFirstArgument(), 'zikula:install') !== false)
        || (strpos($input->getFirstArgument(), 'zikula:upgrade') !== false));
    $env = $isInstallUpgradeCommand ? 'prod' : $defaultEnv;
    return $env;
};

$input = new ArgvInput();
$env = $getZikulaEnv($input);
$debug = getenv('ZIKULA_DEBUG') !== '0' && !$input->hasParameterOption(['--no-debug', '']) && 'prod' !== $env;

if ($debug) {
    Debug::enable();
}

// on install or upgrade, check if system requirements are met.
$kernelConfig = Yaml::parse(file_get_contents(__DIR__ . '/../config/services.yaml'));
if (is_readable($file = __DIR__ . '/../config/services_custom.yaml')) {
    $kernelConfig = array_merge($kernelConfig, Yaml::parse(file_get_contents($file)));
}
$requirementChecker = new RequirementChecker();
$requirementChecker->verify($kernelConfig['parameters']);

$kernel = new Kernel($env, $debug);
$kernel->boot();

$application = new Application($kernel);
$application->run($input);
