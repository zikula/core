{% extends "bootstrap_3_horizontal_layout.html.twig" %}

{% macro helpBlock(param = null) %}
    {% if param|default %}
        {% if param is iterable %}
            {% for helpText in param %}
                <em class="help-block small">{{ helpText }}</em>
            {% endfor %}
        {% else %}
            <em class="help-block small">{{ param }}</em>
        {% endif %}
    {% endif %}
{% endmacro %}
{% macro alertBlock(param = null) %}
    {% if param|default and param is iterable %}
        {% for alertText, type in param %}
            <div class="alert alert-{{ type }}">{{ alertText }}</div>
        {% endfor %}
    {% endif %}
{% endmacro %}

{% block form_label_class -%}
col-sm-3
{%- endblock form_label_class %}

{% block form_group_class -%}
col-sm-9
{%- endblock form_group_class %}

{% block checkbox_widget -%}
    {%- set parent_label_class = parent_label_class|default('') -%}
    {% if 'checkbox-inline' in parent_label_class %}
        {#{- form_label(form, null, { widget: parent() }) -}#}
        {{ parent() }}
    {% else -%}
        <div class="checkbox">
            <input type="checkbox" {{ block('widget_attributes') }} style="margin-left: auto"{% if value is defined %} value="{{ value }}"{% endif %}{% if checked %} checked="checked"{% endif %} />
        </div>
    {%- endif %}
{%- endblock checkbox_widget %}

{% block checkbox_row -%}
{% spaceless %}
    <div class="form-group{% if not valid %} has-error{% endif %}">
        {{ block('form_label') }}
        <div class="{{ block('form_group_class') }}">
            {{ form_widget(form) }}
            {{ form_errors(form) }}
            {% import _self as macros %}
            {{ macros.helpBlock(help) }}
            {{ macros.alertBlock(alert) }}
        </div>
    </div>
{% endspaceless %}
{%- endblock checkbox_row %}

{% block submit_row -%}
{% spaceless %}
    <div class="form-group">
        <div class="col-sm-offset-3 col-sm-9 {{ block('form_label_class') }}"></div>
        <div class="col-sm-offset-3 {{ block('form_group_class') }}">
            {{ form_widget(form) }}
        </div>
    </div>
{% endspaceless %}
{% endblock submit_row %}

{# add help text to input elements & add input groups to simple inputs #}

{% block form_widget_simple %}
    {% if type is not defined or type not in ['file', 'hidden'] %}
        {%- set attr = attr|merge({class: (attr.class|default('') ~ ' form-control')|trim}) -%}
    {% endif %}
    {%- set type = type|default('text') -%}
    {% if input_group|default %}<div class="input-group">{% endif %}
    {% if input_group|default and input_group.left|default %}<div class="input-group-addon">{{ input_group.left|default|raw }}</div>{% endif %}
    <input type="{{ type }}" {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}" {% endif %}/>
    {% if input_group|default and input_group.right|default %}<div class="input-group-addon">{{ input_group.right|default|raw }}</div>{% endif %}
    {% if input_group|default %}</div>{% endif %}

    {% import _self as macros %}
    {{ macros.helpBlock(help) }}
    {{ macros.alertBlock(alert) }}
{% endblock %}

{% block textarea_widget -%}
    {{- parent() -}}
    {% import _self as macros %}
    {{ macros.helpBlock(help) }}
    {{ macros.alertBlock(alert) }}
{%- endblock textarea_widget %}

{% block choice_widget_collapsed -%}
    {{- parent() -}}
    {% import _self as macros %}
    {{ macros.helpBlock(help) }}
    {{ macros.alertBlock(alert) }}
{%- endblock %}

{% block choice_widget_expanded -%}
    {{- parent() -}}
    {% import _self as macros %}
    {{ macros.helpBlock(help) }}
    {{ macros.alertBlock(alert) }}
{%- endblock choice_widget_expanded %}

{% block form_errors -%}
    {{ parent()|replace({'<span class="glyphicon glyphicon-exclamation-sign"></span>': '<i class="fa fa-warning"></i>'})|raw }}
{%- endblock form_errors %}

{# user live search input widget #}
{% block zikulausersmodule_field_userlivesearch_widget %}
    <div id="{{ id }}LiveSearch" class="autocomplete-user hidden">
        <i class="fa fa-search" title="{{ __('Search user') }}"></i>
        <noscript><p>{{ __('This function requires JavaScript activated!') }}</p></noscript>
        <input type="hidden" {{ block('widget_attributes') }} value="{{ value }}" />
        <input type="text" id="{{ id }}Selector" name="{{ id }}Selector" autocomplete="off" value="{{ user_name|e('html_attr') }}" title="{{ __('Enter a part of the user name to search') }}" class="user-selector" />
    </div>
    <span id="{{ id }}Avatar" class="help-block avatar">
        {% if value and not inline_usage %}
            {{ userAvatar(uid=value, rating='g') }}
        {% endif %}
    </span>
    {% if not required %}
        <span class="help-block"><a id="{{ id }}ResetVal" href="javascript:void(0);" class="hidden">{{ __('Reset to empty value') }}</a></span>
    {% endif %}
    {% if value and not inline_usage %}
        {% if hasPermission('ZikulaUsersModule::', '::', 'ACCESS_ADMIN') %}
            <span class="help-block"><a href="{{ path('zikulausersmodule_useradministration_modify', { 'user': value }) }}" title="{{ __('Switch to users administration') }}">{{ __('Manage user') }}</a></span>
        {% endif %}
    {% endif %}
    {# load required assets: jQuery UI + custom search code #}
    {{ pageAddAsset('stylesheet', asset('jquery-ui/themes/base/jquery-ui.min.css')) }}
    {{ pageAddAsset('stylesheet', asset('bootstrap-jqueryui/bootstrap-jqueryui.min.css')) }}
    {{ pageAddAsset('javascript', asset('jquery-ui/jquery-ui.min.js')) }}
    {{ pageAddAsset('javascript', asset('bootstrap-jqueryui/bootstrap-jqueryui.min.js')) }}
    {{ pageAddAsset('javascript', zasset('@ZikulaUsersModule:css/livesearch.css')) }}
    {{ pageAddAsset('javascript', zasset('@ZikulaUsersModule:js/Zikula.Users.LiveSearch.js')) }}
{% endblock %}
