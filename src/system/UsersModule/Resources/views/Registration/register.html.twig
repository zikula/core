{% form_theme form with [
'ZikulaFormExtensionBundle:Form:bootstrap_3_zikula_admin_layout.html.twig',
'ZikulaFormExtensionBundle:Form:form_div_layout.html.twig'
] %}
{% set templatetitle = __('New account registration') %}
{{ polyfill() }}
{{ pageAddAsset('javascript', zasset('@ZikulaUsersModule:js/Zikula.Users.Common.UserValidation.js')) }}

{% include('@ZikulaUsersModule/User/menu.html.twig') %}

<p id="users_formtop">
    {{ __('Registering for a user account is easy. Registration can give you access to content and to features of this site that are not available to unregistered guests.') }}
    {{ __('During your visits, we recommended that you set your browser to accept cookies from this site. Various features of the site use cookies, and may not function properly (or may not function at all) if cookies are disabled.') }}
</p>

{% if modvars.moderation and (modvars.reg_verifyemail != constant('Zikula\\UsersModule\\Constant::VERIFY_NO')) %}
    {% if modvars.moderation_order == constant('Zikula\\UsersModule\\Constant::APPROVAL_BEFORE') %}
    <p class="alert alert-info">{{ __('Before you will be able to log in, an administrator must approve your registration request and you must verify your e-mail address. You will receive an e-mail asking to verify your e-mail address after an administrator has approved your request.') }}</p>
    {% else %}
    <p class="alert alert-info">{{ __('Before you will be able to log in, you must verify your e-mail address and an administrator must approve your registration request. You will receive an e-mail asking to verify your e-mail address after submitting the information below.') }}{% if modvars.moderation_order == constant('Zikula\\UsersModule\\Constant::APPROVAL_AFTER') %} {{ __('You must verify your e-mail address before an administrator will approve your registration request.') }}{% endif %}</p>
    {% endif %}
{% elseif modvars.moderation %}
    <p class="alert alert-info">{{ __('Before you will be able to log in, an administrator must approve your registration request. You will receive an e-mail after an administrator has reviewed the information you submit below.') }}</p>
{% elseif modvars.reg_verifyemail != constant('Zikula\\UsersModule\\Constant::VERIFY_NO') %}
    <p class="alert alert-info">{{ __('Before you will be able to log in, you must verify your e-mail address. You will receive an e-mail asking to verify your e-mail address after submitting the information below.') }}</p>
{% endif %}

<p class="alert alert-warning">{{ __('The items that are marked with an asterisk (*) are required entries.') }}</p>
{{ form_start(form) }}
{{ form_errors(form) }}
    <input id="{{ form.vars.id }}_event_type" type="hidden" name="event_type" value="new_registration" />
    <input id="{{ form.vars.id }}_registration_info" type="hidden" name="registration_info" value="1" />
    <input id="{{ form.vars.id }}_authentication_method" type="hidden" name="authentication_method_ser" value="{{ authentication_method|json_encode }}" />
    {#<input id="{{ form.vars.id }}_authentication_info" type="hidden" name="authentication_info_ser" value="{{ authentication_info|json_encode }}" />#}
    <fieldset>
        <legend>{{ __('Choose a user name') }}</legend>
        {{ form_row(form.uname) }}
        {% if (authentication_method.modname != 'ZikulaUsersModule') or ((authentication_method.modname == 'ZikulaUsersModule') and (modvars.loginviaoption == constant('Zikula\\UsersModule\\Constant::LOGIN_METHOD_EMAIL'))) %}
            <em class="help-block small col-sm-offset-3 col-sm-9">{{ __('Your user name is used to identify you to other users on the site. You still need to set one up, even though you will not be using it to log in.') }}</em>
        {% endif %}
    </fieldset>
    {% if authentication_method.modname == 'ZikulaUsersModule' %}
    <fieldset>
        <legend>{{ __('Set a password') }}</legend>
        {{ form_row(form.pass, {'help': __f('The minimum length for user passwords is %sub% characters.', {"%sub%": modvars.minpass})}) }}
        <div id="{{ form.vars.id }}_passmeter" class="col-sm-offset-3 col-sm-9"></div>
        {% if modvars.password_reminder_enabled is defined and modvars.password_reminder_enabled %}
            {{ form_row(form.passreminder) }}
        {% endif %}
    </fieldset>
    {% else %}
        <input id="{{ form.pass.vars.id }}" name="{{ form.pass.vars.name }}" type="hidden" value="{{ constant('Zikula\\UsersModule\\Constant::PWD_NO_USERS_AUTHENTICATION') }}" />
        <input id="{{ form.passreminder.vars.id }}" name="{{ form.passreminder.vars.name }}" type="hidden" value="{{ form.passreminder.vars.value }}" />
    {% endif %}
    <fieldset {% if hideEmail is defined and hideEmail %}class="hide"{% endif %}>
        <legend>{{ __('Enter your e-mail address') }}</legend>
        {{ form_row(form.email) }}
    </fieldset>

    {% set eventData = dispatchEvent('module.users.ui.form_edit.new_registration') %}
    {% for eventDisplay in eventData %}
        {{ eventDisplay }}
    {% endfor %}

    {% set hooks = notifyDisplayHooks('users.ui_hooks.registration.form_edit') %}
    {% if hooks is iterable %}
    <fieldset>
        <legend>{{ __('Further information') }}</legend>
            {% for providerArea, hook in hooks %}
                {{ hook }}
                <div class="clearfix"></div>
            {% endfor %}
    </fieldset>
    {% endif %}

    {% if modvars.reg_question is not empty %}
    <fieldset>
        <legend>{{ __('Answer the security question') }}</legend>
        {{ form_row(form.antispamanswer) }}
    </fieldset>
    {% endif %}
    <div class="form-group">
        <div class="col-sm-offset-3 col-sm-9">
            {{ form_widget(form.submit, {attr: {class: 'btn btn-success'}, icon:'fa-plus'}) }}
            {{ form_widget(form.cancel, {attr: {class: 'btn btn-danger'}, icon:'fa-times'}) }}
            {{ form_widget(form.reset, {attr: {class: 'btn btn-primary'}, icon:'fa-refresh'}) }}
        </div>
    </div>
{{ form_end(form) }}
{% if modvars.use_password_strength_meter and (authentication_method.modname == 'ZikulaUsersModule') %}
{{ pageAddAsset('javascript', zasset('@ZikulaUsersModule:js/Zikula.Users.PassMeter.js')) }}
<script type="text/javascript">
    (function($) {
        $(document).ready(function() {
            ZikulaUsersPassMeter.init('{{ form.pass.vars.id }}_first', '{{ form.vars.id }}_passmeter', {
                username: '{{ form.uname.vars.id }}',
                minLength: '{{ modvars.minpass }}'
            });
        });
    })(jQuery);
</script>
{% endif %}
