
{# add input groups to simple inputs #}
{% block form_widget_simple %}
    {% if type is not defined or type not in ['file', 'hidden'] %}
        {%- set attr = attr|merge({class: (attr.class|default('') ~ ' form-control')|trim}) -%}
    {% endif %}
    {%- set type = type|default('text') -%}
    {{ block('input_group_start') }}
    <input type="{{ type }}" {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}" {% endif %}/>
    {{ block('input_group_end') }}
{% endblock %}

{# input group start block #}
{% block input_group_start %}
    {% if input_group|default %}<div class="input-group">{% endif %}
    {% if input_group|default and input_group.left|default %}
        <div class="input-group-prepend">
            <span class="input-group-text">
                {%- if translation_domain|default -%}
                    {{- input_group.left|trans({}, translation_domain)|raw -}}
                {%- else -%}
                    {{- input_group.left|trans()|raw -}}
                {%- endif -%}
            </span>
        </div>
    {% endif %}
{% endblock %}
{# input group end block #}
{% block input_group_end %}
    {% if input_group|default and input_group.right|default %}
        <div class="input-group-append">
            <span class="input-group-text">
                {%- if translation_domain|default -%}
                    {{- input_group.right|trans({}, translation_domain)|raw -}}
                {%- else -%}
                    {{- input_group.right|trans()|raw -}}
                {%- endif -%}
            </span>
        </div>
    {% endif %}
    {% if input_group|default %}</div>{% endif %}
{% endblock %}

{% macro singleHelpText(help, html = false, parameters = {}, domain = false) %}
    {%- if domain|default -%}
        {%- if html|default -%}
            {{- help|trans(parameters, domain)|raw -}}
        {%- else -%}
            {{- help|trans(parameters, domain) -}}
        {%- endif -%}
    {%- else -%}
        {%- if html|default -%}
            {{- help|trans(parameters)|raw -}}
        {%- else -%}
            {{- help|trans(parameters) -}}
        {%- endif -%}
    {%- endif -%}
{% endmacro %}
{% macro alertBlock(param = null, domain = false) %}
    {% if param|default and param is iterable %}
        {% for alertText, type in param %}
            <div class="alert alert-{{ type }}" role="alert">
                {%- if domain|default -%}
                    {{- alertText|trans({}, domain) -}}
                {%- else -%}
                    {{- alertText|trans() -}}
                {%- endif -%}
            </div>
        {% endfor %}
    {% endif %}
{% endmacro %}

{# add help text and alerts #}
{% block form_help -%}
    {%- if help is not empty -%}
        {%- set help_attr = help_attr|merge({class: (help_attr.class|default('') ~ ' form-text text-muted')|trim}) -%}
        {% if help is iterable %}
            {% for helpText in help %}
                <small id="{{ id }}_help_{{ loop.index }}"{% with { attr: help_attr } %}{{ block('attributes') }}{% endwith %}>
                    {{- _self.singleHelpText(helpText, help_html, help_translation_parameters, translation_domain) -}}
                </small>
            {% endfor %}
        {% else %}
            <small id="{{ id }}_help"{% with { attr: help_attr } %}{{ block('attributes') }}{% endwith %}>
                {{- _self.singleHelpText(help, help_html, help_translation_parameters, translation_domain) -}}
            </small>
        {% endif %}
    {%- endif -%}
    {{ _self.alertBlock(alert, translation_domain) }}
{%- endblock form_help %}

{# font awesome icon picker #}
{% block zikula_icon_widget %}
    <div class="input-group">
        {%- set attr = attr|merge({class: (attr.class|default('') ~ ' zikula-icon-picker')|trim}) -%}
        {{- block('form_widget_simple') -}}
        <div class="input-group-append">
            <span class="input-group-text">{{ input_group.right|default|raw }}</span>
        </div>
    </div>
    {{ include('@ZikulaTheme/Form/icon_picker.html.twig') }}
{% endblock %}

{# overrides button_widget to add icon parameter @see \Zikula\ThemeBundle\Form\Extension\ButtonTypeIconExtension #}
{% block button_widget -%}
    {% set attr = attr|merge({class: (attr.class|default('') ~ ' btn')|trim}) %}
    {% if label is empty -%}
        {%- if label_format is not empty -%}
            {% set label = label_format|replace({
            '%name%': name,
            '%id%': id,
            }) %}
        {%- else -%}
            {% set label = name|humanize %}
        {%- endif -%}
    {%- endif -%}
    {% if icon|default %}
        {% set iconHtml = '<i class="fas ' ~ icon ~ '"></i> ' %}
    {% else %}
        {% set iconHtml = '' %}
    {% endif %}
    <button type="{{ type|default('button') }}" {{ block('button_attributes') }}>{{ iconHtml|raw }}{{ translation_domain is same as(false) ? label : label|trans(label_translation_parameters, translation_domain) }}</button>
{%- endblock button_widget %}

{# overrides textarea_widget to catch array to string conversion issues when a form returns with errors #}
{%- block textarea_widget -%}
    {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-control')|trim}) %}
    <textarea {{ block('widget_attributes') }}>{{ value is iterable ? value|join("\n") : value }}</textarea>
{%- endblock textarea_widget -%}
