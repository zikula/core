<?php
/**
 * Routes.
 *
 * @copyright Zikula contributors (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Zikula contributors <support@zikula.org>.
 * @link http://www.zikula.org
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.7.0 (http://modulestudio.de).
 */

namespace Zikula\RoutesModule\Entity\Factory\Base;

use Doctrine\Common\Persistence\ObjectManager;

/**
 * Factory class used to retrieve entity and repository instances.
 *
 * This is the base factory class for route entities.
 */
class RouteFactory
{
    /**
     * @var string Full qualified class name to be used for routes.
     */
    protected $className;

    /**
     * @var ObjectManager The object manager to be used for determining the repository.
     */
    protected $objectManager;

    /**
     * @var EntityRepository The currently used repository.
     */
    protected $repository;

    /**
     * Constructor.
     *
     * @param ObjectManager $om        The object manager to be used for determining the repository.
     * @param string        $className Full qualified class name to be used for routes.
     */
    public function __construct(ObjectManager $om, $className)
    {
        $this->className = $className;
        $this->om = $om;
        $this->repository = $this->om->getRepository($className);
    }

    public function createRoute()
    {
        $entityClass = $this->className;

        return new $entityClass();
    }

    /**
     * Get class name.
     *
     * @return string
     */
    public function getClassName()
    {
        return $this->className;
    }

    /**
     * Set class name.
     *
     * @param string $className.
     *
     * @return void
     */
    public function setClassName($className)
    {
        $this->className = $className;
    }

    /**
     * Get object manager.
     *
     * @return ObjectManager
     */
    public function getObjectManager()
    {
        return $this->objectManager;
    }

    /**
     * Set object manager.
     *
     * @param ObjectManager $objectManager.
     *
     * @return void
     */
    public function setObjectManager($objectManager)
    {
        $this->objectManager = $objectManager;
    }

    /**
     * Get repository.
     *
     * @return EntityRepository
     */
    public function getRepository()
    {
        return $this->repository;
    }

    /**
     * Set repository.
     *
     * @param EntityRepository $repository.
     *
     * @return void
     */
    public function setRepository($repository)
    {
        $this->repository = $repository;
    }
}
