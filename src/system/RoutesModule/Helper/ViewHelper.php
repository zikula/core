<?php
/**
 * Routes.
 *
 * @copyright Zikula contributors (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Zikula contributors <support@zikula.org>.
 * @link http://www.zikula.org
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.7.0 (http://modulestudio.de).
 */

namespace Zikula\RoutesModule\Helper;

use ModUtil;
use Symfony\Component\HttpFoundation\Request;
use Twig_Environment;
use Zikula\RoutesModule\Entity\RouteEntity;
use Zikula\RoutesModule\Helper\Base\AbstractViewHelper;

/**
 * Utility implementation class for view helper methods.
 */
class ViewHelper extends AbstractViewHelper
{
    /**
     * {@inheritdoc}
     */
    public function processTemplate(Twig_Environment $twig, $type, $func, Request $request, $templateParameters = [], $template = '')
    {
        $enrichedTemplateParameters = $templateParameters;

        if ($type == 'route' && $func == 'view') {
            $groupMessages = [
                RouteEntity::POSITION_FIXED_TOP => $this->translator->__('Routes fixed to the top of the list:'),
                RouteEntity::POSITION_MIDDLE => $this->translator->__('Normal routes:'),
                RouteEntity::POSITION_FIXED_BOTTOM => $this->translator->__('Routes fixed to the bottom of the list:'),
            ];
            $enrichedTemplateParameters['groupMessages'] = $groupMessages;
            $enrichedTemplateParameters['sortableGroups'] = [RouteEntity::POSITION_MIDDLE];

            $configDumper = $this->container->get('zikula.dynamic_config_dumper');
            $enrichedTemplateParameters['jms_i18n_routing'] = $configDumper->getConfigurationForHtml('jms_i18n_routing');
        } elseif ($type == 'route' && $func == 'edit') {
            $urlNames = [];
            $modules = ModUtil::getModulesByState(3, 'displayname');
            foreach ($modules as $module) {
                $urlNames[$module['name']] = $module['url'];
            }
            $enrichedTemplateParameters['moduleUrlNames'] = $urlNames;
        }

        return parent::processTemplate($twig, $type, $func, $request, $enrichedTemplateParameters, $template);
    }
}
