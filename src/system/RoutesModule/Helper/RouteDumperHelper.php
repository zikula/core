<?php
/**
 * Routes.
 *
 * @copyright Zikula contributors (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Zikula contributors <support@zikula.org>.
 * @link http://www.zikula.org
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.7.4 (http://modulestudio.de).
 */

namespace Zikula\RoutesModule\Helper;

use FOS\JsRoutingBundle\Command\DumpCommand;
use JMS\I18nRoutingBundle\Router\I18nLoader;
use Symfony\Component\Console\Input\ArrayInput;
use Symfony\Component\Console\Output\NullOutput;
use Symfony\Component\DependencyInjection\ContainerInterface;

class RouteDumperHelper
{
    /**
     * @var ContainerInterface
     */
    private $container;

    /**
     * RouteDumperHelper constructor.
     *
     * @param $container
     */
    public function __construct(ContainerInterface $container)
    {
        $this->container = $container;
    }

    /**
     * Dump the routes exposed to javascript to '/web/js/fos_js_routes.js'
     *
     * @param null $lang
     * @return string
     * @throws \Exception
     */
    public function dumpJsRoutes($lang = null)
    {
        // determine list of supported languages
        $variableApi = $this->container->get('zikula_extensions_module.api.variable');
        $installedLanguages = $this->container->get('zikula_settings_module.locale_api')->getSupportedLocales();
        if (isset($lang) && in_array($lang, $installedLanguages)) {
            // use provided lang if available
            $langs = [$lang];
        } else {
            $multilingual = (bool)$variableApi->getSystemVar('multilingual', false);
            if ($multilingual) {
                // get all available locales
                $langs = $installedLanguages;
            } else {
                // get only the default locale
                $langs = [$variableApi->getSystemVar('language_i18n', 'en')]; //$this->container->getParameter('locale');
            }
        }

        $errors = '';

        // force deletion of existing file
        $targetPath = sprintf('%s/../web/js/fos_js_routes.js', $this->container->getParameter('kernel.root_dir'));
        if (file_exists($targetPath)) {
            try {
                unlink($targetPath);
            } catch (\Exception $e) {
                $errors .= $this->container->get('translator.default')->__f("Error: Could not delete '%path' because %msg", ['%path' => $targetPath, '%msg' => $e->getMessage()]);
            }
        }

        foreach ($langs as $lang) {
            $command = new DumpCommand();
            $command->setContainer($this->container);
            $input = new ArrayInput(['--locale' => $lang . I18nLoader::ROUTING_PREFIX]);
            $output = new NullOutput();
            try {
                $command->run($input, $output);
            } catch (\RuntimeException $e) {
                $errors .= $e->getMessage() . ". ";
            }
        }

        return $errors;
    }
}
