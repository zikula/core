{# purpose of this template: build the form to edit an instance of route #}
{% set baseTemplate = app.request.query.getBoolean('raw', false) ? 'raw' : (routeArea == 'admin' ? 'adminBase' : 'base') %}
{% extends '@ZikulaRoutesModule/' ~ baseTemplate ~ '.html.twig' %}
{% block title mode == 'create' ? __('Create route') : __('Edit route') %}
{% block admin_page_icon mode == 'create' ? 'plus' : 'edit' %}
{% block content %}
    <div class="zikularoutesmodule-route zikularoutesmodule-edit">
        {% form_theme form with [
            '@ZikulaRoutesModule/Form/bootstrap_4.html.twig',
            '@ZikulaFormExtension/Form/form_div_layout.html.twig'
        ] %}
        {{ form_start(form, {attr: {id: 'routeEditForm', class: 'zikularoutes-edit-form'}}) }}
        {{ form_errors(form) }}
        <fieldset>
            <legend>{{ __('Basic settings') }}</legend>
            {{ form_row(form.bundle) }}
            {{ form_row(form.controller) }}
            {{ form_row(form.action) }}
            {{ form_row(form.path) }}
            {{ form_row(form.description) }}
            <div class="d-none">
                {{ form_row(form.sort) }}
            </div>
            {{ form_row(form.prependBundlePrefix) }}
            {{ form_row(form.translatable) }}
            {{ form_row(form.translationPrefix) }}
        </fieldset>
        <fieldset>
            <legend>{{ __('Route scope') }}</legend>
            {{ form_row(form.schemes) }}
            {{ form_row(form.methods) }}
        </fieldset>
        <fieldset>
            <legend>{{ __('Parameter settings') }}</legend>
            {{ form_row(form.defaults) }}
            {{ form_row(form.requirements) }}
            {{ form_row(form.options) }}
        </fieldset>
        <fieldset>
            <legend>{{ __('Advanced settings') }}</legend>
            {{ form_row(form.host) }}
            {{ form_row(form.condition) }}
        </fieldset>

        {% if mode != 'create' %}
            {{ include('@ZikulaRoutesModule/Helper/includeStandardFieldsEdit.html.twig', {obj: route}) }}
        {% endif %}

        {% if form.moderationSpecificCreator is defined or form.moderationSpecificCreationDate is defined %}
            <fieldset id="moderationFieldsSection">
                <legend>{{ __('Moderation') }} <i class="fa fa-expand"></i></legend>
                <div id="moderationFieldsContent">
                    {% if form.moderationSpecificCreator is defined %}
                        {{ form_row(form.moderationSpecificCreator) }}
                    {% endif %}
                    {% if form.moderationSpecificCreationDate is defined %}
                        {{ form_row(form.moderationSpecificCreationDate) }}
                    {% endif %}
                </div>
            </fieldset>
        {% endif %}


        {# include possible submit actions #}
        <div class="form-group form-buttons row">
            <div class="col-md-9 offset-md-3">
                {% for action in actions %}
                    {{ form_widget(attribute(form, action.id)) }}
                    {% if mode == 'create' and action.id == 'submit' and form.submitrepeat is defined %}
                        {{ form_widget(attribute(form, 'submitrepeat')) }}
                    {% endif %}
                {% endfor %}
                {{ form_widget(form.reset) }}
                {{ form_widget(form.cancel) }}
            </div>
        </div>
        {{ form_end(form) }}
    </div>
{% endblock %}
{% block footer %}
    {{ parent() }}
    {{ pageAddAsset('javascript', zasset('@ZikulaRoutesModule:js/ZikulaRoutesModule.Validation.js'), 98) }}
    {{ pageAddAsset('javascript', zasset('@ZikulaRoutesModule:js/ZikulaRoutesModule.EditFunctions.js'), 99) }}
    {% set formInitScript %}
        <script>
        /* <![CDATA[ */

            ( function($) {
                function updatePathPrefix() {
                    var i18n = $('#zikularoutesmodule_route_translatable').prop('checked');
                    var bundlePrefix = $('#zikularoutesmodule_route_prependBundlePrefix').prop('checked');
                    var baseUrl = {{ app.request.baseUrl|json_encode|raw }}
                    var moduleUrlNames = {{ moduleUrlNames|json_encode|raw }};

                    if (bundlePrefix) {
                        var bundle = $('#zikularoutesmodule_route_bundle').val();
                        bundlePrefix = '/' + moduleUrlNames[bundle];
                    } else {
                        bundlePrefix = '';
                    }

                    if (i18n) {
                        i18n = '/{' + '{{ __('lang') }}' + '}';
                    } else {
                        i18n = '';
                    }

                    var pathPrefix = baseUrl + i18n + bundlePrefix;
                    $('#pathPrefix').text(pathPrefix.replace('"', ''));
                }

                $(document).ready(function() {
                    zikulaRoutesInitEditForm('{{ mode }}', '{% if mode != 'create' %}{{ route.id }}{% endif %}');
                    {% if form.moderationSpecificCreator is defined %}
                        initUserLiveSearch('zikularoutesmodule_route_moderationSpecificCreator');
                    {% endif %}

                    updatePathPrefix();
                    $('#zikularoutesmodule_route_bundle, #zikularoutesmodule_route_prependBundlePrefix, #zikularoutesmodule_route_translatable').change(updatePathPrefix);
                });
            })(jQuery);
        /* ]]> */
        </script>
    {% endset %}
    {{ pageAddAsset('footer', formInitScript) }}
{% endblock %}
