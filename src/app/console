#!/usr/bin/env php
<?php

use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Debug\Debug;
use Symfony\Component\Yaml\Yaml;
use Zikula\Bundle\CoreBundle\Console\Application;

date_default_timezone_set(date_default_timezone_get()); // force tz to be set
set_time_limit(0);

$loader = require __DIR__.'/autoload.php';

$kernelConfig = Yaml::parse(file_get_contents(__DIR__.'/../app/config/parameters.yml'));

if (is_readable($file = __DIR__.'/../app/config/custom_parameters.yml')) {
    $kernelConfig = array_merge($kernelConfig, Yaml::parse(file_get_contents($file)));
}

$kernelConfig = $kernelConfig['parameters'];

if ('prod' !== $kernelConfig['env']) {
    Debug::enable();
}

if ((isset($kernelConfig['umask'])) && (!is_null($kernelConfig['umask']))) {
    umask($kernelConfig['umask']);
}

require_once __DIR__.'/ZikulaKernel.php';

$input = new ArgvInput();
$defaultEnv = $input->getParameterOption(['--env', '-e'], getenv('ZIKULA_ENV') ?: 'dev');
// prefer install and upgrade commands default to prod environment
$isInstallUpgradeCommand = ((strpos($input->getFirstArgument(), 'zikula:install') !== false)
    || (strpos($input->getFirstArgument(), 'zikula:upgrade') !== false));
$env = $isInstallUpgradeCommand ? 'prod' : $defaultEnv;

$debug = getenv('ZIKULA_DEBUG') !== '0' && !$input->hasParameterOption(['--no-debug', '']) && 'prod' !== $env;

$kernel = new ZikulaKernel($env, $debug);

$application = new Application($kernel);
$application->run($input);
