# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    installed:        false
    script_position:  foot
    # script_position defines the location where javascripts will be placed in the page
    # choices are `head` or `foot`
    datadir:          public/uploads
    locale:           en

    assets_version: ~ #e.g. 'v1'
    zikula_asset_manager.combine: true
    zikula_asset_manager.lifetime: "1 day"
    zikula_asset_manager.compress: true
    zikula_asset_manager.minify: true

    # Changing the current umask to the octal "022" will set directory permissions
    # to "755", and file permissions to "644" (for directories such as
    # "var/cache" and "var/logs"). Changing the current umask to the octal "02"
    # will set directory permissions to "775", and file permissions to "664".
    # Changing the current umask to the octal "0" will set (insecure) directory
    # permissions to "777", and file permissions to "666". Note that using the ACL
    # is recommended when you have access to them on your server, because changing
    # the umask is not thread-safe. Set this value to "~" (NULL), to disable support
    # for umask.
    umask: ~

    # the following parameter is used in the clickjacking protection listener
    # it accepts any values allowed for X-Frame-Options
    security.x_frame_options: SAMEORIGIN

    # all paths below are resolved as assets (in /public)
    # stylesheet and javascript component locations
    zikula.javascript.bootstrap.min.path: '/bootstrap/js/bootstrap.bundle.min.js'
    zikula.stylesheet.bootstrap.min.path: '/bootstrap/css/bootstrap.min.css'
    zikula.stylesheet.fontawesome.min.path: '/font-awesome/css/all.min.css'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    zikula.site_definition: '@Zikula\Bundle\CoreBundle\Site\SiteDefinition'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    #App\:
    #    resource: '../src/*'
    #    exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    #App\Controller\:
    #    resource: '../src/Controller'
    #    tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
