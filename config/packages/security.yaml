security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        nucleos_userbundle:
            id: nucleos_user.user_provider.username_email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            user_checker: Nucleos\UserBundle\Security\UserChecker
            form_login:
                provider: nucleos_userbundle
                enable_csrf: true

            logout: true

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    role_hierarchy:
        ROLE_EDITOR:      ROLE_USER
        ROLE_ADMIN:       ROLE_EDITOR
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    access_control:
        # public access for login form and password reset page
        - { path: ^/login, role: PUBLIC_ACCESS }
        - { path: ^/resetting, role: PUBLIC_ACCESS }
        # login for password change and profile
        - { path: ^/change-password, role: IS_AUTHENTICATED_REMEMBERED }
        - { path: ^/profile, role: IS_AUTHENTICATED_REMEMBERED }
        # admin dashboard - disabled in favor of #[IsGranted] attribute in AdminDashboardController
        # - { path: ^/admin, role: ROLE_ADMIN }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
