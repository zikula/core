 This plugin creates two services

mailer.simple - For simple all in one mail, see SystemPlugins_SwiftMailer_Mailer

mailer - This returns an instance of Swift_Mailer configured with the required
         transport.

    $mailer = $serviceManager->getService('mailer');
    $message = Swift_Message::newInstance();
    $message->setSubject('Your subject')
            ->setFrom(array('john@doe.com' => 'John Doe'))
            ->setTo(array('receiver@domain.org', 'other@domain.org' => 'A name'))
            ->setBody('Here is the message itself')
            ->addPart('<q>Here is the message itself</q>', 'text/html')
            ->attach(Swift_Attachment::fromPath('my-document.pdf'));

    $failedRecipients = array();

    // to send use one of the following according to choice
    $return = $mailer->send($message, $failedRecipients);

    // or
    $return = $mailer->batchSend($message, $failedRecipients);

$return will include the number of successfully sent messages with $failedRecipients,
if it was specified, will contain the recipients that failed.

ServiceManager contains the following configration keys:

swiftmailer.preferences.sendmethod - will be normal or single_recipient, which corrisponds
    to the $mailer->send() and $mailer->batchSend() as explained in the SwiftMailer
    documentation.

