<?php

namespace DoctrineProxy\__CG__\Zikula\SecurityCenterModule\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class IntrusionEntity extends \Zikula\SecurityCenterModule\Entity\IntrusionEntity implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Zikula\\SecurityCenterModule\\Entity\\IntrusionEntity' . "\0" . 'id', '' . "\0" . 'Zikula\\SecurityCenterModule\\Entity\\IntrusionEntity' . "\0" . 'name', '' . "\0" . 'Zikula\\SecurityCenterModule\\Entity\\IntrusionEntity' . "\0" . 'tag', '' . "\0" . 'Zikula\\SecurityCenterModule\\Entity\\IntrusionEntity' . "\0" . 'value', '' . "\0" . 'Zikula\\SecurityCenterModule\\Entity\\IntrusionEntity' . "\0" . 'page', '' . "\0" . 'Zikula\\SecurityCenterModule\\Entity\\IntrusionEntity' . "\0" . 'user', '' . "\0" . 'Zikula\\SecurityCenterModule\\Entity\\IntrusionEntity' . "\0" . 'ip', '' . "\0" . 'Zikula\\SecurityCenterModule\\Entity\\IntrusionEntity' . "\0" . 'impact', '' . "\0" . 'Zikula\\SecurityCenterModule\\Entity\\IntrusionEntity' . "\0" . 'filters', '' . "\0" . 'Zikula\\SecurityCenterModule\\Entity\\IntrusionEntity' . "\0" . 'date', 'reflection'];
        }

        return ['__isInitialized__', '' . "\0" . 'Zikula\\SecurityCenterModule\\Entity\\IntrusionEntity' . "\0" . 'id', '' . "\0" . 'Zikula\\SecurityCenterModule\\Entity\\IntrusionEntity' . "\0" . 'name', '' . "\0" . 'Zikula\\SecurityCenterModule\\Entity\\IntrusionEntity' . "\0" . 'tag', '' . "\0" . 'Zikula\\SecurityCenterModule\\Entity\\IntrusionEntity' . "\0" . 'value', '' . "\0" . 'Zikula\\SecurityCenterModule\\Entity\\IntrusionEntity' . "\0" . 'page', '' . "\0" . 'Zikula\\SecurityCenterModule\\Entity\\IntrusionEntity' . "\0" . 'user', '' . "\0" . 'Zikula\\SecurityCenterModule\\Entity\\IntrusionEntity' . "\0" . 'ip', '' . "\0" . 'Zikula\\SecurityCenterModule\\Entity\\IntrusionEntity' . "\0" . 'impact', '' . "\0" . 'Zikula\\SecurityCenterModule\\Entity\\IntrusionEntity' . "\0" . 'filters', '' . "\0" . 'Zikula\\SecurityCenterModule\\Entity\\IntrusionEntity' . "\0" . 'date', 'reflection'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (IntrusionEntity $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): \Zikula\SecurityCenterModule\Entity\IntrusionEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setTag(string $tag): \Zikula\SecurityCenterModule\Entity\IntrusionEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTag', [$tag]);

        return parent::setTag($tag);
    }

    /**
     * {@inheritDoc}
     */
    public function getTag(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTag', []);

        return parent::getTag();
    }

    /**
     * {@inheritDoc}
     */
    public function setValue(string $value): \Zikula\SecurityCenterModule\Entity\IntrusionEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValue', [$value]);

        return parent::setValue($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getValue(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValue', []);

        return parent::getValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setPage(string $page): \Zikula\SecurityCenterModule\Entity\IntrusionEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPage', [$page]);

        return parent::setPage($page);
    }

    /**
     * {@inheritDoc}
     */
    public function getPage(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPage', []);

        return parent::getPage();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\Zikula\UsersModule\Entity\UserEntity $user): \Zikula\SecurityCenterModule\Entity\IntrusionEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser(): \Zikula\UsersModule\Entity\UserEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getUid(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUid', []);

        return parent::getUid();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setIp(string $ip): \Zikula\SecurityCenterModule\Entity\IntrusionEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIp', [$ip]);

        return parent::setIp($ip);
    }

    /**
     * {@inheritDoc}
     */
    public function getIp(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIp', []);

        return parent::getIp();
    }

    /**
     * {@inheritDoc}
     */
    public function setImpact(int $impact): \Zikula\SecurityCenterModule\Entity\IntrusionEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImpact', [$impact]);

        return parent::setImpact($impact);
    }

    /**
     * {@inheritDoc}
     */
    public function getImpact(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImpact', []);

        return parent::getImpact();
    }

    /**
     * {@inheritDoc}
     */
    public function setFilters(string $filters): \Zikula\SecurityCenterModule\Entity\IntrusionEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFilters', [$filters]);

        return parent::setFilters($filters);
    }

    /**
     * {@inheritDoc}
     */
    public function getFilters(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFilters', []);

        return parent::getFilters();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate(\DateTime $date): \Zikula\SecurityCenterModule\Entity\IntrusionEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate(): \DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getReflection(): \ReflectionObject
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReflection', []);

        return parent::getReflection();
    }

    /**
     * {@inheritDoc}
     */
    public function offsetExists($key): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetExists', [$key]);

        return parent::offsetExists($key);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetGet($key)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetGet', [$key]);

        return parent::offsetGet($key);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetSet($key, $value): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetSet', [$key, $value]);

        parent::offsetSet($key, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetUnset($key): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetUnset', [$key]);

        parent::offsetUnset($key);
    }

    /**
     * {@inheritDoc}
     */
    public function toArray(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', []);

        return parent::toArray();
    }

    /**
     * {@inheritDoc}
     */
    public function merge(array $array = array (
)): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'merge', [$array]);

        parent::merge($array);
    }

}
