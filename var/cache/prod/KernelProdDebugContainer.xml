<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.project_dir">/home/runner/work/core/core</parameter>
    <parameter key="kernel.environment">prod</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.cache_dir">/home/runner/work/core/core/var/cache/prod</parameter>
    <parameter key="kernel.logs_dir">/home/runner/work/core/core/var/log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="StofDoctrineExtensionsBundle">Stof\DoctrineExtensionsBundle\StofDoctrineExtensionsBundle</parameter>
      <parameter key="TwigExtraBundle">Twig\Extra\TwigExtraBundle\TwigExtraBundle</parameter>
      <parameter key="CoreBundle">Zikula\Bundle\CoreBundle\CoreBundle</parameter>
      <parameter key="ZikulaCoreInstallerBundle">Zikula\Bundle\CoreInstallerBundle\ZikulaCoreInstallerBundle</parameter>
      <parameter key="ZikulaFormExtensionBundle">Zikula\Bundle\FormExtensionBundle\ZikulaFormExtensionBundle</parameter>
      <parameter key="ZikulaHookBundle">Zikula\Bundle\HookBundle\ZikulaHookBundle</parameter>
      <parameter key="JMSI18nRoutingBundle">JMS\I18nRoutingBundle\JMSI18nRoutingBundle</parameter>
      <parameter key="FOSJsRoutingBundle">FOS\JsRoutingBundle\FOSJsRoutingBundle</parameter>
      <parameter key="SymfonyConsoleFormBundle">Matthias\SymfonyConsoleForm\Bundle\SymfonyConsoleFormBundle</parameter>
      <parameter key="KnpMenuBundle">Knp\Bundle\MenuBundle\KnpMenuBundle</parameter>
      <parameter key="LiipImagineBundle">Liip\ImagineBundle\LiipImagineBundle</parameter>
      <parameter key="TranslationBundle">Translation\Bundle\TranslationBundle</parameter>
      <parameter key="BazingaJsTranslationBundle">Bazinga\Bundle\JsTranslationBundle\BazingaJsTranslationBundle</parameter>
      <parameter key="ZikulaWorkflowBundle">Zikula\Bundle\WorkflowBundle\ZikulaWorkflowBundle</parameter>
      <parameter key="ZikulaAdminModule">Zikula\AdminModule\ZikulaAdminModule</parameter>
      <parameter key="ZikulaBlocksModule">Zikula\BlocksModule\ZikulaBlocksModule</parameter>
      <parameter key="ZikulaCategoriesModule">Zikula\CategoriesModule\ZikulaCategoriesModule</parameter>
      <parameter key="ZikulaExtensionsModule">Zikula\ExtensionsModule\ZikulaExtensionsModule</parameter>
      <parameter key="ZikulaGroupsModule">Zikula\GroupsModule\ZikulaGroupsModule</parameter>
      <parameter key="ZikulaMailerModule">Zikula\MailerModule\ZikulaMailerModule</parameter>
      <parameter key="ZikulaMenuModule">Zikula\MenuModule\ZikulaMenuModule</parameter>
      <parameter key="ZikulaPermissionsModule">Zikula\PermissionsModule\ZikulaPermissionsModule</parameter>
      <parameter key="ZikulaRoutesModule">Zikula\RoutesModule\ZikulaRoutesModule</parameter>
      <parameter key="ZikulaSearchModule">Zikula\SearchModule\ZikulaSearchModule</parameter>
      <parameter key="ZikulaSecurityCenterModule">Zikula\SecurityCenterModule\ZikulaSecurityCenterModule</parameter>
      <parameter key="ZikulaSettingsModule">Zikula\SettingsModule\ZikulaSettingsModule</parameter>
      <parameter key="ZikulaThemeModule">Zikula\ThemeModule\ZikulaThemeModule</parameter>
      <parameter key="ZikulaUsersModule">Zikula\UsersModule\ZikulaUsersModule</parameter>
      <parameter key="ZikulaZAuthModule">Zikula\ZAuthModule\ZikulaZAuthModule</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="SwiftmailerBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/vendor/symfony/swiftmailer-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SwiftmailerBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/vendor/sensio/framework-extra-bundle/src</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="StofDoctrineExtensionsBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/vendor/antishov/doctrine-extensions-bundle</parameter>
        <parameter key="namespace">Stof\DoctrineExtensionsBundle</parameter>
      </parameter>
      <parameter key="TwigExtraBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/vendor/twig/extra-bundle/src</parameter>
        <parameter key="namespace">Twig\Extra\TwigExtraBundle</parameter>
      </parameter>
      <parameter key="CoreBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/src/Zikula/CoreBundle</parameter>
        <parameter key="namespace">Zikula\Bundle\CoreBundle</parameter>
      </parameter>
      <parameter key="ZikulaCoreInstallerBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/src/Zikula/CoreInstallerBundle</parameter>
        <parameter key="namespace">Zikula\Bundle\CoreInstallerBundle</parameter>
      </parameter>
      <parameter key="ZikulaFormExtensionBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/src/Zikula/FormExtensionBundle</parameter>
        <parameter key="namespace">Zikula\Bundle\FormExtensionBundle</parameter>
      </parameter>
      <parameter key="ZikulaHookBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/src/Zikula/HookBundle</parameter>
        <parameter key="namespace">Zikula\Bundle\HookBundle</parameter>
      </parameter>
      <parameter key="JMSI18nRoutingBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/vendor/jms/i18n-routing-bundle/JMS/I18nRoutingBundle</parameter>
        <parameter key="namespace">JMS\I18nRoutingBundle</parameter>
      </parameter>
      <parameter key="FOSJsRoutingBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/vendor/friendsofsymfony/jsrouting-bundle</parameter>
        <parameter key="namespace">FOS\JsRoutingBundle</parameter>
      </parameter>
      <parameter key="SymfonyConsoleFormBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/vendor/matthiasnoback/symfony-console-form/src/Bundle</parameter>
        <parameter key="namespace">Matthias\SymfonyConsoleForm\Bundle</parameter>
      </parameter>
      <parameter key="KnpMenuBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/vendor/knplabs/knp-menu-bundle/src</parameter>
        <parameter key="namespace">Knp\Bundle\MenuBundle</parameter>
      </parameter>
      <parameter key="LiipImagineBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/vendor/liip/imagine-bundle</parameter>
        <parameter key="namespace">Liip\ImagineBundle</parameter>
      </parameter>
      <parameter key="TranslationBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/vendor/php-translation/symfony-bundle</parameter>
        <parameter key="namespace">Translation\Bundle</parameter>
      </parameter>
      <parameter key="BazingaJsTranslationBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/vendor/willdurand/js-translation-bundle</parameter>
        <parameter key="namespace">Bazinga\Bundle\JsTranslationBundle</parameter>
      </parameter>
      <parameter key="ZikulaWorkflowBundle" type="collection">
        <parameter key="path">/home/runner/work/core/core/src/Zikula/WorkflowBundle</parameter>
        <parameter key="namespace">Zikula\Bundle\WorkflowBundle</parameter>
      </parameter>
      <parameter key="ZikulaAdminModule" type="collection">
        <parameter key="path">/home/runner/work/core/core/src/system/AdminModule</parameter>
        <parameter key="namespace">Zikula\AdminModule</parameter>
      </parameter>
      <parameter key="ZikulaBlocksModule" type="collection">
        <parameter key="path">/home/runner/work/core/core/src/system/BlocksModule</parameter>
        <parameter key="namespace">Zikula\BlocksModule</parameter>
      </parameter>
      <parameter key="ZikulaCategoriesModule" type="collection">
        <parameter key="path">/home/runner/work/core/core/src/system/CategoriesModule</parameter>
        <parameter key="namespace">Zikula\CategoriesModule</parameter>
      </parameter>
      <parameter key="ZikulaExtensionsModule" type="collection">
        <parameter key="path">/home/runner/work/core/core/src/system/ExtensionsModule</parameter>
        <parameter key="namespace">Zikula\ExtensionsModule</parameter>
      </parameter>
      <parameter key="ZikulaGroupsModule" type="collection">
        <parameter key="path">/home/runner/work/core/core/src/system/GroupsModule</parameter>
        <parameter key="namespace">Zikula\GroupsModule</parameter>
      </parameter>
      <parameter key="ZikulaMailerModule" type="collection">
        <parameter key="path">/home/runner/work/core/core/src/system/MailerModule</parameter>
        <parameter key="namespace">Zikula\MailerModule</parameter>
      </parameter>
      <parameter key="ZikulaMenuModule" type="collection">
        <parameter key="path">/home/runner/work/core/core/src/system/MenuModule</parameter>
        <parameter key="namespace">Zikula\MenuModule</parameter>
      </parameter>
      <parameter key="ZikulaPermissionsModule" type="collection">
        <parameter key="path">/home/runner/work/core/core/src/system/PermissionsModule</parameter>
        <parameter key="namespace">Zikula\PermissionsModule</parameter>
      </parameter>
      <parameter key="ZikulaRoutesModule" type="collection">
        <parameter key="path">/home/runner/work/core/core/src/system/RoutesModule</parameter>
        <parameter key="namespace">Zikula\RoutesModule</parameter>
      </parameter>
      <parameter key="ZikulaSearchModule" type="collection">
        <parameter key="path">/home/runner/work/core/core/src/system/SearchModule</parameter>
        <parameter key="namespace">Zikula\SearchModule</parameter>
      </parameter>
      <parameter key="ZikulaSecurityCenterModule" type="collection">
        <parameter key="path">/home/runner/work/core/core/src/system/SecurityCenterModule</parameter>
        <parameter key="namespace">Zikula\SecurityCenterModule</parameter>
      </parameter>
      <parameter key="ZikulaSettingsModule" type="collection">
        <parameter key="path">/home/runner/work/core/core/src/system/SettingsModule</parameter>
        <parameter key="namespace">Zikula\SettingsModule</parameter>
      </parameter>
      <parameter key="ZikulaThemeModule" type="collection">
        <parameter key="path">/home/runner/work/core/core/src/system/ThemeModule</parameter>
        <parameter key="namespace">Zikula\ThemeModule</parameter>
      </parameter>
      <parameter key="ZikulaUsersModule" type="collection">
        <parameter key="path">/home/runner/work/core/core/src/system/UsersModule</parameter>
        <parameter key="namespace">Zikula\UsersModule</parameter>
      </parameter>
      <parameter key="ZikulaZAuthModule" type="collection">
        <parameter key="path">/home/runner/work/core/core/src/system/ZAuthModule</parameter>
        <parameter key="namespace">Zikula\ZAuthModule</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">KernelProdDebugContainer</parameter>
    <parameter key="container.dumper.inline_class_loader">true</parameter>
    <parameter key="container.dumper.inline_factories">true</parameter>
    <parameter key="installed">false</parameter>
    <parameter key="env">prod</parameter>
    <parameter key="debug">false</parameter>
    <parameter key="script_position">foot</parameter>
    <parameter key="datadir">public/uploads</parameter>
    <parameter key="system.chmod_dir">511</parameter>
    <parameter key="database_driver">pdo_mysql</parameter>
    <parameter key="database_host">localhost</parameter>
    <parameter key="database_port">null</parameter>
    <parameter key="database_name">null</parameter>
    <parameter key="database_user">null</parameter>
    <parameter key="database_password">null</parameter>
    <parameter key="database_path">null</parameter>
    <parameter key="database_socket">null</parameter>
    <parameter key="database_server_version" type="string">5.7</parameter>
    <parameter key="locale">en</parameter>
    <parameter key="secret">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="url_secret">null</parameter>
    <parameter key="assets_version">null</parameter>
    <parameter key="zikula_asset_manager.combine">true</parameter>
    <parameter key="zikula_asset_manager.lifetime">1 day</parameter>
    <parameter key="zikula_asset_manager.compress">true</parameter>
    <parameter key="zikula_asset_manager.minify">true</parameter>
    <parameter key="umask">null</parameter>
    <parameter key="security.x_frame_options">SAMEORIGIN</parameter>
    <parameter key="zikula.javascript.bootstrap.min.path">/bootstrap/js/bootstrap.bundle.min.js</parameter>
    <parameter key="zikula.stylesheet.bootstrap.min.path">/bootstrap/css/bootstrap.min.css</parameter>
    <parameter key="zikula.stylesheet.fontawesome.min.path">/font-awesome/css/all.min.css</parameter>
    <parameter key="localisation.locales" type="collection">
      <parameter>en</parameter>
    </parameter>
    <parameter key="zikula.session.name">_zsid</parameter>
    <parameter key="zikula.session.handler_id">session.handler.native_file</parameter>
    <parameter key="zikula.session.storage_id">zikula_core.bridge.http_foundation.zikula_session_storage_file</parameter>
    <parameter key="zikula.session.save_path">/home/runner/work/core/core/var/cache/prod/sessions</parameter>
    <parameter key="multisites" type="collection">
      <parameter key="enabled">false</parameter>
      <parameter key="mainsiteurl">null</parameter>
      <parameter key="based_on_domains">null</parameter>
      <parameter key="protected.systemvars" type="collection"/>
    </parameter>
    <parameter key="fragment.renderer.hinclude.global_template"></parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="kernel.error_controller">error_controller</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter" type="string">0</parameter>
      <parameter key="name">_zsid</parameter>
      <parameter key="cookie_secure">auto</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="cookie_samesite">lax</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">/home/runner/work/core/core/var/cache/prod/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="asset.request_context.base_path"></parameter>
    <parameter key="asset.request_context.secure">false</parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.mapping.cache.file">/home/runner/work/core/core/var/cache/prod/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="translator.logging">false</parameter>
    <parameter key="translator.default_path">/home/runner/work/core/core/translations</parameter>
    <parameter key="data_collector.templates" type="collection"/>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/home/runner/work/core/core/var/cache/prod/KernelProdDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_USER</parameter>
      </parameter>
      <parameter key="ROLE_SUPER_ADMIN" type="collection">
        <parameter>ROLE_USER</parameter>
        <parameter>ROLE_ADMIN</parameter>
        <parameter>ROLE_ALLOWED_TO_SWITCH</parameter>
      </parameter>
    </parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>@LiipImagine/Form/form_div_layout.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">/home/runner/work/core/core/templates</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.deprecation_filter" type="collection">
        <parameter key="type">inclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>php</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main">null</parameter>
    </parameter>
    <parameter key="swiftmailer.mailer.default.transport.name">smtp</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.encryption">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.port">25</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.host">localhost</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.username"></parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.password"></parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.auth_mode">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.timeout">30</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.source_ip">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.local_domain">null</parameter>
    <parameter key="swiftmailer.mailer.default.spool.enabled">false</parameter>
    <parameter key="swiftmailer.mailer.default.plugin.impersonate">null</parameter>
    <parameter key="swiftmailer.mailer.default.single_address">null</parameter>
    <parameter key="swiftmailer.mailer.default.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.spool.enabled">false</parameter>
    <parameter key="swiftmailer.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="default">swiftmailer.mailer.default</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">default</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection">
      <parameter key="utcdatetime" type="collection">
        <parameter key="class">Zikula\Bundle\CoreBundle\Doctrine\DBAL\Type\UTCDateTimeType</parameter>
      </parameter>
    </parameter>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">false</parameter>
    <parameter key="doctrine.orm.proxy_dir">/home/runner/work/core/core/var/cache/prod/doctrine/orm/DoctrineProxy</parameter>
    <parameter key="doctrine.orm.proxy_namespace">DoctrineProxy</parameter>
    <parameter key="stof_doctrine_extensions.listener.translatable.class">Gedmo\Translatable\TranslatableListener</parameter>
    <parameter key="stof_doctrine_extensions.event_listener.locale.class">Stof\DoctrineExtensionsBundle\EventListener\LocaleListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.timestampable.class">Gedmo\Timestampable\TimestampableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.blameable.class">Gedmo\Blameable\BlameableListener</parameter>
    <parameter key="stof_doctrine_extensions.event_listener.blame.class">Stof\DoctrineExtensionsBundle\EventListener\BlameListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.sluggable.class">Gedmo\Sluggable\SluggableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.tree.class">Gedmo\Tree\TreeListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.loggable.class">Gedmo\Loggable\LoggableListener</parameter>
    <parameter key="stof_doctrine_extensions.event_listener.logger.class">Stof\DoctrineExtensionsBundle\EventListener\LoggerListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.sortable.class">Gedmo\Sortable\SortableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.softdeleteable.class">Gedmo\SoftDeleteable\SoftDeleteableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.uploadable.class">Gedmo\Uploadable\UploadableListener</parameter>
    <parameter key="stof_doctrine_extensions.uploadable.manager.class">Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager</parameter>
    <parameter key="stof_doctrine_extensions.uploadable.mime_type_guesser.class">Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter</parameter>
    <parameter key="stof_doctrine_extensions.uploadable.default_file_info.class">Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo</parameter>
    <parameter key="stof_doctrine_extensions.listener.reference_integrity.class">Gedmo\ReferenceIntegrity\ReferenceIntegrityListener</parameter>
    <parameter key="stof_doctrine_extensions.default_locale">en_US</parameter>
    <parameter key="stof_doctrine_extensions.translation_fallback">true</parameter>
    <parameter key="stof_doctrine_extensions.persist_default_translation">false</parameter>
    <parameter key="stof_doctrine_extensions.skip_translation_on_load">false</parameter>
    <parameter key="stof_doctrine_extensions.default_file_path">null</parameter>
    <parameter key="stof_doctrine_extensions.uploadable.validate_writable_directory">true</parameter>
    <parameter key="jms_i18n_routing.router.class">JMS\I18nRoutingBundle\Router\I18nRouter</parameter>
    <parameter key="jms_i18n_routing.locale_resolver.class">JMS\I18nRoutingBundle\Router\DefaultLocaleResolver</parameter>
    <parameter key="jms_i18n_routing.loader.class">JMS\I18nRoutingBundle\Router\I18nLoader</parameter>
    <parameter key="jms_i18n_routing.route_exclusion_strategy.class">Zikula\RoutesModule\Translation\DefaultRouteExclusionStrategy</parameter>
    <parameter key="jms_i18n_routing.pattern_generation_strategy.class">Zikula\RoutesModule\Translation\ZikulaPatternGenerationStrategy</parameter>
    <parameter key="jms_i18n_routing.locale_choosing_listener.class">JMS\I18nRoutingBundle\EventListener\LocaleChoosingListener</parameter>
    <parameter key="jms_i18n_routing.cookie_setting_listener.class">JMS\I18nRoutingBundle\EventListener\CookieSettingListener</parameter>
    <parameter key="jms_i18n_routing.route_translation_extractor.class">Zikula\RoutesModule\Translation\ZikulaRouteTranslationExtractor</parameter>
    <parameter key="jms_i18n_routing.default_locale">en</parameter>
    <parameter key="jms_i18n_routing.locales" type="collection">
      <parameter>en</parameter>
    </parameter>
    <parameter key="jms_i18n_routing.catalogue">routes</parameter>
    <parameter key="jms_i18n_routing.strategy">prefix_except_default</parameter>
    <parameter key="jms_i18n_routing.redirect_to_host">true</parameter>
    <parameter key="jms_i18n_routing.cookie.name">hl</parameter>
    <parameter key="fos_js_routing.extractor.class">FOS\JsRoutingBundle\Extractor\ExposedRoutesExtractor</parameter>
    <parameter key="fos_js_routing.controller.class">FOS\JsRoutingBundle\Controller\Controller</parameter>
    <parameter key="fos_js_routing.normalizer.route_collection.class">FOS\JsRoutingBundle\Serializer\Normalizer\RouteCollectionNormalizer</parameter>
    <parameter key="fos_js_routing.normalizer.routes_response.class">FOS\JsRoutingBundle\Serializer\Normalizer\RoutesResponseNormalizer</parameter>
    <parameter key="fos_js_routing.denormalizer.route_collection.class">FOS\JsRoutingBundle\Serializer\Denormalizer\RouteCollectionDenormalizer</parameter>
    <parameter key="fos_js_routing.request_context_base_url">null</parameter>
    <parameter key="fos_js_routing.cache_control" type="collection">
      <parameter key="enabled">false</parameter>
    </parameter>
    <parameter key="matthias_symfony_console_form.cache_directory">/home/runner/work/core/core/var/cache/prod/matthias_symfony_console_form</parameter>
    <parameter key="knp_menu.renderer.list.options" type="collection"/>
    <parameter key="knp_menu.twig.extension.class">Knp\Menu\Twig\MenuExtension</parameter>
    <parameter key="knp_menu.renderer.twig.class">Knp\Menu\Renderer\TwigRenderer</parameter>
    <parameter key="knp_menu.renderer.twig.options" type="collection"/>
    <parameter key="knp_menu.renderer.twig.template">@KnpMenu/menu.html.twig</parameter>
    <parameter key="knp_menu.default_renderer">twig</parameter>
    <parameter key="liip_imagine.resolvers" type="collection">
      <parameter key="default" type="collection">
        <parameter key="web_path" type="collection">
          <parameter key="web_root">/home/runner/work/core/core/public</parameter>
          <parameter key="cache_prefix">media/cache</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="liip_imagine.loaders" type="collection">
      <parameter key="zikula_root" type="collection">
        <parameter key="filesystem" type="collection">
          <parameter key="data_root" type="collection">
            <parameter>/home/runner/work/core/core/public</parameter>
          </parameter>
          <parameter key="locator">filesystem</parameter>
          <parameter key="allow_unresolvable_data_roots">false</parameter>
          <parameter key="bundle_resources" type="collection">
            <parameter key="enabled">false</parameter>
            <parameter key="access_control_type">blacklist</parameter>
            <parameter key="access_control_list" type="collection"/>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="default" type="collection">
        <parameter key="filesystem" type="collection">
          <parameter key="data_root" type="collection">
            <parameter>/home/runner/work/core/core/public</parameter>
          </parameter>
          <parameter key="locator">filesystem</parameter>
          <parameter key="allow_unresolvable_data_roots">false</parameter>
          <parameter key="bundle_resources" type="collection">
            <parameter key="enabled">false</parameter>
            <parameter key="access_control_type">blacklist</parameter>
            <parameter key="access_control_list" type="collection"/>
          </parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="liip_imagine.jpegoptim.binary">/usr/bin/jpegoptim</parameter>
    <parameter key="liip_imagine.jpegoptim.stripAll">true</parameter>
    <parameter key="liip_imagine.jpegoptim.max">null</parameter>
    <parameter key="liip_imagine.jpegoptim.progressive">true</parameter>
    <parameter key="liip_imagine.jpegoptim.tempDir">null</parameter>
    <parameter key="liip_imagine.optipng.binary">/usr/bin/optipng</parameter>
    <parameter key="liip_imagine.optipng.level">7</parameter>
    <parameter key="liip_imagine.optipng.stripAll">true</parameter>
    <parameter key="liip_imagine.optipng.tempDir">null</parameter>
    <parameter key="liip_imagine.pngquant.binary">/usr/bin/pngquant</parameter>
    <parameter key="liip_imagine.mozjpeg.binary">/opt/mozjpeg/bin/cjpeg</parameter>
    <parameter key="liip_imagine.driver_service">liip_imagine.gd</parameter>
    <parameter key="liip_imagine.cache.resolver.default">default</parameter>
    <parameter key="liip_imagine.default_image">null</parameter>
    <parameter key="liip_imagine.filter_sets" type="collection">
      <parameter key="cache" type="collection">
        <parameter key="quality">100</parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="filters" type="collection"/>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="my_thumb" type="collection">
        <parameter key="quality">100</parameter>
        <parameter key="jpeg_quality">90</parameter>
        <parameter key="png_compression_level">7</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="filters" type="collection">
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>120</parameter>
              <parameter>90</parameter>
            </parameter>
            <parameter key="mode">outbound</parameter>
          </parameter>
          <parameter key="background" type="collection">
            <parameter key="size" type="collection">
              <parameter>124</parameter>
              <parameter>94</parameter>
            </parameter>
            <parameter key="position">center</parameter>
            <parameter key="color">#000000</parameter>
          </parameter>
        </parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="zkroot" type="collection">
        <parameter key="quality">100</parameter>
        <parameter key="jpeg_quality">90</parameter>
        <parameter key="png_compression_level">7</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">zikula_root</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="filters" type="collection">
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>100</parameter>
              <parameter>100</parameter>
            </parameter>
            <parameter key="mode">inset</parameter>
          </parameter>
        </parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="liip_imagine.binary.loader.default">default</parameter>
    <parameter key="liip_imagine.controller.filter_action">Liip\ImagineBundle\Controller\ImagineController::filterAction</parameter>
    <parameter key="liip_imagine.controller.filter_runtime_action">Liip\ImagineBundle\Controller\ImagineController::filterRuntimeAction</parameter>
    <parameter key="php_translation.locales" type="collection">
      <parameter>en</parameter>
    </parameter>
    <parameter key="php_translation.default_locale">en</parameter>
    <parameter key="php_translation.webui.enabled">false</parameter>
    <parameter key="bazinga.jstranslation.translation_finder.class">Bazinga\Bundle\JsTranslationBundle\Finder\TranslationFinder</parameter>
    <parameter key="bazinga.jstranslation.translation_dumper.class">Bazinga\Bundle\JsTranslationBundle\Dumper\TranslationDumper</parameter>
    <parameter key="bazinga.jstranslation.controller.class">Bazinga\Bundle\JsTranslationBundle\Controller\Controller</parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter>console.command.public_alias.Zikula\Bundle\CoreBundle\Command\AssetsInstallCommand</parameter>
      <parameter>Zikula\Bundle\CoreInstallerBundle\Command\Install\FinishCommand</parameter>
      <parameter>Zikula\Bundle\CoreInstallerBundle\Command\Install\StartCommand</parameter>
      <parameter>Zikula\Bundle\CoreInstallerBundle\Command\UpgradeCommand</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="kernel" class="Kernel" public="true" synthetic="true">
      <tag name="routing.route_loader"/>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="jms_i18n_routing.router" on-invalid="ignore"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>error_controller</argument>
      <argument type="service" id="twig.error_renderer.html"/>
    </service>
    <service id="exception_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <argument>error_controller</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper" public="false">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>/home/runner/work/core/core/var/cache/prod/KernelProdDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator" public="false">
      <argument type="service" id="kernel"/>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner" public="false">
      <argument>ThisTokenIsNotSoSecretChangeIt</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory" public="false">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.result_cache_pool" type="service" id="doctrine.result_cache_pool" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.system_cache_pool" type="service" id="doctrine.system_cache_pool" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main" type="service" id="monolog.handler.main" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.console" type="service" id="monolog.handler.console" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.deprecation" type="service" id="monolog.handler.deprecation" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.deprecation_filter" type="service" id="monolog.handler.deprecation_filter" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.email_sender.listener" type="service" id="swiftmailer.email_sender.listener" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="Zikula\Bundle\CoreBundle\DataCollector\ZikulaVersionDataCollector" type="service" id="Zikula\Bundle\CoreBundle\DataCollector\ZikulaVersionDataCollector" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.annotations" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine.result_cache_pool" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine.system_cache_pool" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.choice_list_factory.cached" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.stopwatch" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.event_dispatcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="security.token_storage" type="collection">
          <argument>disableUsageTracking</argument>
          <argument>setToken</argument>
        </argument>
        <argument key="cache.security_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.main" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.console" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.deprecation" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.deprecation_filter" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="swiftmailer.email_sender.listener" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.type.entity" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Zikula\Bundle\CoreBundle\DataCollector\ZikulaVersionDataCollector" type="collection">
          <argument>reset</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.wnlveDj"/>
    </service>
    <service id="locale_aware_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleAwareListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="iterator">
        <argument type="service" id="slugger"/>
        <argument type="service" id="translator.default"/>
      </argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor" public="false">
      <tag name="container.env_var_processor"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="slugger" class="Symfony\Component\String\Slugger\AsciiSlugger" public="false">
      <tag name="kernel.locale_aware"/>
      <argument>en</argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler" public="false">
      <argument type="service" id=".service_locator._cmka45"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id=".2_~3gZr.5W" public="false">
      <argument type="service" id="request_stack"/>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
    </service>
    <service id=".1_~3gZr.5W" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service" id=".1_~3gZr.5W"/>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/home/runner/work/core/core</argument>
      <argument type="service" id=".2_~3gZr.5W"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.suggest_missing_package_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand" public="false">
      <tag name="console.command" command="about"/>
      <call method="setName">
        <argument>about</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand" public="false">
      <tag name="console.command" command="assets:install"/>
      <argument type="service" id="filesystem"/>
      <argument>/home/runner/work/core/core</argument>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand" public="false">
      <tag name="console.command" command="cache:clear"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand" public="false">
      <tag name="console.command" command="cache:pool:clear"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand" public="false">
      <tag name="console.command" command="cache:pool:prune"/>
      <argument type="iterator"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand" public="false">
      <tag name="console.command" command="cache:pool:delete"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_list" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand" public="false">
      <tag name="console.command" command="cache:pool:list"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>doctrine.result_cache_pool</argument>
        <argument>doctrine.system_cache_pool</argument>
        <argument>cache.security_expression_language</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:list</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand" public="false">
      <tag name="console.command" command="cache:warmup"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand" public="false">
      <tag name="console.command" command="debug:config"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand" public="false">
      <tag name="console.command" command="config:dump-reference"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand" public="false">
      <tag name="console.command" command="debug:container"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
    </service>
    <service id="console.command.container_lint" class="Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand" public="false">
      <tag name="console.command" command="lint:container"/>
      <call method="setName">
        <argument>lint:container</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand" public="false">
      <tag name="console.command" command="debug:autowiring"/>
      <argument>null</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand" public="false">
      <tag name="console.command" command="debug:event-dispatcher"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand" public="false">
      <tag name="console.command" command="debug:router"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand" public="false">
      <tag name="console.command" command="router:match"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand" public="false">
      <tag name="console.command" command="debug:translation"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>/home/runner/work/core/core/translations</argument>
      <argument>/home/runner/work/core/core/templates</argument>
      <argument type="collection">
        <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations</argument>
        <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations</argument>
        <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/home/runner/work/core/core/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views</argument>
        <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Email</argument>
        <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form</argument>
      </argument>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
    </service>
    <service id="console.command.translation_update" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand" public="false">
      <tag name="console.command" command="translation:update"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>en</argument>
      <argument>/home/runner/work/core/core/translations</argument>
      <argument>/home/runner/work/core/core/templates</argument>
      <argument type="collection">
        <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations</argument>
        <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations</argument>
        <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/home/runner/work/core/core/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views</argument>
        <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Email</argument>
        <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form</argument>
      </argument>
      <call method="setName">
        <argument>translation:update</argument>
      </call>
    </service>
    <service id="console.command.workflow_dump" class="Symfony\Bundle\FrameworkBundle\Command\WorkflowDumpCommand" public="false">
      <tag name="console.command" command="workflow:dump"/>
      <call method="setName">
        <argument>workflow:dump</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Bundle\FrameworkBundle\Command\XliffLintCommand" public="false">
      <tag name="console.command" command="lint:xliff"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand" public="false">
      <tag name="console.command" command="lint:yaml"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:form"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type</argument>
        <argument>Zikula\Bundle\CoreInstallerBundle\Form\Type</argument>
        <argument>Zikula\Bundle\FormExtensionBundle\Form\Type</argument>
        <argument>Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions</argument>
        <argument>Liip\ImagineBundle\Form\Type</argument>
        <argument>Zikula\AdminModule\Form\Type</argument>
        <argument>Zikula\BlocksModule\Block\Form\Type</argument>
        <argument>Zikula\BlocksModule\Form\Type</argument>
        <argument>Zikula\CategoriesModule\Form\Type</argument>
        <argument>Zikula\ExtensionsModule\Form\Type</argument>
        <argument>Zikula\GroupsModule\Form\Type</argument>
        <argument>Zikula\MailerModule\Form\Type</argument>
        <argument>Zikula\MenuModule\Block\Form\Type</argument>
        <argument>Zikula\MenuModule\Form\Type</argument>
        <argument>Zikula\PermissionsModule\Form\Type</argument>
        <argument>Zikula\RoutesModule\Form\Type</argument>
        <argument>Zikula\RoutesModule\Form\Type\Field</argument>
        <argument>Zikula\RoutesModule\Form\Type\QuickNavigation</argument>
        <argument>Zikula\SearchModule\Block\Form\Type</argument>
        <argument>Zikula\SearchModule\Form\Type</argument>
        <argument>Zikula\SecurityCenterModule\Form\Type</argument>
        <argument>Zikula\SettingsModule\Form\Type</argument>
        <argument>Zikula\ThemeModule\Form\Type</argument>
        <argument>Zikula\UsersModule\Form\Type</argument>
        <argument>Zikula\UsersModule\Form\Type\ConfigType</argument>
        <argument>Zikula\UsersModule\Form\Type\RegistrationType</argument>
        <argument>Zikula\ZAuthModule\Form\Type</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument>Zikula\Bundle\CoreInstallerBundle\Form\Type\CreateAdminType</argument>
        <argument>Zikula\Bundle\CoreInstallerBundle\Form\Type\DbCredsType</argument>
        <argument>Zikula\Bundle\CoreInstallerBundle\Form\Type\LocaleType</argument>
        <argument>Zikula\Bundle\CoreInstallerBundle\Form\Type\LoginType</argument>
        <argument>Zikula\Bundle\CoreInstallerBundle\Form\Type\RequestContextType</argument>
        <argument>Zikula\Bundle\FormExtensionBundle\Form\Type\DeletionType</argument>
        <argument>Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicFieldType</argument>
        <argument>Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\ChoiceFormOptionsArrayType</argument>
        <argument>Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\DateTimeFormOptionsArrayType</argument>
        <argument>Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\FormOptionsArrayType</argument>
        <argument>Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\MoneyFormOptionsArrayType</argument>
        <argument>Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\RegexibleFormOptionsArrayType</argument>
        <argument>Zikula\Bundle\FormExtensionBundle\Form\Type\IconType</argument>
        <argument>Zikula\Bundle\FormExtensionBundle\Form\Type\InlineFormDefinitionType</argument>
        <argument>Zikula\Bundle\FormExtensionBundle\Form\Type\LocaleType</argument>
        <argument>Liip\ImagineBundle\Form\Type\ImageType</argument>
        <argument>Zikula\AdminModule\Form\Type\AdminCategoryType</argument>
        <argument>Zikula\AdminModule\Form\Type\ConfigType</argument>
        <argument>Zikula\BlocksModule\Block\Form\Type\FincludeBlockType</argument>
        <argument>Zikula\BlocksModule\Block\Form\Type\HtmlBlockType</argument>
        <argument>Zikula\BlocksModule\Block\Form\Type\TextBlockType</argument>
        <argument>Zikula\BlocksModule\Block\Form\Type\XsltBlockType</argument>
        <argument>Zikula\BlocksModule\Form\Type\AdminViewFilterType</argument>
        <argument>Zikula\BlocksModule\Form\Type\BlockFilterType</argument>
        <argument>Zikula\BlocksModule\Form\Type\BlockPositionType</argument>
        <argument>Zikula\BlocksModule\Form\Type\BlockType</argument>
        <argument>Zikula\BlocksModule\Form\Type\ConfigType</argument>
        <argument>Zikula\BlocksModule\Form\Type\NewBlockType</argument>
        <argument>Zikula\CategoriesModule\Form\Type\CategoriesType</argument>
        <argument>Zikula\CategoriesModule\Form\Type\CategoryAttributeType</argument>
        <argument>Zikula\CategoriesModule\Form\Type\CategoryRegistryType</argument>
        <argument>Zikula\CategoriesModule\Form\Type\CategoryTreeType</argument>
        <argument>Zikula\CategoriesModule\Form\Type\CategoryType</argument>
        <argument>Zikula\ExtensionsModule\Form\Type\ConfigType</argument>
        <argument>Zikula\ExtensionsModule\Form\Type\ExtensionInstallType</argument>
        <argument>Zikula\ExtensionsModule\Form\Type\ExtensionModifyType</argument>
        <argument>Zikula\GroupsModule\Form\Type\ConfigType</argument>
        <argument>Zikula\GroupsModule\Form\Type\CreateGroupType</argument>
        <argument>Zikula\GroupsModule\Form\Type\EditGroupType</argument>
        <argument>Zikula\GroupsModule\Form\Type\ManageApplicationType</argument>
        <argument>Zikula\GroupsModule\Form\Type\MembershipApplicationType</argument>
        <argument>Zikula\GroupsModule\Form\Type\RemoveUserType</argument>
        <argument>Zikula\MailerModule\Form\Type\ConfigType</argument>
        <argument>Zikula\MailerModule\Form\Type\TestType</argument>
        <argument>Zikula\MenuModule\Block\Form\Type\MenuType</argument>
        <argument>Zikula\MenuModule\Form\Type\DeleteMenuItemType</argument>
        <argument>Zikula\MenuModule\Form\Type\HiddenMenuItemType</argument>
        <argument>Zikula\MenuModule\Form\Type\KeyValuePairType</argument>
        <argument>Zikula\MenuModule\Form\Type\MenuItemType</argument>
        <argument>Zikula\PermissionsModule\Form\Type\ConfigType</argument>
        <argument>Zikula\PermissionsModule\Form\Type\FilterListType</argument>
        <argument>Zikula\PermissionsModule\Form\Type\PermissionCheckType</argument>
        <argument>Zikula\PermissionsModule\Form\Type\PermissionType</argument>
        <argument>Zikula\RoutesModule\Form\Type\ConfigType</argument>
        <argument>Zikula\RoutesModule\Form\Type\Field\ArrayType</argument>
        <argument>Zikula\RoutesModule\Form\Type\Field\MultiListType</argument>
        <argument>Zikula\RoutesModule\Form\Type\QuickNavigation\RouteQuickNavType</argument>
        <argument>Zikula\RoutesModule\Form\Type\RouteType</argument>
        <argument>Zikula\SearchModule\Block\Form\Type\SearchBlockType</argument>
        <argument>Zikula\SearchModule\Form\Type\AmendableModuleSearchType</argument>
        <argument>Zikula\SearchModule\Form\Type\ConfigType</argument>
        <argument>Zikula\SearchModule\Form\Type\SearchType</argument>
        <argument>Zikula\SecurityCenterModule\Form\Type\ConfigType</argument>
        <argument>Zikula\SecurityCenterModule\Form\Type\IdsLogExportType</argument>
        <argument>Zikula\SecurityCenterModule\Form\Type\IdsLogFilterType</argument>
        <argument>Zikula\SettingsModule\Form\Type\LocaleSettingsType</argument>
        <argument>Zikula\SettingsModule\Form\Type\MainSettingsType</argument>
        <argument>Zikula\ThemeModule\Form\Type\DeleteThemeType</argument>
        <argument>Zikula\ThemeModule\Form\Type\SetDefaultThemeType</argument>
        <argument>Zikula\UsersModule\Form\Type\AdminModifyUserType</argument>
        <argument>Zikula\UsersModule\Form\Type\ChangeLanguageType</argument>
        <argument>Zikula\UsersModule\Form\Type\ConfigType\AuthenticationMethodsType</argument>
        <argument>Zikula\UsersModule\Form\Type\ConfigType\ConfigType</argument>
        <argument>Zikula\UsersModule\Form\Type\DefaultLoginType</argument>
        <argument>Zikula\UsersModule\Form\Type\DeleteConfirmationType</argument>
        <argument>Zikula\UsersModule\Form\Type\DeleteType</argument>
        <argument>Zikula\UsersModule\Form\Type\ExportUsersType</argument>
        <argument>Zikula\UsersModule\Form\Type\MailType</argument>
        <argument>Zikula\UsersModule\Form\Type\RegistrationType\ApproveRegistrationConfirmationType</argument>
        <argument>Zikula\UsersModule\Form\Type\RegistrationType\DefaultRegistrationType</argument>
        <argument>Zikula\UsersModule\Form\Type\SearchUserType</argument>
        <argument>Zikula\UsersModule\Form\Type\UserLiveSearchType</argument>
        <argument>Zikula\ZAuthModule\Form\Type\AdminCreatedUserType</argument>
        <argument>Zikula\ZAuthModule\Form\Type\AdminModifyUserType</argument>
        <argument>Zikula\ZAuthModule\Form\Type\ChangeEmailType</argument>
        <argument>Zikula\ZAuthModule\Form\Type\ChangePasswordType</argument>
        <argument>Zikula\ZAuthModule\Form\Type\ConfigType</argument>
        <argument>Zikula\ZAuthModule\Form\Type\EitherLoginType</argument>
        <argument>Zikula\ZAuthModule\Form\Type\EmailLoginType</argument>
        <argument>Zikula\ZAuthModule\Form\Type\ImportUserType</argument>
        <argument>Zikula\ZAuthModule\Form\Type\LostPasswordType</argument>
        <argument>Zikula\ZAuthModule\Form\Type\LostUserNameType</argument>
        <argument>Zikula\ZAuthModule\Form\Type\RegistrationType</argument>
        <argument>Zikula\ZAuthModule\Form\Type\SendVerificationConfirmationType</argument>
        <argument>Zikula\ZAuthModule\Form\Type\TogglePasswordConfirmationType</argument>
        <argument>Zikula\ZAuthModule\Form\Type\UnameLoginType</argument>
        <argument>Zikula\ZAuthModule\Form\Type\VerifyRegistrationType</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension</argument>
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension</argument>
        <argument>Zikula\Bundle\FormExtensionBundle\Form\Extension\ButtonTypeIconExtension</argument>
        <argument>Zikula\Bundle\FormExtensionBundle\Form\Extension\FormTypeHelpExtension</argument>
        <argument>Matthias\SymfonyConsoleForm\Form\ConsoleFormTypeExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
        <argument>Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
      </argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
    </service>
    <service id="console.command.secrets_set" class="Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand" public="false">
      <tag name="console.command" command="secrets:set"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:set</argument>
      </call>
    </service>
    <service id="console.command.secrets_remove" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand" public="false">
      <tag name="console.command" command="secrets:remove"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:remove</argument>
      </call>
    </service>
    <service id="console.command.secrets_generate_key" class="Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand" public="false">
      <tag name="console.command" command="secrets:generate-keys"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:generate-keys</argument>
      </call>
    </service>
    <service id="console.command.secrets_list" class="Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand" public="false">
      <tag name="console.command" command="secrets:list"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:list</argument>
      </call>
    </service>
    <service id="console.command.secrets_decrypt_to_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand" public="false">
      <tag name="console.command" command="secrets:decrypt-to-local"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:decrypt-to-local</argument>
      </call>
    </service>
    <service id="console.command.secrets_encrypt_from_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand" public="false">
      <tag name="console.command" command="secrets:encrypt-from-local"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:encrypt-from-local</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>RYCKEa5TLu</argument>
      <argument>0</argument>
      <argument>/home/runner/work/core/core/var/cache/prod/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter" public="false">
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>pT17bGofBC</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/runner/work/core/core/var/cache/prod/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>S-MIuYl2Y9</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/runner/work/core/core/var/cache/prod/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>wVq3Vas2nE</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/runner/work/core/core/var/cache/prod/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>NvT4olF2gA</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/runner/work/core/core/var/cache/prod/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>FupNmyczNA</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/runner/work/core/core/var/cache/prod/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/runner/work/core/core/var/cache/prod/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/home/runner/work/core/core/var/cache/prod/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller" public="false">
      <argument>null</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="false">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.result_cache_pool" type="service" id="doctrine.result_cache_pool" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.system_cache_pool" type="service" id="doctrine.system_cache_pool" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.result_cache_pool" type="service" id="doctrine.result_cache_pool" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.system_cache_pool" type="service" id="doctrine.system_cache_pool" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="identity_translator" class="Symfony\Component\Translation\IdentityTranslator" public="false"/>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".doctrine.result_cache_pool.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter">
      <argument type="service" id="doctrine.result_cache_pool"/>
    </service>
    <service id="doctrine.result_cache_pool" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>Rzyw7ZIsZv</argument>
      <argument>0</argument>
      <argument>/home/runner/work/core/core/var/cache/prod/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id=".doctrine.system_cache_pool.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter">
      <argument type="service" id="doctrine.system_cache_pool"/>
    </service>
    <service id="doctrine.system_cache_pool" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>PNoGXmLwjQ</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/runner/work/core/core/var/cache/prod/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id=".1_NativeFileSessionHandler~eFCsWps" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler" public="false">
      <argument>/home/runner/work/core/core/var/cache/prod/sessions</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session" public="true">
      <argument type="service" id="zikula_core.bridge.http_foundation.zikula_session_storage_file"/>
      <argument type="service" id="session.attribute_bag"/>
      <argument type="service" id="session.flash_bag"/>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage" public="false">
      <argument>%session.storage.options%</argument>
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage" public="false">
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\NamespacedAttributeBag" public="false" autowire="true" autoconfigure="true"/>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage" public="false">
      <argument>/home/runner/work/core/core/var/cache/prod/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler" public="false">
      <argument type="service" id=".1_NativeFileSessionHandler~eFCsWps"/>
    </service>
    <service id="session.abstract_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler" public="false">
      <argument></argument>
      <factory class="Symfony\Component\HttpFoundation\Session\Storage\Handler\SessionHandlerFactory" method="createHandler"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.Bppmeg3"/>
    </service>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager" public="true">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry" public="false">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory" public="true">
      <argument type="service" id="form.registry"/>
    </service>
    <service id="form.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension" public="false">
      <argument type="service" id=".service_locator.2O.a6sX"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="iterator">
          <argument type="service" id="form.type_extension.form.transformation_failure_handling"/>
          <argument type="service" id="form.type_extension.form.http_foundation"/>
          <argument type="service" id="form.type_extension.form.validator"/>
          <argument type="service" id="form.type_extension.upload.validator"/>
          <argument type="service" id="form.type_extension.csrf"/>
          <argument type="service" id="Zikula\Bundle\FormExtensionBundle\Form\Extension\FormTypeHelpExtension"/>
          <argument type="service" id="matthias_symfony_console_form.console_form_type_extension"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="iterator">
          <argument type="service" id="form.type_extension.repeated.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="iterator">
          <argument type="service" id="form.type_extension.submit.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ButtonType" type="iterator">
          <argument type="service" id="Zikula\Bundle\FormExtensionBundle\Form\Extension\ButtonTypeIconExtension"/>
        </argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="form.type_guesser.validator"/>
        <argument type="service" id="form.type_guesser.doctrine"/>
      </argument>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser" public="false">
      <tag name="form.type_guesser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType" public="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.transformation_failure_handling" class="Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension" public="false">
      <tag name="form.type_extension"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\SubmitType" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="translator.default"/>
      <argument>validators</argument>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.default" on-invalid="null"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages" public="false">
      <argument type="service" id="assets._default_package"/>
      <argument type="collection"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package" public="false">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext" public="false">
      <argument type="service" id="request_stack"/>
      <argument></argument>
      <argument>false</argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage" public="false">
      <argument></argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="validator" class="Symfony\Component\Validator\Validator\ValidatorInterface" public="true">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilder" public="false">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default" on-invalid="ignore"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="addYamlMappings">
        <argument type="collection">
          <argument>/home/runner/work/core/core/vendor/php-translation/symfony-bundle/Resources/config/validation.yaml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <call method="addLoader">
        <argument type="service" id="doctrine.orm.default_entity_manager.validator_loader"/>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/home/runner/work/core/core/var/cache/prod/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/home/runner/work/core/core/var/cache/prod/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory" public="false">
      <argument type="service" id=".service_locator.uEoGQ84"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator" public="false">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>loose</argument>
    </service>
    <service id="validator.not_compromised_password" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator"/>
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator" public="false">
      <tag name="kernel.locale_aware"/>
      <argument type="service" id=".service_locator.V.o0zE7"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>en</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/home/runner/work/core/core/var/cache/prod/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ar.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ar.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ar.xlf</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.az.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.az.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.az.xlf</argument>
          </argument>
          <argument key="be" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.be.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.be.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.be.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.bg.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.bg.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.bg.xlf</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ca.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ca.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ca.xlf</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cs.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.cs.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.cs.xlf</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.da.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.da.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.da.xlf</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.de.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.de.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.de.xlf</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.el.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.el.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.el.xlf</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.en.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.en.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.en.xlf</argument>
            <argument>/home/runner/work/core/core/translations/mail.en.yaml</argument>
            <argument>/home/runner/work/core/core/translations/messages.en.yaml</argument>
            <argument>/home/runner/work/core/core/translations/routes.en.yaml</argument>
            <argument>/home/runner/work/core/core/translations/security.en.yaml</argument>
            <argument>/home/runner/work/core/core/translations/validators.en.yaml</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.es.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.es.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.es.xlf</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.et.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.et.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.eu.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.eu.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.eu.xlf</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fa.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fa.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fa.xlf</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fi.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fi.xlf</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fr.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fr.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fr.xlf</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.gl.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.gl.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.gl.xlf</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.he.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.he.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.he.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hr.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hr.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hr.xlf</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hu.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hu.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hu.xlf</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hy.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.id.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.id.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.id.xlf</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.it.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.it.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.it.xlf</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ja.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ja.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ja.xlf</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lb.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lb.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lt.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lt.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lt.xlf</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lv.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lv.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lv.xlf</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.mn.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.mn.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nb.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nb.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nl.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nl.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nl.xlf</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nn.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nn.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.no.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.no.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.no.xlf</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pl.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pl.xlf</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt.xlf</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_BR.xlf</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ro.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ro.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ro.xlf</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ru.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ru.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ru.xlf</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sk.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sk.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sk.xlf</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sl.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sl.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sl.xlf</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Latn.xlf</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sv.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sv.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sv.xlf</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.th.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.th.xlf</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tl.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.tl.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tr.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.tr.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.tr.xlf</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.uk.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.uk.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.uk.xlf</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.vi.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.vi.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.zh_CN.xlf</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_TW.xlf</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_PT.xlf</argument>
          </argument>
        </argument>
        <argument key="scanned_directories" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations</argument>
          <argument>/home/runner/work/core/core/src/system/RoutesModule/Resources/translations</argument>
          <argument>/home/runner/work/core/core/translations</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/translations</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/translations</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/translations</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/monolog-bundle/translations</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/swiftmailer-bundle/translations</argument>
          <argument>/home/runner/work/core/core/vendor/doctrine/doctrine-bundle/translations</argument>
          <argument>/home/runner/work/core/core/vendor/sensio/framework-extra-bundle/src/translations</argument>
          <argument>/home/runner/work/core/core/vendor/antishov/doctrine-extensions-bundle/translations</argument>
          <argument>/home/runner/work/core/core/vendor/twig/extra-bundle/src/translations</argument>
          <argument>/home/runner/work/core/core/src/Zikula/CoreBundle/translations</argument>
          <argument>/home/runner/work/core/core/src/Zikula/CoreInstallerBundle/translations</argument>
          <argument>/home/runner/work/core/core/src/Zikula/FormExtensionBundle/translations</argument>
          <argument>/home/runner/work/core/core/src/Zikula/HookBundle/translations</argument>
          <argument>/home/runner/work/core/core/vendor/jms/i18n-routing-bundle/JMS/I18nRoutingBundle/translations</argument>
          <argument>/home/runner/work/core/core/vendor/friendsofsymfony/jsrouting-bundle/translations</argument>
          <argument>/home/runner/work/core/core/vendor/matthiasnoback/symfony-console-form/src/Bundle/translations</argument>
          <argument>/home/runner/work/core/core/vendor/knplabs/knp-menu-bundle/src/translations</argument>
          <argument>/home/runner/work/core/core/vendor/liip/imagine-bundle/translations</argument>
          <argument>/home/runner/work/core/core/vendor/php-translation/symfony-bundle/translations</argument>
          <argument>/home/runner/work/core/core/vendor/willdurand/js-translation-bundle/translations</argument>
          <argument>/home/runner/work/core/core/src/Zikula/WorkflowBundle/translations</argument>
          <argument>/home/runner/work/core/core/src/system/AdminModule/translations</argument>
          <argument>/home/runner/work/core/core/src/system/BlocksModule/translations</argument>
          <argument>/home/runner/work/core/core/src/system/CategoriesModule/translations</argument>
          <argument>/home/runner/work/core/core/src/system/ExtensionsModule/translations</argument>
          <argument>/home/runner/work/core/core/src/system/GroupsModule/translations</argument>
          <argument>/home/runner/work/core/core/src/system/MailerModule/translations</argument>
          <argument>/home/runner/work/core/core/src/system/MenuModule/translations</argument>
          <argument>/home/runner/work/core/core/src/system/PermissionsModule/translations</argument>
          <argument>/home/runner/work/core/core/src/system/SearchModule/translations</argument>
          <argument>/home/runner/work/core/core/src/system/SecurityCenterModule/translations</argument>
          <argument>/home/runner/work/core/core/src/system/SettingsModule/translations</argument>
          <argument>/home/runner/work/core/core/src/system/ThemeModule/translations</argument>
          <argument>/home/runner/work/core/core/src/system/UsersModule/translations</argument>
          <argument>/home/runner/work/core/core/src/system/ZAuthModule/translations</argument>
        </argument>
        <argument key="cache_vary" type="collection">
          <argument key="scanned_directories" type="collection">
            <argument>vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations</argument>
            <argument>vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations</argument>
            <argument>vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations</argument>
            <argument>src/system/RoutesModule/Resources/translations</argument>
            <argument>translations</argument>
            <argument>vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/translations</argument>
            <argument>vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/translations</argument>
            <argument>vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/translations</argument>
            <argument>vendor/symfony/monolog-bundle/translations</argument>
            <argument>vendor/symfony/swiftmailer-bundle/translations</argument>
            <argument>vendor/doctrine/doctrine-bundle/translations</argument>
            <argument>vendor/sensio/framework-extra-bundle/src/translations</argument>
            <argument>vendor/antishov/doctrine-extensions-bundle/translations</argument>
            <argument>vendor/twig/extra-bundle/src/translations</argument>
            <argument>src/Zikula/CoreBundle/translations</argument>
            <argument>src/Zikula/CoreInstallerBundle/translations</argument>
            <argument>src/Zikula/FormExtensionBundle/translations</argument>
            <argument>src/Zikula/HookBundle/translations</argument>
            <argument>vendor/jms/i18n-routing-bundle/JMS/I18nRoutingBundle/translations</argument>
            <argument>vendor/friendsofsymfony/jsrouting-bundle/translations</argument>
            <argument>vendor/matthiasnoback/symfony-console-form/src/Bundle/translations</argument>
            <argument>vendor/knplabs/knp-menu-bundle/src/translations</argument>
            <argument>vendor/liip/imagine-bundle/translations</argument>
            <argument>vendor/php-translation/symfony-bundle/translations</argument>
            <argument>vendor/willdurand/js-translation-bundle/translations</argument>
            <argument>src/Zikula/WorkflowBundle/translations</argument>
            <argument>src/system/AdminModule/translations</argument>
            <argument>src/system/BlocksModule/translations</argument>
            <argument>src/system/CategoriesModule/translations</argument>
            <argument>src/system/ExtensionsModule/translations</argument>
            <argument>src/system/GroupsModule/translations</argument>
            <argument>src/system/MailerModule/translations</argument>
            <argument>src/system/MenuModule/translations</argument>
            <argument>src/system/PermissionsModule/translations</argument>
            <argument>src/system/SearchModule/translations</argument>
            <argument>src/system/SecurityCenterModule/translations</argument>
            <argument>src/system/SettingsModule/translations</argument>
            <argument>src/system/ThemeModule/translations</argument>
            <argument>src/system/UsersModule/translations</argument>
            <argument>src/system/ZAuthModule/translations</argument>
          </argument>
        </argument>
      </argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator" public="false">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.logging.inner"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter" public="false">
      <argument type="service" id="identity_translator"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader" public="false">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader" public="false">
      <tag name="translation.loader" alias="yaml" legacy_alias="yml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader" public="false">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader" public="false">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader" public="false">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader" public="false">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader" public="false">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader" public="false">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader" public="false">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader" public="false">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader" public="false">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper" public="false">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper" public="false">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper" public="false">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper" public="false">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper" public="false">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper" public="false">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper" public="false">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper" public="false">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper" public="false">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Component\Translation\Extractor\PhpExtractor" public="false">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader" public="false">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor" public="false">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter" public="false">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="translator"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.JFjjyG5.translation.warmer"/>
    </service>
    <service id="workflow.abstract" class="Symfony\Component\Workflow\Workflow" public="true" abstract="true">
      <argument></argument>
      <argument>null</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
      <argument></argument>
    </service>
    <service id="state_machine.abstract" class="Symfony\Component\Workflow\StateMachine" public="true" abstract="true">
      <argument></argument>
      <argument>null</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
      <argument></argument>
    </service>
    <service id="workflow.marking_store.method" class="Symfony\Component\Workflow\MarkingStore\MethodMarkingStore" public="false" abstract="true"/>
    <service id="workflow.registry" class="Symfony\Component\Workflow\Registry" public="false">
      <call method="addWorkflow">
        <argument type="service" id="state_machine.zikularoutesmodule_none"/>
        <argument type="service">
          <service class="Symfony\Component\Workflow\SupportStrategy\InstanceOfSupportStrategy" public="false">
            <argument>Zikula\RoutesModule\Entity\RouteEntity</argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="workflow.security.expression_language" class="Symfony\Component\Workflow\EventListener\ExpressionLanguage" public="false"/>
    <service id="state_machine.zikularoutesmodule_none.transition.0" class="Symfony\Component\Workflow\Transition" public="false">
      <argument>submit</argument>
      <argument>initial</argument>
      <argument>approved</argument>
    </service>
    <service id="state_machine.zikularoutesmodule_none.transition.1" class="Symfony\Component\Workflow\Transition" public="false">
      <argument>updateapproved</argument>
      <argument>approved</argument>
      <argument>approved</argument>
    </service>
    <service id="state_machine.zikularoutesmodule_none.transition.2" class="Symfony\Component\Workflow\Transition" public="false">
      <argument>delete</argument>
      <argument>approved</argument>
      <argument>deleted</argument>
    </service>
    <service id="state_machine.zikularoutesmodule_none" class="Symfony\Component\Workflow\StateMachine" public="true">
      <argument type="service" id="state_machine.zikularoutesmodule_none.definition"/>
      <argument type="service">
        <service class="Symfony\Component\Workflow\MarkingStore\MethodMarkingStore" public="false">
          <argument>true</argument>
          <argument>workflowState</argument>
        </service>
      </argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
      <argument>zikularoutesmodule_none</argument>
    </service>
    <service id="state_machine.zikularoutesmodule_none.definition" class="Symfony\Component\Workflow\Definition" public="false">
      <tag name="zikularoutesmodule_none" type="state_machine"/>
      <argument type="collection">
        <argument>initial</argument>
        <argument>approved</argument>
        <argument>deleted</argument>
      </argument>
      <argument type="collection">
        <argument type="service" id="state_machine.zikularoutesmodule_none.transition.0"/>
        <argument type="service" id="state_machine.zikularoutesmodule_none.transition.1"/>
        <argument type="service" id="state_machine.zikularoutesmodule_none.transition.2"/>
      </argument>
      <argument type="collection"/>
      <argument type="service">
        <service class="Symfony\Component\Workflow\Metadata\InMemoryMetadataStore">
          <argument type="collection"/>
          <argument type="collection"/>
          <argument type="service">
            <service class="SplObjectStorage"/>
          </argument>
        </service>
      </argument>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
      <argument>null</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher" public="false">
      <tag name="container.hot_path"/>
      <tag name="monolog.logger" channel="event"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="matthias_symfony_console_form.handle_form_based_command_event_listener"/>
          <argument>onConsoleCommand</argument>
        </argument>
        <argument>200</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="matthias_symfony_console_form.set_input_definition_of_form_based_command_event_listener"/>
          <argument>onConsoleCommand</argument>
        </argument>
        <argument>2000</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="matthias_symfony_console.register_styles_event_listener"/>
          <argument>onConsoleCommand</argument>
        </argument>
        <argument>1000</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="matthias_symfony_console_form.register_helpers_event_listener"/>
          <argument>onConsoleCommand</argument>
        </argument>
        <argument>1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>onControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_aware_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_aware_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>-15</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.suggest_missing_package_subscriber"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>debug.security.authorization.vote</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.voter.vote_listener"/>
          <argument>onVoterVote</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>configureLogoutUrlGenerator</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service" id="twig.mailer.message_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onCommand</argument>
        </argument>
        <argument>255</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageHandledEvent</argument>
        <argument type="collection">
          <argument type="service" id="doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager"/>
          <argument>onWorkerMessageHandled</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service" id="doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager"/>
          <argument>onWorkerMessageFailed</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.controller.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.converter.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.security.listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="framework_extra_bundle.event.is_granted"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="stof_doctrine_extensions.event_listener.locale"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="stof_doctrine_extensions.event_listener.blame"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="stof_doctrine_extensions.event_listener.logger"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\Bundle\CoreBundle\EventListener\BlameListener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\Bundle\CoreBundle\EventListener\ClickjackProtectionListener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-99</argument>
      </call>
      <call method="addListener">
        <argument>core.upgrade.pre.module</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\Bundle\CoreBundle\EventListener\Core3UpgradeListener"/>
          <argument>upgrade</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\Bundle\CoreBundle\EventListener\DoctrineListener"/>
          <argument>setDefaultDriver</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\Bundle\CoreBundle\EventListener\ExceptionListener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>31</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\Bundle\CoreBundle\EventListener\OutputCompressionListener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>1023</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\Bundle\CoreBundle\EventListener\SessionExpireListener"/>
          <argument>onKernelRequestSessionExpire</argument>
        </argument>
        <argument>31</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\Bundle\CoreBundle\EventListener\SiteOffListener"/>
          <argument>onKernelRequestSiteOff</argument>
        </argument>
        <argument>110</argument>
      </call>
      <call method="addListener">
        <argument>user.login.veto</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\Bundle\CoreBundle\EventListener\SiteOffVetoLoginListener"/>
          <argument>vetoNonAdminsOnSiteOff</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\Bundle\CoreInstallerBundle\EventListener\InstallUpgradeCheckListener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>200</argument>
      </call>
      <call method="addListener">
        <argument>core.install.pre.module</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\Bundle\HookBundle\Listener\CoreInstallerListener"/>
          <argument>installHookBundle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>core.upgrade.pre.module</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\Bundle\HookBundle\Listener\CoreInstallerListener"/>
          <argument>upgradeHookBundle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\Bundle\HookBundle\Listener\HookListenerBuilderListener"/>
          <argument>addListeners</argument>
        </argument>
        <argument>1000</argument>
      </call>
      <call method="addListener">
        <argument>Zikula\MenuModule\ExtensionMenu\ExtensionMenuEvent</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\Bundle\HookBundle\Listener\HooksListener"/>
          <argument>addHookMenu</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>module.remove</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\Bundle\HookBundle\Listener\ModuleUninstallListener"/>
          <argument>removeHooks</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>core.upgrade.pre.module</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\AdminModule\Listener\Core3UpgradeListener"/>
          <argument>upgrade</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>module.install</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\AdminModule\Listener\ModuleEventListener"/>
          <argument>moduleInstall</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\BlocksModule\Listener\CollapseableBlockListener"/>
          <argument>addCollapseableBehavior</argument>
        </argument>
        <argument>202</argument>
      </call>
      <call method="addListener">
        <argument>form.submit</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\CategoriesModule\Form\EventListener\CategoriesMergeCollectionListener"/>
          <argument>onBindNormData</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>core.upgrade.pre.module</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\CategoriesModule\Listener\Core3UpgradeListener"/>
          <argument>upgrade</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>core.upgrade.pre.module</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ExtensionsModule\Listener\Core3UpgradeListener"/>
          <argument>upgrade</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>zikula.link_collector</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ExtensionsModule\Listener\ExtensionServicesListener"/>
          <argument>linkCollectorResponder</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>group.application.processed</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\GroupsModule\Listener\GroupEventListener"/>
          <argument>applicationProcessed</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>group.application.new</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\GroupsModule\Listener\GroupEventListener"/>
          <argument>newApplication</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>form.pre_set_data</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\MenuModule\Form\EventListener\KeyValueFixerListener"/>
          <argument>onPreSetData</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>form.post_submit</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\MenuModule\Form\EventListener\OptionValidatorListener"/>
          <argument>onPostSubmit</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>core.upgrade.pre.module</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\PermissionsModule\Listener\Core3UpgradeListener"/>
          <argument>upgrade</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>group.pre_delete</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\PermissionsModule\Listener\GroupDeletionListener"/>
          <argument>preDelete</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>group.create</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\GroupListener"/>
          <argument>create</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>group.update</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\GroupListener"/>
          <argument>update</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>group.pre_delete</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\GroupListener"/>
          <argument>preDelete</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>group.delete</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\GroupListener"/>
          <argument>delete</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>group.adduser</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\GroupListener"/>
          <argument>addUser</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>group.removeuser</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\GroupListener"/>
          <argument>removeUser</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>group.application.processed</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\GroupListener"/>
          <argument>applicationProcessed</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>group.application.new</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\GroupListener"/>
          <argument>newApplication</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>module.postinstall</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\InstallerListener"/>
          <argument>modulePostInstalled</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>module.upgrade</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\InstallerListener"/>
          <argument>moduleUpgraded</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>module.remove</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\InstallerListener"/>
          <argument>moduleRemoved</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>new.routes.avail</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\InstallerListener"/>
          <argument>newRoutesAvail</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\KernelListener"/>
          <argument>onRequest</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\KernelListener"/>
          <argument>onController</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\KernelListener"/>
          <argument>onView</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\KernelListener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\KernelListener"/>
          <argument>onFinishRequest</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\KernelListener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\KernelListener"/>
          <argument>onException</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>module.mailer.api.sendmessage</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\MailerListener"/>
          <argument>sendMessageStart</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>module.mailer.api.perform</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\MailerListener"/>
          <argument>sendMessagePerform</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>module.mailer.api.success</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\MailerListener"/>
          <argument>sendMessageSuccess</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>module.mailer.api.failure</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\MailerListener"/>
          <argument>sendMessageFailure</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>module_dispatch.service_links</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\ModuleDispatchListener"/>
          <argument>serviceLinks</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>theme.pre_render</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\ThemeListener"/>
          <argument>preRender</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>theme.post_render</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\ThemeListener"/>
          <argument>postRender</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>user.account.create</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\UserListener"/>
          <argument>create</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>user.account.update</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\UserListener"/>
          <argument>update</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>user.account.delete</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\UserListener"/>
          <argument>delete</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>module.users.ui.login.started</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\UserLoginListener"/>
          <argument>started</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>user.login.veto</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\UserLoginListener"/>
          <argument>veto</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>module.users.ui.login.succeeded</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\UserLoginListener"/>
          <argument>succeeded</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>module.users.ui.login.failed</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\UserLoginListener"/>
          <argument>failed</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>module.users.ui.logout.succeeded</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\UserLogoutListener"/>
          <argument>succeeded</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>module.users.ui.registration.started</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\UserRegistrationListener"/>
          <argument>started</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>full.user.create.veto</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\UserRegistrationListener"/>
          <argument>createVeto</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>module.users.ui.registration.succeeded</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\UserRegistrationListener"/>
          <argument>succeeded</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>module.users.ui.registration.failed</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\UserRegistrationListener"/>
          <argument>failed</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>user.registration.create</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\UserRegistrationListener"/>
          <argument>create</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>user.registration.update</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\UserRegistrationListener"/>
          <argument>update</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>user.registration.delete</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\UserRegistrationListener"/>
          <argument>delete</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>force.registration.approval</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\UserRegistrationListener"/>
          <argument>forceApproval</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>module.users.config.updated</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\UsersListener"/>
          <argument>configUpdated</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>workflow.guard</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\WorkflowEventsListener"/>
          <argument>onGuard</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>workflow.leave</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\WorkflowEventsListener"/>
          <argument>onLeave</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>workflow.transition</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\WorkflowEventsListener"/>
          <argument>onTransition</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>workflow.enter</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\WorkflowEventsListener"/>
          <argument>onEnter</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>workflow.entered</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\WorkflowEventsListener"/>
          <argument>onEntered</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>workflow.completed</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\WorkflowEventsListener"/>
          <argument>onCompleted</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>workflow.announce</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Listener\WorkflowEventsListener"/>
          <argument>onAnnounce</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\RoutesModule\Translation\ConsoleCommandListener"/>
          <argument>checkBundleForTranslatingRoutes</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\SearchModule\Listener\FrontControllerListener"/>
          <argument>pageLoad</argument>
        </argument>
        <argument>40</argument>
      </call>
      <call method="addListener">
        <argument>module.install</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\SearchModule\Listener\ModuleEventListener"/>
          <argument>moduleEnable</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>module.enable</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\SearchModule\Listener\ModuleEventListener"/>
          <argument>moduleEnable</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>module.disable</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\SearchModule\Listener\ModuleEventListener"/>
          <argument>moduleDisable</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>module.remove</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\SearchModule\Listener\ModuleEventListener"/>
          <argument>moduleRemove</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\SecurityCenterModule\Listener\FilterListener"/>
          <argument>idsInputFilter</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>htmlfilter.outputfilter</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\SecurityCenterModule\Listener\PurifierListener"/>
          <argument>purify</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>module.postinstall</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\SettingsModule\Listener\ExtensionInstallerListener"/>
          <argument>updateTranslationConfig</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>module.upgrade</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\SettingsModule\Listener\ExtensionInstallerListener"/>
          <argument>updateTranslationConfig</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>module.enable</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\SettingsModule\Listener\ExtensionInstallerListener"/>
          <argument>updateTranslationConfig</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>module.disable</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\SettingsModule\Listener\ExtensionInstallerListener"/>
          <argument>updateTranslationConfig</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>module.remove</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\SettingsModule\Listener\ExtensionInstallerListener"/>
          <argument>updateTranslationConfig</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\SettingsModule\Listener\LocaleListener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\SettingsModule\Listener\LocalizedVariableListener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>14</argument>
      </call>
      <call method="addListener">
        <argument>module.disable</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\SettingsModule\Listener\ModuleListener"/>
          <argument>moduleDeactivated</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\SettingsModule\Listener\TranslationUiListener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\SettingsModule\Listener\TranslationUiListener"/>
          <argument>addDummyClosingBody</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\SettingsModule\Listener\TranslationUiListener"/>
          <argument>removeDummyClosingBody</argument>
        </argument>
        <argument>-1</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ThemeModule\EventListener\AddJSConfigListener"/>
          <argument>addJSConfig</argument>
        </argument>
        <argument>-1</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ThemeModule\EventListener\ControllerAnnotationReaderListener"/>
          <argument>readControllerAnnotations</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>core.upgrade.pre.module</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ThemeModule\EventListener\Core3UpgradeListener"/>
          <argument>upgrade</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ThemeModule\EventListener\CreateThemedResponseListener"/>
          <argument>createThemedResponse</argument>
        </argument>
        <argument>-2</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ThemeModule\EventListener\DefaultPageAssetSetterListener"/>
          <argument>setDefaultPageAssets</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ThemeModule\EventListener\DefaultPageVarSetterListener"/>
          <argument>setDefaultPageVars</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>module.install</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ThemeModule\EventListener\ExtensionInstallationListener"/>
          <argument>clearCombinedAssetCache</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>module.upgrade</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ThemeModule\EventListener\ExtensionInstallationListener"/>
          <argument>clearPublishedAssets</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>module.enable</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ThemeModule\EventListener\ExtensionInstallationListener"/>
          <argument>clearCombinedAssetCache</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>module.disable</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ThemeModule\EventListener\ExtensionInstallationListener"/>
          <argument>clearCombinedAssetCache</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>module.remove</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ThemeModule\EventListener\ExtensionInstallationListener"/>
          <argument>clearPublishedAssets</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ThemeModule\EventListener\ModuleStylesheetInsertListener"/>
          <argument>insertModuleStylesheet</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>theme.post_render</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ThemeModule\EventListener\TemplateNameExposeListener"/>
          <argument>exposeTemplateNames</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ThemeModule\EventListener\TemplatePathOverrideListener"/>
          <argument>setUpThemePathOverrides</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>get.pending_content</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\UsersModule\Listener\PendingContentListener"/>
          <argument>pendingContent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>module.users.ui.registration.succeeded</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\UsersModule\Listener\RegistrationEventsListener"/>
          <argument>sendRegistrationEmail</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>module.users.ui.logout.succeeded</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\UsersModule\Listener\UserEventListener"/>
          <argument>clearUsersNamespace</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>module.users.ui.login.succeeded</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\UsersModule\Listener\UserEventListener"/>
          <argument>setLocale</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\UsersModule\Listener\UserEventListener"/>
          <argument>clearUsersNamespace</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>full.user.create.veto</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ZAuthModule\Listener\RegistrationListener"/>
          <argument>vetoFullUserCreate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>module.users.ui.registration.succeeded</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ZAuthModule\Listener\RegistrationListener"/>
          <argument>sendEmailVerificationEmail</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>force.registration.approval</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ZAuthModule\Listener\RegistrationListener"/>
          <argument>forceRegistrationApproval</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>user.account.delete</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ZAuthModule\Listener\UserDeleteListener"/>
          <argument>deleteUsers</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>user.registration.delete</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ZAuthModule\Listener\UserDeleteListener"/>
          <argument>deleteUsers</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>user.login.veto</argument>
        <argument type="collection">
          <argument type="service" id="Zikula\ZAuthModule\Listener\UserEventListener"/>
          <argument>forcedPasswordChange</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver" public="false">
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_dir"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_file"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="Zikula\RoutesModule\Routing\RouteLoader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id=".service_locator.yOuJyes"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection">
        <argument key="utf8">true</argument>
      </argument>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.SXRFexO.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">/home/runner/work/core/core/var/cache/prod</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">null</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <argument>en</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.3TLJ8AE.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>/home/runner/work/core/core</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id=".2_PhpArrayAdapter~yAuT6Nv" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/home/runner/work/core/core/var/cache/prod/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id=".1_ArrayCache~yAuT6Nv" class="Doctrine\Common\Cache\ArrayCache" public="false"/>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader" public="false">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="annotations.dummy_registry"/>
      </call>
    </service>
    <service id="annotations.dummy_registry" class="Doctrine\Common\Annotations\AnnotationRegistry" public="false">
      <call method="registerUniqueLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\CachedReader" public="false">
      <tag name="annotations.cached_reader"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service" id=".1_ArrayCache~yAuT6Nv"/>
      <argument>true</argument>
      <property name="cacheProviderBackup" type="service" id="annotations.cache"/>
    </service>
    <service id="annotations.filesystem_cache" class="Doctrine\Common\Cache\FilesystemCache" public="false">
      <argument></argument>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>/home/runner/work/core/core/var/cache/prod/annotations.php</argument>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!.*Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id=".2_PhpArrayAdapter~yAuT6Nv"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor" public="false">
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <tag name="container.env_var_loader"/>
      <argument>/home/runner/work/core/core/config/secrets/prod</argument>
      <argument>%env(base64:default::SYMFONY_DECRYPTION_SECRET)%</argument>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>/home/runner/work/core/core/.env.prod.local</argument>
    </service>
    <service id="mime_types" class="Symfony\Component\Mime\MimeTypes" public="false">
      <call method="setDefault">
        <argument type="service" id="mime_types"/>
      </call>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker" public="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage" public="true">
      <tag name="kernel.reset" method="disableUsageTracking"/>
      <tag name="kernel.reset" method="setToken"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id=".service_locator.XjnY8xG"/>
    </service>
    <service id="security.untracked_token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage" public="false"/>
    <service id="security.helper" class="Symfony\Component\Security\Core\Security" public="false">
      <argument type="service" id=".service_locator.6zQlgQt"/>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.authentication.provider.dao.secured_area"/>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false"/>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>none</argument>
    </service>
    <service id="security.encoder_factory.generic" class="Symfony\Component\Security\Core\Encoder\EncoderFactory" public="false">
      <argument type="collection">
        <argument key="Symfony\Component\Security\Core\User\User" type="collection">
          <argument key="class">Symfony\Component\Security\Core\Encoder\PlaintextPasswordEncoder</argument>
          <argument key="arguments" type="collection">
            <argument>false</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_encoder.generic" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false">
      <argument type="service" id="cache.security_expression_language"/>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" public="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument>%security.role_hierarchy.roles%</argument>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
      <argument type="service" id=".service_locator.HvwiIll"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.dev" type="service" id=".security.request_matcher.Iy.T22O"/>
        <argument key="security.firewall.map.context.login" type="service" id=".security.request_matcher.LSAvh7L"/>
        <argument key="security.firewall.map.context.secured_area" type="service" id=".security.request_matcher.1nJhEMn"/>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.firewall.lazy_context" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="jms_i18n_routing.router" on-invalid="null"/>
      <argument type="service" id="security.token_storage"/>
      <call method="registerListener">
        <argument>secured_area</argument>
        <argument>_demo_logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.user.provider.missing" class="Symfony\Component\Security\Core\User\MissingUserProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false" abstract="true"/>
    <service id="security.user.provider.ldap" class="Symfony\Component\Ldap\Security\LdapUserProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" public="false" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="jms_i18n_routing.router" on-invalid="null"/>
      <argument type="service" id="jms_i18n_routing.router" on-invalid="null"/>
      <argument>{^https?://%%s$}i</argument>
      <argument>{^https://%%s$}i</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="cache.security_expression_language" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>ok3Rw6mO5u</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/runner/work/core/core/var/cache/prod/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="security.authentication.listener.anonymous" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument></argument>
    </service>
    <service id="security.authentication.retry_entry_point" class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="security.authentication.basic_entry_point" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false"/>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.retry_entry_point"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service" id=".security.request_matcher.z4XgBhm"/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.in_memory"/>
      </argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler"/>
      <argument></argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.csrf_token_clearing"/>
      </call>
    </service>
    <service id="security.logout.handler.session" class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
    <service id="security.logout.handler.cookie_clearing" class="Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler" public="false" abstract="true"/>
    <service id="security.logout.success_handler" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.form_entry_point" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false" abstract="true">
      <argument type="service" id="http_kernel"/>
    </service>
    <service id="security.authentication.listener.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.form" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.x509" class="Symfony\Component\Security\Http\Firewall\X509AuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.json" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.remote_user" class="Symfony\Component\Security\Http\Firewall\RemoteUserAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.basic" class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.dao" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.ldap_bind" class="Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.pre_authenticated" class="Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.listener.rememberme" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.authentication.rememberme"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument></argument>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authentication.provider.rememberme" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.rememberme.token.provider.in_memory" class="Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider" public="false"/>
    <service id="security.authentication.rememberme.services.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.persistent" class="Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="collection"/>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy"/>
      </call>
    </service>
    <service id="security.authentication.provider.guard" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="security.authentication.listener.guard" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager" public="false">
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.voter.vote_listener" class="Symfony\Bundle\SecurityBundle\EventListener\VoteListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.user.provider.concrete.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false">
      <argument type="collection">
        <argument key="user" type="collection">
          <argument key="password">userpass</argument>
          <argument key="roles" type="collection">
            <argument>ROLE_USER</argument>
          </argument>
        </argument>
        <argument key="admin" type="collection">
          <argument key="password">adminpass</argument>
          <argument key="roles" type="collection">
            <argument>ROLE_ADMIN</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.Iy.T22O</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.Iy.T22O" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.login" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>login</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.LSAvh7L</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.LSAvh7L" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/demo/secured/login$</argument>
    </service>
    <service id="security.firewall.map.context.login" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.login"/>
    </service>
    <service id="security.firewall.map.config.secured_area" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>secured_area</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.1nJhEMn</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>security.user.provider.concrete.in_memory</argument>
      <argument>secured_area</argument>
      <argument>security.authentication.form_entry_point.secured_area</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>form_login</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.1nJhEMn" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/demo/secured/</argument>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.in_memory"/>
      </argument>
      <argument>secured_area</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener.secured_area" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler.secured_area"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">_demo_logout</argument>
      </argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.csrf_token_clearing"/>
      </call>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.session"/>
      </call>
    </service>
    <service id="security.logout.success_handler.secured_area" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument>_demo</argument>
    </service>
    <service id="security.authentication.provider.dao.secured_area" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
      <argument type="service" id="security.user.provider.concrete.in_memory"/>
      <argument type="service" id="security.user_checker"/>
      <argument>secured_area</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.success_handler.secured_area.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">_demo_login</argument>
          <argument key="always_use_default_target_path">false</argument>
          <argument key="default_target_path">/</argument>
          <argument key="target_path_parameter">_target_path</argument>
          <argument key="use_referer">false</argument>
        </argument>
      </call>
      <call method="setProviderKey">
        <argument>secured_area</argument>
      </call>
    </service>
    <service id="security.authentication.failure_handler.secured_area.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">_demo_login</argument>
          <argument key="failure_path">null</argument>
          <argument key="failure_forward">false</argument>
          <argument key="failure_path_parameter">_failure_path</argument>
        </argument>
      </call>
    </service>
    <service id="security.authentication.listener.form.secured_area" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="secured_area" provider="security.user.provider.concrete.in_memory"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument>secured_area</argument>
      <argument type="service" id="security.authentication.success_handler.secured_area.form_login"/>
      <argument type="service" id="security.authentication.failure_handler.secured_area.form_login"/>
      <argument type="collection">
        <argument key="check_path">_security_check</argument>
        <argument key="use_forward">false</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="username_parameter">_username</argument>
        <argument key="password_parameter">_password</argument>
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">authenticate</argument>
        <argument key="post_only">true</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>null</argument>
    </service>
    <service id="security.authentication.form_entry_point.secured_area" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument>_demo_login</argument>
      <argument>false</argument>
    </service>
    <service id="security.exception_listener.secured_area" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>secured_area</argument>
      <argument type="service" id="security.authentication.form_entry_point.secured_area"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.secured_area" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.authentication.listener.form.secured_area"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.secured_area"/>
      <argument type="service" id="security.logout_listener.secured_area"/>
      <argument type="service" id="security.firewall.map.config.secured_area"/>
    </service>
    <service id=".service_locator.HvwiIll" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.dev" type="service" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.login" type="service" id="security.firewall.map.context.login"/>
        <argument key="security.firewall.map.context.secured_area" type="service" id="security.firewall.map.context.secured_area"/>
      </argument>
    </service>
    <service id=".security.request_matcher.z4XgBhm" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/demo/secured/hello/admin/</argument>
    </service>
    <service id="security.command.user_password_encoder" class="Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand" public="false">
      <tag name="console.command" command="security:encode-password"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument type="collection">
        <argument>Symfony\Component\Security\Core\User\User</argument>
      </argument>
      <call method="setName">
        <argument>security:encode-password</argument>
      </call>
    </service>
    <service id=".1_~DTt.Ozj" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" method="isDebug"/>
    </service>
    <service id="twig" class="Zikula\ThemeModule\Bridge\Twig\EventEnabledTwigEngine" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="twig.loader.native_filesystem"/>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="workflow.twig_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.html"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.markdown"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.intl"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.cssinliner"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.inky"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.string"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Zikula\Bundle\CoreBundle\Twig\Extension\CoreExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Zikula\Bundle\CoreBundle\Twig\Extension\EventDispatcherExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Zikula\Bundle\CoreBundle\Twig\Extension\PagerExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Zikula\Bundle\CoreBundle\Twig\Extension\SessionExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Zikula\Bundle\HookBundle\Twig\Extension\HookExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="knp_menu.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="liip_imagine.templating.filter_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Translation\Bundle\Twig\TranslationExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Zikula\AdminModule\Twig\Extension\AdminExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Zikula\BlocksModule\Twig\Extension\BlocksExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Zikula\ExtensionsModule\Twig\Extension\DefaultPathExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Zikula\ExtensionsModule\Twig\Extension\ExtensionsExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Zikula\ExtensionsModule\Twig\Extension\ModVarExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Zikula\ExtensionsModule\Twig\Extension\UserInterfaceExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Zikula\PermissionsModule\Twig\Extension\PermissionsExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Zikula\RoutesModule\Twig\TwigExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Zikula\SearchModule\Twig\TwigExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Zikula\SecurityCenterModule\Twig\TwigExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Zikula\ThemeModule\Twig\Extension\PageVarExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Zikula\ThemeModule\Twig\Extension\ThemeExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Zikula\UsersModule\Twig\Extension\MessageExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Zikula\UsersModule\Twig\Extension\OnlineExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Zikula\UsersModule\Twig\Extension\ProfileExtension"/>
      </call>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addGlobal">
        <argument>pagevars</argument>
        <argument type="service" id="zikula_core.common.theme.pagevars"/>
      </call>
      <call method="addGlobal">
        <argument>themevars</argument>
        <argument type="service" id="zikula_core.common.theme.themevars"/>
      </call>
      <call method="addGlobal">
        <argument>currentUser</argument>
        <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <call method="registerUndefinedFilterCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestFilter</argument>
        </argument>
      </call>
      <call method="registerUndefinedFunctionCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestFunction</argument>
        </argument>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable" public="false">
      <call method="setEnvironment">
        <argument>prod</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
      <argument type="service" id="kernel"/>
      <argument type="collection">
        <argument key="/home/runner/work/core/core/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views">null</argument>
        <argument key="/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Email">email</argument>
        <argument key="/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form">null</argument>
      </argument>
      <argument>/home/runner/work/core/core/templates</argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.lSARbri.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Twig\Loader\FilesystemLoader" public="false">
      <tag name="twig.loader"/>
      <argument type="collection"/>
      <argument>/home/runner/work/core/core</argument>
      <call method="addPath">
        <argument>/home/runner/work/core/core/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>!Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/Zikula/CoreBundle/Resources/views</argument>
        <argument>Core</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/Zikula/CoreBundle/Resources/views</argument>
        <argument>!Core</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/Zikula/CoreInstallerBundle/Resources/views</argument>
        <argument>ZikulaCoreInstaller</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/Zikula/CoreInstallerBundle/Resources/views</argument>
        <argument>!ZikulaCoreInstaller</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/Zikula/FormExtensionBundle/Resources/views</argument>
        <argument>ZikulaFormExtension</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/Zikula/FormExtensionBundle/Resources/views</argument>
        <argument>!ZikulaFormExtension</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/Zikula/HookBundle/Resources/views</argument>
        <argument>ZikulaHook</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/Zikula/HookBundle/Resources/views</argument>
        <argument>!ZikulaHook</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/vendor/knplabs/knp-menu-bundle/src/Resources/views</argument>
        <argument>KnpMenu</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/vendor/knplabs/knp-menu-bundle/src/Resources/views</argument>
        <argument>!KnpMenu</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/vendor/liip/imagine-bundle/Resources/views</argument>
        <argument>LiipImagine</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/vendor/liip/imagine-bundle/Resources/views</argument>
        <argument>!LiipImagine</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/templates/bundles/TranslationBundle</argument>
        <argument>Translation</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/vendor/php-translation/symfony-bundle/Resources/views</argument>
        <argument>Translation</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/vendor/php-translation/symfony-bundle/Resources/views</argument>
        <argument>!Translation</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/vendor/willdurand/js-translation-bundle/Resources/views</argument>
        <argument>BazingaJsTranslation</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/vendor/willdurand/js-translation-bundle/Resources/views</argument>
        <argument>!BazingaJsTranslation</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/Zikula/WorkflowBundle/Resources/views</argument>
        <argument>ZikulaWorkflow</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/Zikula/WorkflowBundle/Resources/views</argument>
        <argument>!ZikulaWorkflow</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/AdminModule/Resources/views</argument>
        <argument>ZikulaAdminModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/AdminModule/Resources/views</argument>
        <argument>!ZikulaAdminModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/BlocksModule/Resources/views</argument>
        <argument>ZikulaBlocksModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/BlocksModule/Resources/views</argument>
        <argument>!ZikulaBlocksModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/CategoriesModule/Resources/views</argument>
        <argument>ZikulaCategoriesModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/CategoriesModule/Resources/views</argument>
        <argument>!ZikulaCategoriesModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/ExtensionsModule/Resources/views</argument>
        <argument>ZikulaExtensionsModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/ExtensionsModule/Resources/views</argument>
        <argument>!ZikulaExtensionsModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/GroupsModule/Resources/views</argument>
        <argument>ZikulaGroupsModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/GroupsModule/Resources/views</argument>
        <argument>!ZikulaGroupsModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/MailerModule/Resources/views</argument>
        <argument>ZikulaMailerModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/MailerModule/Resources/views</argument>
        <argument>!ZikulaMailerModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/MenuModule/Resources/views</argument>
        <argument>ZikulaMenuModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/MenuModule/Resources/views</argument>
        <argument>!ZikulaMenuModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/PermissionsModule/Resources/views</argument>
        <argument>ZikulaPermissionsModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/PermissionsModule/Resources/views</argument>
        <argument>!ZikulaPermissionsModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/RoutesModule/Resources/views</argument>
        <argument>ZikulaRoutesModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/RoutesModule/Resources/views</argument>
        <argument>!ZikulaRoutesModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/SearchModule/Resources/views</argument>
        <argument>ZikulaSearchModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/SearchModule/Resources/views</argument>
        <argument>!ZikulaSearchModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/SecurityCenterModule/Resources/views</argument>
        <argument>ZikulaSecurityCenterModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/SecurityCenterModule/Resources/views</argument>
        <argument>!ZikulaSecurityCenterModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/SettingsModule/Resources/views</argument>
        <argument>ZikulaSettingsModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/SettingsModule/Resources/views</argument>
        <argument>!ZikulaSettingsModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/ThemeModule/Resources/views</argument>
        <argument>ZikulaThemeModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/ThemeModule/Resources/views</argument>
        <argument>!ZikulaThemeModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/UsersModule/Resources/views</argument>
        <argument>ZikulaUsersModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/UsersModule/Resources/views</argument>
        <argument>!ZikulaUsersModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/ZAuthModule/Resources/views</argument>
        <argument>ZikulaZAuthModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/src/system/ZAuthModule/Resources/views</argument>
        <argument>!ZikulaZAuthModule</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/templates</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Email</argument>
        <argument>email</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Email</argument>
        <argument>!email</argument>
      </call>
      <call method="addPath">
        <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader" public="false"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile" public="false"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.default" on-invalid="null"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>/home/runner/work/core/core</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="jms_i18n_routing.router"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="url_helper"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor" public="false">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="workflow.twig_extension" class="Symfony\Bridge\Twig\Extension\WorkflowExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="workflow.registry"/>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader" public="false">
      <argument type="service" id=".service_locator.nXUofNM"/>
    </service>
    <service id="twig.error_renderer.html" class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" public="false">
      <argument type="service" id="twig"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service" id=".1_~DTt.Ozj"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>twig.form.renderer</argument>
      </argument>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:twig"/>
      <argument type="service" id="twig"/>
      <argument>/home/runner/work/core/core</argument>
      <argument>%kernel.bundles_metadata%</argument>
      <argument>/home/runner/work/core/core/templates</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand" public="false">
      <tag name="console.command" command="lint:twig"/>
      <argument type="service" id="twig"/>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
    </service>
    <service id="twig.mailer.message_listener" class="Symfony\Component\Mailer\EventListener\MessageListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument type="service" id="twig.mime_body_renderer"/>
    </service>
    <service id="twig.mime_body_renderer" class="Symfony\Bridge\Twig\Mime\BodyRenderer">
      <argument type="service" id="twig"/>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger" public="false">
      <argument>app</argument>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter" public="false"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter" public="false"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter" public="false"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter" public="false"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter" public="false"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter" public="false"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter" public="false"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter" public="false"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter" public="false"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter" public="false">
      <argument>app</argument>
    </service>
    <service id="monolog.handler.main.http_code_strategy" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\HttpCodeActivationStrategy">
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument type="collection">
          <argument key="code">404</argument>
          <argument key="urls" type="collection"/>
        </argument>
        <argument type="collection">
          <argument key="code">405</argument>
          <argument key="urls" type="collection"/>
        </argument>
      </argument>
      <argument>400</argument>
    </service>
    <service id="monolog.handler.main" class="Monolog\Handler\FingersCrossedHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="monolog.handler.nested"/>
      <argument type="service" id="monolog.handler.main.http_code_strategy"/>
      <argument>0</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor" public="false"/>
    <service id="monolog.handler.nested" class="Monolog\Handler\StreamHandler">
      <argument>/home/runner/work/core/core/var/log/prod.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="monolog.handler.deprecation" class="Monolog\Handler\StreamHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>/home/runner/work/core/core/var/log/prod.deprecations.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.deprecation_filter" class="Monolog\Handler\FilterHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="monolog.handler.deprecation"/>
      <argument>100</argument>
      <argument>200</argument>
      <argument>true</argument>
    </service>
    <service id=".4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~Dv73ujF" class="Swift_Transport_Esmtp_Auth_NTLMAuthenticator" public="false"/>
    <service id=".3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~Dv73ujF" class="Swift_Transport_Esmtp_Auth_PlainAuthenticator" public="false"/>
    <service id=".2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~Dv73ujF" class="Swift_Transport_Esmtp_Auth_LoginAuthenticator" public="false"/>
    <service id=".1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~Dv73ujF" class="Swift_Transport_Esmtp_Auth_CramMd5Authenticator" public="false"/>
    <service id="swiftmailer.mailer.abstract" class="Swift_Mailer" public="true" abstract="true">
      <argument type="service" id="swiftmailer.mailer.default.transport.smtp"/>
    </service>
    <service id="swiftmailer.transport.smtp.configurator.abstract" class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" public="false" abstract="true"/>
    <service id="swiftmailer.transport.sendmail.abstract" class="Swift_Transport_SendmailTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.null.abstract" class="Swift_Transport_NullTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.failover" class="Swift_Transport_FailoverTransport" public="false"/>
    <service id="swiftmailer.transport.buffer.abstract" class="Swift_Transport_StreamBuffer" public="false" abstract="true">
      <argument type="service" id="swiftmailer.transport.replacementfactory"/>
    </service>
    <service id="swiftmailer.transport.authhandler.abstract" class="Swift_Transport_Esmtp_AuthHandler" public="false" abstract="true">
      <argument type="collection">
        <argument type="service" id=".1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~Dv73ujF"/>
        <argument type="service" id=".2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~Dv73ujF"/>
        <argument type="service" id=".3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~Dv73ujF"/>
        <argument type="service" id=".4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~Dv73ujF"/>
      </argument>
    </service>
    <service id="swiftmailer.transport.eventdispatcher.abstract" class="Swift_Events_SimpleEventDispatcher" public="false" abstract="true"/>
    <service id="swiftmailer.transport.replacementfactory" class="Swift_StreamFilters_StringReplacementFilterFactory" public="false"/>
    <service id="swiftmailer.plugin.redirecting.abstract" class="Swift_Plugins_RedirectingPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.antiflood.abstract" class="Swift_Plugins_AntiFloodPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.impersonate.abstract" class="Swift_Plugins_ImpersonatePlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.messagelogger.abstract" class="Swift_Plugins_MessageLogger" abstract="true"/>
    <service id="swiftmailer.transport.smtp.abstract" class="Swift_Transport_EsmtpTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.spool.abstract" class="Swift_Transport_SpoolTransport" public="false" abstract="true"/>
    <service id="swiftmailer.spool.file.abstract" class="Swift_FileSpool" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="swiftmailer.spool.memory.abstract" class="Swift_MemorySpool" public="false" abstract="true"/>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="swiftmailer.data_collector" class="Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector" public="false">
      <tag name="data_collector" template="@Swiftmailer/Collector/swiftmailer.html.twig" id="swiftmailer" priority="245"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="swiftmailer.command.debug" class="Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand">
      <tag name="console.command" command="debug:swiftmailer"/>
      <call method="setName">
        <argument>debug:swiftmailer</argument>
      </call>
    </service>
    <service id="swiftmailer.command.new_email" class="Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand">
      <tag name="console.command" command="swiftmailer:email:send"/>
      <call method="setName">
        <argument>swiftmailer:email:send</argument>
      </call>
    </service>
    <service id="swiftmailer.command.send_email" class="Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand">
      <tag name="console.command" command="swiftmailer:spool:send"/>
      <call method="setName">
        <argument>swiftmailer:spool:send</argument>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.transport.eventdispatcher" class="Swift_Events_SimpleEventDispatcher" public="false"/>
    <service id="swiftmailer.mailer.default.transport.authhandler" class="Swift_Transport_Esmtp_AuthHandler" public="false">
      <argument type="collection">
        <argument type="service" id=".1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~Dv73ujF"/>
        <argument type="service" id=".2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~Dv73ujF"/>
        <argument type="service" id=".3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~Dv73ujF"/>
        <argument type="service" id=".4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~Dv73ujF"/>
      </argument>
      <call method="setUsername">
        <argument></argument>
      </call>
      <call method="setPassword">
        <argument></argument>
      </call>
      <call method="setAuthMode">
        <argument>null</argument>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.transport.buffer" class="Swift_Transport_StreamBuffer" public="false">
      <argument type="service" id="swiftmailer.transport.replacementfactory"/>
    </service>
    <service id="swiftmailer.transport.configurator.default" class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" public="false">
      <argument>null</argument>
      <argument type="service" id="router.request_context" on-invalid="null"/>
    </service>
    <service id="swiftmailer.mailer.default.transport.smtp" class="Swift_Transport_EsmtpTransport" public="false">
      <argument type="service" id="swiftmailer.mailer.default.transport.buffer"/>
      <argument type="collection">
        <argument type="service" id="swiftmailer.mailer.default.transport.authhandler"/>
      </argument>
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <call method="setHost">
        <argument>localhost</argument>
      </call>
      <call method="setPort">
        <argument>25</argument>
      </call>
      <call method="setEncryption">
        <argument>null</argument>
      </call>
      <call method="setTimeout">
        <argument>30</argument>
      </call>
      <call method="setSourceIp">
        <argument>null</argument>
      </call>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.default.plugin.messagelogger"/>
      </call>
      <configurator service="swiftmailer.transport.configurator.default" method="configure"/>
    </service>
    <service id="swiftmailer.mailer.default" class="Swift_Mailer" public="true">
      <argument type="service" id="swiftmailer.mailer.default.transport.smtp"/>
    </service>
    <service id="swiftmailer.mailer.default.plugin.messagelogger" class="Swift_Plugins_MessageLogger" public="true">
      <tag name="swiftmailer.default.plugin"/>
    </service>
    <service id="doctrine.dbal.logger.chain" class="Doctrine\DBAL\Logging\LoggerChain" public="false" abstract="true">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling" class="Doctrine\DBAL\Logging\DebugStack" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger.backtrace" class="Doctrine\Bundle\DoctrineBundle\Dbal\Logging\BacktraceLogger" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger" class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <call method="addLogger">
        <argument>default</argument>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument>%doctrine.dbal.connection_factory.types%</argument>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" public="false" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.dbal.schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager" public="false" abstract="true"/>
    <service id="doctrine.dbal.well_known_schema_asset_filter" class="Doctrine\Bundle\DoctrineBundle\Dbal\BlacklistSchemaAssetFilter" public="false">
      <argument type="collection"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.database_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ImportDoctrineCommand">
      <tag name="console.command" command="doctrine:database:import"/>
      <call method="setName">
        <argument>doctrine:database:import</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration" public="false">
      <call method="setSQLLogger">
        <argument type="service" id="doctrine.dbal.logger.chain.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.logger.chain.default" class="Doctrine\DBAL\Logging\LoggerChain" public="false">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
      <argument type="service" id=".service_locator.bpvU51K"/>
      <call method="addEventSubscriber">
        <argument type="service" id="stof_doctrine_extensions.listener.loggable"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="stof_doctrine_extensions.listener.timestampable"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="stof_doctrine_extensions.listener.blameable"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="stof_doctrine_extensions.listener.sluggable"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="stof_doctrine_extensions.listener.tree"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="stof_doctrine_extensions.listener.sortable"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="stof_doctrine_extensions.listener.softdeleteable"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="stof_doctrine_extensions.listener.reference_integrity"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="Zikula\RoutesModule\Listener\EntityLifecycleListener"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="stof_doctrine_extensions.listener.uploadable"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="stof_doctrine_extensions.listener.translatable"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument>doctrine.orm.default_listeners.attach_entity_listeners</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="driver">pdo_mysql</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="dbname">null</argument>
        <argument key="user">null</argument>
        <argument key="password">null</argument>
        <argument key="charset">UTF8</argument>
        <argument key="path">null</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="serverVersion" type="string">5.7</argument>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="messenger.middleware.doctrine_transaction" class="Symfony\Bridge\Doctrine\Messenger\DoctrineTransactionMiddleware" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="messenger.middleware.doctrine_ping_connection" class="Symfony\Bridge\Doctrine\Messenger\DoctrinePingConnectionMiddleware" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="messenger.middleware.doctrine_close_connection" class="Symfony\Bridge\Doctrine\Messenger\DoctrineCloseConnectionMiddleware" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="messenger.transport.doctrine.factory" class="Symfony\Component\Messenger\Transport\Doctrine\DoctrineTransportFactory" public="false">
      <tag name="messenger.transport_factory"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager" class="Symfony\Bridge\Doctrine\Messenger\DoctrineClearEntityManagerWorkerSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id=".1_ServiceLocator~GyKg4lS" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" public="false" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true">
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
    </service>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory" public="false">
      <argument type="service" id=".service_locator.YkL78jj"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener" public="false"/>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore_number_aware" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false">
      <argument>0</argument>
      <argument>true</argument>
    </service>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy" public="false"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearMetadataCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearQueryCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearResultCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CollectionRegionDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ConvertMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
      <call method="setName">
        <argument>doctrine:mapping:convert</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CreateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\DropSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EnsureProductionSettingsDoctrineCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
      <call method="setName">
        <argument>doctrine:ensure-production-settings</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EntityRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\InfoDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\QueryRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunDqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\UpdateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
      <argument type="service" id="doctrine"/>
      <argument>%kernel.bundles%</argument>
      <call method="setName">
        <argument>doctrine:mapping:import</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration" public="false">
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="ZikulaHookStorage">Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity</argument>
          <argument key="GedmoTranslatable">Gedmo\Translatable\Entity</argument>
          <argument key="GedmoTranslator">Gedmo\Translator\Entity</argument>
          <argument key="GedmoLoggable">Gedmo\Loggable\Entity</argument>
          <argument key="GedmoTree">Gedmo\Tree\Entity</argument>
          <argument key="ZikulaAdminModule">Zikula\AdminModule\Entity</argument>
          <argument key="ZikulaBlocksModule">Zikula\BlocksModule\Entity</argument>
          <argument key="ZikulaCategoriesModule">Zikula\CategoriesModule\Entity</argument>
          <argument key="ZikulaExtensionsModule">Zikula\ExtensionsModule\Entity</argument>
          <argument key="ZikulaGroupsModule">Zikula\GroupsModule\Entity</argument>
          <argument key="ZikulaMenuModule">Zikula\MenuModule\Entity</argument>
          <argument key="ZikulaPermissionsModule">Zikula\PermissionsModule\Entity</argument>
          <argument key="ZikulaRoutesModule">Zikula\RoutesModule\Entity</argument>
          <argument key="ZikulaSearchModule">Zikula\SearchModule\Entity</argument>
          <argument key="ZikulaSecurityCenterModule">Zikula\SecurityCenterModule\Entity</argument>
          <argument key="ZikulaThemeModule">Zikula\ThemeModule\Entity</argument>
          <argument key="ZikulaUsersModule">Zikula\UsersModule\Entity</argument>
          <argument key="ZikulaZAuthModule">Zikula\ZAuthModule\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.doctrine.system_cache_pool"/>
      </call>
      <call method="setQueryCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.doctrine.system_cache_pool"/>
      </call>
      <call method="setResultCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.doctrine.result_cache_pool"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id="doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>/home/runner/work/core/core/var/cache/prod/doctrine/orm/DoctrineProxy</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>DoctrineProxy</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>false</argument>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.default"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
    </service>
    <service id="doctrine.orm.default_annotation_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection">
        <argument>/home/runner/work/core/core/src/Zikula/HookBundle/Dispatcher/Storage/Doctrine/Entity</argument>
        <argument>/home/runner/work/core/core/vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity</argument>
        <argument>/home/runner/work/core/core/vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity</argument>
        <argument>/home/runner/work/core/core/vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity</argument>
        <argument>/home/runner/work/core/core/vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity</argument>
        <argument>/home/runner/work/core/core/src/system/AdminModule/Entity</argument>
        <argument>/home/runner/work/core/core/src/system/BlocksModule/Entity</argument>
        <argument>/home/runner/work/core/core/src/system/CategoriesModule/Entity</argument>
        <argument>/home/runner/work/core/core/src/system/ExtensionsModule/Entity</argument>
        <argument>/home/runner/work/core/core/src/system/GroupsModule/Entity</argument>
        <argument>/home/runner/work/core/core/src/system/MenuModule/Entity</argument>
        <argument>/home/runner/work/core/core/src/system/PermissionsModule/Entity</argument>
        <argument>/home/runner/work/core/core/src/system/RoutesModule/Entity</argument>
        <argument>/home/runner/work/core/core/src/system/SearchModule/Entity</argument>
        <argument>/home/runner/work/core/core/src/system/SecurityCenterModule/Entity</argument>
        <argument>/home/runner/work/core/core/src/system/ThemeModule/Entity</argument>
        <argument>/home/runner/work/core/core/src/system/UsersModule/Entity</argument>
        <argument>/home/runner/work/core/core/src/system/ZAuthModule/Entity</argument>
      </argument>
    </service>
    <service id="doctrine.orm.default_metadata_driver" class="Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain" public="false">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Gedmo\Translatable\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Gedmo\Translator\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Gedmo\Loggable\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Gedmo\Tree\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Zikula\AdminModule\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Zikula\BlocksModule\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Zikula\CategoriesModule\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Zikula\ExtensionsModule\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Zikula\GroupsModule\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Zikula\MenuModule\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Zikula\PermissionsModule\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Zikula\RoutesModule\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Zikula\SearchModule\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Zikula\SecurityCenterModule\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Zikula\ThemeModule\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Zikula\UsersModule\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Zikula\ZAuthModule\Entity</argument>
      </call>
    </service>
    <service id="doctrine.orm.cache.provider.doctrine.system_cache_pool" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="doctrine.system_cache_pool"/>
    </service>
    <service id="doctrine.orm.cache.provider.doctrine.result_cache_pool" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="doctrine.result_cache_pool"/>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <tag name="property_info.access_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.validator_loader" class="Symfony\Bridge\Doctrine\Validator\DoctrineLoader">
      <tag name="validator.auto_mapper" priority="-100"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>null</argument>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_class" class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="annotations.cached_reader"/>
      <deprecated>The "%service_id%" service is deprecated since version 5.2</deprecated>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_dir" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
      <deprecated>The "%service_id%" service is deprecated since version 5.2</deprecated>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
      <deprecated>The "%service_id%" service is deprecated since version 5.2</deprecated>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="framework_extra_bundle.date_time_param_converter"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter" public="false">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument type="service" id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.date_time_param_converter" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter" public="false">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage" public="false"/>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser" public="false">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.view.guesser"/>
      <argument type="service" id="twig" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="sensio_framework_extra.security.expression_language.default" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.security.expression_language.default" class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage" public="false"/>
    <service id="framework_extra_bundle.event.is_granted" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.argument_name_convertor" class="Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter" public="false">
      <argument type="service" id="argument_metadata_factory"/>
    </service>
    <service id="stof_doctrine_extensions.listener.translatable" class="Gedmo\Translatable\TranslatableListener" public="false">
      <tag name="doctrine.event_subscriber" connection="default" priority="-10"/>
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="setDefaultLocale">
        <argument>en_US</argument>
      </call>
      <call method="setTranslatableLocale">
        <argument>en_US</argument>
      </call>
      <call method="setTranslationFallback">
        <argument>true</argument>
      </call>
      <call method="setPersistDefaultLocaleTranslation">
        <argument>false</argument>
      </call>
      <call method="setSkipOnLoad">
        <argument>false</argument>
      </call>
    </service>
    <service id="stof_doctrine_extensions.event_listener.locale" class="Stof\DoctrineExtensionsBundle\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="stof_doctrine_extensions.listener.translatable"/>
    </service>
    <service id="stof_doctrine_extensions.listener.timestampable" class="Gedmo\Timestampable\TimestampableListener" public="false">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="stof_doctrine_extensions.listener.blameable" class="Gedmo\Blameable\BlameableListener" public="false">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="stof_doctrine_extensions.event_listener.blame" class="Zikula\Bundle\CoreBundle\EventListener\BlameListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="stof_doctrine_extensions.listener.blameable"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="session"/>
      <argument>%installed%</argument>
    </service>
    <service id="stof_doctrine_extensions.listener.sluggable" class="Gedmo\Sluggable\SluggableListener" public="false">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="stof_doctrine_extensions.listener.tree" class="Gedmo\Tree\TreeListener" public="false">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="stof_doctrine_extensions.listener.loggable" class="Gedmo\Loggable\LoggableListener" public="false">
      <tag name="doctrine.event_subscriber" connection="default" priority="5"/>
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="stof_doctrine_extensions.event_listener.logger" class="Stof\DoctrineExtensionsBundle\EventListener\LoggerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="stof_doctrine_extensions.listener.loggable"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="stof_doctrine_extensions.listener.sortable" class="Gedmo\Sortable\SortableListener" public="false">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="stof_doctrine_extensions.listener.softdeleteable" class="Gedmo\SoftDeleteable\SoftDeleteableListener" public="false">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="stof_doctrine_extensions.listener.uploadable" class="Gedmo\Uploadable\UploadableListener" public="false">
      <tag name="doctrine.event_subscriber" connection="default" priority="-5"/>
      <argument type="service" id="stof_doctrine_extensions.uploadable.mime_type_guesser"/>
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="setDefaultFileInfoClass">
        <argument>Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo</argument>
      </call>
      <configurator service="stof_doctrine_extensions.uploadable.configurator" method="configure"/>
    </service>
    <service id="stof_doctrine_extensions.uploadable.mime_type_guesser" class="Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter" public="false"/>
    <service id="stof_doctrine_extensions.uploadable.manager" class="Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager" public="true">
      <argument type="service" id="stof_doctrine_extensions.listener.uploadable"/>
      <argument>Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo</argument>
    </service>
    <service id="stof_doctrine_extensions.uploadable.configurator" class="Stof\DoctrineExtensionsBundle\Uploadable\ValidatorConfigurator" public="false">
      <argument>true</argument>
    </service>
    <service id="stof_doctrine_extensions.listener.reference_integrity" class="Gedmo\ReferenceIntegrity\ReferenceIntegrityListener" public="false">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="twig.missing_extension_suggestor" class="Twig\Extra\TwigExtraBundle\MissingExtensionSuggestor" public="false"/>
    <service id="twig.extension.html" class="Twig\Extra\Html\HtmlExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.markdown" class="Twig\Extra\Markdown\MarkdownExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.markdown" class="Twig\Extra\Markdown\MarkdownRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.markdown.default"/>
    </service>
    <service id="twig.markdown.default" class="Twig\Extra\Markdown\DefaultMarkdown" public="false"/>
    <service id="twig.extension.intl" class="Twig\Extra\Intl\IntlExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.cssinliner" class="Twig\Extra\CssInliner\CssInlinerExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.inky" class="Twig\Extra\Inky\InkyExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.string" class="Twig\Extra\String\StringExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="Zikula\Bundle\CoreBundle\HttpFoundation\Session\DoctrineSessionHandler" class="Zikula\Bundle\CoreBundle\HttpFoundation\Session\DoctrineSessionHandler" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserSessionRepository"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="request_stack"/>
      <argument>false</argument>
      <call method="setStorage">
        <argument type="service" id="zikula_core.bridge.http_foundation.zikula_session_storage_file"/>
      </call>
    </service>
    <service id="Zikula\Bundle\CoreBundle\HttpFoundation\Session\ZikulaSessionStorage" class="Zikula\Bundle\CoreBundle\HttpFoundation\Session\ZikulaSessionStorage" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="collection"/>
      <argument type="service" id="session.handler.native_file"/>
    </service>
    <service id="zikula_core.bridge.http_foundation.zikula_session_storage_doctrine" class="Zikula\Bundle\CoreBundle\HttpFoundation\Session\ZikulaSessionStorage" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument>%session.storage.options%</argument>
      <argument type="service" id="session.handler.native_file"/>
      <call method="setSaveHandler">
        <argument type="service" id="Zikula\Bundle\CoreBundle\HttpFoundation\Session\DoctrineSessionHandler"/>
      </call>
    </service>
    <service id="zikula_core.bridge.http_foundation.zikula_session_storage_file" class="Zikula\Bundle\CoreBundle\HttpFoundation\Session\ZikulaSessionStorage" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument>%session.storage.options%</argument>
      <argument type="service" id="session.handler.native_file"/>
      <call method="setSaveHandler">
        <argument type="service" id="session.handler.native_file"/>
      </call>
    </service>
    <service id="Zikula\Bundle\CoreBundle\CacheClearer" class="Zikula\Bundle\CoreBundle\CacheClearer" public="true" autowire="true" autoconfigure="true">
      <argument>/home/runner/work/core/core/var/cache/prod</argument>
      <argument>KernelProdDebugContainer</argument>
      <argument type="service" id="fos_js_routing.extractor"/>
      <argument>%jms_i18n_routing.locales%</argument>
    </service>
    <service id="Zikula\Bundle\CoreBundle\Collection\Collectible\PendingContentCollectible" class="Zikula\Bundle\CoreBundle\Collection\Collectible\PendingContentCollectible" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreBundle\Collection\Container" class="Zikula\Bundle\CoreBundle\Collection\Container" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreBundle\Command\AssetsInstallCommand" class="Zikula\Bundle\CoreBundle\Command\AssetsInstallCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="filesystem"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="Zikula\Bundle\CoreBundle\Composer\MetaData" class="Zikula\Bundle\CoreBundle\Composer\MetaData" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreBundle\Composer\Scanner" class="Zikula\Bundle\CoreBundle\Composer\Scanner" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreBundle\Controller\MainController" class="Zikula\Bundle\CoreBundle\Controller\MainController" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="kernel"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
    </service>
    <service id="Zikula\Bundle\CoreBundle\CoreBundle" class="Zikula\Bundle\CoreBundle\CoreBundle" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreBundle\CoreEvents" class="Zikula\Bundle\CoreBundle\CoreEvents" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreBundle\DataCollector\ZikulaVersionDataCollector" class="Zikula\Bundle\CoreBundle\DataCollector\ZikulaVersionDataCollector" public="false" autowire="true" autoconfigure="true">
      <tag name="data_collector" template="@Core/Collector/ZikulaVersion.html.twig" id="zikula_version" priority="300"/>
      <tag name="data_collector"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="Zikula\ThemeModule\Engine\Engine"/>
    </service>
    <service id="Zikula\Bundle\CoreBundle\DependencyInjection\Compiler\DoctrinePass" class="Zikula\Bundle\CoreBundle\DependencyInjection\Compiler\DoctrinePass" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreBundle\DependencyInjection\Compiler\OverrideBlameableListenerPass" class="Zikula\Bundle\CoreBundle\DependencyInjection\Compiler\OverrideBlameableListenerPass" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreBundle\DependencyInjection\CoreExtension" class="Zikula\Bundle\CoreBundle\DependencyInjection\CoreExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreBundle\Doctrine\DBAL\Type\UTCDateTimeType" class="Zikula\Bundle\CoreBundle\Doctrine\DBAL\Type\UTCDateTimeType" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreBundle\Doctrine\EntityAccess" class="Zikula\Bundle\CoreBundle\Doctrine\EntityAccess" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreBundle\Doctrine\Helper\SchemaHelper" class="Zikula\Bundle\CoreBundle\Doctrine\Helper\SchemaHelper" public="true" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Zikula\Bundle\CoreBundle\DynamicConfigDumper" class="Zikula\Bundle\CoreBundle\DynamicConfigDumper" public="true" autowire="true" autoconfigure="true">
      <argument>/home/runner/work/core/core/config</argument>
    </service>
    <service id="Zikula\Bundle\CoreBundle\Event\GenericEvent" class="Zikula\Bundle\CoreBundle\Event\GenericEvent" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreBundle\EventListener\BlameListener" class="Zikula\Bundle\CoreBundle\EventListener\BlameListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="stof_doctrine_extensions.listener.blameable"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="session"/>
      <argument>false</argument>
    </service>
    <service id="Zikula\Bundle\CoreBundle\EventListener\ClickjackProtectionListener" class="Zikula\Bundle\CoreBundle\EventListener\ClickjackProtectionListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>SAMEORIGIN</argument>
    </service>
    <service id="Zikula\Bundle\CoreBundle\EventListener\Core3UpgradeListener" class="Zikula\Bundle\CoreBundle\EventListener\Core3UpgradeListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
    </service>
    <service id="Zikula\Bundle\CoreBundle\EventListener\DoctrineListener" class="Zikula\Bundle\CoreBundle\EventListener\DoctrineListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
    </service>
    <service id="Zikula\Bundle\CoreBundle\EventListener\ExceptionListener" class="Zikula\Bundle\CoreBundle\EventListener\ExceptionListener" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="request"/>
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument>false</argument>
    </service>
    <service id="Zikula\Bundle\CoreBundle\EventListener\LoggerListener" class="Zikula\Bundle\CoreBundle\EventListener\LoggerListener" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="stof_doctrine_extensions.listener.loggable"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument>false</argument>
    </service>
    <service id="Zikula\Bundle\CoreBundle\EventListener\OutputCompressionListener" class="Zikula\Bundle\CoreBundle\EventListener\OutputCompressionListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument>false</argument>
    </service>
    <service id="Zikula\Bundle\CoreBundle\EventListener\SessionExpireListener" class="Zikula\Bundle\CoreBundle\EventListener\SessionExpireListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>false</argument>
    </service>
    <service id="Zikula\Bundle\CoreBundle\EventListener\SiteOffListener" class="Zikula\Bundle\CoreBundle\EventListener\SiteOffListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument>false</argument>
    </service>
    <service id="Zikula\Bundle\CoreBundle\EventListener\SiteOffVetoLoginListener" class="Zikula\Bundle\CoreBundle\EventListener\SiteOffVetoLoginListener" public="false" lazy="true" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Zikula\Bundle\CoreBundle\Helper\BundlesSchemaHelper" class="Zikula\Bundle\CoreBundle\Helper\BundlesSchemaHelper" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
      <argument>/home/runner/work/core/core</argument>
    </service>
    <service id="Zikula\Bundle\CoreBundle\Helper\PersistedBundleHelper" class="Zikula\Bundle\CoreBundle\Helper\PersistedBundleHelper" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreBundle\Response\PlainResponse" class="Zikula\Bundle\CoreBundle\Response\PlainResponse" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreBundle\RouteUrl" class="Zikula\Bundle\CoreBundle\RouteUrl" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Knp\Menu\ItemLabel" class="Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Knp\Menu\ItemLabel" public="false" autowire="true" autoconfigure="true">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Knp\Menu\LinkTitle" class="Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Knp\Menu\LinkTitle" public="false" autowire="true" autoconfigure="true">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Routes\ZikulaRouteTranslationExtractor" class="Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Routes\ZikulaRouteTranslationExtractor" public="false" autowire="true" autoconfigure="true">
      <tag name="php_translation.visitor" type="php"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="jms_i18n_routing.route_exclusion_strategy"/>
    </service>
    <service id="Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Zikula\FormTypeAlert" class="Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Zikula\FormTypeAlert" public="false" autowire="true" autoconfigure="true">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Zikula\FormTypeInputGroup" class="Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Zikula\FormTypeInputGroup" public="false" autowire="true" autoconfigure="true">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Zikula\Bundle\CoreBundle\Twig\Extension\CoreExtension" class="Zikula\Bundle\CoreBundle\Twig\Extension\CoreExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\Bundle\CoreBundle\Twig\Extension\EventDispatcherExtension" class="Zikula\Bundle\CoreBundle\Twig\Extension\EventDispatcherExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Zikula\Bundle\CoreBundle\Twig\Extension\PagerExtension" class="Zikula\Bundle\CoreBundle\Twig\Extension\PagerExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="Zikula\Bundle\CoreBundle\Twig\Extension\SessionExtension" class="Zikula\Bundle\CoreBundle\Twig\Extension\SessionExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="session"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\Bundle\CoreBundle\Twig\Node\SwitchNode" class="Zikula\Bundle\CoreBundle\Twig\Node\SwitchNode" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreBundle\Twig\TokenParser\SwitchTokenParser" class="Zikula\Bundle\CoreBundle\Twig\TokenParser\SwitchTokenParser" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreBundle\YamlDumper" class="Zikula\Bundle\CoreBundle\YamlDumper" public="false" autowire="true" autoconfigure="true"/>
    <service id="Michelf\Markdown" class="Michelf\Markdown" public="false" autowire="true" autoconfigure="true"/>
    <service id="Michelf\MarkdownExtra" class="Michelf\MarkdownExtra" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreInstallerBundle\Command\Install\FinishCommand" class="Zikula\Bundle\CoreInstallerBundle\Command\Install\FinishCommand" public="true" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument>prod</argument>
      <argument>false</argument>
      <argument type="service" id="Zikula\Bundle\CoreInstallerBundle\Helper\StageHelper"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Command\Install\StartCommand" class="Zikula\Bundle\CoreInstallerBundle\Command\Install\StartCommand" public="true" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument>prod</argument>
      <argument>false</argument>
      <argument type="service" id="Zikula\Bundle\CoreInstallerBundle\Helper\ControllerHelper"/>
      <argument type="service" id="Zikula\SettingsModule\Api\LocaleApi"/>
      <argument type="service" id="Zikula\Bundle\CoreInstallerBundle\Helper\ParameterHelper"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Command\UpgradeCommand" class="Zikula\Bundle\CoreInstallerBundle\Command\UpgradeCommand" public="true" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="Zikula\Bundle\CoreInstallerBundle\Helper\ControllerHelper"/>
      <argument type="service" id="Zikula\Bundle\CoreInstallerBundle\Helper\MigrationHelper"/>
      <argument type="service" id="Zikula\SettingsModule\Api\LocaleApi"/>
      <argument type="service" id="Zikula\Bundle\CoreInstallerBundle\Helper\StageHelper"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="parameter_bag"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Controller\AjaxInstallController" class="Zikula\Bundle\CoreInstallerBundle\Controller\AjaxInstallController" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Controller\AjaxUpgradeController" class="Zikula\Bundle\CoreInstallerBundle\Controller\AjaxUpgradeController" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Controller\DocController" class="Zikula\Bundle\CoreInstallerBundle\Controller\DocController" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="kernel"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Controller\InstallerController" class="Zikula\Bundle\CoreInstallerBundle\Controller\InstallerController" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Controller\MigrationController" class="Zikula\Bundle\CoreInstallerBundle\Controller\MigrationController" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Controller\UpgraderController" class="Zikula\Bundle\CoreInstallerBundle\Controller\UpgraderController" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\DependencyInjection\ZikulaCoreInstallerExtension" class="Zikula\Bundle\CoreInstallerBundle\DependencyInjection\ZikulaCoreInstallerExtension" public="true" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreInstallerBundle\EventListener\InstallUpgradeCheckListener" class="Zikula\Bundle\CoreInstallerBundle\EventListener\InstallUpgradeCheckListener" public="true" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Form\Type\CreateAdminType" class="Zikula\Bundle\CoreInstallerBundle\Form\Type\CreateAdminType" public="true" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Form\Type\DbCredsType" class="Zikula\Bundle\CoreInstallerBundle\Form\Type\DbCredsType" public="true" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Form\Type\LocaleType" class="Zikula\Bundle\CoreInstallerBundle\Form\Type\LocaleType" public="true" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Form\Type\LoginType" class="Zikula\Bundle\CoreInstallerBundle\Form\Type\LoginType" public="true" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Form\Type\RequestContextType" class="Zikula\Bundle\CoreInstallerBundle\Form\Type\RequestContextType" public="true" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Helper\BlockHelper" class="Zikula\Bundle\CoreInstallerBundle\Helper\BlockHelper" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Helper\CacheHelper" class="Zikula\Bundle\CoreInstallerBundle\Helper\CacheHelper" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
      <argument type="service" id="cache_clearer"/>
      <argument>prod</argument>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Helper\ControllerHelper" class="Zikula\Bundle\CoreInstallerBundle\Helper\ControllerHelper" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Helper\MigrationHelper" class="Zikula\Bundle\CoreInstallerBundle\Helper\MigrationHelper" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="validator"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Helper\ModuleHelper" class="Zikula\Bundle\CoreInstallerBundle\Helper\ModuleHelper" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\Bundle\CoreInstallerBundle\Helper\ParameterHelper"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Helper\ParameterHelper" class="Zikula\Bundle\CoreInstallerBundle\Helper\ParameterHelper" public="true" autowire="true" autoconfigure="true">
      <argument>/home/runner/work/core/core/config</argument>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Helper\StageHelper" class="Zikula\Bundle\CoreInstallerBundle\Helper\StageHelper" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="kernel"/>
      <argument type="service" id="Zikula\Bundle\CoreBundle\Helper\BundlesSchemaHelper"/>
      <argument type="service" id="Zikula\ExtensionsModule\Helper\ExtensionHelper"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Zikula\Bundle\CoreInstallerBundle\Helper\ModuleHelper"/>
      <argument type="service" id="Zikula\Bundle\CoreInstallerBundle\Helper\BlockHelper"/>
      <argument type="service" id="Zikula\Bundle\CoreInstallerBundle\Helper\ParameterHelper"/>
      <argument type="service" id="Zikula\Bundle\CoreInstallerBundle\Helper\SuperUserHelper"/>
      <argument type="service" id="Zikula\Bundle\CoreInstallerBundle\Helper\CacheHelper"/>
      <argument type="service" id="Zikula\Bundle\CoreInstallerBundle\Helper\ThemeHelper"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Helper\SuperUserHelper" class="Zikula\Bundle\CoreInstallerBundle\Helper\SuperUserHelper" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Zikula\Bundle\CoreInstallerBundle\Helper\ParameterHelper"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Zikula\UsersModule\Helper\AccessHelper"/>
      <argument type="service" id="Zikula\ZAuthModule\Api\PasswordApi"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Helper\ThemeHelper" class="Zikula\Bundle\CoreInstallerBundle\Helper\ThemeHelper" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\ThemeModule\Helper\BundleSyncHelper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Stage\AlreadyInstalledStage" class="Zikula\Bundle\CoreInstallerBundle\Stage\AlreadyInstalledStage" public="true" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreInstallerBundle\Stage\Install\AjaxInstallerStage" class="Zikula\Bundle\CoreInstallerBundle\Stage\Install\AjaxInstallerStage" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Stage\Install\CompleteStage" class="Zikula\Bundle\CoreInstallerBundle\Stage\Install\CompleteStage" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Stage\Install\CreateAdminStage" class="Zikula\Bundle\CoreInstallerBundle\Stage\Install\CreateAdminStage" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Stage\Install\DbCredsStage" class="Zikula\Bundle\CoreInstallerBundle\Stage\Install\DbCredsStage" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Stage\Install\NotInstalledStage" class="Zikula\Bundle\CoreInstallerBundle\Stage\Install\NotInstalledStage" public="true" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreInstallerBundle\Stage\LocaleStage" class="Zikula\Bundle\CoreInstallerBundle\Stage\LocaleStage" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Stage\RequirementsStage" class="Zikula\Bundle\CoreInstallerBundle\Stage\RequirementsStage" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\AjaxUpgraderStage" class="Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\AjaxUpgraderStage" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="parameter_bag"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\CompleteStage" class="Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\CompleteStage" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\InitStage" class="Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\InitStage" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\LoginStage" class="Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\LoginStage" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\NotUpgradedStage" class="Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\NotUpgradedStage" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Util\ZikulaRequirements" class="Zikula\Bundle\CoreInstallerBundle\Util\ZikulaRequirements" public="true" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\AuthenticateAdminLogin" class="Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\AuthenticateAdminLogin" public="true" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\AuthenticateAdminLoginValidator" class="Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\AuthenticateAdminLoginValidator" public="true" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ZAuthModule\Api\PasswordApi"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\ValidPdoConnection" class="Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\ValidPdoConnection" public="true" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\ValidPdoConnectionValidator" class="Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\ValidPdoConnectionValidator" public="true" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\Bundle\CoreInstallerBundle\ZikulaCoreInstallerBundle" class="Zikula\Bundle\CoreInstallerBundle\ZikulaCoreInstallerBundle" public="true" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\FormExtensionBundle\DependencyInjection\ZikulaFormExtensionExtension" class="Zikula\Bundle\FormExtensionBundle\DependencyInjection\ZikulaFormExtensionExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\FormExtensionBundle\Event\FormTypeChoiceEvent" class="Zikula\Bundle\FormExtensionBundle\Event\FormTypeChoiceEvent" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\Bundle\FormExtensionBundle\FormTypesChoices"/>
    </service>
    <service id="Zikula\Bundle\FormExtensionBundle\Form\DataTransformer\ChoiceValuesTransformer" class="Zikula\Bundle\FormExtensionBundle\Form\DataTransformer\ChoiceValuesTransformer" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\FormExtensionBundle\Form\DataTransformer\NullToEmptyTransformer" class="Zikula\Bundle\FormExtensionBundle\Form\DataTransformer\NullToEmptyTransformer" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\FormExtensionBundle\Form\DataTransformer\RegexConstraintTransformer" class="Zikula\Bundle\FormExtensionBundle\Form\DataTransformer\RegexConstraintTransformer" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\FormExtensionBundle\Form\Extension\ButtonTypeIconExtension" class="Zikula\Bundle\FormExtensionBundle\Form\Extension\ButtonTypeIconExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type_extension"/>
    </service>
    <service id="Zikula\Bundle\FormExtensionBundle\Form\Extension\FormTypeHelpExtension" class="Zikula\Bundle\FormExtensionBundle\Form\Extension\FormTypeHelpExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type_extension"/>
    </service>
    <service id="Zikula\Bundle\FormExtensionBundle\Form\Type\DeletionType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DeletionType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicFieldType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicFieldType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Zikula\ThemeModule\Api\PageAssetApi"/>
      <argument type="service" id="Zikula\ThemeModule\Engine\Asset"/>
    </service>
    <service id="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\ChoiceFormOptionsArrayType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\ChoiceFormOptionsArrayType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\DateTimeFormOptionsArrayType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\DateTimeFormOptionsArrayType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\FormOptionsArrayType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\FormOptionsArrayType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\MoneyFormOptionsArrayType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\MoneyFormOptionsArrayType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\RegexibleFormOptionsArrayType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\RegexibleFormOptionsArrayType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\Bundle\FormExtensionBundle\Form\Type\IconType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\IconType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\Bundle\FormExtensionBundle\Form\Type\InlineFormDefinitionType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\InlineFormDefinitionType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\Bundle\FormExtensionBundle\Form\Type\LocaleType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\LocaleType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Zikula\SettingsModule\Api\LocaleApi"/>
    </service>
    <service id="Zikula\Bundle\FormExtensionBundle\FormTypesChoices" class="Zikula\Bundle\FormExtensionBundle\FormTypesChoices" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\FormExtensionBundle\ZikulaFormExtensionBundle" class="Zikula\Bundle\FormExtensionBundle\ZikulaFormExtensionBundle" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\HookBundle\Category\FilterHooksCategory" class="Zikula\Bundle\HookBundle\Category\FilterHooksCategory" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\HookBundle\Category\FormAwareCategory" class="Zikula\Bundle\HookBundle\Category\FormAwareCategory" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\HookBundle\Category\UiHooksCategory" class="Zikula\Bundle\HookBundle\Category\UiHooksCategory" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\HookBundle\Collector\HookCollector" class="Zikula\Bundle\HookBundle\Collector\HookCollector" public="false" autowire="true" autoconfigure="true">
      <argument type="tagged_iterator" tag="zikula.hook_provider"/>
      <argument type="tagged_iterator" tag="zikula.hook_subscriber"/>
    </service>
    <service id="Zikula\Bundle\HookBundle\Controller\HookController" class="Zikula\Bundle\HookBundle\Controller\HookController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.pNNo5z3.Zikula\Bundle\HookBundle\Controller\HookController"/>
      </call>
    </service>
    <service id="Zikula\Bundle\HookBundle\DependencyInjection\ZikulaHookExtension" class="Zikula\Bundle\HookBundle\DependencyInjection\ZikulaHookExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\HookBundle\Dispatcher\Exception\InvalidArgumentException" class="Zikula\Bundle\HookBundle\Dispatcher\Exception\InvalidArgumentException" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\HookBundle\Dispatcher\Exception\LogicException" class="Zikula\Bundle\HookBundle\Dispatcher\Exception\LogicException" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\HookBundle\Dispatcher\Exception\RuntimeException" class="Zikula\Bundle\HookBundle\Dispatcher\Exception\RuntimeException" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\HookBundle\Dispatcher\HookDispatcher" class="Zikula\Bundle\HookBundle\Dispatcher\HookDispatcher" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\DoctrineStorage"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\DoctrineStorage" class="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\DoctrineStorage" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookBindingRepository"/>
      <argument type="service" id="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookRuntimeRepository"/>
      <argument type="service" id="Zikula\Bundle\HookBundle\Collector\HookCollector"/>
    </service>
    <service id="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\HookBindingEntity" class="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\HookBindingEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\HookRuntimeEntity" class="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\HookRuntimeEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookBindingRepository" class="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookBindingRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookRuntimeRepository" class="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookRuntimeRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\Bundle\HookBundle\FormAwareHook\FormAwareHook" class="Zikula\Bundle\HookBundle\FormAwareHook\FormAwareHook" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\HookBundle\FormAwareHook\FormAwareResponse" class="Zikula\Bundle\HookBundle\FormAwareHook\FormAwareResponse" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\HookBundle\Hook\DisplayHook" class="Zikula\Bundle\HookBundle\Hook\DisplayHook" public="false" autowire="true" autoconfigure="true">
      <argument>null</argument>
      <argument type="service" id="Zikula\Bundle\CoreBundle\RouteUrl"/>
    </service>
    <service id="Zikula\Bundle\HookBundle\Hook\DisplayHookResponse" class="Zikula\Bundle\HookBundle\Hook\DisplayHookResponse" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\HookBundle\Hook\FilterHook" class="Zikula\Bundle\HookBundle\Hook\FilterHook" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\HookBundle\Hook\Hook" class="Zikula\Bundle\HookBundle\Hook\Hook" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\HookBundle\Hook\ProcessHook" class="Zikula\Bundle\HookBundle\Hook\ProcessHook" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\HookBundle\Hook\ValidationHook" class="Zikula\Bundle\HookBundle\Hook\ValidationHook" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\Bundle\HookBundle\Hook\ValidationProviders"/>
    </service>
    <service id="Zikula\Bundle\HookBundle\Hook\ValidationProviders" class="Zikula\Bundle\HookBundle\Hook\ValidationProviders" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\HookBundle\Hook\ValidationResponse" class="Zikula\Bundle\HookBundle\Hook\ValidationResponse" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\HookBundle\HookBundleInstaller" class="Zikula\Bundle\HookBundle\HookBundleInstaller" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\Bundle\CoreBundle\Doctrine\Helper\SchemaHelper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Zikula\Bundle\HookBundle\Listener\CoreInstallerListener" class="Zikula\Bundle\HookBundle\Listener\CoreInstallerListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Zikula\Bundle\HookBundle\HookBundleInstaller"/>
    </service>
    <service id="Zikula\Bundle\HookBundle\Listener\HookListenerBuilderListener" class="Zikula\Bundle\HookBundle\Listener\HookListenerBuilderListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookRuntimeRepository"/>
      <argument>false</argument>
    </service>
    <service id="Zikula\Bundle\HookBundle\Listener\HooksListener" class="Zikula\Bundle\HookBundle\Listener\HooksListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\Bundle\HookBundle\Collector\HookCollector"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\Bundle\HookBundle\Listener\ModuleUninstallListener" class="Zikula\Bundle\HookBundle\Listener\ModuleUninstallListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookBindingRepository"/>
      <argument type="service" id="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookRuntimeRepository"/>
    </service>
    <service id="Zikula\Bundle\HookBundle\Twig\Extension\HookExtension" class="Zikula\Bundle\HookBundle\Twig\Extension\HookExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Zikula\Bundle\HookBundle\Dispatcher\HookDispatcher"/>
    </service>
    <service id="Zikula\Bundle\HookBundle\ZikulaHookBundle" class="Zikula\Bundle\HookBundle\ZikulaHookBundle" public="false" autowire="true" autoconfigure="true"/>
    <service id="jms_i18n_routing.locale_resolver.default" class="JMS\I18nRoutingBundle\Router\DefaultLocaleResolver" public="false">
      <argument>hl</argument>
    </service>
    <service id="jms_i18n_routing.router" class="JMS\I18nRoutingBundle\Router\I18nRouter" public="false">
      <argument type="service" id="service_container"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">/home/runner/work/core/core/var/cache/prod</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">null</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <argument>en</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setLocaleResolver">
        <argument type="service" id="jms_i18n_routing.locale_resolver.default"/>
      </call>
      <call method="setI18nLoaderId">
        <argument>jms_i18n_routing.loader</argument>
      </call>
      <call method="setDefaultLocale">
        <argument>en</argument>
      </call>
      <call method="setRedirectToHost">
        <argument>true</argument>
      </call>
    </service>
    <service id="jms_i18n_routing.locale_choosing_listener" class="JMS\I18nRoutingBundle\EventListener\LocaleChoosingListener" public="false">
      <argument>en</argument>
      <argument>%jms_i18n_routing.locales%</argument>
      <argument type="service" id="jms_i18n_routing.locale_resolver.default"/>
    </service>
    <service id="jms_i18n_routing.cookie_setting_listener" class="JMS\I18nRoutingBundle\EventListener\CookieSettingListener" public="false"/>
    <service id="jms_i18n_routing.route_exclusion_strategy" class="Zikula\RoutesModule\Translation\DefaultRouteExclusionStrategy" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\RoutesModule\Helper\ExtractTranslationHelper"/>
    </service>
    <service id="jms_i18n_routing.pattern_generation_strategy.default" class="Zikula\RoutesModule\Translation\ZikulaPatternGenerationStrategy" public="false">
      <argument>prefix_except_default</argument>
      <argument type="service" id="translator.default"/>
      <argument>%jms_i18n_routing.locales%</argument>
      <argument>/home/runner/work/core/core/var/cache/prod</argument>
      <argument>routes</argument>
      <argument>en</argument>
    </service>
    <service id="jms_i18n_routing.loader" class="JMS\I18nRoutingBundle\Router\I18nLoader" public="true">
      <argument type="service" id="jms_i18n_routing.route_exclusion_strategy"/>
      <argument type="service" id="jms_i18n_routing.pattern_generation_strategy.default"/>
    </service>
    <service id="fos_js_routing.extractor" class="FOS\JsRoutingBundle\Extractor\ExposedRoutesExtractor" public="true">
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="collection"/>
      <argument>/home/runner/work/core/core/var/cache/prod</argument>
      <argument>%kernel.bundles%</argument>
    </service>
    <service id="fos_js_routing.dump_command" class="FOS\JsRoutingBundle\Command\DumpCommand">
      <tag name="console.command"/>
      <argument type="service" id="fos_js_routing.extractor"/>
      <argument type="service" id="fos_js_routing.serializer"/>
      <argument>/home/runner/work/core/core</argument>
      <argument>null</argument>
      <call method="setName">
        <argument>fos:js-routing:dump</argument>
      </call>
    </service>
    <service id="fos_js_routing.router_debug_exposed_command" class="FOS\JsRoutingBundle\Command\RouterDebugExposedCommand">
      <tag name="console.command"/>
      <argument type="service" id="fos_js_routing.extractor"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <call method="setName">
        <argument>fos:js-routing:debug</argument>
      </call>
    </service>
    <service id="fos_js_routing.controller" class="FOS\JsRoutingBundle\Controller\Controller" public="true">
      <argument type="service" id="fos_js_routing.serializer"/>
      <argument type="service" id="fos_js_routing.extractor"/>
      <argument>%fos_js_routing.cache_control%</argument>
      <argument>true</argument>
    </service>
    <service id="fos_js_routing.serializer" class="Symfony\Component\Serializer\Serializer" public="true">
      <argument type="collection">
        <argument type="service" id="fos_js_routing.normalizer.route_collection"/>
        <argument type="service" id="fos_js_routing.normalizer.routes_response"/>
        <argument type="service" id="fos_js_routing.denormalizer.route_collection"/>
      </argument>
      <argument type="collection">
        <argument key="json" type="service" id="fos_js_routing.encoder"/>
      </argument>
    </service>
    <service id="fos_js_routing.normalizer.route_collection" class="FOS\JsRoutingBundle\Serializer\Normalizer\RouteCollectionNormalizer" public="false"/>
    <service id="fos_js_routing.normalizer.routes_response" class="FOS\JsRoutingBundle\Serializer\Normalizer\RoutesResponseNormalizer" public="false"/>
    <service id="fos_js_routing.denormalizer.route_collection" class="FOS\JsRoutingBundle\Serializer\Denormalizer\RouteCollectionDenormalizer" public="false"/>
    <service id="fos_js_routing.encoder" class="Symfony\Component\Serializer\Encoder\JsonEncoder" public="false"/>
    <service id="matthias_symfony_console_form.form_helper" class="Matthias\SymfonyConsoleForm\Console\Helper\FormHelper" public="false">
      <tag name="console_helper"/>
      <argument type="service" id="matthias_symfony_console_form.console_form_factory"/>
      <argument type="service" id="matthias_symfony_console_form.delegating_interactor"/>
    </service>
    <service id="matthias_symfony_console_form.input_definition_factory" class="Matthias\SymfonyConsoleForm\Console\Input\CachedInputDefinitionFactory" public="false">
      <argument type="service" id="matthias_symfony_console_form.real_input_definition_factory"/>
      <argument>/home/runner/work/core/core/var/cache/prod/matthias_symfony_console_form</argument>
      <argument>true</argument>
    </service>
    <service id="matthias_symfony_console_form.real_input_definition_factory" class="Matthias\SymfonyConsoleForm\Console\Input\FormBasedInputDefinitionFactory" public="false">
      <argument type="service" id="form.factory"/>
    </service>
    <service id="matthias_symfony_console_form.abstract_transformer" abstract="true">
      <argument type="service" id="translator.default"/>
    </service>
    <service id="matthias_symfony_console_form.text_transformer" class="Matthias\SymfonyConsoleForm\Bridge\Transformer\TextTransformer" public="false">
      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\TextType"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="matthias_symfony_console_form.number_transformer" class="Matthias\SymfonyConsoleForm\Bridge\Transformer\NumberTransformer" public="false">
      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\NumberType"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="matthias_symfony_console_form.date_time_transformer" class="Matthias\SymfonyConsoleForm\Bridge\Transformer\DateTimeTransformer" public="false">
      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\TimeType"/>
      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\DateType"/>
      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\DateTimeType"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="matthias_symfony_console_form.password_transformer" class="Matthias\SymfonyConsoleForm\Bridge\Transformer\PasswordTransformer" public="false">
      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\PasswordType"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="matthias_symfony_console_form.choice_transformer" class="Matthias\SymfonyConsoleForm\Bridge\Transformer\ChoiceTransformer" public="false">
      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\ChoiceType"/>
      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\CountryType"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="matthias_symfony_console_form.checkbox_transformer" class="Matthias\SymfonyConsoleForm\Bridge\Transformer\CheckboxTransformer" public="false">
      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\CheckboxType"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="matthias_symfony_console_form.delegating_interactor" class="Matthias\SymfonyConsoleForm\Bridge\Interaction\DelegatingInteractor" public="false">
      <call method="addInteractor">
        <argument type="service" id="matthias_symfony_console_form.field_with_no_interaction_interactor"/>
      </call>
      <call method="addInteractor">
        <argument type="service" id="matthias_symfony_console_form.non_interactive_root_interactor"/>
      </call>
      <call method="addInteractor">
        <argument type="service" id="matthias_symfony_console_form.collection_interactor"/>
      </call>
      <call method="addInteractor">
        <argument type="service" id="matthias_symfony_console_form.compound_interactor"/>
      </call>
      <call method="addInteractor">
        <argument type="service" id="matthias_symfony_console_form.field_interactor"/>
      </call>
    </service>
    <service id="matthias_symfony_console_form.compound_interactor" class="Matthias\SymfonyConsoleForm\Bridge\Interaction\CompoundInteractor" public="false">
      <argument type="service" id="matthias_symfony_console_form.delegating_interactor"/>
    </service>
    <service id="matthias_symfony_console_form.field_with_no_interaction_interactor" class="Matthias\SymfonyConsoleForm\Bridge\Interaction\FieldWithNoInteractionInteractor" public="false"/>
    <service id="matthias_symfony_console_form.non_interactive_root_interactor" class="Matthias\SymfonyConsoleForm\Bridge\Interaction\NonInteractiveRootInteractor" public="false">
      <argument type="service" id="matthias_symfony_console_form.delegating_interactor"/>
    </service>
    <service id="matthias_symfony_console_form.collection_interactor" class="Matthias\SymfonyConsoleForm\Bridge\Interaction\CollectionInteractor" public="false">
      <argument type="service" id="matthias_symfony_console_form.delegating_interactor"/>
    </service>
    <service id="matthias_symfony_console_form.field_interactor" class="Matthias\SymfonyConsoleForm\Bridge\Interaction\FieldInteractor" public="false">
      <argument type="service" id="matthias_symfony_console.transformer_resolver"/>
    </service>
    <service id="matthias_symfony_console.transformer_resolver" class="Matthias\SymfonyConsoleForm\Bridge\Transformer\TypeAncestryBasedTransformerResolver" public="false">
      <call method="addTransformer">
        <argument>Symfony\Component\Form\Extension\Core\Type\TextType</argument>
        <argument type="service" id="matthias_symfony_console_form.text_transformer"/>
      </call>
      <call method="addTransformer">
        <argument>Symfony\Component\Form\Extension\Core\Type\NumberType</argument>
        <argument type="service" id="matthias_symfony_console_form.number_transformer"/>
      </call>
      <call method="addTransformer">
        <argument>Symfony\Component\Form\Extension\Core\Type\TimeType</argument>
        <argument type="service" id="matthias_symfony_console_form.date_time_transformer"/>
      </call>
      <call method="addTransformer">
        <argument>Symfony\Component\Form\Extension\Core\Type\DateType</argument>
        <argument type="service" id="matthias_symfony_console_form.date_time_transformer"/>
      </call>
      <call method="addTransformer">
        <argument>Symfony\Component\Form\Extension\Core\Type\DateTimeType</argument>
        <argument type="service" id="matthias_symfony_console_form.date_time_transformer"/>
      </call>
      <call method="addTransformer">
        <argument>Symfony\Component\Form\Extension\Core\Type\PasswordType</argument>
        <argument type="service" id="matthias_symfony_console_form.password_transformer"/>
      </call>
      <call method="addTransformer">
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument type="service" id="matthias_symfony_console_form.choice_transformer"/>
      </call>
      <call method="addTransformer">
        <argument>Symfony\Component\Form\Extension\Core\Type\CountryType</argument>
        <argument type="service" id="matthias_symfony_console_form.choice_transformer"/>
      </call>
      <call method="addTransformer">
        <argument>Symfony\Component\Form\Extension\Core\Type\CheckboxType</argument>
        <argument type="service" id="matthias_symfony_console_form.checkbox_transformer"/>
      </call>
    </service>
    <service id="matthias_symfony_console_form.handle_form_based_command_event_listener" class="Matthias\SymfonyConsoleForm\Console\EventListener\HandleFormBasedCommandEventListener" public="true">
      <tag name="kernel.event_listener" event="console.command" method="onConsoleCommand" priority="200"/>
      <argument type="service" id="matthias_symfony_console_form.form_helper"/>
    </service>
    <service id="matthias_symfony_console_form.set_input_definition_of_form_based_command_event_listener" class="Matthias\SymfonyConsoleForm\Console\EventListener\SetInputDefinitionOfFormBasedCommandEventListener" public="true">
      <tag name="kernel.event_listener" event="console.command" method="onConsoleCommand" priority="2000"/>
      <argument type="service" id="matthias_symfony_console_form.input_definition_factory"/>
    </service>
    <service id="matthias_symfony_console_form.console_form_type_extension" class="Matthias\SymfonyConsoleForm\Form\ConsoleFormTypeExtension" public="true">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
    </service>
    <service id="matthias_symfony_console_form.console_form_factory" class="Matthias\SymfonyConsoleForm\Bridge\FormFactory\ConsoleFormWithDefaultValuesAndOptionsFactory" public="false">
      <argument type="service" id="form.factory"/>
      <argument type="service" id="form.registry"/>
    </service>
    <service id="matthias_symfony_console.register_styles_event_listener" class="Matthias\SymfonyConsoleForm\Console\EventListener\RegisterOutputFormatterStylesEventListener" public="true">
      <tag name="kernel.event_listener" event="console.command" method="onConsoleCommand" priority="1000"/>
      <argument type="service" id="matthias_symfony_console.styles_collection"/>
    </service>
    <service id="matthias_symfony_console.styles_collection" class="Matthias\SymfonyConsoleForm\Console\Formatter\StylesCollection" public="false">
      <call method="set">
        <argument>fieldset</argument>
        <argument type="service" id="matthias_symfony_console.fieldset_style"/>
      </call>
      <call method="set">
        <argument>default</argument>
        <argument type="service" id="matthias_symfony_console.default_style"/>
      </call>
      <call method="set">
        <argument>question</argument>
        <argument type="service" id="matthias_symfony_console.question_style"/>
      </call>
    </service>
    <service id="console_style" class="Symfony\Component\Console\Formatter\OutputFormatterStyle" public="false" abstract="true"/>
    <service id="matthias_symfony_console.fieldset_style" class="Symfony\Component\Console\Formatter\OutputFormatterStyle" public="false">
      <tag name="console_style" style="fieldset"/>
      <argument>yellow</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>bold</argument>
      </argument>
    </service>
    <service id="matthias_symfony_console.default_style" class="Symfony\Component\Console\Formatter\OutputFormatterStyle" public="false">
      <tag name="console_style" style="default"/>
      <argument>green</argument>
    </service>
    <service id="matthias_symfony_console.question_style" class="Symfony\Component\Console\Formatter\OutputFormatterStyle" public="false">
      <tag name="console_style" style="question"/>
      <argument>black</argument>
      <argument>cyan</argument>
    </service>
    <service id="matthias_symfony_console_form.register_helpers_event_listener" class="Matthias\SymfonyConsoleForm\Console\EventListener\RegisterHelpersEventListener" public="true">
      <tag name="kernel.event_listener" event="console.command" method="onConsoleCommand" priority="1000"/>
      <argument type="service" id="matthias_symfony_console_form.helper_collection"/>
    </service>
    <service id="matthias_symfony_console_form.helper_collection" class="Matthias\SymfonyConsoleForm\Console\Helper\HelperCollection" public="false">
      <call method="set">
        <argument type="service" id="matthias_symfony_console_form.form_helper"/>
      </call>
    </service>
    <service id="knp_menu.factory" class="Knp\Menu\MenuFactory" public="true">
      <call method="addExtension">
        <argument type="service" id="knp_menu.factory_extension.routing"/>
        <argument>0</argument>
      </call>
    </service>
    <service id="knp_menu.factory_extension.routing" class="Knp\Menu\Integration\Symfony\RoutingExtension" public="false">
      <tag name="knp_menu.factory_extension"/>
      <argument type="service" id="jms_i18n_routing.router"/>
    </service>
    <service id="knp_menu.helper" class="Knp\Menu\Twig\Helper" public="false">
      <argument type="service" id="knp_menu.renderer_provider"/>
      <argument type="service" id="knp_menu.menu_provider.chain"/>
      <argument type="service" id="knp_menu.manipulator"/>
      <argument type="service" id="knp_menu.matcher"/>
    </service>
    <service id="knp_menu.matcher" class="Knp\Menu\Matcher\Matcher" public="true">
      <argument type="iterator">
        <argument type="service" id="knp_menu.voter.router"/>
        <argument type="service" id="Zikula\MenuModule\Voter\RequestVoter"/>
      </argument>
    </service>
    <service id="knp_menu.menu_provider.chain" class="Knp\Menu\Provider\ChainProvider" public="false">
      <argument type="iterator">
        <argument type="service" id="knp_menu.menu_provider.lazy"/>
        <argument type="service" id="knp_menu.menu_provider.builder_alias"/>
        <argument type="service" id="Zikula\MenuModule\Provider\DoctrineTreeProvider"/>
      </argument>
    </service>
    <service id="knp_menu.menu_provider.lazy" class="Knp\Menu\Provider\LazyProvider" public="false">
      <tag name="knp_menu.provider"/>
      <argument type="collection">
        <argument key="zikulaExtensionsAdminMenu" type="collection">
          <argument type="service" id="Zikula\ExtensionsModule\Menu\MenuBuilder"/>
          <argument>createAdminMenu</argument>
        </argument>
        <argument key="zikulaGroupsAdminMenu" type="collection">
          <argument type="service" id="Zikula\GroupsModule\Menu\MenuBuilder"/>
          <argument>createAdminMenu</argument>
        </argument>
        <argument key="zikulaGroupsUserMenu" type="collection">
          <argument type="service" id="Zikula\GroupsModule\Menu\MenuBuilder"/>
          <argument>createUserMenu</argument>
        </argument>
        <argument key="zikulaMenuAdminMenu" type="collection">
          <argument type="service" id="Zikula\MenuModule\Menu\MenuBuilder"/>
          <argument>createAdminMenu</argument>
        </argument>
        <argument key="zikulaMenuAdminActionsMenu" type="collection">
          <argument type="service" id="Zikula\MenuModule\Menu\MenuBuilder"/>
          <argument>createAdminActionsMenu</argument>
        </argument>
        <argument key="zikulaPermissionsAdminActionsMenu" type="collection">
          <argument type="service" id="Zikula\PermissionsModule\Menu\MenuBuilder"/>
          <argument>createAdminActionsMenu</argument>
        </argument>
        <argument key="zikulaRoutesMenuItemActions" type="collection">
          <argument type="service" id="Zikula\RoutesModule\Menu\MenuBuilder"/>
          <argument>createItemActionsMenu</argument>
        </argument>
        <argument key="zikulaRoutesMenuViewActions" type="collection">
          <argument type="service" id="Zikula\RoutesModule\Menu\MenuBuilder"/>
          <argument>createViewActionsMenu</argument>
        </argument>
      </argument>
    </service>
    <service id="knp_menu.menu_provider.builder_alias" class="Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider" public="false">
      <tag name="knp_menu.provider"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="knp_menu.renderer_provider" class="Knp\Menu\Renderer\PsrProvider">
      <argument type="service" id=".service_locator.lHZYdJL"/>
      <argument>twig</argument>
      <argument type="collection"/>
      <argument>false</argument>
    </service>
    <service id="knp_menu.renderer.list" class="Knp\Menu\Renderer\ListRenderer">
      <tag name="knp_menu.renderer" alias="list"/>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
      <argument>UTF-8</argument>
    </service>
    <service id="knp_menu.voter.router" class="Knp\Menu\Matcher\Voter\RouteVoter">
      <tag name="knp_menu.voter"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="knp_menu.manipulator" class="Knp\Menu\Util\MenuManipulator" public="false"/>
    <service id="knp_menu.twig.extension" class="Knp\Menu\Twig\MenuExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="knp_menu.helper"/>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="service" id="knp_menu.manipulator"/>
    </service>
    <service id="knp_menu.renderer.twig" class="Knp\Menu\Renderer\TwigRenderer">
      <tag name="knp_menu.renderer" alias="twig"/>
      <argument type="service" id="twig"/>
      <argument>@KnpMenu/menu.html.twig</argument>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
    </service>
    <service id="liip_imagine.mime_types" class="Symfony\Component\Mime\MimeTypes">
      <factory class="Symfony\Component\Mime\MimeTypes" method="getDefault"/>
    </service>
    <service id="liip_imagine.cache.resolver.default" class="Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver" public="true">
      <tag name="liip_imagine.cache.resolver" resolver="default"/>
      <argument type="service" id="filesystem"/>
      <argument type="service" id="router.request_context"/>
      <argument>/home/runner/work/core/core/public</argument>
      <argument>media/cache</argument>
    </service>
    <service id="liip_imagine.binary.loader.zikula_root" class="Liip\ImagineBundle\Binary\Loader\FileSystemLoader" public="true">
      <tag name="liip_imagine.binary.loader" loader="zikula_root"/>
      <argument type="service">
        <service class="Symfony\Component\Mime\MimeTypes">
          <factory class="Symfony\Component\Mime\MimeTypes" method="getDefault"/>
        </service>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Mime\MimeTypes">
          <factory class="Symfony\Component\Mime\MimeTypes" method="getDefault"/>
        </service>
      </argument>
      <argument type="service">
        <service class="Liip\ImagineBundle\Binary\Locator\FileSystemLocator" public="false">
          <argument type="collection">
            <argument>/home/runner/work/core/core/public</argument>
          </argument>
          <argument>false</argument>
        </service>
      </argument>
    </service>
    <service id="liip_imagine.binary.loader.default" class="Liip\ImagineBundle\Binary\Loader\FileSystemLoader" public="true">
      <tag name="liip_imagine.binary.loader" loader="default"/>
      <argument type="service">
        <service class="Symfony\Component\Mime\MimeTypes">
          <factory class="Symfony\Component\Mime\MimeTypes" method="getDefault"/>
        </service>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Mime\MimeTypes">
          <factory class="Symfony\Component\Mime\MimeTypes" method="getDefault"/>
        </service>
      </argument>
      <argument type="service">
        <service class="Liip\ImagineBundle\Binary\Locator\FileSystemLocator" public="false">
          <argument type="collection">
            <argument>/home/runner/work/core/core/public</argument>
          </argument>
          <argument>false</argument>
        </service>
      </argument>
    </service>
    <service id="liip_imagine.factory.config.filter.argument.point" class="Liip\ImagineBundle\Factory\Config\Filter\Argument\PointFactory"/>
    <service id="liip_imagine.factory.config.filter.argument.size" class="Liip\ImagineBundle\Factory\Config\Filter\Argument\SizeFactory"/>
    <service id="liip_imagine.factory.config.stack" class="Liip\ImagineBundle\Factory\Config\StackFactory"/>
    <service id="liip_imagine.factory.config.filter.auto_rotate" class="Liip\ImagineBundle\Factory\Config\Filter\AutoRotateFactory"/>
    <service id="liip_imagine.factory.config.filter.background" class="Liip\ImagineBundle\Factory\Config\Filter\BackgroundFactory">
      <argument type="service" id="liip_imagine.factory.config.filter.argument.size"/>
    </service>
    <service id="liip_imagine.factory.config.filter.crop" class="Liip\ImagineBundle\Factory\Config\Filter\CropFactory">
      <argument type="service" id="liip_imagine.factory.config.filter.argument.size"/>
      <argument type="service" id="liip_imagine.factory.config.filter.argument.point"/>
    </service>
    <service id="liip_imagine.factory.config.filter.downscale" class="Liip\ImagineBundle\Factory\Config\Filter\DownscaleFactory">
      <argument type="service" id="liip_imagine.factory.config.filter.argument.size"/>
    </service>
    <service id="liip_imagine.factory.config.filter.flip" class="Liip\ImagineBundle\Factory\Config\Filter\FlipFactory"/>
    <service id="liip_imagine.factory.config.filter.grayscale" class="Liip\ImagineBundle\Factory\Config\Filter\GrayscaleFactory"/>
    <service id="liip_imagine.factory.config.filter.interlace" class="Liip\ImagineBundle\Factory\Config\Filter\InterlaceFactory"/>
    <service id="liip_imagine.factory.config.filter.paste" class="Liip\ImagineBundle\Factory\Config\Filter\PasteFactory">
      <argument type="service" id="liip_imagine.factory.config.filter.argument.point"/>
    </service>
    <service id="liip_imagine.factory.config.filter.relative_resize" class="Liip\ImagineBundle\Factory\Config\Filter\RelativeResizeFactory"/>
    <service id="liip_imagine.factory.config.filter.resize" class="Liip\ImagineBundle\Factory\Config\Filter\ResizeFactory">
      <argument type="service" id="liip_imagine.factory.config.filter.argument.size"/>
    </service>
    <service id="liip_imagine.factory.config.filter.rotate" class="Liip\ImagineBundle\Factory\Config\Filter\RotateFactory"/>
    <service id="liip_imagine.factory.config.filter.scale" class="Liip\ImagineBundle\Factory\Config\Filter\ScaleFactory">
      <argument type="service" id="liip_imagine.factory.config.filter.argument.size"/>
    </service>
    <service id="liip_imagine.factory.config.filter.strip" class="Liip\ImagineBundle\Factory\Config\Filter\StripFactory"/>
    <service id="liip_imagine.factory.config.filter.thumbnail" class="Liip\ImagineBundle\Factory\Config\Filter\ThumbnailFactory">
      <argument type="service" id="liip_imagine.factory.config.filter.argument.size"/>
    </service>
    <service id="liip_imagine.factory.config.filter.upscale" class="Liip\ImagineBundle\Factory\Config\Filter\UpscaleFactory">
      <argument type="service" id="liip_imagine.factory.config.filter.argument.size"/>
    </service>
    <service id="liip_imagine.factory.config.filter.watermark" class="Liip\ImagineBundle\Factory\Config\Filter\WatermarkFactory"/>
    <service id="liip_imagine.config.filter_factory_collection" class="Liip\ImagineBundle\Config\FilterFactoryCollection">
      <argument type="service" id="liip_imagine.factory.config.filter.auto_rotate"/>
      <argument type="service" id="liip_imagine.factory.config.filter.background"/>
      <argument type="service" id="liip_imagine.factory.config.filter.crop"/>
      <argument type="service" id="liip_imagine.factory.config.filter.downscale"/>
      <argument type="service" id="liip_imagine.factory.config.filter.flip"/>
      <argument type="service" id="liip_imagine.factory.config.filter.grayscale"/>
      <argument type="service" id="liip_imagine.factory.config.filter.interlace"/>
      <argument type="service" id="liip_imagine.factory.config.filter.paste"/>
      <argument type="service" id="liip_imagine.factory.config.filter.relative_resize"/>
      <argument type="service" id="liip_imagine.factory.config.filter.resize"/>
      <argument type="service" id="liip_imagine.factory.config.filter.rotate"/>
      <argument type="service" id="liip_imagine.factory.config.filter.scale"/>
      <argument type="service" id="liip_imagine.factory.config.filter.strip"/>
      <argument type="service" id="liip_imagine.factory.config.filter.thumbnail"/>
      <argument type="service" id="liip_imagine.factory.config.filter.upscale"/>
      <argument type="service" id="liip_imagine.factory.config.filter.watermark"/>
    </service>
    <service id="liip_imagine.config.stack_builder" class="Liip\ImagineBundle\Config\StackBuilder">
      <argument type="service" id="liip_imagine.factory.config.stack"/>
      <argument type="service" id="liip_imagine.config.filter_factory_collection"/>
    </service>
    <service id="liip_imagine.config.stack_collection" class="Liip\ImagineBundle\Config\StackCollection" public="true">
      <argument type="service" id="liip_imagine.config.stack_builder"/>
      <argument>%liip_imagine.filter_sets%</argument>
    </service>
    <service id="liip_imagine.filter.manager" class="Liip\ImagineBundle\Imagine\Filter\FilterManager" public="true">
      <argument type="service" id="liip_imagine.filter.configuration"/>
      <argument type="service" id="liip_imagine.gd"/>
      <argument type="service" id="liip_imagine.binary.mime_type_guesser"/>
      <call method="addLoader">
        <argument>relative_resize</argument>
        <argument type="service" id="liip_imagine.filter.loader.relative_resize"/>
      </call>
      <call method="addLoader">
        <argument>resize</argument>
        <argument type="service" id="liip_imagine.filter.loader.resize"/>
      </call>
      <call method="addLoader">
        <argument>thumbnail</argument>
        <argument type="service" id="liip_imagine.filter.loader.thumbnail"/>
      </call>
      <call method="addLoader">
        <argument>crop</argument>
        <argument type="service" id="liip_imagine.filter.loader.crop"/>
      </call>
      <call method="addLoader">
        <argument>grayscale</argument>
        <argument type="service" id="liip_imagine.filter.loader.grayscale"/>
      </call>
      <call method="addLoader">
        <argument>paste_image</argument>
        <argument type="service" id="liip_imagine.filter.loader.paste_image"/>
      </call>
      <call method="addLoader">
        <argument>watermark_image</argument>
        <argument type="service" id="liip_imagine.filter.loader.watermark_image"/>
      </call>
      <call method="addLoader">
        <argument>background</argument>
        <argument type="service" id="liip_imagine.filter.loader.background"/>
      </call>
      <call method="addLoader">
        <argument>strip</argument>
        <argument type="service" id="liip_imagine.filter.loader.strip"/>
      </call>
      <call method="addLoader">
        <argument>scale</argument>
        <argument type="service" id="liip_imagine.filter.loader.scale"/>
      </call>
      <call method="addLoader">
        <argument>upscale</argument>
        <argument type="service" id="liip_imagine.filter.loader.upscale"/>
      </call>
      <call method="addLoader">
        <argument>downscale</argument>
        <argument type="service" id="liip_imagine.filter.loader.downscale"/>
      </call>
      <call method="addLoader">
        <argument>auto_rotate</argument>
        <argument type="service" id="liip_imagine.filter.loader.auto_rotate"/>
      </call>
      <call method="addLoader">
        <argument>rotate</argument>
        <argument type="service" id="liip_imagine.filter.loader.rotate"/>
      </call>
      <call method="addLoader">
        <argument>flip</argument>
        <argument type="service" id="liip_imagine.filter.loader.flip"/>
      </call>
      <call method="addLoader">
        <argument>interlace</argument>
        <argument type="service" id="liip_imagine.filter.loader.interlace"/>
      </call>
      <call method="addLoader">
        <argument>resample</argument>
        <argument type="service" id="liip_imagine.filter.loader.resample"/>
      </call>
      <call method="addLoader">
        <argument>fixed</argument>
        <argument type="service" id="liip_imagine.filter.loader.fixed"/>
      </call>
      <call method="addPostProcessor">
        <argument>jpegoptim</argument>
        <argument type="service" id="liip_imagine.filter.post_processor.jpegoptim"/>
      </call>
      <call method="addPostProcessor">
        <argument>optipng</argument>
        <argument type="service" id="liip_imagine.filter.post_processor.optipng"/>
      </call>
      <call method="addPostProcessor">
        <argument>pngquant</argument>
        <argument type="service" id="liip_imagine.filter.post_processor.pngquant"/>
      </call>
      <call method="addPostProcessor">
        <argument>mozjpeg</argument>
        <argument type="service" id="liip_imagine.filter.post_processor.mozjpeg"/>
      </call>
    </service>
    <service id="liip_imagine.data.manager" class="Liip\ImagineBundle\Imagine\Data\DataManager" public="true">
      <argument type="service" id="liip_imagine.binary.mime_type_guesser"/>
      <argument type="service">
        <service class="Symfony\Component\Mime\MimeTypes">
          <factory class="Symfony\Component\Mime\MimeTypes" method="getDefault"/>
        </service>
      </argument>
      <argument type="service" id="liip_imagine.filter.configuration"/>
      <argument>default</argument>
      <argument>null</argument>
      <call method="addLoader">
        <argument>zikula_root</argument>
        <argument type="service" id="liip_imagine.binary.loader.zikula_root"/>
      </call>
      <call method="addLoader">
        <argument>default</argument>
        <argument type="service" id="liip_imagine.binary.loader.default"/>
      </call>
    </service>
    <service id="liip_imagine.cache.manager" class="Liip\ImagineBundle\Imagine\Cache\CacheManager" public="true">
      <argument type="service" id="liip_imagine.filter.configuration"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="liip_imagine.cache.signer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>default</argument>
      <call method="addResolver">
        <argument>default</argument>
        <argument type="service" id="liip_imagine.cache.resolver.default"/>
      </call>
      <call method="addResolver">
        <argument>no_cache</argument>
        <argument type="service" id="liip_imagine.cache.resolver.no_cache_web_path"/>
      </call>
    </service>
    <service id="liip_imagine.filter.configuration" class="Liip\ImagineBundle\Imagine\Filter\FilterConfiguration">
      <argument>%liip_imagine.filter_sets%</argument>
    </service>
    <service id="liip_imagine.service.filter" class="Liip\ImagineBundle\Service\FilterService">
      <argument type="service" id="liip_imagine.data.manager"/>
      <argument type="service" id="liip_imagine.filter.manager"/>
      <argument type="service" id="liip_imagine.cache.manager"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
    </service>
    <service id="liip_imagine.controller.config" class="Liip\ImagineBundle\Config\Controller\ControllerConfig" public="false">
      <argument>301</argument>
    </service>
    <service id="Liip\ImagineBundle\Controller\ImagineController" class="Liip\ImagineBundle\Controller\ImagineController" public="true">
      <argument type="service" id="liip_imagine.service.filter"/>
      <argument type="service" id="liip_imagine.data.manager"/>
      <argument type="service" id="liip_imagine.cache.signer"/>
      <argument type="service" id="liip_imagine.controller.config"/>
    </service>
    <service id="liip_imagine.meta_data.reader" class="Imagine\Image\Metadata\ExifMetadataReader" public="false"/>
    <service id="liip_imagine.gd" class="Imagine\Gd\Imagine" public="false">
      <call method="setMetadataReader">
        <argument type="service" id="liip_imagine.meta_data.reader"/>
      </call>
    </service>
    <service id="liip_imagine.imagick" class="Imagine\Imagick\Imagine" public="false">
      <call method="setMetadataReader">
        <argument type="service" id="liip_imagine.meta_data.reader"/>
      </call>
    </service>
    <service id="liip_imagine.gmagick" class="Imagine\Gmagick\Imagine" public="false">
      <call method="setMetadataReader">
        <argument type="service" id="liip_imagine.meta_data.reader"/>
      </call>
    </service>
    <service id="liip_imagine.templating.filter_extension" class="Liip\ImagineBundle\Templating\FilterExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="liip_imagine.cache.manager"/>
    </service>
    <service id="liip_imagine.filter.loader.relative_resize" class="Liip\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="relative_resize"/>
    </service>
    <service id="liip_imagine.filter.loader.resize" class="Liip\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="resize"/>
    </service>
    <service id="liip_imagine.filter.loader.thumbnail" class="Liip\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="thumbnail"/>
    </service>
    <service id="liip_imagine.filter.loader.crop" class="Liip\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="crop"/>
    </service>
    <service id="liip_imagine.filter.loader.grayscale" class="Liip\ImagineBundle\Imagine\Filter\Loader\GrayscaleFilterLoader" public="true">
      <tag name="liip_imagine.filter.loader" loader="grayscale"/>
    </service>
    <service id="liip_imagine.filter.loader.paste_image" class="Liip\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="paste_image"/>
      <argument type="service" id="liip_imagine.gd"/>
      <argument>/home/runner/work/core/core</argument>
    </service>
    <service id="liip_imagine.filter.loader.watermark_image" class="Liip\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="watermark_image"/>
      <argument type="service" id="liip_imagine.gd"/>
      <argument>/home/runner/work/core/core</argument>
    </service>
    <service id="liip_imagine.filter.loader.background" class="Liip\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="background"/>
      <argument type="service" id="liip_imagine.gd"/>
    </service>
    <service id="liip_imagine.filter.loader.strip" class="Liip\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="strip"/>
    </service>
    <service id="liip_imagine.filter.loader.scale" class="Liip\ImagineBundle\Imagine\Filter\Loader\ScaleFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="scale"/>
    </service>
    <service id="liip_imagine.filter.loader.upscale" class="Liip\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="upscale"/>
    </service>
    <service id="liip_imagine.filter.loader.downscale" class="Liip\ImagineBundle\Imagine\Filter\Loader\DownscaleFilterLoader" public="true">
      <tag name="liip_imagine.filter.loader" loader="downscale"/>
    </service>
    <service id="liip_imagine.filter.loader.auto_rotate" class="Liip\ImagineBundle\Imagine\Filter\Loader\AutoRotateFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="auto_rotate"/>
    </service>
    <service id="liip_imagine.filter.loader.rotate" class="Liip\ImagineBundle\Imagine\Filter\Loader\RotateFilterLoader" public="true">
      <tag name="liip_imagine.filter.loader" loader="rotate"/>
    </service>
    <service id="liip_imagine.filter.loader.flip" class="Liip\ImagineBundle\Imagine\Filter\Loader\FlipFilterLoader" public="true">
      <tag name="liip_imagine.filter.loader" loader="flip"/>
    </service>
    <service id="liip_imagine.filter.loader.interlace" class="Liip\ImagineBundle\Imagine\Filter\Loader\InterlaceFilterLoader" public="true">
      <tag name="liip_imagine.filter.loader" loader="interlace"/>
    </service>
    <service id="liip_imagine.filter.loader.resample" class="Liip\ImagineBundle\Imagine\Filter\Loader\ResampleFilterLoader" public="true">
      <tag name="liip_imagine.filter.loader" loader="resample"/>
      <argument type="service" id="liip_imagine.gd"/>
    </service>
    <service id="liip_imagine.filter.loader.fixed" class="Liip\ImagineBundle\Imagine\Filter\Loader\FixedFilterLoader" public="true">
      <tag name="liip_imagine.filter.loader" loader="fixed"/>
    </service>
    <service id="liip_imagine.binary.loader.prototype.filesystem" class="Liip\ImagineBundle\Binary\Loader\FileSystemLoader">
      <argument type="service" id="liip_imagine.mime_type_guesser"/>
      <argument type="service" id="liip_imagine.extension_guesser"/>
      <argument></argument>
    </service>
    <service id="liip_imagine.binary.loader.prototype.stream" class="Liip\ImagineBundle\Binary\Loader\StreamLoader">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.binary.loader.prototype.flysystem" class="Liip\ImagineBundle\Binary\Loader\FlysystemLoader" abstract="true">
      <argument type="service" id="liip_imagine.extension_guesser"/>
      <argument></argument>
    </service>
    <service id="liip_imagine.binary.loader.prototype.chain" class="Liip\ImagineBundle\Binary\Loader\ChainLoader" abstract="true">
      <argument></argument>
    </service>
    <service id="liip_imagine.binary.locator.filesystem" class="Liip\ImagineBundle\Binary\Locator\FileSystemLocator" shared="false" public="false">
      <tag name="liip_imagine.binary.locator" shared=""/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.binary.locator.filesystem_insecure" class="Liip\ImagineBundle\Binary\Locator\FileSystemInsecureLocator" shared="false" public="false">
      <tag name="liip_imagine.binary.locator" shared=""/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.prototype.web_path" class="Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver" public="true" abstract="true">
      <argument type="service" id="filesystem"/>
      <argument type="service" id="router.request_context"/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.prototype.aws_s3" class="Liip\ImagineBundle\Imagine\Cache\Resolver\AwsS3Resolver" public="true" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.prototype.cache" class="Liip\ImagineBundle\Imagine\Cache\Resolver\CacheResolver" public="true" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.prototype.flysystem" class="Liip\ImagineBundle\Imagine\Cache\Resolver\FlysystemResolver" public="true" abstract="true">
      <argument></argument>
      <argument type="service" id="router.request_context"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.prototype.proxy" class="Liip\ImagineBundle\Imagine\Cache\Resolver\ProxyResolver" public="true" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.no_cache_web_path" class="Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheWebPathResolver" public="true">
      <tag name="liip_imagine.cache.resolver" resolver="no_cache"/>
      <argument type="service" id="router.request_context"/>
    </service>
    <service id="liip_imagine.form.type.image" class="Liip\ImagineBundle\Form\Type\ImageType">
      <tag name="form.type" alias="liip_imagine_image"/>
    </service>
    <service id="liip_imagine.mime_type_guesser" class="Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface">
      <factory class="Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesser" method="getInstance"/>
    </service>
    <service id="liip_imagine.extension_guesser" class="Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesserInterface">
      <factory class="Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesser" method="getInstance"/>
    </service>
    <service id="liip_imagine.binary.mime_type_guesser" class="Liip\ImagineBundle\Binary\SimpleMimeTypeGuesser">
      <argument type="service">
        <service class="Symfony\Component\Mime\MimeTypes">
          <factory class="Symfony\Component\Mime\MimeTypes" method="getDefault"/>
        </service>
      </argument>
    </service>
    <service id="liip_imagine.cache.signer" class="Liip\ImagineBundle\Imagine\Cache\Signer" public="true">
      <argument>ThisTokenIsNotSoSecretChangeIt</argument>
    </service>
    <service id="liip_imagine.filter.post_processor.jpegoptim" class="Liip\ImagineBundle\Imagine\Filter\PostProcessor\JpegOptimPostProcessor">
      <tag name="liip_imagine.filter.post_processor" post_processor="jpegoptim"/>
      <argument>/usr/bin/jpegoptim</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="liip_imagine.filter.post_processor.optipng" class="Liip\ImagineBundle\Imagine\Filter\PostProcessor\OptiPngPostProcessor">
      <tag name="liip_imagine.filter.post_processor" post_processor="optipng"/>
      <argument>/usr/bin/optipng</argument>
      <argument>7</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="liip_imagine.filter.post_processor.pngquant" class="Liip\ImagineBundle\Imagine\Filter\PostProcessor\PngquantPostProcessor">
      <tag name="liip_imagine.filter.post_processor" post_processor="pngquant"/>
      <argument>/usr/bin/pngquant</argument>
    </service>
    <service id="liip_imagine.filter.post_processor.mozjpeg" class="Liip\ImagineBundle\Imagine\Filter\PostProcessor\MozJpegPostProcessor">
      <tag name="liip_imagine.filter.post_processor" post_processor="mozjpeg"/>
      <argument>/opt/mozjpeg/bin/cjpeg</argument>
    </service>
    <service id="liip_imagine.command.cache_remove" class="Liip\ImagineBundle\Command\RemoveCacheCommand">
      <tag name="console.command" command="liip:imagine:cache:remove" alias="imagine:del"/>
      <argument type="service" id="liip_imagine.cache.manager"/>
      <argument type="service" id="liip_imagine.filter.manager"/>
      <call method="setName">
        <argument>liip:imagine:cache:remove</argument>
      </call>
    </service>
    <service id="liip_imagine.command.cache_resolve" class="Liip\ImagineBundle\Command\ResolveCacheCommand">
      <tag name="console.command" command="liip:imagine:cache:resolve" alias="imagine:get"/>
      <argument type="service" id="liip_imagine.data.manager"/>
      <argument type="service" id="liip_imagine.cache.manager"/>
      <argument type="service" id="liip_imagine.filter.manager"/>
      <call method="setName">
        <argument>liip:imagine:cache:resolve</argument>
      </call>
    </service>
    <service id="liip_imagine.templating.filter_helper" class="Liip\ImagineBundle\Templating\Helper\FilterHelper">
      <tag name="templating.helper" alias="imagine"/>
      <argument type="service" id="liip_imagine.cache.manager"/>
      <deprecated>The "%service_id%" service is deprecated since LiipImagineBundle 2.2 and will be removed in 3.0.</deprecated>
    </service>
    <service id="Translation\Bundle\Catalogue\CatalogueFetcher" class="Translation\Bundle\Catalogue\CatalogueFetcher" public="true">
      <argument type="service" id="translation.reader"/>
    </service>
    <service id="Translation\Bundle\Catalogue\CatalogueWriter" class="Translation\Bundle\Catalogue\CatalogueWriter" public="true">
      <argument type="service" id="translation.writer"/>
      <argument>en</argument>
    </service>
    <service id="php_translation.storage.abstract" class="Translation\Bundle\Service\StorageService" abstract="true">
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueFetcher"/>
      <argument>null</argument>
    </service>
    <service id="Translation\Bundle\Catalogue\CatalogueManager" class="Translation\Bundle\Catalogue\CatalogueManager" public="true"/>
    <service id="Translation\Extractor\Extractor" class="Translation\Extractor\Extractor">
      <call method="addFileExtractor">
        <argument type="service" id="Translation\Extractor\FileExtractor\PHPFileExtractor"/>
      </call>
      <call method="addFileExtractor">
        <argument type="service" id="Translation\Extractor\FileExtractor\TwigFileExtractor"/>
      </call>
    </service>
    <service id="Translation\Bundle\Service\StorageManager" class="Translation\Bundle\Service\StorageManager" public="true">
      <call method="addStorage">
        <argument>zikula</argument>
        <argument type="service" id="php_translation.storage.zikula"/>
      </call>
      <call method="addStorage">
        <argument>extension</argument>
        <argument type="service" id="php_translation.storage.extension"/>
      </call>
    </service>
    <service id="Translation\Bundle\Service\ConfigurationManager" class="Translation\Bundle\Service\ConfigurationManager" public="true">
      <call method="addConfiguration">
        <argument>zikula</argument>
        <argument type="service" id="php_translation.configuration.zikula"/>
      </call>
      <call method="addConfiguration">
        <argument>extension</argument>
        <argument type="service" id="php_translation.configuration.extension"/>
      </call>
    </service>
    <service id="Translation\Bundle\Service\Importer" class="Translation\Bundle\Service\Importer" public="true">
      <argument type="service" id="Translation\Extractor\Extractor"/>
      <argument type="service" id="twig"/>
      <argument>en</argument>
    </service>
    <service id="Translation\Bundle\Service\CacheClearer" class="Translation\Bundle\Service\CacheClearer" public="true">
      <argument>/home/runner/work/core/core/var/cache/prod</argument>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="filesystem"/>
    </service>
    <service id="php_translation.local_file_storage.abstract" class="Translation\SymfonyStorage\FileStorage" abstract="true">
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="Translation\Bundle\Catalogue\CatalogueCounter" class="Translation\Bundle\Catalogue\CatalogueCounter" public="true"/>
    <service id="Translation\Bundle\Twig\TranslationExtension" class="Translation\Bundle\Twig\TranslationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.default"/>
      <argument>true</argument>
    </service>
    <service id="php_translation.catalogue_fetcher" class="Translation\Bundle\Catalogue\CatalogueFetcher" public="true">
      <argument type="service" id="translation.reader"/>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.catalogue_writer" class="Translation\Bundle\Catalogue\CatalogueWriter" public="true">
      <argument type="service" id="translation.writer"/>
      <argument>en</argument>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.catalogue_manager" class="Translation\Bundle\Catalogue\CatalogueManager" public="true">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor" class="Translation\Extractor\Extractor">
      <call method="addFileExtractor">
        <argument type="service" id="Translation\Extractor\FileExtractor\PHPFileExtractor"/>
      </call>
      <call method="addFileExtractor">
        <argument type="service" id="Translation\Extractor\FileExtractor\TwigFileExtractor"/>
      </call>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.storage_manager" class="Translation\Bundle\Service\StorageManager" public="true">
      <call method="addStorage">
        <argument>zikula</argument>
        <argument type="service" id="php_translation.storage.zikula"/>
      </call>
      <call method="addStorage">
        <argument>extension</argument>
        <argument type="service" id="php_translation.storage.extension"/>
      </call>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.configuration_manager" class="Translation\Bundle\Service\ConfigurationManager" public="true">
      <call method="addConfiguration">
        <argument>zikula</argument>
        <argument type="service" id="php_translation.configuration.zikula"/>
      </call>
      <call method="addConfiguration">
        <argument>extension</argument>
        <argument type="service" id="php_translation.configuration.extension"/>
      </call>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.importer" class="Translation\Bundle\Service\Importer" public="true">
      <argument type="service" id="Translation\Extractor\Extractor"/>
      <argument type="service" id="twig"/>
      <argument>en</argument>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.cache_clearer" class="Translation\Bundle\Service\CacheClearer" public="true">
      <argument>/home/runner/work/core/core/var/cache/prod</argument>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="filesystem"/>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.catalogue_counter" class="Translation\Bundle\Catalogue\CatalogueCounter" public="true">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.twig_extension" class="Translation\Bundle\Twig\TranslationExtension">
      <argument type="service" id="translator.default"/>
      <argument>true</argument>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="Translation\Extractor\FileExtractor\PHPFileExtractor" class="Translation\Extractor\FileExtractor\PHPFileExtractor">
      <tag name="php_translation.extractor" type="php"/>
      <call method="addVisitor">
        <argument type="service" id="Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Knp\Menu\ItemLabel"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Knp\Menu\LinkTitle"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Routes\ZikulaRouteTranslationExtractor"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Zikula\FormTypeAlert"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Zikula\FormTypeInputGroup"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTrans"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTransChoice"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FlashMessage"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypeChoices"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypeEmptyValue"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypeHelp"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypeInvalidMessage"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelExplicit"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelImplicit"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypePlaceholder"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\ValidationAnnotation"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\SourceLocationContainerVisitor"/>
      </call>
    </service>
    <service id="Translation\Extractor\FileExtractor\TwigFileExtractor" class="Translation\Extractor\FileExtractor\TwigFileExtractor">
      <tag name="php_translation.extractor" type="twig"/>
      <argument type="service" id="twig"/>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Twig\TwigVisitor"/>
      </call>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTrans" class="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTrans">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTransChoice" class="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTransChoice">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\FlashMessage" class="Translation\Extractor\Visitor\Php\Symfony\FlashMessage">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\FormTypeChoices" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeChoices">
      <tag name="php_translation.visitor" type="php"/>
      <call method="setSymfonyMajorVersion">
        <argument>5</argument>
      </call>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\FormTypeEmptyValue" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeEmptyValue">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\FormTypeHelp" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeHelp">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\FormTypeInvalidMessage" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeInvalidMessage">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelExplicit" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelExplicit">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelImplicit" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelImplicit">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\FormTypePlaceholder" class="Translation\Extractor\Visitor\Php\Symfony\FormTypePlaceholder">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\Symfony\ValidationAnnotation" class="Translation\Extractor\Visitor\Php\Symfony\ValidationAnnotation">
      <tag name="php_translation.visitor" type="php"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="Translation\Extractor\Visitor\Php\SourceLocationContainerVisitor" class="Translation\Extractor\Visitor\Php\SourceLocationContainerVisitor">
      <tag name="php_translation.visitor" type="php"/>
    </service>
    <service id="Translation\Extractor\Visitor\Twig\TwigVisitor" class="Translation\Extractor\Visitor\Twig\TwigVisitor">
      <tag name="php_translation.visitor" type="twig"/>
    </service>
    <service id="php_translation.extractor.php" class="Translation\Extractor\FileExtractor\PHPFileExtractor">
      <call method="addVisitor">
        <argument type="service" id="Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Knp\Menu\ItemLabel"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Knp\Menu\LinkTitle"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Routes\ZikulaRouteTranslationExtractor"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Zikula\FormTypeAlert"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Zikula\FormTypeInputGroup"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTrans"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTransChoice"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FlashMessage"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypeChoices"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypeEmptyValue"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypeHelp"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypeInvalidMessage"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelExplicit"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelImplicit"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\FormTypePlaceholder"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\Symfony\ValidationAnnotation"/>
      </call>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Php\SourceLocationContainerVisitor"/>
      </call>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.twig" class="Translation\Extractor\FileExtractor\TwigFileExtractor">
      <argument type="service" id="twig"/>
      <call method="addVisitor">
        <argument type="service" id="Translation\Extractor\Visitor\Twig\TwigVisitor"/>
      </call>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.ContainerAwareTrans" class="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTrans">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.ContainerAwareTransChoice" class="Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTransChoice">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.FlashMessage" class="Translation\Extractor\Visitor\Php\Symfony\FlashMessage">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.FormTypeChoices" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeChoices">
      <call method="setSymfonyMajorVersion">
        <argument>5</argument>
      </call>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.FormTypeEmptyValue" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeEmptyValue">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.FormTypeHelp" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeHelp">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.FormTypeInvalidMessage" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeInvalidMessage">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.FormTypeLabelExplicit" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelExplicit">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.FormTypeLabelImplicit" class="Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelImplicit">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.FormTypePlaceholder" class="Translation\Extractor\Visitor\Php\Symfony\FormTypePlaceholder">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.ValidationAnnotation" class="Translation\Extractor\Visitor\Php\Symfony\ValidationAnnotation">
      <argument type="service" id="validator"/>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.php.visitor.SourceLocationContainerVisitor" class="Translation\Extractor\Visitor\Php\SourceLocationContainerVisitor">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.extractor.twig.factory.twig" class="Translation\Extractor\Visitor\Twig\TwigVisitor">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translation.configuration.zikula" class="Translation\Bundle\Model\Configuration" public="false">
      <argument type="collection">
        <argument key="dirs" type="collection">
          <argument>/home/runner/work/core/core/templates</argument>
          <argument>/home/runner/work/core/core/src/system</argument>
          <argument>/home/runner/work/core/core/src/Zikula</argument>
        </argument>
        <argument key="output_dir">/home/runner/work/core/core/translations</argument>
        <argument key="excluded_names" type="collection">
          <argument>*TestCase.php</argument>
          <argument>*Test.php</argument>
        </argument>
        <argument key="excluded_dirs" type="collection">
          <argument>vendor</argument>
          <argument>cache</argument>
          <argument>data</argument>
          <argument>log</argument>
        </argument>
        <argument key="output_format">yaml</argument>
        <argument key="local_file_storage_options" type="collection">
          <argument key="default_output_format">yaml</argument>
        </argument>
        <argument key="external_translations_dirs" type="collection"/>
        <argument key="blacklist_domains" type="collection"/>
        <argument key="whitelist_domains" type="collection"/>
        <argument key="remote_storage" type="collection"/>
        <argument key="local_storage" type="collection">
          <argument>php_translation.local_file_storage.abstract</argument>
        </argument>
        <argument key="xliff_version" type="string">2.0</argument>
        <argument key="project_root">/home/runner/work/core</argument>
        <argument key="name">zikula</argument>
        <argument key="locales" type="collection">
          <argument>en</argument>
        </argument>
      </argument>
    </service>
    <service id="php_translation.storage.zikula" class="Translation\Bundle\Service\StorageService" public="true">
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueFetcher"/>
      <argument type="service" id="php_translation.configuration.zikula"/>
      <call method="addLocalStorage">
        <argument type="service" id="php_translation.single_storage.file.zikula"/>
      </call>
    </service>
    <service id="php_translation.single_storage.file.zikula" class="Translation\SymfonyStorage\FileStorage">
      <tag name="zikula" type="local"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="collection">
        <argument>/home/runner/work/core/core/translations</argument>
      </argument>
      <argument type="collection">
        <argument key="default_output_format">yaml</argument>
      </argument>
    </service>
    <service id="php_translation.configuration.extension" class="Translation\Bundle\Model\Configuration" public="false">
      <argument type="collection">
        <argument key="excluded_names" type="collection">
          <argument>*TestCase.php</argument>
          <argument>*Test.php</argument>
        </argument>
        <argument key="excluded_dirs" type="collection">
          <argument>vendor</argument>
        </argument>
        <argument key="output_format">yaml</argument>
        <argument key="local_file_storage_options" type="collection">
          <argument key="default_output_format">yaml</argument>
        </argument>
        <argument key="dirs" type="collection"/>
        <argument key="external_translations_dirs" type="collection"/>
        <argument key="blacklist_domains" type="collection"/>
        <argument key="whitelist_domains" type="collection"/>
        <argument key="remote_storage" type="collection"/>
        <argument key="local_storage" type="collection">
          <argument>php_translation.local_file_storage.abstract</argument>
        </argument>
        <argument key="output_dir">/home/runner/work/core/core/Resources/translations</argument>
        <argument key="xliff_version" type="string">2.0</argument>
        <argument key="project_root">/home/runner/work/core</argument>
        <argument key="name">extension</argument>
        <argument key="locales" type="collection">
          <argument>en</argument>
        </argument>
      </argument>
    </service>
    <service id="php_translation.storage.extension" class="Translation\Bundle\Service\StorageService" public="true">
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueFetcher"/>
      <argument type="service" id="php_translation.configuration.extension"/>
      <call method="addLocalStorage">
        <argument type="service" id="php_translation.single_storage.file.extension"/>
      </call>
    </service>
    <service id="php_translation.single_storage.file.extension" class="Translation\SymfonyStorage\FileStorage">
      <tag name="extension" type="local"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="collection">
        <argument>/home/runner/work/core/core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument key="default_output_format">yaml</argument>
      </argument>
    </service>
    <service id="Translation\Bundle\Command\DeleteObsoleteCommand" class="Translation\Bundle\Command\DeleteObsoleteCommand" public="true">
      <tag name="console.command" command="translation:delete-obsolete"/>
      <argument type="service" id="Translation\Bundle\Service\StorageManager"/>
      <argument type="service" id="Translation\Bundle\Service\ConfigurationManager"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueManager"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueFetcher"/>
      <call method="setName">
        <argument>translation:delete-obsolete</argument>
      </call>
    </service>
    <service id="Translation\Bundle\Command\DownloadCommand" class="Translation\Bundle\Command\DownloadCommand" public="true">
      <tag name="console.command" command="translation:download"/>
      <argument type="service" id="Translation\Bundle\Service\StorageManager"/>
      <argument type="service" id="Translation\Bundle\Service\ConfigurationManager"/>
      <argument type="service" id="Translation\Bundle\Service\CacheClearer"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueWriter"/>
      <call method="setName">
        <argument>translation:download</argument>
      </call>
    </service>
    <service id="Translation\Bundle\Command\ExtractCommand" class="Translation\Bundle\Command\ExtractCommand" public="true">
      <tag name="console.command" command="translation:extract"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueFetcher"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueWriter"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueCounter"/>
      <argument type="service" id="Translation\Bundle\Service\Importer"/>
      <argument type="service" id="Translation\Bundle\Service\ConfigurationManager"/>
      <call method="setName">
        <argument>translation:extract</argument>
      </call>
    </service>
    <service id="Translation\Bundle\Command\StatusCommand" class="Translation\Bundle\Command\StatusCommand" public="true">
      <tag name="console.command" command="translation:status"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueCounter"/>
      <argument type="service" id="Translation\Bundle\Service\ConfigurationManager"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueFetcher"/>
      <call method="setName">
        <argument>translation:status</argument>
      </call>
    </service>
    <service id="Translation\Bundle\Command\SyncCommand" class="Translation\Bundle\Command\SyncCommand" public="true">
      <tag name="console.command" command="translation:sync"/>
      <argument type="service" id="Translation\Bundle\Service\StorageManager"/>
      <call method="setName">
        <argument>translation:sync</argument>
      </call>
    </service>
    <service id="php_translator.console.delete_obsolete" class="Translation\Bundle\Command\DeleteObsoleteCommand" public="true">
      <argument type="service" id="Translation\Bundle\Service\StorageManager"/>
      <argument type="service" id="Translation\Bundle\Service\ConfigurationManager"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueManager"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueFetcher"/>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translator.console.download" class="Translation\Bundle\Command\DownloadCommand" public="true">
      <argument type="service" id="Translation\Bundle\Service\StorageManager"/>
      <argument type="service" id="Translation\Bundle\Service\ConfigurationManager"/>
      <argument type="service" id="Translation\Bundle\Service\CacheClearer"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueWriter"/>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translator.console.extract" class="Translation\Bundle\Command\ExtractCommand" public="true">
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueFetcher"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueWriter"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueCounter"/>
      <argument type="service" id="Translation\Bundle\Service\Importer"/>
      <argument type="service" id="Translation\Bundle\Service\ConfigurationManager"/>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translator.console.status" class="Translation\Bundle\Command\StatusCommand" public="true">
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueCounter"/>
      <argument type="service" id="Translation\Bundle\Service\ConfigurationManager"/>
      <argument type="service" id="Translation\Bundle\Catalogue\CatalogueFetcher"/>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="php_translator.console.sync" class="Translation\Bundle\Command\SyncCommand" public="true">
      <argument type="service" id="Translation\Bundle\Service\StorageManager"/>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="bazinga.jstranslation.translation_finder" class="Bazinga\Bundle\JsTranslationBundle\Finder\TranslationFinder" public="true">
      <argument type="collection">
        <argument key="af" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.af.xlf</argument>
        </argument>
        <argument key="ar" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ar.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ar.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ar.xlf</argument>
        </argument>
        <argument key="az" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.az.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.az.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.az.xlf</argument>
        </argument>
        <argument key="be" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.be.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.be.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.be.xlf</argument>
        </argument>
        <argument key="bg" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.bg.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.bg.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.bg.xlf</argument>
        </argument>
        <argument key="ca" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ca.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ca.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ca.xlf</argument>
        </argument>
        <argument key="cs" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cs.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.cs.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.cs.xlf</argument>
        </argument>
        <argument key="cy" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cy.xlf</argument>
        </argument>
        <argument key="da" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.da.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.da.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.da.xlf</argument>
        </argument>
        <argument key="de" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.de.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.de.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.de.xlf</argument>
        </argument>
        <argument key="el" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.el.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.el.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.el.xlf</argument>
        </argument>
        <argument key="en" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.en.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.en.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.en.xlf</argument>
          <argument>/home/runner/work/core/core/translations/mail.en.yaml</argument>
          <argument>/home/runner/work/core/core/translations/messages.en.yaml</argument>
          <argument>/home/runner/work/core/core/translations/routes.en.yaml</argument>
          <argument>/home/runner/work/core/core/translations/security.en.yaml</argument>
          <argument>/home/runner/work/core/core/translations/validators.en.yaml</argument>
        </argument>
        <argument key="es" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.es.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.es.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.es.xlf</argument>
        </argument>
        <argument key="et" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.et.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.et.xlf</argument>
        </argument>
        <argument key="eu" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.eu.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.eu.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.eu.xlf</argument>
        </argument>
        <argument key="fa" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fa.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fa.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fa.xlf</argument>
        </argument>
        <argument key="fi" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fi.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fi.xlf</argument>
        </argument>
        <argument key="fr" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fr.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fr.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fr.xlf</argument>
        </argument>
        <argument key="gl" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.gl.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.gl.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.gl.xlf</argument>
        </argument>
        <argument key="he" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.he.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.he.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.he.xlf</argument>
        </argument>
        <argument key="hr" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hr.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hr.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hr.xlf</argument>
        </argument>
        <argument key="hu" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hu.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hu.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hu.xlf</argument>
        </argument>
        <argument key="hy" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hy.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hy.xlf</argument>
        </argument>
        <argument key="id" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.id.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.id.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.id.xlf</argument>
        </argument>
        <argument key="it" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.it.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.it.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.it.xlf</argument>
        </argument>
        <argument key="ja" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ja.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ja.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ja.xlf</argument>
        </argument>
        <argument key="lb" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lb.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lb.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lb.xlf</argument>
        </argument>
        <argument key="lt" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lt.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lt.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lt.xlf</argument>
        </argument>
        <argument key="lv" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lv.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lv.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lv.xlf</argument>
        </argument>
        <argument key="mn" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.mn.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.mn.xlf</argument>
        </argument>
        <argument key="nb" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nb.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nb.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nb.xlf</argument>
        </argument>
        <argument key="nl" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nl.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nl.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nl.xlf</argument>
        </argument>
        <argument key="nn" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nn.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nn.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nn.xlf</argument>
        </argument>
        <argument key="no" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.no.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.no.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.no.xlf</argument>
        </argument>
        <argument key="pl" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pl.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pl.xlf</argument>
        </argument>
        <argument key="pt" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt.xlf</argument>
        </argument>
        <argument key="pt_BR" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt_BR.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt_BR.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_BR.xlf</argument>
        </argument>
        <argument key="ro" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ro.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ro.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ro.xlf</argument>
        </argument>
        <argument key="ru" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ru.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ru.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ru.xlf</argument>
        </argument>
        <argument key="sk" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sk.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sk.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sk.xlf</argument>
        </argument>
        <argument key="sl" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sl.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sl.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sl.xlf</argument>
        </argument>
        <argument key="sq" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sq.xlf</argument>
        </argument>
        <argument key="sr_Cyrl" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Cyrl.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Cyrl.xlf</argument>
        </argument>
        <argument key="sr_Latn" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Latn.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Latn.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Latn.xlf</argument>
        </argument>
        <argument key="sv" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sv.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sv.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sv.xlf</argument>
        </argument>
        <argument key="th" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.th.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.th.xlf</argument>
        </argument>
        <argument key="tl" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tl.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.tl.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.tl.xlf</argument>
        </argument>
        <argument key="tr" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tr.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.tr.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.tr.xlf</argument>
        </argument>
        <argument key="uk" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.uk.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.uk.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.uk.xlf</argument>
        </argument>
        <argument key="vi" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.vi.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.vi.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.vi.xlf</argument>
        </argument>
        <argument key="zh_CN" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_CN.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.zh_CN.xlf</argument>
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.zh_CN.xlf</argument>
        </argument>
        <argument key="zh_TW" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_TW.xlf</argument>
        </argument>
        <argument key="pt_PT" type="collection">
          <argument>/home/runner/work/core/core/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_PT.xlf</argument>
        </argument>
      </argument>
    </service>
    <service id="bazinga.jstranslation.translation_dumper" class="Bazinga\Bundle\JsTranslationBundle\Dumper\TranslationDumper" public="true">
      <argument type="service" id="twig"/>
      <argument type="service" id="bazinga.jstranslation.translation_finder"/>
      <argument type="service" id="filesystem"/>
      <argument>en</argument>
      <argument>zikula_javascript</argument>
      <argument type="collection">
        <argument>en</argument>
      </argument>
      <argument type="collection"/>
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="bazinga.jstranslation.dump_command" class="Bazinga\Bundle\JsTranslationBundle\Command\DumpCommand" public="true">
      <tag name="console.command" command="bazinga:js-translation:dump"/>
      <argument type="service" id="bazinga.jstranslation.translation_dumper"/>
      <argument>/home/runner/work/core/core</argument>
      <call method="setName">
        <argument>bazinga:js-translation:dump</argument>
      </call>
    </service>
    <service id="bazinga.jstranslation.controller" class="Bazinga\Bundle\JsTranslationBundle\Controller\Controller" public="true">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="bazinga.jstranslation.translation_finder"/>
      <argument>/home/runner/work/core/core/var/cache/prod/bazinga-js-translation</argument>
      <argument>true</argument>
      <argument>en</argument>
      <argument>zikula_javascript</argument>
      <argument type="string">86400</argument>
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="Zikula\Bundle\WorkflowBundle\Controller\EditorController" class="Zikula\Bundle\WorkflowBundle\Controller\EditorController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.pNNo5z3.Zikula\Bundle\WorkflowBundle\Controller\EditorController"/>
      </call>
    </service>
    <service id="Zikula\Bundle\WorkflowBundle\DependencyInjection\ZikulaWorkflowExtension" class="Zikula\Bundle\WorkflowBundle\DependencyInjection\ZikulaWorkflowExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\Bundle\WorkflowBundle\ZikulaWorkflowBundle" class="Zikula\Bundle\WorkflowBundle\ZikulaWorkflowBundle" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\AdminModule\AdminModuleInstaller" class="Zikula\AdminModule\AdminModuleInstaller" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\AdminModule\Block\AdminnavBlock" class="Zikula\AdminModule\Block\AdminnavBlock" shared="false" public="true" autowire="true" autoconfigure="true">
      <tag name="zikula.block_handler"/>
      <argument type="service" id="Zikula\AdminModule\ZikulaAdminModule"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="twig"/>
      <call method="setRouter">
        <argument type="service" id="jms_i18n_routing.router"/>
      </call>
      <call method="setAdminCategoryRepository">
        <argument type="service" id="Zikula\AdminModule\Entity\Repository\AdminCategoryRepository"/>
      </call>
      <call method="setVariableApi">
        <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </call>
      <call method="setCapabilityApi">
        <argument type="service" id="Zikula\ExtensionsModule\Api\CapabilityApi"/>
      </call>
    </service>
    <service id="Zikula\AdminModule\Controller\AdminController" class="Zikula\AdminModule\Controller\AdminController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\AdminModule\ZikulaAdminModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.IQcf4l5.Zikula\AdminModule\Controller\AdminController"/>
      </call>
    </service>
    <service id="Zikula\AdminModule\Controller\AdminInterfaceController" class="Zikula\AdminModule\Controller\AdminInterfaceController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\AdminModule\ZikulaAdminModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.IQcf4l5.Zikula\AdminModule\Controller\AdminInterfaceController"/>
      </call>
    </service>
    <service id="Zikula\AdminModule\Controller\AjaxController" class="Zikula\AdminModule\Controller\AjaxController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\AdminModule\ZikulaAdminModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.IQcf4l5.Zikula\AdminModule\Controller\AjaxController"/>
      </call>
    </service>
    <service id="Zikula\AdminModule\Controller\ConfigController" class="Zikula\AdminModule\Controller\ConfigController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\AdminModule\ZikulaAdminModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.IQcf4l5.Zikula\AdminModule\Controller\ConfigController"/>
      </call>
    </service>
    <service id="Zikula\AdminModule\DependencyInjection\ZikulaAdminExtension" class="Zikula\AdminModule\DependencyInjection\ZikulaAdminExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\AdminModule\Entity\AdminCategoryEntity" class="Zikula\AdminModule\Entity\AdminCategoryEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\AdminModule\Entity\AdminModuleEntity" class="Zikula\AdminModule\Entity\AdminModuleEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\AdminModule\Entity\Repository\AdminCategoryRepository" class="Zikula\AdminModule\Entity\Repository\AdminCategoryRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\AdminModule\Entity\Repository\AdminModuleRepository" class="Zikula\AdminModule\Entity\Repository\AdminModuleRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\AdminModule\Form\Type\AdminCategoryType" class="Zikula\AdminModule\Form\Type\AdminCategoryType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\AdminModule\Form\Type\ConfigType" class="Zikula\AdminModule\Form\Type\ConfigType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\AdminModule\Helper\AdminLinksHelper" class="Zikula\AdminModule\Helper\AdminLinksHelper" public="false" lazy="true" autowire="true" autoconfigure="true"/>
    <service id="Zikula\AdminModule\Helper\AdminModuleHelper" class="Zikula\AdminModule\Helper\AdminModuleHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\AdminModule\Entity\Repository\AdminModuleRepository"/>
    </service>
    <service id="Zikula\AdminModule\Helper\UpdateCheckHelper" class="Zikula\AdminModule\Helper\UpdateCheckHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Zikula\AdminModule\Listener\Core3UpgradeListener" class="Zikula\AdminModule\Listener\Core3UpgradeListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
    </service>
    <service id="Zikula\AdminModule\Listener\ModuleEventListener" class="Zikula\AdminModule\Listener\ModuleEventListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Zikula\AdminModule\Entity\Repository\AdminModuleRepository"/>
      <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument>false</argument>
    </service>
    <service id="Zikula\AdminModule\Menu\ExtensionMenu" class="Zikula\AdminModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.extension_menu"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
    </service>
    <service id="Zikula\AdminModule\Twig\Extension\AdminExtension" class="Zikula\AdminModule\Twig\Extension\AdminExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="fragment.handler"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
    </service>
    <service id="Zikula\AdminModule\Twig\Extension\SimpleFunction\AdminBreadcrumbsFunction" class="Zikula\AdminModule\Twig\Extension\SimpleFunction\AdminBreadcrumbsFunction" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="Zikula\AdminModule\Twig\Extension\SimpleFunction\AdminFooterFunction" class="Zikula\AdminModule\Twig\Extension\SimpleFunction\AdminFooterFunction" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="Zikula\AdminModule\Twig\Extension\SimpleFunction\AdminHeaderFunction" class="Zikula\AdminModule\Twig\Extension\SimpleFunction\AdminHeaderFunction" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="Zikula\AdminModule\Twig\Extension\SimpleFunction\AdminMenuFunction" class="Zikula\AdminModule\Twig\Extension\SimpleFunction\AdminMenuFunction" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="fragment.handler"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
    </service>
    <service id="Zikula\AdminModule\Twig\Extension\SimpleFunction\AdminSecurityAnalyzerFunction" class="Zikula\AdminModule\Twig\Extension\SimpleFunction\AdminSecurityAnalyzerFunction" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="Zikula\AdminModule\Twig\Extension\SimpleFunction\AdminUpdateCheckFunction" class="Zikula\AdminModule\Twig\Extension\SimpleFunction\AdminUpdateCheckFunction" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="Zikula\AdminModule\ZikulaAdminModule" class="Zikula\AdminModule\ZikulaAdminModule" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\BlocksModule\Api\BlockApi" class="Zikula\BlocksModule\Api\BlockApi" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\BlocksModule\Entity\Repository\BlockPositionRepository"/>
      <argument type="service" id="Zikula\BlocksModule\Api\BlockFactoryApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
      <argument type="service" id="Zikula\BlocksModule\Collector\BlockCollector"/>
    </service>
    <service id="Zikula\BlocksModule\Api\BlockFactoryApi" class="Zikula\BlocksModule\Api\BlockFactoryApi" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\BlocksModule\Api\BlockFilterApi" class="Zikula\BlocksModule\Api\BlockFilterApi" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Zikula\BlocksModule\Block\FincludeBlock" class="Zikula\BlocksModule\Block\FincludeBlock" shared="false" public="true" autowire="true" autoconfigure="true">
      <tag name="zikula.block_handler"/>
      <argument type="service" id="Zikula\BlocksModule\ZikulaBlocksModule"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="Zikula\BlocksModule\Block\Form\Type\FincludeBlockType" class="Zikula\BlocksModule\Block\Form\Type\FincludeBlockType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\BlocksModule\Block\Form\Type\HtmlBlockType" class="Zikula\BlocksModule\Block\Form\Type\HtmlBlockType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\BlocksModule\Block\Form\Type\TextBlockType" class="Zikula\BlocksModule\Block\Form\Type\TextBlockType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\BlocksModule\Block\Form\Type\XsltBlockType" class="Zikula\BlocksModule\Block\Form\Type\XsltBlockType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\BlocksModule\Block\HtmlBlock" class="Zikula\BlocksModule\Block\HtmlBlock" shared="false" public="true" autowire="true" autoconfigure="true">
      <tag name="zikula.block_handler"/>
      <argument type="service" id="Zikula\BlocksModule\ZikulaBlocksModule"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="Zikula\BlocksModule\Block\PendingContentBlock" class="Zikula\BlocksModule\Block\PendingContentBlock" shared="false" public="true" autowire="true" autoconfigure="true">
      <tag name="zikula.block_handler"/>
      <argument type="service" id="Zikula\BlocksModule\ZikulaBlocksModule"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="twig"/>
      <call method="setRouter">
        <argument type="service" id="jms_i18n_routing.router"/>
      </call>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="Zikula\BlocksModule\Block\TextBlock" class="Zikula\BlocksModule\Block\TextBlock" shared="false" public="true" autowire="true" autoconfigure="true">
      <tag name="zikula.block_handler"/>
      <argument type="service" id="Zikula\BlocksModule\ZikulaBlocksModule"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="Zikula\BlocksModule\Block\XsltBlock" class="Zikula\BlocksModule\Block\XsltBlock" shared="false" public="true" autowire="true" autoconfigure="true">
      <tag name="zikula.block_handler"/>
      <argument type="service" id="Zikula\BlocksModule\ZikulaBlocksModule"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="Zikula\BlocksModule\BlocksModuleInstaller" class="Zikula\BlocksModule\BlocksModuleInstaller" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\BlocksModule\Collector\BlockCollector" class="Zikula\BlocksModule\Collector\BlockCollector" public="false" autowire="true" autoconfigure="true">
      <argument type="tagged_iterator" tag="zikula.block_handler"/>
    </service>
    <service id="Zikula\BlocksModule\Controller\AdminController" class="Zikula\BlocksModule\Controller\AdminController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\BlocksModule\ZikulaBlocksModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.TfcQtI2.Zikula\BlocksModule\Controller\AdminController"/>
      </call>
    </service>
    <service id="Zikula\BlocksModule\Controller\BlockController" class="Zikula\BlocksModule\Controller\BlockController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\BlocksModule\ZikulaBlocksModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.TfcQtI2.Zikula\BlocksModule\Controller\BlockController"/>
      </call>
    </service>
    <service id="Zikula\BlocksModule\Controller\ConfigController" class="Zikula\BlocksModule\Controller\ConfigController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\BlocksModule\ZikulaBlocksModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.TfcQtI2.Zikula\BlocksModule\Controller\ConfigController"/>
      </call>
    </service>
    <service id="Zikula\BlocksModule\Controller\PlacementController" class="Zikula\BlocksModule\Controller\PlacementController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\BlocksModule\ZikulaBlocksModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.TfcQtI2.Zikula\BlocksModule\Controller\PlacementController"/>
      </call>
    </service>
    <service id="Zikula\BlocksModule\Controller\PositionController" class="Zikula\BlocksModule\Controller\PositionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\BlocksModule\ZikulaBlocksModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.TfcQtI2.Zikula\BlocksModule\Controller\PositionController"/>
      </call>
    </service>
    <service id="Zikula\BlocksModule\DependencyInjection\ZikulaBlocksExtension" class="Zikula\BlocksModule\DependencyInjection\ZikulaBlocksExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\BlocksModule\Entity\BlockEntity" class="Zikula\BlocksModule\Entity\BlockEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\BlocksModule\Entity\BlockPlacementEntity" class="Zikula\BlocksModule\Entity\BlockPlacementEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\BlocksModule\Entity\BlockPositionEntity" class="Zikula\BlocksModule\Entity\BlockPositionEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\BlocksModule\Entity\Repository\BlockPositionRepository" class="Zikula\BlocksModule\Entity\Repository\BlockPositionRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\BlocksModule\Entity\Repository\BlockRepository" class="Zikula\BlocksModule\Entity\Repository\BlockRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\BlocksModule\Form\Type\AdminViewFilterType" class="Zikula\BlocksModule\Form\Type\AdminViewFilterType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\BlocksModule\Form\Type\BlockFilterType" class="Zikula\BlocksModule\Form\Type\BlockFilterType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Zikula\BlocksModule\Api\BlockFilterApi"/>
    </service>
    <service id="Zikula\BlocksModule\Form\Type\BlockPositionType" class="Zikula\BlocksModule\Form\Type\BlockPositionType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\BlocksModule\Form\Type\BlockType" class="Zikula\BlocksModule\Form\Type\BlockType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Zikula\SettingsModule\Api\LocaleApi"/>
    </service>
    <service id="Zikula\BlocksModule\Form\Type\ConfigType" class="Zikula\BlocksModule\Form\Type\ConfigType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\BlocksModule\Form\Type\NewBlockType" class="Zikula\BlocksModule\Form\Type\NewBlockType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Zikula\BlocksModule\Api\BlockApi"/>
    </service>
    <service id="Zikula\BlocksModule\Helper\InstallerHelper" class="Zikula\BlocksModule\Helper\InstallerHelper" public="false" lazy="true" autowire="true" autoconfigure="true"/>
    <service id="Zikula\BlocksModule\HookSubscriber\UiHooksSubscriber" class="Zikula\BlocksModule\HookSubscriber\UiHooksSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.hook_subscriber"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\BlocksModule\Listener\CollapseableBlockListener" class="Zikula\BlocksModule\Listener\CollapseableBlockListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="zikula_core.common.theme.assets_js"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\ThemeModule\Engine\Asset"/>
      <argument>false</argument>
      <argument type="expression">container.hasParameter('upgrading') ? parameter('upgrading') : false</argument>
    </service>
    <service id="Zikula\BlocksModule\Menu\ExtensionMenu" class="Zikula\BlocksModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.extension_menu"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
    </service>
    <service id="Zikula\BlocksModule\Twig\Extension\BlocksExtension" class="Zikula\BlocksModule\Twig\Extension\BlocksExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Zikula\BlocksModule\Api\BlockApi"/>
      <argument type="service" id="Zikula\BlocksModule\Api\BlockFilterApi"/>
      <argument type="service" id="Zikula\ThemeModule\Engine\Engine"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="twig.loader.native_filesystem"/>
    </service>
    <service id="Zikula\BlocksModule\ZikulaBlocksModule" class="Zikula\BlocksModule\ZikulaBlocksModule" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\CategoriesModule\Api\CategoryPermissionApi" class="Zikula\CategoriesModule\Api\CategoryPermissionApi" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
    </service>
    <service id="Zikula\CategoriesModule\Builder\EntitySelectionBuilder" class="Zikula\CategoriesModule\Builder\EntitySelectionBuilder" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="kernel"/>
    </service>
    <service id="Zikula\CategoriesModule\CategoriesModuleInstaller" class="Zikula\CategoriesModule\CategoriesModuleInstaller" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\CategoriesModule\Controller\CategoryController" class="Zikula\CategoriesModule\Controller\CategoryController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\CategoriesModule\ZikulaCategoriesModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.GT5Kcf8.Zikula\CategoriesModule\Controller\CategoryController"/>
      </call>
    </service>
    <service id="Zikula\CategoriesModule\Controller\NodeController" class="Zikula\CategoriesModule\Controller\NodeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\CategoriesModule\ZikulaCategoriesModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.GT5Kcf8.Zikula\CategoriesModule\Controller\NodeController"/>
      </call>
    </service>
    <service id="Zikula\CategoriesModule\Controller\RegistryController" class="Zikula\CategoriesModule\Controller\RegistryController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\CategoriesModule\ZikulaCategoriesModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.GT5Kcf8.Zikula\CategoriesModule\Controller\RegistryController"/>
      </call>
    </service>
    <service id="Zikula\CategoriesModule\DependencyInjection\ZikulaCategoriesExtension" class="Zikula\CategoriesModule\DependencyInjection\ZikulaCategoriesExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\CategoriesModule\Entity\CategoryAttributeEntity" class="Zikula\CategoriesModule\Entity\CategoryAttributeEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\CategoriesModule\Entity\CategoryEntity" class="Zikula\CategoriesModule\Entity\CategoryEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\CategoriesModule\Entity\CategoryRegistryEntity" class="Zikula\CategoriesModule\Entity\CategoryRegistryEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\CategoriesModule\Entity\Repository\CategoryRegistryRepository" class="Zikula\CategoriesModule\Entity\Repository\CategoryRegistryRepository" public="true" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\CategoriesModule\Entity\Repository\CategoryRepository" class="Zikula\CategoriesModule\Entity\Repository\CategoryRepository" public="true" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\CategoriesModule\Form\DataTransformer\CategoriesCollectionTransformer" class="Zikula\CategoriesModule\Form\DataTransformer\CategoriesCollectionTransformer" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\CategoriesModule\Form\DataTransformer\CategoryTreeTransformer" class="Zikula\CategoriesModule\Form\DataTransformer\CategoryTreeTransformer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\CategoriesModule\Entity\Repository\CategoryRepository"/>
    </service>
    <service id="Zikula\CategoriesModule\Form\EventListener\CategoriesMergeCollectionListener" class="Zikula\CategoriesModule\Form\EventListener\CategoriesMergeCollectionListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Zikula\CategoriesModule\Form\Type\CategoriesType" class="Zikula\CategoriesModule\Form\Type\CategoriesType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Zikula\CategoriesModule\Entity\Repository\CategoryRegistryRepository"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Zikula\CategoriesModule\Form\Type\CategoryAttributeType" class="Zikula\CategoriesModule\Form\Type\CategoryAttributeType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\CategoriesModule\Form\Type\CategoryRegistryType" class="Zikula\CategoriesModule\Form\Type\CategoryRegistryType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\CategoriesModule\Builder\EntitySelectionBuilder"/>
    </service>
    <service id="Zikula\CategoriesModule\Form\Type\CategoryTreeType" class="Zikula\CategoriesModule\Form\Type\CategoryTreeType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\CategoriesModule\Entity\Repository\CategoryRepository"/>
    </service>
    <service id="Zikula\CategoriesModule\Form\Type\CategoryType" class="Zikula\CategoriesModule\Form\Type\CategoryType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\CategoriesModule\Helper\CategoryProcessingHelper" class="Zikula\CategoriesModule\Helper\CategoryProcessingHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="Zikula\CategoriesModule\Entity\Repository\CategoryRegistryRepository"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\CapabilityApi"/>
    </service>
    <service id="Zikula\CategoriesModule\Helper\TreeMapHelper" class="Zikula\CategoriesModule\Helper\TreeMapHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="Zikula\CategoriesModule\Entity\Repository\CategoryRepository"/>
    </service>
    <service id="Zikula\CategoriesModule\Listener\Core3UpgradeListener" class="Zikula\CategoriesModule\Listener\Core3UpgradeListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
    </service>
    <service id="Zikula\CategoriesModule\Menu\ExtensionMenu" class="Zikula\CategoriesModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.extension_menu"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
    </service>
    <service id="Zikula\CategoriesModule\Validator\Constraints\UniqueNameForPosition" class="Zikula\CategoriesModule\Validator\Constraints\UniqueNameForPosition" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\CategoriesModule\Validator\Constraints\UniqueNameForPositionValidator" class="Zikula\CategoriesModule\Validator\Constraints\UniqueNameForPositionValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\CategoriesModule\Entity\Repository\CategoryRepository"/>
    </service>
    <service id="Zikula\CategoriesModule\ZikulaCategoriesModule" class="Zikula\CategoriesModule\ZikulaCategoriesModule" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ExtensionsModule\Api\CapabilityApi" class="Zikula\ExtensionsModule\Api\CapabilityApi" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
    </service>
    <service id="Zikula\ExtensionsModule\Api\VariableApi" class="Zikula\ExtensionsModule\Api\VariableApi" public="true" autowire="true" autoconfigure="true">
      <argument>false</argument>
      <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionVarRepository"/>
      <argument type="service" id="kernel"/>
      <argument>%multisites%</argument>
    </service>
    <service id="Zikula\ExtensionsModule\Command\ZikulaExtensionInstallCommand" class="Zikula\ExtensionsModule\Command\ZikulaExtensionInstallCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
      <argument type="service" id="Zikula\BlocksModule\Entity\Repository\BlockRepository"/>
      <argument type="service" id="Zikula\ExtensionsModule\Helper\ExtensionDependencyHelper"/>
      <argument type="service" id="Zikula\ExtensionsModule\Helper\BundleSyncHelper"/>
      <argument type="service" id="Zikula\ExtensionsModule\Helper\ExtensionHelper"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="kernel"/>
      <call method="setName">
        <argument>zikula:extension:install</argument>
      </call>
    </service>
    <service id="Zikula\ExtensionsModule\Command\ZikulaExtensionStatusCommand" class="Zikula\ExtensionsModule\Command\ZikulaExtensionStatusCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
      <argument type="service" id="Zikula\BlocksModule\Entity\Repository\BlockRepository"/>
      <argument type="service" id="Zikula\ExtensionsModule\Helper\ExtensionDependencyHelper"/>
      <argument type="service" id="Zikula\ExtensionsModule\Helper\BundleSyncHelper"/>
      <argument type="service" id="Zikula\ExtensionsModule\Helper\ExtensionHelper"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="kernel"/>
      <call method="setName">
        <argument>zikula:extension:status</argument>
      </call>
    </service>
    <service id="Zikula\ExtensionsModule\Command\ZikulaExtensionUninstallCommand" class="Zikula\ExtensionsModule\Command\ZikulaExtensionUninstallCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
      <argument type="service" id="Zikula\BlocksModule\Entity\Repository\BlockRepository"/>
      <argument type="service" id="Zikula\ExtensionsModule\Helper\ExtensionDependencyHelper"/>
      <argument type="service" id="Zikula\ExtensionsModule\Helper\BundleSyncHelper"/>
      <argument type="service" id="Zikula\ExtensionsModule\Helper\ExtensionHelper"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="kernel"/>
      <call method="setName">
        <argument>zikula:extension:uninstall</argument>
      </call>
    </service>
    <service id="Zikula\ExtensionsModule\Command\ZikulaExtensionUpgradeCommand" class="Zikula\ExtensionsModule\Command\ZikulaExtensionUpgradeCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
      <argument type="service" id="Zikula\BlocksModule\Entity\Repository\BlockRepository"/>
      <argument type="service" id="Zikula\ExtensionsModule\Helper\ExtensionDependencyHelper"/>
      <argument type="service" id="Zikula\ExtensionsModule\Helper\BundleSyncHelper"/>
      <argument type="service" id="Zikula\ExtensionsModule\Helper\ExtensionHelper"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="kernel"/>
      <call method="setName">
        <argument>zikula:extension:upgrade</argument>
      </call>
    </service>
    <service id="Zikula\ExtensionsModule\Constant" class="Zikula\ExtensionsModule\Constant" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ExtensionsModule\Controller\ConfigController" class="Zikula\ExtensionsModule\Controller\ConfigController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\ExtensionsModule\ZikulaExtensionsModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ybqw7s0.Zikula\ExtensionsModule\Controller\ConfigController"/>
      </call>
    </service>
    <service id="Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController" class="Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\ExtensionsModule\ZikulaExtensionsModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ybqw7s0.Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController"/>
      </call>
    </service>
    <service id="Zikula\ExtensionsModule\Controller\ModuleController" class="Zikula\ExtensionsModule\Controller\ModuleController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\ExtensionsModule\ZikulaExtensionsModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ybqw7s0.Zikula\ExtensionsModule\Controller\ModuleController"/>
      </call>
    </service>
    <service id="Zikula\ExtensionsModule\Controller\ServicesController" class="Zikula\ExtensionsModule\Controller\ServicesController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\ExtensionsModule\ZikulaExtensionsModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ybqw7s0.Zikula\ExtensionsModule\Controller\ServicesController"/>
      </call>
    </service>
    <service id="Zikula\ExtensionsModule\DependencyInjection\ZikulaExtensionsExtension" class="Zikula\ExtensionsModule\DependencyInjection\ZikulaExtensionsExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ExtensionsModule\Entity\ExtensionDependencyEntity" class="Zikula\ExtensionsModule\Entity\ExtensionDependencyEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ExtensionsModule\Entity\ExtensionEntity" class="Zikula\ExtensionsModule\Entity\ExtensionEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ExtensionsModule\Entity\ExtensionVarEntity" class="Zikula\ExtensionsModule\Entity\ExtensionVarEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ExtensionsModule\Entity\Repository\ExtensionDependencyRepository" class="Zikula\ExtensionsModule\Entity\Repository\ExtensionDependencyRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository" class="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository" public="true" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\ExtensionsModule\Entity\Repository\ExtensionVarRepository" class="Zikula\ExtensionsModule\Entity\Repository\ExtensionVarRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\ExtensionsModule\Event\ModuleStateEvent" class="Zikula\ExtensionsModule\Event\ModuleStateEvent" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ExtensionsModule\Exception\ExtensionDependencyException" class="Zikula\ExtensionsModule\Exception\ExtensionDependencyException" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ExtensionsModule\ExtensionEvents" class="Zikula\ExtensionsModule\ExtensionEvents" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ExtensionsModule\ExtensionsModuleInstaller" class="Zikula\ExtensionsModule\ExtensionsModuleInstaller" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ExtensionsModule\Form\Type\ConfigType" class="Zikula\ExtensionsModule\Form\Type\ConfigType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\ExtensionsModule\Form\Type\ExtensionInstallType" class="Zikula\ExtensionsModule\Form\Type\ExtensionInstallType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\ExtensionsModule\Form\Type\ExtensionModifyType" class="Zikula\ExtensionsModule\Form\Type\ExtensionModifyType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\ExtensionsModule\Helper\BundleSyncHelper" class="Zikula\ExtensionsModule\Helper\BundleSyncHelper" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="kernel"/>
      <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
      <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionVarRepository"/>
      <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionDependencyRepository"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Zikula\ExtensionsModule\Helper\ExtensionStateHelper"/>
      <argument type="service" id="Zikula\Bundle\CoreBundle\Helper\BundlesSchemaHelper"/>
      <argument type="service" id="Zikula\ExtensionsModule\Helper\ComposerValidationHelper"/>
      <argument type="service" id="session"/>
    </service>
    <service id="Zikula\ExtensionsModule\Helper\ComposerValidationHelper" class="Zikula\ExtensionsModule\Helper\ComposerValidationHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="kernel"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\ExtensionsModule\Helper\ExtensionDependencyHelper" class="Zikula\ExtensionsModule\Helper\ExtensionDependencyHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionDependencyRepository"/>
      <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="Zikula\ExtensionsModule\Helper\ExtensionHelper" class="Zikula\ExtensionsModule\Helper\ExtensionHelper" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
      <argument type="service" id="Zikula\ExtensionsModule\Helper\ExtensionStateHelper"/>
      <argument type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Zikula\ExtensionsModule\Helper\ExtensionStateHelper" class="Zikula\ExtensionsModule\Helper\ExtensionStateHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
      <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="Zikula\ExtensionsModule\Listener\Core3UpgradeListener" class="Zikula\ExtensionsModule\Listener\Core3UpgradeListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
    </service>
    <service id="Zikula\ExtensionsModule\Listener\ExtensionServicesListener" class="Zikula\ExtensionsModule\Listener\ExtensionServicesListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\ExtensionsModule\Menu\ExtensionMenu" class="Zikula\ExtensionsModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.extension_menu"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
    </service>
    <service id="Zikula\ExtensionsModule\Menu\MenuBuilder" class="Zikula\ExtensionsModule\Menu\MenuBuilder" public="false" autowire="true" autoconfigure="true">
      <tag name="knp_menu.menu_builder" method="createAdminMenu" alias="zikulaExtensionsAdminMenu"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="Zikula\ExtensionsModule\Twig\Extension\DefaultPathExtension" class="Zikula\ExtensionsModule\Twig\Extension\DefaultPathExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\CapabilityApi"/>
      <argument type="service" id="jms_i18n_routing.router"/>
    </service>
    <service id="Zikula\ExtensionsModule\Twig\Extension\ExtensionsExtension" class="Zikula\ExtensionsModule\Twig\Extension\ExtensionsExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\ExtensionsModule\Twig\Extension\ModVarExtension" class="Zikula\ExtensionsModule\Twig\Extension\ModVarExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
    </service>
    <service id="Zikula\ExtensionsModule\Twig\Extension\SimpleFunction\ModuleFooterFunction" class="Zikula\ExtensionsModule\Twig\Extension\SimpleFunction\ModuleFooterFunction" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="Zikula\ExtensionsModule\Twig\Extension\SimpleFunction\ModuleHeaderFunction" class="Zikula\ExtensionsModule\Twig\Extension\SimpleFunction\ModuleHeaderFunction" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="Zikula\ExtensionsModule\Twig\Extension\SimpleFunction\ModuleHelpFunction" class="Zikula\ExtensionsModule\Twig\Extension\SimpleFunction\ModuleHelpFunction" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="Zikula\ExtensionsModule\Twig\Extension\SimpleFunction\ModuleLinksFunction" class="Zikula\ExtensionsModule\Twig\Extension\SimpleFunction\ModuleLinksFunction" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="Zikula\ExtensionsModule\Twig\Extension\UserInterfaceExtension" class="Zikula\ExtensionsModule\Twig\Extension\UserInterfaceExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="Zikula\ExtensionsModule\ZikulaExtensionsModule" class="Zikula\ExtensionsModule\ZikulaExtensionsModule" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\GroupsModule\Constant" class="Zikula\GroupsModule\Constant" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\GroupsModule\Controller\ApplicationController" class="Zikula\GroupsModule\Controller\ApplicationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\GroupsModule\ZikulaGroupsModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7vj43mn.Zikula\GroupsModule\Controller\ApplicationController"/>
      </call>
    </service>
    <service id="Zikula\GroupsModule\Controller\ConfigController" class="Zikula\GroupsModule\Controller\ConfigController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\GroupsModule\ZikulaGroupsModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7vj43mn.Zikula\GroupsModule\Controller\ConfigController"/>
      </call>
    </service>
    <service id="Zikula\GroupsModule\Controller\GroupController" class="Zikula\GroupsModule\Controller\GroupController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\GroupsModule\ZikulaGroupsModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7vj43mn.Zikula\GroupsModule\Controller\GroupController"/>
      </call>
    </service>
    <service id="Zikula\GroupsModule\Controller\MembershipController" class="Zikula\GroupsModule\Controller\MembershipController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\GroupsModule\ZikulaGroupsModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7vj43mn.Zikula\GroupsModule\Controller\MembershipController"/>
      </call>
    </service>
    <service id="Zikula\GroupsModule\DependencyInjection\ZikulaGroupsExtension" class="Zikula\GroupsModule\DependencyInjection\ZikulaGroupsExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\GroupsModule\Entity\GroupApplicationEntity" class="Zikula\GroupsModule\Entity\GroupApplicationEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\GroupsModule\Entity\GroupEntity" class="Zikula\GroupsModule\Entity\GroupEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\GroupsModule\Entity\Repository\GroupApplicationRepository" class="Zikula\GroupsModule\Entity\Repository\GroupApplicationRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\GroupsModule\Entity\Repository\GroupRepository" class="Zikula\GroupsModule\Entity\Repository\GroupRepository" public="true" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
    </service>
    <service id="Zikula\GroupsModule\Form\Type\ConfigType" class="Zikula\GroupsModule\Form\Type\ConfigType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\GroupsModule\Form\Type\CreateGroupType" class="Zikula\GroupsModule\Form\Type\CreateGroupType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Zikula\GroupsModule\Helper\CommonHelper"/>
    </service>
    <service id="Zikula\GroupsModule\Form\Type\EditGroupType" class="Zikula\GroupsModule\Form\Type\EditGroupType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Zikula\GroupsModule\Helper\CommonHelper"/>
    </service>
    <service id="Zikula\GroupsModule\Form\Type\ManageApplicationType" class="Zikula\GroupsModule\Form\Type\ManageApplicationType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\GroupsModule\Form\Type\MembershipApplicationType" class="Zikula\GroupsModule\Form\Type\MembershipApplicationType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\GroupsModule\Form\Type\RemoveUserType" class="Zikula\GroupsModule\Form\Type\RemoveUserType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\GroupsModule\GroupEvents" class="Zikula\GroupsModule\GroupEvents" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\GroupsModule\GroupsModuleInstaller" class="Zikula\GroupsModule\GroupsModuleInstaller" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\GroupsModule\Helper\CommonHelper" class="Zikula\GroupsModule\Helper\CommonHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\GroupsModule\Listener\GroupEventListener" class="Zikula\GroupsModule\Listener\GroupEventListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\MailerModule\Api\MailerApi"/>
      <argument type="service" id="jms_i18n_routing.router"/>
    </service>
    <service id="Zikula\GroupsModule\Menu\ExtensionMenu" class="Zikula\GroupsModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.extension_menu"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\GroupsModule\Entity\Repository\GroupRepository"/>
      <argument type="service" id="Zikula\GroupsModule\Entity\Repository\GroupApplicationRepository"/>
    </service>
    <service id="Zikula\GroupsModule\Menu\MenuBuilder" class="Zikula\GroupsModule\Menu\MenuBuilder" public="false" autowire="true" autoconfigure="true">
      <tag name="knp_menu.menu_builder" method="createAdminMenu" alias="zikulaGroupsAdminMenu"/>
      <tag name="knp_menu.menu_builder" method="createUserMenu" alias="zikulaGroupsUserMenu"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      <argument type="service" id="Zikula\GroupsModule\Entity\Repository\GroupApplicationRepository"/>
      <argument type="service" id="jms_i18n_routing.router"/>
    </service>
    <service id="Zikula\GroupsModule\Validator\Constraints\ValidGroupName" class="Zikula\GroupsModule\Validator\Constraints\ValidGroupName" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\GroupsModule\Validator\Constraints\ValidGroupNameValidator" class="Zikula\GroupsModule\Validator\Constraints\ValidGroupNameValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\GroupsModule\Entity\Repository\GroupRepository"/>
    </service>
    <service id="Zikula\GroupsModule\ZikulaGroupsModule" class="Zikula\GroupsModule\ZikulaGroupsModule" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\MailerModule\Api\MailerApi" class="Zikula\MailerModule\Api\MailerApi" public="false" autowire="true" autoconfigure="true">
      <argument>false</argument>
      <argument type="service" id="kernel"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Zikula\Bundle\CoreBundle\DynamicConfigDumper"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="swiftmailer.mailer.default"/>
    </service>
    <service id="Zikula\MailerModule\Controller\ConfigController" class="Zikula\MailerModule\Controller\ConfigController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\MailerModule\ZikulaMailerModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.jb7EPjY.Zikula\MailerModule\Controller\ConfigController"/>
      </call>
    </service>
    <service id="Zikula\MailerModule\DependencyInjection\ZikulaMailerExtension" class="Zikula\MailerModule\DependencyInjection\ZikulaMailerExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\MailerModule\Form\Type\ConfigType" class="Zikula\MailerModule\Form\Type\ConfigType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\MailerModule\Form\Type\TestType" class="Zikula\MailerModule\Form\Type\TestType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\MailerModule\HookSubscriber\UiHooksSubscriber" class="Zikula\MailerModule\HookSubscriber\UiHooksSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.hook_subscriber"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\MailerModule\MailerEvents" class="Zikula\MailerModule\MailerEvents" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\MailerModule\MailerModuleInstaller" class="Zikula\MailerModule\MailerModuleInstaller" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\MailerModule\Menu\ExtensionMenu" class="Zikula\MailerModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.extension_menu"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
    </service>
    <service id="Zikula\MailerModule\ZikulaMailerModule" class="Zikula\MailerModule\ZikulaMailerModule" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\MenuModule\Block\Form\Type\MenuType" class="Zikula\MenuModule\Block\Form\Type\MenuType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\MenuModule\Block\MenuBlock" class="Zikula\MenuModule\Block\MenuBlock" shared="false" public="true" autowire="true" autoconfigure="true">
      <tag name="zikula.block_handler"/>
      <argument type="service" id="Zikula\MenuModule\ZikulaMenuModule"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="Zikula\MenuModule\Controller\ConfigController" class="Zikula\MenuModule\Controller\ConfigController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\MenuModule\ZikulaMenuModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.NTCZSds.Zikula\MenuModule\Controller\ConfigController"/>
      </call>
    </service>
    <service id="Zikula\MenuModule\Controller\MenuController" class="Zikula\MenuModule\Controller\MenuController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\MenuModule\ZikulaMenuModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.NTCZSds.Zikula\MenuModule\Controller\MenuController"/>
      </call>
    </service>
    <service id="Zikula\MenuModule\Controller\NodeController" class="Zikula\MenuModule\Controller\NodeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\MenuModule\ZikulaMenuModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.NTCZSds.Zikula\MenuModule\Controller\NodeController"/>
      </call>
    </service>
    <service id="Zikula\MenuModule\DependencyInjection\ZikulaMenuExtension" class="Zikula\MenuModule\DependencyInjection\ZikulaMenuExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\MenuModule\Entity\MenuItemEntity" class="Zikula\MenuModule\Entity\MenuItemEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\MenuModule\Entity\Repository\MenuItemRepository" class="Zikula\MenuModule\Entity\Repository\MenuItemRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\MenuModule\Event\ConfigureMenuEvent" class="Zikula\MenuModule\Event\ConfigureMenuEvent" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\MenuModule\ExtensionMenu\ExtensionMenuCollector" class="Zikula\MenuModule\ExtensionMenu\ExtensionMenuCollector" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="tagged_iterator" tag="zikula.extension_menu"/>
    </service>
    <service id="Zikula\MenuModule\ExtensionMenu\ExtensionMenuEvent" class="Zikula\MenuModule\ExtensionMenu\ExtensionMenuEvent" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\MenuModule\Form\DataTransformer\KeyValueTransformer" class="Zikula\MenuModule\Form\DataTransformer\KeyValueTransformer" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\MenuModule\Form\DataTransformer\MenuItemEntityTransformer" class="Zikula\MenuModule\Form\DataTransformer\MenuItemEntityTransformer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\MenuModule\Entity\Repository\MenuItemRepository"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\MenuModule\Form\EventListener\KeyValueFixerListener" class="Zikula\MenuModule\Form\EventListener\KeyValueFixerListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Zikula\MenuModule\Form\EventListener\OptionValidatorListener" class="Zikula\MenuModule\Form\EventListener\OptionValidatorListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\MenuModule\Form\Type\DeleteMenuItemType" class="Zikula\MenuModule\Form\Type\DeleteMenuItemType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\MenuModule\Form\Type\HiddenMenuItemType" class="Zikula\MenuModule\Form\Type\HiddenMenuItemType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\MenuModule\Entity\Repository\MenuItemRepository"/>
    </service>
    <service id="Zikula\MenuModule\Form\Type\KeyValuePairType" class="Zikula\MenuModule\Form\Type\KeyValuePairType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\MenuModule\Form\Type\MenuItemType" class="Zikula\MenuModule\Form\Type\MenuItemType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\MenuModule\Loader\PermissionAwareNodeLoader" class="Zikula\MenuModule\Loader\PermissionAwareNodeLoader" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
    </service>
    <service id="Zikula\MenuModule\Menu\ExtensionMenu" class="Zikula\MenuModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.extension_menu"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
    </service>
    <service id="Zikula\MenuModule\Menu\MenuBuilder" class="Zikula\MenuModule\Menu\MenuBuilder" public="false" autowire="true" autoconfigure="true">
      <tag name="knp_menu.menu_builder" method="createAdminMenu" alias="zikulaMenuAdminMenu"/>
      <tag name="knp_menu.menu_builder" method="createAdminActionsMenu" alias="zikulaMenuAdminActionsMenu"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\CapabilityApi"/>
    </service>
    <service id="Zikula\MenuModule\MenuModuleInstaller" class="Zikula\MenuModule\MenuModuleInstaller" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\MenuModule\Provider\DoctrineTreeProvider" class="Zikula\MenuModule\Provider\DoctrineTreeProvider" public="false" autowire="true" autoconfigure="true">
      <tag name="knp_menu.provider"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\MenuModule\Entity\Repository\MenuItemRepository"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Zikula\MenuModule\Voter\RequestVoter" class="Zikula\MenuModule\Voter\RequestVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="knp_menu.voter"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Zikula\MenuModule\ZikulaMenuModule" class="Zikula\MenuModule\ZikulaMenuModule" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\PermissionsModule\Api\PermissionApi" class="Zikula\PermissionsModule\Api\PermissionApi" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\PermissionsModule\Entity\Repository\PermissionRepository"/>
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\PermissionsModule\Controller\ConfigController" class="Zikula\PermissionsModule\Controller\ConfigController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\PermissionsModule\ZikulaPermissionsModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.crDPbqM.Zikula\PermissionsModule\Controller\ConfigController"/>
      </call>
    </service>
    <service id="Zikula\PermissionsModule\Controller\PermissionController" class="Zikula\PermissionsModule\Controller\PermissionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\PermissionsModule\ZikulaPermissionsModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.crDPbqM.Zikula\PermissionsModule\Controller\PermissionController"/>
      </call>
    </service>
    <service id="Zikula\PermissionsModule\DependencyInjection\ZikulaPermissionsExtension" class="Zikula\PermissionsModule\DependencyInjection\ZikulaPermissionsExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\PermissionsModule\Entity\PermissionEntity" class="Zikula\PermissionsModule\Entity\PermissionEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\PermissionsModule\Entity\Repository\PermissionRepository" class="Zikula\PermissionsModule\Entity\Repository\PermissionRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\PermissionsModule\Form\Type\ConfigType" class="Zikula\PermissionsModule\Form\Type\ConfigType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\PermissionsModule\Form\Type\FilterListType" class="Zikula\PermissionsModule\Form\Type\FilterListType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\PermissionsModule\Form\Type\PermissionCheckType" class="Zikula\PermissionsModule\Form\Type\PermissionCheckType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\PermissionsModule\Form\Type\PermissionType" class="Zikula\PermissionsModule\Form\Type\PermissionType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\PermissionsModule\Helper\SchemaHelper" class="Zikula\PermissionsModule\Helper\SchemaHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
    </service>
    <service id="Zikula\PermissionsModule\Listener\Core3UpgradeListener" class="Zikula\PermissionsModule\Listener\Core3UpgradeListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
    </service>
    <service id="Zikula\PermissionsModule\Listener\GroupDeletionListener" class="Zikula\PermissionsModule\Listener\GroupDeletionListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Zikula\PermissionsModule\Entity\Repository\PermissionRepository"/>
    </service>
    <service id="Zikula\PermissionsModule\Menu\ExtensionMenu" class="Zikula\PermissionsModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.extension_menu"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
    </service>
    <service id="Zikula\PermissionsModule\Menu\MenuBuilder" class="Zikula\PermissionsModule\Menu\MenuBuilder" public="false" autowire="true" autoconfigure="true">
      <tag name="knp_menu.menu_builder" method="createAdminActionsMenu" alias="zikulaPermissionsAdminActionsMenu"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
    </service>
    <service id="Zikula\PermissionsModule\PermissionAlways" class="Zikula\PermissionsModule\PermissionAlways" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\PermissionsModule\PermissionsModuleInstaller" class="Zikula\PermissionsModule\PermissionsModuleInstaller" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\PermissionsModule\Twig\Extension\PermissionsExtension" class="Zikula\PermissionsModule\Twig\Extension\PermissionsExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
    </service>
    <service id="Zikula\PermissionsModule\ZikulaPermissionsModule" class="Zikula\PermissionsModule\ZikulaPermissionsModule" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\RoutesModule\AppSettings" class="Zikula\RoutesModule\AppSettings" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
    </service>
    <service id="Zikula\RoutesModule\Controller\AjaxController" class="Zikula\RoutesModule\Controller\AjaxController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\RoutesModule\ZikulaRoutesModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.GNc7rhp.Zikula\RoutesModule\Controller\AjaxController"/>
      </call>
    </service>
    <service id="Zikula\RoutesModule\Controller\ConfigController" class="Zikula\RoutesModule\Controller\ConfigController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\RoutesModule\ZikulaRoutesModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.GNc7rhp.Zikula\RoutesModule\Controller\ConfigController"/>
      </call>
    </service>
    <service id="Zikula\RoutesModule\Controller\RouteController" class="Zikula\RoutesModule\Controller\RouteController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\RoutesModule\ZikulaRoutesModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.GNc7rhp.Zikula\RoutesModule\Controller\RouteController"/>
      </call>
    </service>
    <service id="Zikula\RoutesModule\Controller\UpdateController" class="Zikula\RoutesModule\Controller\UpdateController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\RoutesModule\ZikulaRoutesModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.GNc7rhp.Zikula\RoutesModule\Controller\UpdateController"/>
      </call>
    </service>
    <service id="Zikula\RoutesModule\DependencyInjection\ZikulaRoutesExtension" class="Zikula\RoutesModule\DependencyInjection\ZikulaRoutesExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\RoutesModule\Entity\Factory\EntityFactory" class="Zikula\RoutesModule\Entity\Factory\EntityFactory" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Zikula\RoutesModule\Entity\Factory\EntityInitialiser"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\CollectionFilterHelper"/>
    </service>
    <service id="Zikula\RoutesModule\Entity\Factory\EntityInitialiser" class="Zikula\RoutesModule\Entity\Factory\EntityInitialiser" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\RoutesModule\Helper\PermissionHelper"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\ListEntriesHelper"/>
    </service>
    <service id="Zikula\RoutesModule\Entity\Repository\RouteRepository" class="Zikula\RoutesModule\Entity\Repository\RouteRepository" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\RoutesModule\Entity\RouteEntity" class="Zikula\RoutesModule\Entity\RouteEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\RoutesModule\Event\Base\AbstractConfigureItemActionsMenuEvent" class="Zikula\RoutesModule\Event\Base\AbstractConfigureItemActionsMenuEvent" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\RoutesModule\Event\Base\AbstractConfigureViewActionsMenuEvent" class="Zikula\RoutesModule\Event\Base\AbstractConfigureViewActionsMenuEvent" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\RoutesModule\Event\Base\AbstractFilterRouteEvent" class="Zikula\RoutesModule\Event\Base\AbstractFilterRouteEvent" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\RoutesModule\Entity\RouteEntity"/>
    </service>
    <service id="Zikula\RoutesModule\Event\ConfigureItemActionsMenuEvent" class="Zikula\RoutesModule\Event\ConfigureItemActionsMenuEvent" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\RoutesModule\Event\ConfigureViewActionsMenuEvent" class="Zikula\RoutesModule\Event\ConfigureViewActionsMenuEvent" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\RoutesModule\Event\FilterRouteEvent" class="Zikula\RoutesModule\Event\FilterRouteEvent" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\RoutesModule\Entity\RouteEntity"/>
    </service>
    <service id="Zikula\RoutesModule\Form\DataTransformer\ArrayFieldTransformer" class="Zikula\RoutesModule\Form\DataTransformer\ArrayFieldTransformer" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\RoutesModule\Form\DataTransformer\ListFieldTransformer" class="Zikula\RoutesModule\Form\DataTransformer\ListFieldTransformer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\RoutesModule\Helper\ListEntriesHelper"/>
    </service>
    <service id="Zikula\RoutesModule\Form\Handler\Route\EditHandler" class="Zikula\RoutesModule\Form\Handler\Route\EditHandler" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="kernel"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="form.factory"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument type="service" id="Zikula\RoutesModule\Entity\Factory\EntityFactory"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\ControllerHelper"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\ModelHelper"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\PermissionHelper"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\WorkflowHelper"/>
      <call method="setPathBuilderHelper">
        <argument type="service" id="Zikula\RoutesModule\Helper\PathBuilderHelper"/>
      </call>
      <call method="setRouteDumperHelper">
        <argument type="service" id="Zikula\RoutesModule\Helper\RouteDumperHelper"/>
      </call>
      <call method="setSanitizeHelper">
        <argument type="service" id="Zikula\RoutesModule\Helper\SanitizeHelper"/>
      </call>
      <call method="setCacheClearer">
        <argument type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
      </call>
    </service>
    <service id="Zikula\RoutesModule\Form\Type\ConfigType" class="Zikula\RoutesModule\Form\Type\ConfigType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\RoutesModule\Form\Type\Field\ArrayType" class="Zikula\RoutesModule\Form\Type\Field\ArrayType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\RoutesModule\Form\Type\Field\MultiListType" class="Zikula\RoutesModule\Form\Type\Field\MultiListType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\ListEntriesHelper"/>
    </service>
    <service id="Zikula\RoutesModule\Form\Type\QuickNavigation\RouteQuickNavType" class="Zikula\RoutesModule\Form\Type\QuickNavigation\RouteQuickNavType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\ListEntriesHelper"/>
    </service>
    <service id="Zikula\RoutesModule\Form\Type\RouteType" class="Zikula\RoutesModule\Form\Type\RouteType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Zikula\RoutesModule\Entity\Factory\EntityFactory"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\ListEntriesHelper"/>
      <call method="setExtensionRepository">
        <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
      </call>
    </service>
    <service id="Zikula\RoutesModule\Helper\CollectionFilterHelper" class="Zikula\RoutesModule\Helper\CollectionFilterHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\PermissionHelper"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
    </service>
    <service id="Zikula\RoutesModule\Helper\ControllerHelper" class="Zikula\RoutesModule\Helper\ControllerHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="form.factory"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\RoutesModule\Entity\Factory\EntityFactory"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\CollectionFilterHelper"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\PermissionHelper"/>
    </service>
    <service id="Zikula\RoutesModule\Helper\EntityDisplayHelper" class="Zikula\RoutesModule\Helper\EntityDisplayHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\ListEntriesHelper"/>
    </service>
    <service id="Zikula\RoutesModule\Helper\ExtractTranslationHelper" class="Zikula\RoutesModule\Helper\ExtractTranslationHelper" public="false" lazy="true" autowire="true" autoconfigure="true"/>
    <service id="Zikula\RoutesModule\Helper\ListEntriesHelper" class="Zikula\RoutesModule\Helper\ListEntriesHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\RoutesModule\Helper\ModelHelper" class="Zikula\RoutesModule\Helper\ModelHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\RoutesModule\Entity\Factory\EntityFactory"/>
    </service>
    <service id="Zikula\RoutesModule\Helper\MultilingualRoutingHelper" class="Zikula\RoutesModule\Helper\MultilingualRoutingHelper" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\Bundle\CoreBundle\DynamicConfigDumper"/>
      <argument type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
    </service>
    <service id="Zikula\RoutesModule\Helper\PathBuilderHelper" class="Zikula\RoutesModule\Helper\PathBuilderHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="kernel"/>
    </service>
    <service id="Zikula\RoutesModule\Helper\PermissionHelper" class="Zikula\RoutesModule\Helper\PermissionHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
    </service>
    <service id="Zikula\RoutesModule\Helper\RouteDumperHelper" class="Zikula\RoutesModule\Helper\RouteDumperHelper" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="kernel"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\SettingsModule\Api\LocaleApi"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="fos_js_routing.dump_command"/>
    </service>
    <service id="Zikula\RoutesModule\Helper\SanitizeHelper" class="Zikula\RoutesModule\Helper\SanitizeHelper" public="false" lazy="true" autowire="true" autoconfigure="true"/>
    <service id="Zikula\RoutesModule\Helper\ViewHelper" class="Zikula\RoutesModule\Helper\ViewHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="twig"/>
      <argument type="service" id="twig.loader.native_filesystem"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\ThemeModule\Engine\AssetFilter"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\ControllerHelper"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\PermissionHelper"/>
      <call method="setAdditionalDependencies">
        <argument type="service" id="Zikula\Bundle\CoreBundle\DynamicConfigDumper"/>
        <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
      </call>
    </service>
    <service id="Zikula\RoutesModule\Helper\WorkflowHelper" class="Zikula\RoutesModule\Helper\WorkflowHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="workflow.registry"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument type="service" id="Zikula\RoutesModule\Entity\Factory\EntityFactory"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\ListEntriesHelper"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\PermissionHelper"/>
    </service>
    <service id="Zikula\RoutesModule\Listener\EntityLifecycleListener" class="Zikula\RoutesModule\Listener\EntityLifecycleListener" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Zikula\RoutesModule\Listener\GroupListener" class="Zikula\RoutesModule\Listener\GroupListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Zikula\RoutesModule\Listener\InstallerListener" class="Zikula\RoutesModule\Listener\InstallerListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\RouteDumperHelper"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\MultilingualRoutingHelper"/>
      <argument type="service" id="Zikula\RoutesModule\Entity\Factory\EntityFactory"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Zikula\RoutesModule\Listener\KernelListener" class="Zikula\RoutesModule\Listener\KernelListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="Zikula\RoutesModule\Listener\MailerListener" class="Zikula\RoutesModule\Listener\MailerListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Zikula\RoutesModule\Listener\ModuleDispatchListener" class="Zikula\RoutesModule\Listener\ModuleDispatchListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Zikula\RoutesModule\Listener\ThemeListener" class="Zikula\RoutesModule\Listener\ThemeListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Zikula\RoutesModule\Listener\UserListener" class="Zikula\RoutesModule\Listener\UserListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\RoutesModule\Entity\Factory\EntityFactory"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Zikula\RoutesModule\Listener\UserLoginListener" class="Zikula\RoutesModule\Listener\UserLoginListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Zikula\RoutesModule\Listener\UserLogoutListener" class="Zikula\RoutesModule\Listener\UserLogoutListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Zikula\RoutesModule\Listener\UserRegistrationListener" class="Zikula\RoutesModule\Listener\UserRegistrationListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Zikula\RoutesModule\Listener\UsersListener" class="Zikula\RoutesModule\Listener\UsersListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Zikula\RoutesModule\Listener\WorkflowEventsListener" class="Zikula\RoutesModule\Listener\WorkflowEventsListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Zikula\RoutesModule\Entity\Factory\EntityFactory"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\PermissionHelper"/>
    </service>
    <service id="Zikula\RoutesModule\Menu\Base\AbstractMenuBuilder" class="Zikula\RoutesModule\Menu\Base\AbstractMenuBuilder" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\PermissionHelper"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\EntityDisplayHelper"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\ModelHelper"/>
    </service>
    <service id="Zikula\RoutesModule\Menu\ExtensionMenu" class="Zikula\RoutesModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.extension_menu"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\ControllerHelper"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\PermissionHelper"/>
    </service>
    <service id="Zikula\RoutesModule\Menu\MenuBuilder" class="Zikula\RoutesModule\Menu\MenuBuilder" public="false" autowire="true" autoconfigure="true">
      <tag name="knp_menu.menu_builder" method="createItemActionsMenu" alias="zikulaRoutesMenuItemActions"/>
      <tag name="knp_menu.menu_builder" method="createViewActionsMenu" alias="zikulaRoutesMenuViewActions"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\PermissionHelper"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\EntityDisplayHelper"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\ModelHelper"/>
    </service>
    <service id="Zikula\RoutesModule\RoutesEvents" class="Zikula\RoutesModule\RoutesEvents" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\RoutesModule\RoutesModuleInstaller" class="Zikula\RoutesModule\RoutesModuleInstaller" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\RoutesModule\Routing\RouteLoader" class="Zikula\RoutesModule\Routing\RouteLoader" public="false" autowire="true" autoconfigure="true">
      <tag name="routing.loader"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\RoutesModule\Entity\Factory\EntityFactory"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\ExtractTranslationHelper"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\PathBuilderHelper"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\SanitizeHelper"/>
      <argument>en</argument>
    </service>
    <service id="Zikula\RoutesModule\Translation\ConsoleCommandListener" class="Zikula\RoutesModule\Translation\ConsoleCommandListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\ExtractTranslationHelper"/>
    </service>
    <service id="Zikula\RoutesModule\Translation\DefaultRouteExclusionStrategy" class="Zikula\RoutesModule\Translation\DefaultRouteExclusionStrategy" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\RoutesModule\Helper\ExtractTranslationHelper"/>
    </service>
    <service id="Zikula\RoutesModule\Translation\ZikulaPatternGenerationStrategy" class="Zikula\RoutesModule\Translation\ZikulaPatternGenerationStrategy" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\RoutesModule\Twig\TwigExtension" class="Zikula\RoutesModule\Twig\TwigExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\EntityDisplayHelper"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\WorkflowHelper"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\ListEntriesHelper"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Zikula\RoutesModule\Validator\Constraints\ListEntry" class="Zikula\RoutesModule\Validator\Constraints\ListEntry" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\RoutesModule\Validator\Constraints\ListEntryValidator" class="Zikula\RoutesModule\Validator\Constraints\ListEntryValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\RoutesModule\Helper\ListEntriesHelper"/>
    </service>
    <service id="Zikula\RoutesModule\ZikulaRoutesModule" class="Zikula\RoutesModule\ZikulaRoutesModule" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\SearchModule\Api\SearchApi" class="Zikula\SearchModule\Api\SearchApi" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\SearchModule\Entity\Repository\SearchResultRepository"/>
      <argument type="service" id="Zikula\SearchModule\Entity\Repository\SearchStatRepository"/>
      <argument type="service" id="session"/>
      <argument type="service" id="Zikula\SearchModule\Collector\SearchableModuleCollector"/>
    </service>
    <service id="Zikula\SearchModule\Block\Form\Type\SearchBlockType" class="Zikula\SearchModule\Block\Form\Type\SearchBlockType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\SearchModule\Block\SearchBlock" class="Zikula\SearchModule\Block\SearchBlock" shared="false" public="true" autowire="true" autoconfigure="true">
      <tag name="zikula.block_handler"/>
      <argument type="service" id="Zikula\SearchModule\ZikulaSearchModule"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="twig"/>
      <call method="setKernel">
        <argument type="service" id="kernel"/>
      </call>
      <call method="setRouter">
        <argument type="service" id="jms_i18n_routing.router"/>
      </call>
      <call method="setFormFactory">
        <argument type="service" id="form.factory"/>
      </call>
      <call method="setSearchableModuleCollector">
        <argument type="service" id="Zikula\SearchModule\Collector\SearchableModuleCollector"/>
      </call>
    </service>
    <service id="Zikula\SearchModule\Collector\SearchableModuleCollector" class="Zikula\SearchModule\Collector\SearchableModuleCollector" public="false" autowire="true" autoconfigure="true">
      <argument type="tagged_iterator" tag="zikula.searchable_module"/>
    </service>
    <service id="Zikula\SearchModule\Controller\ConfigController" class="Zikula\SearchModule\Controller\ConfigController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\SearchModule\ZikulaSearchModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.e.U7W_3.Zikula\SearchModule\Controller\ConfigController"/>
      </call>
    </service>
    <service id="Zikula\SearchModule\Controller\SearchController" class="Zikula\SearchModule\Controller\SearchController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\SearchModule\ZikulaSearchModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.e.U7W_3.Zikula\SearchModule\Controller\SearchController"/>
      </call>
    </service>
    <service id="Zikula\SearchModule\DependencyInjection\ZikulaSearchExtension" class="Zikula\SearchModule\DependencyInjection\ZikulaSearchExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\SearchModule\Entity\Repository\SearchResultRepository" class="Zikula\SearchModule\Entity\Repository\SearchResultRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\SearchModule\Entity\Repository\SearchStatRepository" class="Zikula\SearchModule\Entity\Repository\SearchStatRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\SearchModule\Entity\SearchResultEntity" class="Zikula\SearchModule\Entity\SearchResultEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\SearchModule\Entity\SearchStatEntity" class="Zikula\SearchModule\Entity\SearchStatEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\SearchModule\Form\Type\AmendableModuleSearchType" class="Zikula\SearchModule\Form\Type\AmendableModuleSearchType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
    </service>
    <service id="Zikula\SearchModule\Form\Type\ConfigType" class="Zikula\SearchModule\Form\Type\ConfigType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\SearchModule\Form\Type\SearchType" class="Zikula\SearchModule\Form\Type\SearchType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\SearchModule\Listener\FrontControllerListener" class="Zikula\SearchModule\Listener\FrontControllerListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="zikula_core.common.theme.assets_header"/>
      <argument>false</argument>
      <argument type="expression">container.hasParameter('upgrading') ? parameter('upgrading') : false</argument>
    </service>
    <service id="Zikula\SearchModule\Listener\ModuleEventListener" class="Zikula\SearchModule\Listener\ModuleEventListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Zikula\SearchModule\Collector\SearchableModuleCollector"/>
      <argument type="service" id="Zikula\BlocksModule\Entity\Repository\BlockRepository"/>
    </service>
    <service id="Zikula\SearchModule\Menu\ExtensionMenu" class="Zikula\SearchModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.extension_menu"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument type="service" id="Zikula\SearchModule\Entity\Repository\SearchStatRepository"/>
    </service>
    <service id="Zikula\SearchModule\SearchModuleInstaller" class="Zikula\SearchModule\SearchModuleInstaller" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\SearchModule\Twig\TwigExtension" class="Zikula\SearchModule\Twig\TwigExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="jms_i18n_routing.router"/>
    </service>
    <service id="Zikula\SearchModule\ZikulaSearchModule" class="Zikula\SearchModule\ZikulaSearchModule" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\SecurityCenterModule\Api\HtmlFilterApi" class="Zikula\SecurityCenterModule\Api\HtmlFilterApi" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument>false</argument>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Zikula\SecurityCenterModule\Constant" class="Zikula\SecurityCenterModule\Constant" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\SecurityCenterModule\Controller\ConfigController" class="Zikula\SecurityCenterModule\Controller\ConfigController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\SecurityCenterModule\ZikulaSecurityCenterModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.Twi25pd.Zikula\SecurityCenterModule\Controller\ConfigController"/>
      </call>
    </service>
    <service id="Zikula\SecurityCenterModule\Controller\IdsLogController" class="Zikula\SecurityCenterModule\Controller\IdsLogController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\SecurityCenterModule\ZikulaSecurityCenterModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.Twi25pd.Zikula\SecurityCenterModule\Controller\IdsLogController"/>
      </call>
    </service>
    <service id="Zikula\SecurityCenterModule\DependencyInjection\ZikulaSecurityCenterExtension" class="Zikula\SecurityCenterModule\DependencyInjection\ZikulaSecurityCenterExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\SecurityCenterModule\Entity\IntrusionEntity" class="Zikula\SecurityCenterModule\Entity\IntrusionEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\SecurityCenterModule\Entity\Repository\IntrusionRepository" class="Zikula\SecurityCenterModule\Entity\Repository\IntrusionRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\SecurityCenterModule\Form\Type\ConfigType" class="Zikula\SecurityCenterModule\Form\Type\ConfigType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\SecurityCenterModule\Form\Type\IdsLogExportType" class="Zikula\SecurityCenterModule\Form\Type\IdsLogExportType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\SecurityCenterModule\Form\Type\IdsLogFilterType" class="Zikula\SecurityCenterModule\Form\Type\IdsLogFilterType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\SecurityCenterModule\Helper\PurifierHelper" class="Zikula\SecurityCenterModule\Helper\PurifierHelper" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="kernel"/>
      <argument type="service" id="session"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
    </service>
    <service id="Zikula\SecurityCenterModule\Listener\FilterListener" class="Zikula\SecurityCenterModule\Listener\FilterListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>false</argument>
      <argument type="expression">container.hasParameter('upgrading') ? parameter('upgrading') : false</argument>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Zikula\MailerModule\Api\MailerApi"/>
      <argument type="service" id="translator.default"/>
      <argument>/home/runner/work/core/core/var/cache/prod</argument>
    </service>
    <service id="Zikula\SecurityCenterModule\Listener\PurifierListener" class="Zikula\SecurityCenterModule\Listener\PurifierListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument>false</argument>
      <argument type="expression">container.hasParameter('upgrading') ? parameter('upgrading') : false</argument>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\SecurityCenterModule\Helper\PurifierHelper"/>
    </service>
    <service id="Zikula\SecurityCenterModule\Menu\ExtensionMenu" class="Zikula\SecurityCenterModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.extension_menu"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
    </service>
    <service id="Zikula\SecurityCenterModule\SecurityCenterModuleInstaller" class="Zikula\SecurityCenterModule\SecurityCenterModuleInstaller" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\SecurityCenterModule\Twig\TwigExtension" class="Zikula\SecurityCenterModule\Twig\TwigExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Zikula\SecurityCenterModule\Api\HtmlFilterApi"/>
    </service>
    <service id="Zikula\SecurityCenterModule\ZikulaSecurityCenterModule" class="Zikula\SecurityCenterModule\ZikulaSecurityCenterModule" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\SettingsModule\Api\LocaleApi" class="Zikula\SettingsModule\Api\LocaleApi" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="kernel"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Zikula\SettingsModule\Helper\LocaleConfigHelper"/>
    </service>
    <service id="Zikula\SettingsModule\Block\LocaleBlock" class="Zikula\SettingsModule\Block\LocaleBlock" shared="false" public="true" autowire="true" autoconfigure="true">
      <tag name="zikula.block_handler"/>
      <argument type="service" id="Zikula\SettingsModule\ZikulaSettingsModule"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="twig"/>
      <call method="setRouter">
        <argument type="service" id="jms_i18n_routing.router"/>
      </call>
      <call method="setFormFactory">
        <argument type="service" id="form.factory"/>
      </call>
      <call method="setLocaleApi">
        <argument type="service" id="Zikula\SettingsModule\Api\LocaleApi"/>
      </call>
    </service>
    <service id="Zikula\SettingsModule\Controller\SettingsController" class="Zikula\SettingsModule\Controller\SettingsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\SettingsModule\ZikulaSettingsModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.nzK5Xi3.Zikula\SettingsModule\Controller\SettingsController"/>
      </call>
    </service>
    <service id="Zikula\SettingsModule\DependencyInjection\ZikulaSettingsExtension" class="Zikula\SettingsModule\DependencyInjection\ZikulaSettingsExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\SettingsModule\Form\Type\LocaleSettingsType" class="Zikula\SettingsModule\Form\Type\LocaleSettingsType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\SettingsModule\Form\Type\MainSettingsType" class="Zikula\SettingsModule\Form\Type\MainSettingsType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
    </service>
    <service id="Zikula\SettingsModule\Helper\LocaleConfigHelper" class="Zikula\SettingsModule\Helper\LocaleConfigHelper" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="kernel"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\Bundle\CoreBundle\DynamicConfigDumper"/>
      <argument type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
    </service>
    <service id="Zikula\SettingsModule\Helper\TranslationConfigHelper" class="Zikula\SettingsModule\Helper\TranslationConfigHelper" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="kernel"/>
      <argument type="service" id="Zikula\Bundle\CoreBundle\DynamicConfigDumper"/>
      <argument type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
    </service>
    <service id="Zikula\SettingsModule\Listener\ExtensionInstallerListener" class="Zikula\SettingsModule\Listener\ExtensionInstallerListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Zikula\SettingsModule\Helper\TranslationConfigHelper"/>
    </service>
    <service id="Zikula\SettingsModule\Listener\LocaleListener" class="Zikula\SettingsModule\Listener\LocaleListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
    </service>
    <service id="Zikula\SettingsModule\Listener\LocalizedVariableListener" class="Zikula\SettingsModule\Listener\LocalizedVariableListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
    </service>
    <service id="Zikula\SettingsModule\Listener\ModuleListener" class="Zikula\SettingsModule\Listener\ModuleListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\SettingsModule\Listener\TranslationUiListener" class="Zikula\SettingsModule\Listener\TranslationUiListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\SettingsModule\Api\LocaleApi"/>
    </service>
    <service id="Zikula\SettingsModule\Menu\ExtensionMenu" class="Zikula\SettingsModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.extension_menu"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="Zikula\SettingsModule\SettingsConstant" class="Zikula\SettingsModule\SettingsConstant" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\SettingsModule\SettingsModuleInstaller" class="Zikula\SettingsModule\SettingsModuleInstaller" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\SettingsModule\Validator\Constraints\ValidController" class="Zikula\SettingsModule\Validator\Constraints\ValidController" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\SettingsModule\Validator\Constraints\ValidControllerValidator" class="Zikula\SettingsModule\Validator\Constraints\ValidControllerValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Zikula\SettingsModule\ZikulaSettingsModule" class="Zikula\SettingsModule\ZikulaSettingsModule" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ThemeModule\Api\PageAssetApi" class="Zikula\ThemeModule\Api\PageAssetApi" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="zikula_core.common.theme.assets_css"/>
      <argument type="service" id="zikula_core.common.theme.assets_js"/>
      <argument type="service" id="zikula_core.common.theme.assets_header"/>
      <argument type="service" id="zikula_core.common.theme.assets_footer"/>
    </service>
    <service id="Zikula\ThemeModule\Bridge\Event\TwigPostRenderEvent" class="Zikula\ThemeModule\Bridge\Event\TwigPostRenderEvent" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ThemeModule\Bridge\Event\TwigPreRenderEvent" class="Zikula\ThemeModule\Bridge\Event\TwigPreRenderEvent" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ThemeModule\Bridge\Twig\EventEnabledTwigEngine" class="Zikula\ThemeModule\Bridge\Twig\EventEnabledTwigEngine" public="false" autowire="true" autoconfigure="true">
      <call method="setEventDispatcher"/>
    </service>
    <service id="Zikula\ThemeModule\Controller\CombinedAssetController" class="Zikula\ThemeModule\Controller\CombinedAssetController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\ThemeModule\ZikulaThemeModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.pQSbIFR.Zikula\ThemeModule\Controller\CombinedAssetController"/>
      </call>
    </service>
    <service id="Zikula\ThemeModule\Controller\ThemeController" class="Zikula\ThemeModule\Controller\ThemeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\ThemeModule\ZikulaThemeModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.pQSbIFR.Zikula\ThemeModule\Controller\ThemeController"/>
      </call>
    </service>
    <service id="Zikula\ThemeModule\Controller\VarController" class="Zikula\ThemeModule\Controller\VarController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\ThemeModule\ZikulaThemeModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.pQSbIFR.Zikula\ThemeModule\Controller\VarController"/>
      </call>
    </service>
    <service id="Zikula\ThemeModule\DependencyInjection\ZikulaThemeExtension" class="Zikula\ThemeModule\DependencyInjection\ZikulaThemeExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ThemeModule\Engine\Annotation\Theme" class="Zikula\ThemeModule\Engine\Annotation\Theme" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ThemeModule\Engine\Asset" class="Zikula\ThemeModule\Engine\Asset" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="kernel"/>
      <argument type="service" id="assets.packages"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="filesystem"/>
      <argument type="service" id="Zikula\ThemeModule\Engine\Engine"/>
    </service>
    <service id="Zikula\ThemeModule\Engine\Asset\CssResolver" class="Zikula\ThemeModule\Engine\Asset\CssResolver" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="zikula_core.common.theme.assets_css"/>
      <argument type="service" id="Zikula\ThemeModule\Engine\Asset\Merger"/>
      <argument>prod</argument>
      <argument>true</argument>
    </service>
    <service id="Zikula\ThemeModule\Engine\Asset\JsResolver" class="Zikula\ThemeModule\Engine\Asset\JsResolver" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="zikula_core.common.theme.assets_js"/>
      <argument type="service" id="Zikula\ThemeModule\Engine\Asset\Merger"/>
      <argument>prod</argument>
      <argument>true</argument>
    </service>
    <service id="Zikula\ThemeModule\Engine\Asset\Merger" class="Zikula\ThemeModule\Engine\Asset\Merger" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="kernel"/>
      <argument>1 day</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument type="collection">
        <argument>/jquery/jquery.min.js</argument>
        <argument>/bootstrap/css/bootstrap.min.css</argument>
        <argument>/font-awesome/css/all.min.css</argument>
        <argument>/mmenu/css/mmenu.css</argument>
        <argument>/mmenu/js/mmenu.js</argument>
      </argument>
    </service>
    <service id="Zikula\ThemeModule\Engine\AssetBag" class="Zikula\ThemeModule\Engine\AssetBag" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ThemeModule\Engine\AssetFilter" class="Zikula\ThemeModule\Engine\AssetFilter" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="zikula_core.common.theme.assets_header"/>
      <argument type="service" id="zikula_core.common.theme.assets_footer"/>
      <argument type="service" id="Zikula\ThemeModule\Engine\Asset\JsResolver"/>
      <argument type="service" id="Zikula\ThemeModule\Engine\Asset\CssResolver"/>
      <argument>foot</argument>
    </service>
    <service id="Zikula\ThemeModule\Engine\Engine" class="Zikula\ThemeModule\Engine\Engine" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="Zikula\ThemeModule\Engine\AssetFilter"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
    </service>
    <service id="Zikula\ThemeModule\Engine\ParameterBag" class="Zikula\ThemeModule\Engine\ParameterBag" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
    </service>
    <service id="Zikula\ThemeModule\Entity\Repository\ThemeEntityRepository" class="Zikula\ThemeModule\Entity\Repository\ThemeEntityRepository" public="true" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
      <call method="setKernel">
        <argument type="service" id="kernel"/>
      </call>
    </service>
    <service id="Zikula\ThemeModule\Entity\ThemeEntity" class="Zikula\ThemeModule\Entity\ThemeEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ThemeModule\EventListener\AddJSConfigListener" class="Zikula\ThemeModule\EventListener\AddJSConfigListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>false</argument>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="zikula_core.common.theme.assets_header"/>
    </service>
    <service id="Zikula\ThemeModule\EventListener\ControllerAnnotationReaderListener" class="Zikula\ThemeModule\EventListener\ControllerAnnotationReaderListener" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="request"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Zikula\ThemeModule\Engine\Engine"/>
    </service>
    <service id="Zikula\ThemeModule\EventListener\Core3UpgradeListener" class="Zikula\ThemeModule\EventListener\Core3UpgradeListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
    </service>
    <service id="Zikula\ThemeModule\EventListener\CreateThemedResponseListener" class="Zikula\ThemeModule\EventListener\CreateThemedResponseListener" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="request"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>false</argument>
      <argument type="service" id="Zikula\ThemeModule\Engine\Engine"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
    </service>
    <service id="Zikula\ThemeModule\EventListener\DefaultPageAssetSetterListener" class="Zikula\ThemeModule\EventListener\DefaultPageAssetSetterListener" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="request"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="zikula_core.common.theme.assets_js"/>
      <argument type="service" id="zikula_core.common.theme.assets_css"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="Zikula\ThemeModule\Engine\Asset"/>
      <argument type="service" id="Zikula\ThemeModule\Engine\Engine"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument>prod</argument>
      <argument>false</argument>
      <argument>/bootstrap/js/bootstrap.bundle.min.js</argument>
      <argument>/bootstrap/css/bootstrap.min.css</argument>
      <argument>/font-awesome/css/all.min.css</argument>
    </service>
    <service id="Zikula\ThemeModule\EventListener\DefaultPageVarSetterListener" class="Zikula\ThemeModule\EventListener\DefaultPageVarSetterListener" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="request"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="zikula_core.common.theme.pagevars"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="kernel"/>
      <argument>false</argument>
    </service>
    <service id="Zikula\ThemeModule\EventListener\ExtensionInstallationListener" class="Zikula\ThemeModule\EventListener\ExtensionInstallationListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
      <argument>true</argument>
    </service>
    <service id="Zikula\ThemeModule\EventListener\ModuleStylesheetInsertListener" class="Zikula\ThemeModule\EventListener\ModuleStylesheetInsertListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="Zikula\ThemeModule\EventListener\TemplateNameExposeListener" class="Zikula\ThemeModule\EventListener\TemplateNameExposeListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument>prod</argument>
    </service>
    <service id="Zikula\ThemeModule\EventListener\TemplatePathOverrideListener" class="Zikula\ThemeModule\EventListener\TemplatePathOverrideListener" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="request"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="twig.loader.native_filesystem"/>
      <argument type="service" id="Zikula\ThemeModule\Engine\Engine"/>
    </service>
    <service id="Zikula\ThemeModule\Form\Type\DeleteThemeType" class="Zikula\ThemeModule\Form\Type\DeleteThemeType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\ThemeModule\Form\Type\SetDefaultThemeType" class="Zikula\ThemeModule\Form\Type\SetDefaultThemeType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\ThemeModule\Helper\BundleSyncHelper" class="Zikula\ThemeModule\Helper\BundleSyncHelper" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="kernel"/>
      <argument type="service" id="Zikula\ThemeModule\Entity\Repository\ThemeEntityRepository"/>
      <argument type="service" id="Zikula\Bundle\CoreBundle\Helper\BundlesSchemaHelper"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Helper\ComposerValidationHelper"/>
      <argument type="service" id="session"/>
    </service>
    <service id="Zikula\ThemeModule\Menu\ExtensionMenu" class="Zikula\ThemeModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.extension_menu"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
    </service>
    <service id="Zikula\ThemeModule\ThemeEvents" class="Zikula\ThemeModule\ThemeEvents" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ThemeModule\ThemeModuleInstaller" class="Zikula\ThemeModule\ThemeModuleInstaller" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ThemeModule\Twig\Extension\PageVarExtension" class="Zikula\ThemeModule\Twig\Extension\PageVarExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="zikula_core.common.theme.pagevars"/>
    </service>
    <service id="Zikula\ThemeModule\Twig\Extension\ThemeExtension" class="Zikula\ThemeModule\Twig\Extension\ThemeExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Zikula\ThemeModule\Api\PageAssetApi"/>
      <argument type="service" id="Zikula\ThemeModule\Engine\Asset"/>
    </service>
    <service id="Zikula\ThemeModule\ZikulaThemeModule" class="Zikula\ThemeModule\ZikulaThemeModule" public="false" autowire="true" autoconfigure="true"/>
    <service id="zikula_core.common.theme.assets_js" class="Zikula\ThemeModule\Engine\AssetBag" public="false" autowire="true" autoconfigure="true"/>
    <service id="zikula_core.common.theme.assets_css" class="Zikula\ThemeModule\Engine\AssetBag" public="true" autowire="true" autoconfigure="true"/>
    <service id="zikula_core.common.theme.assets_header" class="Zikula\ThemeModule\Engine\AssetBag" public="false" autowire="true" autoconfigure="true"/>
    <service id="zikula_core.common.theme.assets_footer" class="Zikula\ThemeModule\Engine\AssetBag" public="false" autowire="true" autoconfigure="true"/>
    <service id="zikula_core.common.theme.pagevars" class="Zikula\ThemeModule\Engine\ParameterBag" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
    </service>
    <service id="zikula_core.common.theme.themevars" class="Zikula\ThemeModule\Engine\ParameterBag" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
    </service>
    <service id="Zikula\UsersModule\AccessEvents" class="Zikula\UsersModule\AccessEvents" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\UsersModule\Api\CurrentUserApi" class="Zikula\UsersModule\Api\CurrentUserApi" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
    </service>
    <service id="Zikula\UsersModule\Block\AccountLinksBlock" class="Zikula\UsersModule\Block\AccountLinksBlock" shared="false" public="true" autowire="true" autoconfigure="true">
      <tag name="zikula.block_handler"/>
      <argument type="service" id="Zikula\UsersModule\ZikulaUsersModule"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="twig"/>
      <call method="setExtensionModuleCollector">
        <argument type="service" id="Zikula\MenuModule\ExtensionMenu\ExtensionMenuCollector"/>
      </call>
    </service>
    <service id="Zikula\UsersModule\Block\LoginBlock" class="Zikula\UsersModule\Block\LoginBlock" shared="false" public="true" autowire="true" autoconfigure="true">
      <tag name="zikula.block_handler"/>
      <argument type="service" id="Zikula\UsersModule\ZikulaUsersModule"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="twig"/>
      <call method="setRouter">
        <argument type="service" id="jms_i18n_routing.router"/>
      </call>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
      <call method="setFormFactory">
        <argument type="service" id="form.factory"/>
      </call>
      <call method="setCurrentUserApi">
        <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      </call>
      <call method="setAuthenticationMethodCollector">
        <argument type="service" id="Zikula\UsersModule\Collector\AuthenticationMethodCollector"/>
      </call>
      <call method="setHookDispatcher">
        <argument type="service" id="Zikula\Bundle\HookBundle\Dispatcher\HookDispatcher"/>
      </call>
    </service>
    <service id="Zikula\UsersModule\Block\OnlineBlock" class="Zikula\UsersModule\Block\OnlineBlock" shared="false" public="true" autowire="true" autoconfigure="true">
      <tag name="zikula.block_handler"/>
      <argument type="service" id="Zikula\UsersModule\ZikulaUsersModule"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="twig"/>
      <call method="setVariableApi">
        <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </call>
      <call method="setUserSessionRepository">
        <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserSessionRepository"/>
      </call>
    </service>
    <service id="Zikula\UsersModule\Collector\AuthenticationMethodCollector" class="Zikula\UsersModule\Collector\AuthenticationMethodCollector" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="tagged_iterator" tag="zikula.authentication_method"/>
    </service>
    <service id="Zikula\UsersModule\Collector\MessageModuleCollector" class="Zikula\UsersModule\Collector\MessageModuleCollector" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="tagged_iterator" tag="zikula.message_module"/>
    </service>
    <service id="Zikula\UsersModule\Collector\ProfileModuleCollector" class="Zikula\UsersModule\Collector\ProfileModuleCollector" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="tagged_iterator" tag="zikula.profile_module"/>
    </service>
    <service id="Zikula\UsersModule\Constant" class="Zikula\UsersModule\Constant" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\UsersModule\Controller\AccessController" class="Zikula\UsersModule\Controller\AccessController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\UsersModule\ZikulaUsersModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.Mhd.iFW.Zikula\UsersModule\Controller\AccessController"/>
      </call>
    </service>
    <service id="Zikula\UsersModule\Controller\AccountController" class="Zikula\UsersModule\Controller\AccountController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\UsersModule\ZikulaUsersModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.Mhd.iFW.Zikula\UsersModule\Controller\AccountController"/>
      </call>
    </service>
    <service id="Zikula\UsersModule\Controller\ConfigController" class="Zikula\UsersModule\Controller\ConfigController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\UsersModule\ZikulaUsersModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.Mhd.iFW.Zikula\UsersModule\Controller\ConfigController"/>
      </call>
    </service>
    <service id="Zikula\UsersModule\Controller\FileIOController" class="Zikula\UsersModule\Controller\FileIOController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\UsersModule\ZikulaUsersModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.Mhd.iFW.Zikula\UsersModule\Controller\FileIOController"/>
      </call>
    </service>
    <service id="Zikula\UsersModule\Controller\LiveSearchController" class="Zikula\UsersModule\Controller\LiveSearchController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\UsersModule\ZikulaUsersModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.Mhd.iFW.Zikula\UsersModule\Controller\LiveSearchController"/>
      </call>
    </service>
    <service id="Zikula\UsersModule\Controller\RegistrationController" class="Zikula\UsersModule\Controller\RegistrationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\UsersModule\ZikulaUsersModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.Mhd.iFW.Zikula\UsersModule\Controller\RegistrationController"/>
      </call>
    </service>
    <service id="Zikula\UsersModule\Controller\UserAdministrationController" class="Zikula\UsersModule\Controller\UserAdministrationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\UsersModule\ZikulaUsersModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.Mhd.iFW.Zikula\UsersModule\Controller\UserAdministrationController"/>
      </call>
    </service>
    <service id="Zikula\UsersModule\DependencyInjection\ZikulaUsersExtension" class="Zikula\UsersModule\DependencyInjection\ZikulaUsersExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\UsersModule\Entity\Repository\UserAttributeRepository" class="Zikula\UsersModule\Entity\Repository\UserAttributeRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\UsersModule\Entity\Repository\UserRepository" class="Zikula\UsersModule\Entity\Repository\UserRepository" public="true" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\UsersModule\Entity\Repository\UserSessionRepository" class="Zikula\UsersModule\Entity\Repository\UserSessionRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\UsersModule\Entity\UserAttributeEntity" class="Zikula\UsersModule\Entity\UserAttributeEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\UsersModule\Entity\UserEntity" class="Zikula\UsersModule\Entity\UserEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\UsersModule\Entity\UserSessionEntity" class="Zikula\UsersModule\Entity\UserSessionEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\UsersModule\Event\UserFormAwareEvent" class="Zikula\UsersModule\Event\UserFormAwareEvent" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\UsersModule\Event\UserFormDataEvent" class="Zikula\UsersModule\Event\UserFormDataEvent" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\UsersModule\Exception\InvalidAuthenticationMethodLoginFormException" class="Zikula\UsersModule\Exception\InvalidAuthenticationMethodLoginFormException" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\UsersModule\Exception\InvalidAuthenticationMethodRegistrationFormException" class="Zikula\UsersModule\Exception\InvalidAuthenticationMethodRegistrationFormException" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\UsersModule\Form\DataTransformer\UserFieldTransformer" class="Zikula\UsersModule\Form\DataTransformer\UserFieldTransformer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
    </service>
    <service id="Zikula\UsersModule\Form\Type\AdminModifyUserType" class="Zikula\UsersModule\Form\Type\AdminModifyUserType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\UsersModule\Form\Type\ChangeLanguageType" class="Zikula\UsersModule\Form\Type\ChangeLanguageType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\UsersModule\Form\Type\ConfigType\AuthenticationMethodsType" class="Zikula\UsersModule\Form\Type\ConfigType\AuthenticationMethodsType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\UsersModule\Form\Type\ConfigType\ConfigType" class="Zikula\UsersModule\Form\Type\ConfigType\ConfigType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\UsersModule\Form\Type\DefaultLoginType" class="Zikula\UsersModule\Form\Type\DefaultLoginType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\UsersModule\Form\Type\DeleteConfirmationType" class="Zikula\UsersModule\Form\Type\DeleteConfirmationType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\UsersModule\Form\Type\DeleteType" class="Zikula\UsersModule\Form\Type\DeleteType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\UsersModule\Form\Type\ExportUsersType" class="Zikula\UsersModule\Form\Type\ExportUsersType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\UsersModule\Form\Type\MailType" class="Zikula\UsersModule\Form\Type\MailType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\UsersModule\Form\Type\RegistrationType\ApproveRegistrationConfirmationType" class="Zikula\UsersModule\Form\Type\RegistrationType\ApproveRegistrationConfirmationType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\UsersModule\Form\Type\RegistrationType\DefaultRegistrationType" class="Zikula\UsersModule\Form\Type\RegistrationType\DefaultRegistrationType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\UsersModule\Form\Type\SearchUserType" class="Zikula\UsersModule\Form\Type\SearchUserType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\UsersModule\Form\Type\UserLiveSearchType" class="Zikula\UsersModule\Form\Type\UserLiveSearchType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
    </service>
    <service id="Zikula\UsersModule\Helper\AccessHelper" class="Zikula\UsersModule\Helper\AccessHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
    </service>
    <service id="Zikula\UsersModule\Helper\AdministrationActionsHelper" class="Zikula\UsersModule\Helper\AdministrationActionsHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
    </service>
    <service id="Zikula\UsersModule\Helper\MailHelper" class="Zikula\UsersModule\Helper\MailHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\MailerModule\Api\MailerApi"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository"/>
    </service>
    <service id="Zikula\UsersModule\Helper\RegistrationHelper" class="Zikula\UsersModule\Helper\RegistrationHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      <argument type="service" id="Zikula\GroupsModule\Entity\Repository\GroupRepository"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\UsersModule\Helper\SearchHelper" class="Zikula\UsersModule\Helper\SearchHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <tag name="zikula.searchable_module"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
    </service>
    <service id="Zikula\UsersModule\HookSubscriber\LoginUiHooksSubscriber" class="Zikula\UsersModule\HookSubscriber\LoginUiHooksSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.hook_subscriber"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\UsersModule\HookSubscriber\RegistrationUiHooksSubscriber" class="Zikula\UsersModule\HookSubscriber\RegistrationUiHooksSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.hook_subscriber"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\UsersModule\HookSubscriber\UserManagementUiHooksSubscriber" class="Zikula\UsersModule\HookSubscriber\UserManagementUiHooksSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.hook_subscriber"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\UsersModule\Listener\PendingContentListener" class="Zikula\UsersModule\Listener\PendingContentListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\UsersModule\Listener\RegistrationEventsListener" class="Zikula\UsersModule\Listener\RegistrationEventsListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Zikula\UsersModule\Helper\MailHelper"/>
    </service>
    <service id="Zikula\UsersModule\Listener\UserEventListener" class="Zikula\UsersModule\Listener\UserEventListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="jms_i18n_routing.router"/>
    </service>
    <service id="Zikula\UsersModule\Menu\ExtensionMenu" class="Zikula\UsersModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.extension_menu"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument type="service" id="Zikula\SettingsModule\Api\LocaleApi"/>
    </service>
    <service id="Zikula\UsersModule\MessageModule\IdentityMessageModule" class="Zikula\UsersModule\MessageModule\IdentityMessageModule" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.message_module"/>
    </service>
    <service id="Zikula\UsersModule\ProfileModule\IdentityProfileModule" class="Zikula\UsersModule\ProfileModule\IdentityProfileModule" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.profile_module"/>
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
    </service>
    <service id="Zikula\UsersModule\RegistrationEvents" class="Zikula\UsersModule\RegistrationEvents" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\UsersModule\Twig\Extension\MessageExtension" class="Zikula\UsersModule\Twig\Extension\MessageExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      <argument type="service" id="Zikula\UsersModule\Collector\MessageModuleCollector"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\UsersModule\Twig\Extension\OnlineExtension" class="Zikula\UsersModule\Twig\Extension\OnlineExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserSessionRepository"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
    </service>
    <service id="Zikula\UsersModule\Twig\Extension\ProfileExtension" class="Zikula\UsersModule\Twig\Extension\ProfileExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      <argument type="service" id="Zikula\UsersModule\Collector\ProfileModuleCollector"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\UsersModule\UserEvents" class="Zikula\UsersModule\UserEvents" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\UsersModule\UsersModuleInstaller" class="Zikula\UsersModule\UsersModuleInstaller" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\UsersModule\Validator\Constraints\ValidEmail" class="Zikula\UsersModule\Validator\Constraints\ValidEmail" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\UsersModule\Validator\Constraints\ValidEmailValidator" class="Zikula\UsersModule\Validator\Constraints\ValidEmailValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="Zikula\UsersModule\Validator\Constraints\ValidUname" class="Zikula\UsersModule\Validator\Constraints\ValidUname" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\UsersModule\Validator\Constraints\ValidUnameValidator" class="Zikula\UsersModule\Validator\Constraints\ValidUnameValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="validator"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
    </service>
    <service id="Zikula\UsersModule\Validator\Constraints\ValidUserFields" class="Zikula\UsersModule\Validator\Constraints\ValidUserFields" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\UsersModule\Validator\Constraints\ValidUserFieldsValidator" class="Zikula\UsersModule\Validator\Constraints\ValidUserFieldsValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
    </service>
    <service id="Zikula\UsersModule\ZikulaUsersModule" class="Zikula\UsersModule\ZikulaUsersModule" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ZAuthModule\Api\PasswordApi" class="Zikula\ZAuthModule\Api\PasswordApi" public="true" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ZAuthModule\AuthenticationMethod\NativeEitherAuthenticationMethod" class="Zikula\ZAuthModule\AuthenticationMethod\NativeEitherAuthenticationMethod" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.authentication_method"/>
      <argument type="service" id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="validator"/>
      <argument type="service" id="Zikula\ZAuthModule\Api\PasswordApi"/>
    </service>
    <service id="Zikula\ZAuthModule\AuthenticationMethod\NativeEmailAuthenticationMethod" class="Zikula\ZAuthModule\AuthenticationMethod\NativeEmailAuthenticationMethod" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.authentication_method"/>
      <argument type="service" id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="validator"/>
      <argument type="service" id="Zikula\ZAuthModule\Api\PasswordApi"/>
    </service>
    <service id="Zikula\ZAuthModule\AuthenticationMethod\NativeUnameAuthenticationMethod" class="Zikula\ZAuthModule\AuthenticationMethod\NativeUnameAuthenticationMethod" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.authentication_method"/>
      <argument type="service" id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="validator"/>
      <argument type="service" id="Zikula\ZAuthModule\Api\PasswordApi"/>
    </service>
    <service id="Zikula\ZAuthModule\Controller\AccountController" class="Zikula\ZAuthModule\Controller\AccountController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\ZAuthModule\ZikulaZAuthModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.tGwLL8t.Zikula\ZAuthModule\Controller\AccountController"/>
      </call>
    </service>
    <service id="Zikula\ZAuthModule\Controller\ConfigController" class="Zikula\ZAuthModule\Controller\ConfigController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\ZAuthModule\ZikulaZAuthModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.tGwLL8t.Zikula\ZAuthModule\Controller\ConfigController"/>
      </call>
    </service>
    <service id="Zikula\ZAuthModule\Controller\FileIOController" class="Zikula\ZAuthModule\Controller\FileIOController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\ZAuthModule\ZikulaZAuthModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.tGwLL8t.Zikula\ZAuthModule\Controller\FileIOController"/>
      </call>
    </service>
    <service id="Zikula\ZAuthModule\Controller\RegistrationController" class="Zikula\ZAuthModule\Controller\RegistrationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\ZAuthModule\ZikulaZAuthModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.tGwLL8t.Zikula\ZAuthModule\Controller\RegistrationController"/>
      </call>
    </service>
    <service id="Zikula\ZAuthModule\Controller\UserAdministrationController" class="Zikula\ZAuthModule\Controller\UserAdministrationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Zikula\ZAuthModule\ZikulaZAuthModule"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.tGwLL8t.Zikula\ZAuthModule\Controller\UserAdministrationController"/>
      </call>
    </service>
    <service id="Zikula\ZAuthModule\DependencyInjection\ZikulaZAuthExtension" class="Zikula\ZAuthModule\DependencyInjection\ZikulaZAuthExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ZAuthModule\Entity\AuthenticationMappingEntity" class="Zikula\ZAuthModule\Entity\AuthenticationMappingEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository" class="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository" class="Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Zikula\ZAuthModule\Entity\UserVerificationEntity" class="Zikula\ZAuthModule\Entity\UserVerificationEntity" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ZAuthModule\Form\Type\AdminCreatedUserType" class="Zikula\ZAuthModule\Form\Type\AdminCreatedUserType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
    </service>
    <service id="Zikula\ZAuthModule\Form\Type\AdminModifyUserType" class="Zikula\ZAuthModule\Form\Type\AdminModifyUserType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\ZAuthModule\Form\Type\ChangeEmailType" class="Zikula\ZAuthModule\Form\Type\ChangeEmailType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\ZAuthModule\Form\Type\ChangePasswordType" class="Zikula\ZAuthModule\Form\Type\ChangePasswordType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\ZAuthModule\Form\Type\ConfigType" class="Zikula\ZAuthModule\Form\Type\ConfigType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\ZAuthModule\Form\Type\EitherLoginType" class="Zikula\ZAuthModule\Form\Type\EitherLoginType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\ZAuthModule\Form\Type\EmailLoginType" class="Zikula\ZAuthModule\Form\Type\EmailLoginType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\ZAuthModule\Form\Type\ImportUserType" class="Zikula\ZAuthModule\Form\Type\ImportUserType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\ZAuthModule\Form\Type\LostPasswordType" class="Zikula\ZAuthModule\Form\Type\LostPasswordType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\ZAuthModule\Form\Type\LostUserNameType" class="Zikula\ZAuthModule\Form\Type\LostUserNameType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\ZAuthModule\Form\Type\RegistrationType" class="Zikula\ZAuthModule\Form\Type\RegistrationType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
    </service>
    <service id="Zikula\ZAuthModule\Form\Type\SendVerificationConfirmationType" class="Zikula\ZAuthModule\Form\Type\SendVerificationConfirmationType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\ZAuthModule\Form\Type\TogglePasswordConfirmationType" class="Zikula\ZAuthModule\Form\Type\TogglePasswordConfirmationType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\ZAuthModule\Form\Type\UnameLoginType" class="Zikula\ZAuthModule\Form\Type\UnameLoginType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\ZAuthModule\Form\Type\VerifyRegistrationType" class="Zikula\ZAuthModule\Form\Type\VerifyRegistrationType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Zikula\ZAuthModule\Helper\AdministrationActionsHelper" class="Zikula\ZAuthModule\Helper\AdministrationActionsHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository"/>
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
    </service>
    <service id="Zikula\ZAuthModule\Helper\FileIOHelper" class="Zikula\ZAuthModule\Helper\FileIOHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Zikula\ZAuthModule\Helper\MailHelper"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument type="service" id="Zikula\ZAuthModule\Api\PasswordApi"/>
      <argument type="service" id="Zikula\GroupsModule\Entity\Repository\GroupRepository"/>
    </service>
    <service id="Zikula\ZAuthModule\Helper\LostPasswordVerificationHelper" class="Zikula\ZAuthModule\Helper\LostPasswordVerificationHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\ZAuthModule\Api\PasswordApi"/>
    </service>
    <service id="Zikula\ZAuthModule\Helper\MailHelper" class="Zikula\ZAuthModule\Helper\MailHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\MailerModule\Api\MailerApi"/>
    </service>
    <service id="Zikula\ZAuthModule\Helper\RegistrationVerificationHelper" class="Zikula\ZAuthModule\Helper\RegistrationVerificationHelper" public="false" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository"/>
      <argument type="service" id="Zikula\ZAuthModule\Helper\MailHelper"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      <argument type="service" id="Zikula\ZAuthModule\Api\PasswordApi"/>
    </service>
    <service id="Zikula\ZAuthModule\Listener\RegistrationListener" class="Zikula\ZAuthModule\Listener\RegistrationListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository"/>
      <argument type="service" id="Zikula\ZAuthModule\Helper\RegistrationVerificationHelper"/>
    </service>
    <service id="Zikula\ZAuthModule\Listener\UserDeleteListener" class="Zikula\ZAuthModule\Listener\UserDeleteListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository"/>
      <argument type="service" id="Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository"/>
    </service>
    <service id="Zikula\ZAuthModule\Listener\UserEventListener" class="Zikula\ZAuthModule\Listener\UserEventListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="Zikula\ZAuthModule\Menu\ExtensionMenu" class="Zikula\ZAuthModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true">
      <tag name="zikula.extension_menu"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
      <argument type="service" id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository"/>
    </service>
    <service id="Zikula\ZAuthModule\Validator\Constraints\ValidAntiSpamAnswer" class="Zikula\ZAuthModule\Validator\Constraints\ValidAntiSpamAnswer" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ZAuthModule\Validator\Constraints\ValidAntiSpamAnswerValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidAntiSpamAnswerValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="Zikula\ZAuthModule\Validator\Constraints\ValidEmail" class="Zikula\ZAuthModule\Validator\Constraints\ValidEmail" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ZAuthModule\Validator\Constraints\ValidEmailValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidEmailValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="Zikula\ZAuthModule\Validator\Constraints\ValidPassword" class="Zikula\ZAuthModule\Validator\Constraints\ValidPassword" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ZAuthModule\Validator\Constraints\ValidPasswordChange" class="Zikula\ZAuthModule\Validator\Constraints\ValidPasswordChange" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ZAuthModule\Validator\Constraints\ValidPasswordChangeValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidPasswordChangeValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ZAuthModule\Api\PasswordApi"/>
    </service>
    <service id="Zikula\ZAuthModule\Validator\Constraints\ValidPasswordValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidPasswordValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="Zikula\ZAuthModule\Validator\Constraints\ValidRegistrationVerification" class="Zikula\ZAuthModule\Validator\Constraints\ValidRegistrationVerification" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ZAuthModule\Validator\Constraints\ValidRegistrationVerificationValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidRegistrationVerificationValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      <argument type="service" id="Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository"/>
      <argument type="service" id="Zikula\ZAuthModule\Api\PasswordApi"/>
    </service>
    <service id="Zikula\ZAuthModule\Validator\Constraints\ValidUname" class="Zikula\ZAuthModule\Validator\Constraints\ValidUname" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ZAuthModule\Validator\Constraints\ValidUnameValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidUnameValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="Zikula\ZAuthModule\Validator\Constraints\ValidUserFields" class="Zikula\ZAuthModule\Validator\Constraints\ValidUserFields" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ZAuthModule\Validator\Constraints\ValidUserFieldsValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidUserFieldsValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository"/>
      <argument type="service" id="Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository"/>
    </service>
    <service id="Zikula\ZAuthModule\ZAuthConstant" class="Zikula\ZAuthModule\ZAuthConstant" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ZAuthModule\ZAuthModuleInstaller" class="Zikula\ZAuthModule\ZAuthModuleInstaller" public="false" autowire="true" autoconfigure="true"/>
    <service id="Zikula\ZAuthModule\ZikulaZAuthModule" class="Zikula\ZAuthModule\ZikulaZAuthModule" public="false" autowire="true" autoconfigure="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Zikula\Bundle\CoreBundle\Command\AssetsInstallCommand" class="Zikula\Bundle\CoreBundle\Command\AssetsInstallCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreBundle\Command\AssetsInstallCommand" class="Zikula\Bundle\CoreBundle\Command\AssetsInstallCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\HttpKernel\DataCollector\DataCollectorInterface.0.Zikula\Bundle\CoreBundle\DataCollector\ZikulaVersionDataCollector" class="Zikula\Bundle\CoreBundle\DataCollector\ZikulaVersionDataCollector" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.Zikula\Bundle\CoreBundle\DataCollector\ZikulaVersionDataCollector" class="Zikula\Bundle\CoreBundle\DataCollector\ZikulaVersionDataCollector" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreBundle\DataCollector\ZikulaVersionDataCollector" class="Zikula\Bundle\CoreBundle\DataCollector\ZikulaVersionDataCollector" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\Bundle\CoreBundle\EventListener\BlameListener" class="Zikula\Bundle\CoreBundle\EventListener\BlameListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreBundle\EventListener\BlameListener" class="Zikula\Bundle\CoreBundle\EventListener\BlameListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\Bundle\CoreBundle\EventListener\ClickjackProtectionListener" class="Zikula\Bundle\CoreBundle\EventListener\ClickjackProtectionListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreBundle\EventListener\ClickjackProtectionListener" class="Zikula\Bundle\CoreBundle\EventListener\ClickjackProtectionListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\Bundle\CoreBundle\EventListener\Core3UpgradeListener" class="Zikula\Bundle\CoreBundle\EventListener\Core3UpgradeListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreBundle\EventListener\Core3UpgradeListener" class="Zikula\Bundle\CoreBundle\EventListener\Core3UpgradeListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\Bundle\CoreBundle\EventListener\DoctrineListener" class="Zikula\Bundle\CoreBundle\EventListener\DoctrineListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreBundle\EventListener\DoctrineListener" class="Zikula\Bundle\CoreBundle\EventListener\DoctrineListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\Bundle\CoreBundle\EventListener\ExceptionListener" class="Zikula\Bundle\CoreBundle\EventListener\ExceptionListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreBundle\EventListener\ExceptionListener" class="Zikula\Bundle\CoreBundle\EventListener\ExceptionListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\Bundle\CoreBundle\EventListener\OutputCompressionListener" class="Zikula\Bundle\CoreBundle\EventListener\OutputCompressionListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreBundle\EventListener\OutputCompressionListener" class="Zikula\Bundle\CoreBundle\EventListener\OutputCompressionListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\Bundle\CoreBundle\EventListener\SessionExpireListener" class="Zikula\Bundle\CoreBundle\EventListener\SessionExpireListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreBundle\EventListener\SessionExpireListener" class="Zikula\Bundle\CoreBundle\EventListener\SessionExpireListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\Bundle\CoreBundle\EventListener\SiteOffListener" class="Zikula\Bundle\CoreBundle\EventListener\SiteOffListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreBundle\EventListener\SiteOffListener" class="Zikula\Bundle\CoreBundle\EventListener\SiteOffListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\Bundle\CoreBundle\EventListener\SiteOffVetoLoginListener" class="Zikula\Bundle\CoreBundle\EventListener\SiteOffVetoLoginListener" public="false" lazy="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreBundle\EventListener\SiteOffVetoLoginListener" class="Zikula\Bundle\CoreBundle\EventListener\SiteOffVetoLoginListener" public="false" lazy="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Zikula\Bundle\CoreBundle\Twig\Extension\CoreExtension" class="Zikula\Bundle\CoreBundle\Twig\Extension\CoreExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreBundle\Twig\Extension\CoreExtension" class="Zikula\Bundle\CoreBundle\Twig\Extension\CoreExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Zikula\Bundle\CoreBundle\Twig\Extension\EventDispatcherExtension" class="Zikula\Bundle\CoreBundle\Twig\Extension\EventDispatcherExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreBundle\Twig\Extension\EventDispatcherExtension" class="Zikula\Bundle\CoreBundle\Twig\Extension\EventDispatcherExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Zikula\Bundle\CoreBundle\Twig\Extension\PagerExtension" class="Zikula\Bundle\CoreBundle\Twig\Extension\PagerExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreBundle\Twig\Extension\PagerExtension" class="Zikula\Bundle\CoreBundle\Twig\Extension\PagerExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Zikula\Bundle\CoreBundle\Twig\Extension\SessionExtension" class="Zikula\Bundle\CoreBundle\Twig\Extension\SessionExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreBundle\Twig\Extension\SessionExtension" class="Zikula\Bundle\CoreBundle\Twig\Extension\SessionExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Zikula\Bundle\CoreInstallerBundle\Command\Install\FinishCommand" class="Zikula\Bundle\CoreInstallerBundle\Command\Install\FinishCommand" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreInstallerBundle\Command\Install\FinishCommand" class="Zikula\Bundle\CoreInstallerBundle\Command\Install\FinishCommand" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Zikula\Bundle\CoreInstallerBundle\Command\Install\StartCommand" class="Zikula\Bundle\CoreInstallerBundle\Command\Install\StartCommand" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreInstallerBundle\Command\Install\StartCommand" class="Zikula\Bundle\CoreInstallerBundle\Command\Install\StartCommand" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Zikula\Bundle\CoreInstallerBundle\Command\UpgradeCommand" class="Zikula\Bundle\CoreInstallerBundle\Command\UpgradeCommand" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreInstallerBundle\Command\UpgradeCommand" class="Zikula\Bundle\CoreInstallerBundle\Command\UpgradeCommand" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\Bundle\CoreInstallerBundle\EventListener\InstallUpgradeCheckListener" class="Zikula\Bundle\CoreInstallerBundle\EventListener\InstallUpgradeCheckListener" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreInstallerBundle\EventListener\InstallUpgradeCheckListener" class="Zikula\Bundle\CoreInstallerBundle\EventListener\InstallUpgradeCheckListener" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\Bundle\CoreInstallerBundle\Form\Type\CreateAdminType" class="Zikula\Bundle\CoreInstallerBundle\Form\Type\CreateAdminType" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreInstallerBundle\Form\Type\CreateAdminType" class="Zikula\Bundle\CoreInstallerBundle\Form\Type\CreateAdminType" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\Bundle\CoreInstallerBundle\Form\Type\DbCredsType" class="Zikula\Bundle\CoreInstallerBundle\Form\Type\DbCredsType" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreInstallerBundle\Form\Type\DbCredsType" class="Zikula\Bundle\CoreInstallerBundle\Form\Type\DbCredsType" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\Bundle\CoreInstallerBundle\Form\Type\LocaleType" class="Zikula\Bundle\CoreInstallerBundle\Form\Type\LocaleType" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreInstallerBundle\Form\Type\LocaleType" class="Zikula\Bundle\CoreInstallerBundle\Form\Type\LocaleType" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\Bundle\CoreInstallerBundle\Form\Type\LoginType" class="Zikula\Bundle\CoreInstallerBundle\Form\Type\LoginType" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreInstallerBundle\Form\Type\LoginType" class="Zikula\Bundle\CoreInstallerBundle\Form\Type\LoginType" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\Bundle\CoreInstallerBundle\Form\Type\RequestContextType" class="Zikula\Bundle\CoreInstallerBundle\Form\Type\RequestContextType" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreInstallerBundle\Form\Type\RequestContextType" class="Zikula\Bundle\CoreInstallerBundle\Form\Type\RequestContextType" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\AuthenticateAdminLoginValidator" class="Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\AuthenticateAdminLoginValidator" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\AuthenticateAdminLoginValidator" class="Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\AuthenticateAdminLoginValidator" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\ValidPdoConnectionValidator" class="Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\ValidPdoConnectionValidator" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\ValidPdoConnectionValidator" class="Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\ValidPdoConnectionValidator" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeExtensionInterface.0.Zikula\Bundle\FormExtensionBundle\Form\Extension\ButtonTypeIconExtension" class="Zikula\Bundle\FormExtensionBundle\Form\Extension\ButtonTypeIconExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\FormExtensionBundle\Form\Extension\ButtonTypeIconExtension" class="Zikula\Bundle\FormExtensionBundle\Form\Extension\ButtonTypeIconExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeExtensionInterface.0.Zikula\Bundle\FormExtensionBundle\Form\Extension\FormTypeHelpExtension" class="Zikula\Bundle\FormExtensionBundle\Form\Extension\FormTypeHelpExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\FormExtensionBundle\Form\Extension\FormTypeHelpExtension" class="Zikula\Bundle\FormExtensionBundle\Form\Extension\FormTypeHelpExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\Bundle\FormExtensionBundle\Form\Type\DeletionType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DeletionType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\FormExtensionBundle\Form\Type\DeletionType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DeletionType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicFieldType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicFieldType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicFieldType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicFieldType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\ChoiceFormOptionsArrayType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\ChoiceFormOptionsArrayType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\ChoiceFormOptionsArrayType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\ChoiceFormOptionsArrayType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\DateTimeFormOptionsArrayType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\DateTimeFormOptionsArrayType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\DateTimeFormOptionsArrayType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\DateTimeFormOptionsArrayType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\FormOptionsArrayType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\FormOptionsArrayType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\FormOptionsArrayType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\FormOptionsArrayType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\MoneyFormOptionsArrayType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\MoneyFormOptionsArrayType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\MoneyFormOptionsArrayType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\MoneyFormOptionsArrayType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\RegexibleFormOptionsArrayType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\RegexibleFormOptionsArrayType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\RegexibleFormOptionsArrayType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\RegexibleFormOptionsArrayType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\Bundle\FormExtensionBundle\Form\Type\IconType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\IconType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\FormExtensionBundle\Form\Type\IconType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\IconType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\Bundle\FormExtensionBundle\Form\Type\InlineFormDefinitionType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\InlineFormDefinitionType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\FormExtensionBundle\Form\Type\InlineFormDefinitionType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\InlineFormDefinitionType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\Bundle\FormExtensionBundle\Form\Type\LocaleType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\LocaleType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\FormExtensionBundle\Form\Type\LocaleType" class="Zikula\Bundle\FormExtensionBundle\Form\Type\LocaleType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\Bundle\HookBundle\Controller\HookController" class="Zikula\Bundle\HookBundle\Controller\HookController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\Bundle\HookBundle\Controller\HookController" class="Zikula\Bundle\HookBundle\Controller\HookController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\HookBundle\Controller\HookController" class="Zikula\Bundle\HookBundle\Controller\HookController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookBindingRepository" class="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookBindingRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookBindingRepository" class="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookBindingRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookRuntimeRepository" class="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookRuntimeRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookRuntimeRepository" class="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookRuntimeRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\Bundle\HookBundle\Listener\CoreInstallerListener" class="Zikula\Bundle\HookBundle\Listener\CoreInstallerListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\HookBundle\Listener\CoreInstallerListener" class="Zikula\Bundle\HookBundle\Listener\CoreInstallerListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\Bundle\HookBundle\Listener\HookListenerBuilderListener" class="Zikula\Bundle\HookBundle\Listener\HookListenerBuilderListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\HookBundle\Listener\HookListenerBuilderListener" class="Zikula\Bundle\HookBundle\Listener\HookListenerBuilderListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\Bundle\HookBundle\Listener\HooksListener" class="Zikula\Bundle\HookBundle\Listener\HooksListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\HookBundle\Listener\HooksListener" class="Zikula\Bundle\HookBundle\Listener\HooksListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\Bundle\HookBundle\Listener\ModuleUninstallListener" class="Zikula\Bundle\HookBundle\Listener\ModuleUninstallListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\HookBundle\Listener\ModuleUninstallListener" class="Zikula\Bundle\HookBundle\Listener\ModuleUninstallListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Zikula\Bundle\HookBundle\Twig\Extension\HookExtension" class="Zikula\Bundle\HookBundle\Twig\Extension\HookExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\HookBundle\Twig\Extension\HookExtension" class="Zikula\Bundle\HookBundle\Twig\Extension\HookExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\Bundle\WorkflowBundle\Controller\EditorController" class="Zikula\Bundle\WorkflowBundle\Controller\EditorController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\Bundle\WorkflowBundle\Controller\EditorController" class="Zikula\Bundle\WorkflowBundle\Controller\EditorController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\Bundle\WorkflowBundle\Controller\EditorController" class="Zikula\Bundle\WorkflowBundle\Controller\EditorController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\BlocksModule\BlockHandlerInterface.0.Zikula\AdminModule\Block\AdminnavBlock" class="Zikula\AdminModule\Block\AdminnavBlock" shared="false" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\AdminModule\Block\AdminnavBlock" class="Zikula\AdminModule\Block\AdminnavBlock" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\AdminModule\Controller\AdminController" class="Zikula\AdminModule\Controller\AdminController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\AdminModule\Controller\AdminController" class="Zikula\AdminModule\Controller\AdminController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\AdminModule\Controller\AdminController" class="Zikula\AdminModule\Controller\AdminController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\AdminModule\Controller\AdminInterfaceController" class="Zikula\AdminModule\Controller\AdminInterfaceController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\AdminModule\Controller\AdminInterfaceController" class="Zikula\AdminModule\Controller\AdminInterfaceController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\AdminModule\Controller\AdminInterfaceController" class="Zikula\AdminModule\Controller\AdminInterfaceController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\AdminModule\Controller\AjaxController" class="Zikula\AdminModule\Controller\AjaxController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\AdminModule\Controller\AjaxController" class="Zikula\AdminModule\Controller\AjaxController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\AdminModule\Controller\AjaxController" class="Zikula\AdminModule\Controller\AjaxController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\AdminModule\Controller\ConfigController" class="Zikula\AdminModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\AdminModule\Controller\ConfigController" class="Zikula\AdminModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\AdminModule\Controller\ConfigController" class="Zikula\AdminModule\Controller\ConfigController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\AdminModule\Entity\Repository\AdminCategoryRepository" class="Zikula\AdminModule\Entity\Repository\AdminCategoryRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\AdminModule\Entity\Repository\AdminCategoryRepository" class="Zikula\AdminModule\Entity\Repository\AdminCategoryRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\AdminModule\Entity\Repository\AdminModuleRepository" class="Zikula\AdminModule\Entity\Repository\AdminModuleRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\AdminModule\Entity\Repository\AdminModuleRepository" class="Zikula\AdminModule\Entity\Repository\AdminModuleRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\AdminModule\Form\Type\AdminCategoryType" class="Zikula\AdminModule\Form\Type\AdminCategoryType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\AdminModule\Form\Type\AdminCategoryType" class="Zikula\AdminModule\Form\Type\AdminCategoryType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\AdminModule\Form\Type\ConfigType" class="Zikula\AdminModule\Form\Type\ConfigType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\AdminModule\Form\Type\ConfigType" class="Zikula\AdminModule\Form\Type\ConfigType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\AdminModule\Listener\Core3UpgradeListener" class="Zikula\AdminModule\Listener\Core3UpgradeListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\AdminModule\Listener\Core3UpgradeListener" class="Zikula\AdminModule\Listener\Core3UpgradeListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\AdminModule\Listener\ModuleEventListener" class="Zikula\AdminModule\Listener\ModuleEventListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\AdminModule\Listener\ModuleEventListener" class="Zikula\AdminModule\Listener\ModuleEventListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\MenuModule\ExtensionMenu\ExtensionMenuInterface.0.Zikula\AdminModule\Menu\ExtensionMenu" class="Zikula\AdminModule\Menu\ExtensionMenu" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\AdminModule\Menu\ExtensionMenu" class="Zikula\AdminModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Zikula\AdminModule\Twig\Extension\AdminExtension" class="Zikula\AdminModule\Twig\Extension\AdminExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\AdminModule\Twig\Extension\AdminExtension" class="Zikula\AdminModule\Twig\Extension\AdminExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\BlocksModule\BlockHandlerInterface.0.Zikula\BlocksModule\Block\FincludeBlock" class="Zikula\BlocksModule\Block\FincludeBlock" shared="false" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Block\FincludeBlock" class="Zikula\BlocksModule\Block\FincludeBlock" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\BlocksModule\Block\Form\Type\FincludeBlockType" class="Zikula\BlocksModule\Block\Form\Type\FincludeBlockType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Block\Form\Type\FincludeBlockType" class="Zikula\BlocksModule\Block\Form\Type\FincludeBlockType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\BlocksModule\Block\Form\Type\HtmlBlockType" class="Zikula\BlocksModule\Block\Form\Type\HtmlBlockType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Block\Form\Type\HtmlBlockType" class="Zikula\BlocksModule\Block\Form\Type\HtmlBlockType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\BlocksModule\Block\Form\Type\TextBlockType" class="Zikula\BlocksModule\Block\Form\Type\TextBlockType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Block\Form\Type\TextBlockType" class="Zikula\BlocksModule\Block\Form\Type\TextBlockType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\BlocksModule\Block\Form\Type\XsltBlockType" class="Zikula\BlocksModule\Block\Form\Type\XsltBlockType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Block\Form\Type\XsltBlockType" class="Zikula\BlocksModule\Block\Form\Type\XsltBlockType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\BlocksModule\BlockHandlerInterface.0.Zikula\BlocksModule\Block\HtmlBlock" class="Zikula\BlocksModule\Block\HtmlBlock" shared="false" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Block\HtmlBlock" class="Zikula\BlocksModule\Block\HtmlBlock" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\BlocksModule\BlockHandlerInterface.0.Zikula\BlocksModule\Block\PendingContentBlock" class="Zikula\BlocksModule\Block\PendingContentBlock" shared="false" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Block\PendingContentBlock" class="Zikula\BlocksModule\Block\PendingContentBlock" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\BlocksModule\BlockHandlerInterface.0.Zikula\BlocksModule\Block\TextBlock" class="Zikula\BlocksModule\Block\TextBlock" shared="false" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Block\TextBlock" class="Zikula\BlocksModule\Block\TextBlock" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\BlocksModule\BlockHandlerInterface.0.Zikula\BlocksModule\Block\XsltBlock" class="Zikula\BlocksModule\Block\XsltBlock" shared="false" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Block\XsltBlock" class="Zikula\BlocksModule\Block\XsltBlock" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\BlocksModule\Controller\AdminController" class="Zikula\BlocksModule\Controller\AdminController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\BlocksModule\Controller\AdminController" class="Zikula\BlocksModule\Controller\AdminController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Controller\AdminController" class="Zikula\BlocksModule\Controller\AdminController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\BlocksModule\Controller\BlockController" class="Zikula\BlocksModule\Controller\BlockController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\BlocksModule\Controller\BlockController" class="Zikula\BlocksModule\Controller\BlockController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Controller\BlockController" class="Zikula\BlocksModule\Controller\BlockController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\BlocksModule\Controller\ConfigController" class="Zikula\BlocksModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\BlocksModule\Controller\ConfigController" class="Zikula\BlocksModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Controller\ConfigController" class="Zikula\BlocksModule\Controller\ConfigController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\BlocksModule\Controller\PlacementController" class="Zikula\BlocksModule\Controller\PlacementController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\BlocksModule\Controller\PlacementController" class="Zikula\BlocksModule\Controller\PlacementController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Controller\PlacementController" class="Zikula\BlocksModule\Controller\PlacementController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\BlocksModule\Controller\PositionController" class="Zikula\BlocksModule\Controller\PositionController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\BlocksModule\Controller\PositionController" class="Zikula\BlocksModule\Controller\PositionController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Controller\PositionController" class="Zikula\BlocksModule\Controller\PositionController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\BlocksModule\Entity\Repository\BlockPositionRepository" class="Zikula\BlocksModule\Entity\Repository\BlockPositionRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Entity\Repository\BlockPositionRepository" class="Zikula\BlocksModule\Entity\Repository\BlockPositionRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\BlocksModule\Entity\Repository\BlockRepository" class="Zikula\BlocksModule\Entity\Repository\BlockRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Entity\Repository\BlockRepository" class="Zikula\BlocksModule\Entity\Repository\BlockRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\BlocksModule\Form\Type\AdminViewFilterType" class="Zikula\BlocksModule\Form\Type\AdminViewFilterType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Form\Type\AdminViewFilterType" class="Zikula\BlocksModule\Form\Type\AdminViewFilterType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\BlocksModule\Form\Type\BlockFilterType" class="Zikula\BlocksModule\Form\Type\BlockFilterType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Form\Type\BlockFilterType" class="Zikula\BlocksModule\Form\Type\BlockFilterType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\BlocksModule\Form\Type\BlockPositionType" class="Zikula\BlocksModule\Form\Type\BlockPositionType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Form\Type\BlockPositionType" class="Zikula\BlocksModule\Form\Type\BlockPositionType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\BlocksModule\Form\Type\BlockType" class="Zikula\BlocksModule\Form\Type\BlockType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Form\Type\BlockType" class="Zikula\BlocksModule\Form\Type\BlockType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\BlocksModule\Form\Type\ConfigType" class="Zikula\BlocksModule\Form\Type\ConfigType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Form\Type\ConfigType" class="Zikula\BlocksModule\Form\Type\ConfigType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\BlocksModule\Form\Type\NewBlockType" class="Zikula\BlocksModule\Form\Type\NewBlockType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Form\Type\NewBlockType" class="Zikula\BlocksModule\Form\Type\NewBlockType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\Bundle\HookBundle\HookSubscriberInterface.0.Zikula\BlocksModule\HookSubscriber\UiHooksSubscriber" class="Zikula\BlocksModule\HookSubscriber\UiHooksSubscriber" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\HookSubscriber\UiHooksSubscriber" class="Zikula\BlocksModule\HookSubscriber\UiHooksSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\BlocksModule\Listener\CollapseableBlockListener" class="Zikula\BlocksModule\Listener\CollapseableBlockListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Listener\CollapseableBlockListener" class="Zikula\BlocksModule\Listener\CollapseableBlockListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\MenuModule\ExtensionMenu\ExtensionMenuInterface.0.Zikula\BlocksModule\Menu\ExtensionMenu" class="Zikula\BlocksModule\Menu\ExtensionMenu" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Menu\ExtensionMenu" class="Zikula\BlocksModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Zikula\BlocksModule\Twig\Extension\BlocksExtension" class="Zikula\BlocksModule\Twig\Extension\BlocksExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\BlocksModule\Twig\Extension\BlocksExtension" class="Zikula\BlocksModule\Twig\Extension\BlocksExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\CategoriesModule\Controller\CategoryController" class="Zikula\CategoriesModule\Controller\CategoryController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\CategoriesModule\Controller\CategoryController" class="Zikula\CategoriesModule\Controller\CategoryController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\CategoriesModule\Controller\CategoryController" class="Zikula\CategoriesModule\Controller\CategoryController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\CategoriesModule\Controller\NodeController" class="Zikula\CategoriesModule\Controller\NodeController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\CategoriesModule\Controller\NodeController" class="Zikula\CategoriesModule\Controller\NodeController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\CategoriesModule\Controller\NodeController" class="Zikula\CategoriesModule\Controller\NodeController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\CategoriesModule\Controller\RegistryController" class="Zikula\CategoriesModule\Controller\RegistryController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\CategoriesModule\Controller\RegistryController" class="Zikula\CategoriesModule\Controller\RegistryController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\CategoriesModule\Controller\RegistryController" class="Zikula\CategoriesModule\Controller\RegistryController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\CategoriesModule\Entity\Repository\CategoryRegistryRepository" class="Zikula\CategoriesModule\Entity\Repository\CategoryRegistryRepository" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\CategoriesModule\Entity\Repository\CategoryRegistryRepository" class="Zikula\CategoriesModule\Entity\Repository\CategoryRegistryRepository" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\CategoriesModule\Entity\Repository\CategoryRepository" class="Zikula\CategoriesModule\Entity\Repository\CategoryRepository" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\CategoriesModule\Entity\Repository\CategoryRepository" class="Zikula\CategoriesModule\Entity\Repository\CategoryRepository" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\CategoriesModule\Form\EventListener\CategoriesMergeCollectionListener" class="Zikula\CategoriesModule\Form\EventListener\CategoriesMergeCollectionListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\CategoriesModule\Form\EventListener\CategoriesMergeCollectionListener" class="Zikula\CategoriesModule\Form\EventListener\CategoriesMergeCollectionListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\CategoriesModule\Form\Type\CategoriesType" class="Zikula\CategoriesModule\Form\Type\CategoriesType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\CategoriesModule\Form\Type\CategoriesType" class="Zikula\CategoriesModule\Form\Type\CategoriesType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\CategoriesModule\Form\Type\CategoryAttributeType" class="Zikula\CategoriesModule\Form\Type\CategoryAttributeType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\CategoriesModule\Form\Type\CategoryAttributeType" class="Zikula\CategoriesModule\Form\Type\CategoryAttributeType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\CategoriesModule\Form\Type\CategoryRegistryType" class="Zikula\CategoriesModule\Form\Type\CategoryRegistryType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\CategoriesModule\Form\Type\CategoryRegistryType" class="Zikula\CategoriesModule\Form\Type\CategoryRegistryType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\CategoriesModule\Form\Type\CategoryTreeType" class="Zikula\CategoriesModule\Form\Type\CategoryTreeType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\CategoriesModule\Form\Type\CategoryTreeType" class="Zikula\CategoriesModule\Form\Type\CategoryTreeType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\CategoriesModule\Form\Type\CategoryType" class="Zikula\CategoriesModule\Form\Type\CategoryType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\CategoriesModule\Form\Type\CategoryType" class="Zikula\CategoriesModule\Form\Type\CategoryType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\CategoriesModule\Listener\Core3UpgradeListener" class="Zikula\CategoriesModule\Listener\Core3UpgradeListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\CategoriesModule\Listener\Core3UpgradeListener" class="Zikula\CategoriesModule\Listener\Core3UpgradeListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\MenuModule\ExtensionMenu\ExtensionMenuInterface.0.Zikula\CategoriesModule\Menu\ExtensionMenu" class="Zikula\CategoriesModule\Menu\ExtensionMenu" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\CategoriesModule\Menu\ExtensionMenu" class="Zikula\CategoriesModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Zikula\CategoriesModule\Validator\Constraints\UniqueNameForPositionValidator" class="Zikula\CategoriesModule\Validator\Constraints\UniqueNameForPositionValidator" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\CategoriesModule\Validator\Constraints\UniqueNameForPositionValidator" class="Zikula\CategoriesModule\Validator\Constraints\UniqueNameForPositionValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Zikula\ExtensionsModule\Command\ZikulaExtensionInstallCommand" class="Zikula\ExtensionsModule\Command\ZikulaExtensionInstallCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Command\ZikulaExtensionInstallCommand" class="Zikula\ExtensionsModule\Command\ZikulaExtensionInstallCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Zikula\ExtensionsModule\Command\ZikulaExtensionStatusCommand" class="Zikula\ExtensionsModule\Command\ZikulaExtensionStatusCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Command\ZikulaExtensionStatusCommand" class="Zikula\ExtensionsModule\Command\ZikulaExtensionStatusCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Zikula\ExtensionsModule\Command\ZikulaExtensionUninstallCommand" class="Zikula\ExtensionsModule\Command\ZikulaExtensionUninstallCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Command\ZikulaExtensionUninstallCommand" class="Zikula\ExtensionsModule\Command\ZikulaExtensionUninstallCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Zikula\ExtensionsModule\Command\ZikulaExtensionUpgradeCommand" class="Zikula\ExtensionsModule\Command\ZikulaExtensionUpgradeCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Command\ZikulaExtensionUpgradeCommand" class="Zikula\ExtensionsModule\Command\ZikulaExtensionUpgradeCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\ExtensionsModule\Controller\ConfigController" class="Zikula\ExtensionsModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\ExtensionsModule\Controller\ConfigController" class="Zikula\ExtensionsModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Controller\ConfigController" class="Zikula\ExtensionsModule\Controller\ConfigController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController" class="Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController" class="Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController" class="Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\ExtensionsModule\Controller\ModuleController" class="Zikula\ExtensionsModule\Controller\ModuleController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\ExtensionsModule\Controller\ModuleController" class="Zikula\ExtensionsModule\Controller\ModuleController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Controller\ModuleController" class="Zikula\ExtensionsModule\Controller\ModuleController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\ExtensionsModule\Controller\ServicesController" class="Zikula\ExtensionsModule\Controller\ServicesController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\ExtensionsModule\Controller\ServicesController" class="Zikula\ExtensionsModule\Controller\ServicesController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Controller\ServicesController" class="Zikula\ExtensionsModule\Controller\ServicesController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\ExtensionsModule\Entity\Repository\ExtensionDependencyRepository" class="Zikula\ExtensionsModule\Entity\Repository\ExtensionDependencyRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Entity\Repository\ExtensionDependencyRepository" class="Zikula\ExtensionsModule\Entity\Repository\ExtensionDependencyRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository" class="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository" class="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\ExtensionsModule\Entity\Repository\ExtensionVarRepository" class="Zikula\ExtensionsModule\Entity\Repository\ExtensionVarRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Entity\Repository\ExtensionVarRepository" class="Zikula\ExtensionsModule\Entity\Repository\ExtensionVarRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\ExtensionsModule\Form\Type\ConfigType" class="Zikula\ExtensionsModule\Form\Type\ConfigType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Form\Type\ConfigType" class="Zikula\ExtensionsModule\Form\Type\ConfigType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\ExtensionsModule\Form\Type\ExtensionInstallType" class="Zikula\ExtensionsModule\Form\Type\ExtensionInstallType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Form\Type\ExtensionInstallType" class="Zikula\ExtensionsModule\Form\Type\ExtensionInstallType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\ExtensionsModule\Form\Type\ExtensionModifyType" class="Zikula\ExtensionsModule\Form\Type\ExtensionModifyType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Form\Type\ExtensionModifyType" class="Zikula\ExtensionsModule\Form\Type\ExtensionModifyType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\ExtensionsModule\Listener\Core3UpgradeListener" class="Zikula\ExtensionsModule\Listener\Core3UpgradeListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Listener\Core3UpgradeListener" class="Zikula\ExtensionsModule\Listener\Core3UpgradeListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\ExtensionsModule\Listener\ExtensionServicesListener" class="Zikula\ExtensionsModule\Listener\ExtensionServicesListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Listener\ExtensionServicesListener" class="Zikula\ExtensionsModule\Listener\ExtensionServicesListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\MenuModule\ExtensionMenu\ExtensionMenuInterface.0.Zikula\ExtensionsModule\Menu\ExtensionMenu" class="Zikula\ExtensionsModule\Menu\ExtensionMenu" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Menu\ExtensionMenu" class="Zikula\ExtensionsModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Zikula\ExtensionsModule\Twig\Extension\DefaultPathExtension" class="Zikula\ExtensionsModule\Twig\Extension\DefaultPathExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Twig\Extension\DefaultPathExtension" class="Zikula\ExtensionsModule\Twig\Extension\DefaultPathExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Zikula\ExtensionsModule\Twig\Extension\ExtensionsExtension" class="Zikula\ExtensionsModule\Twig\Extension\ExtensionsExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Twig\Extension\ExtensionsExtension" class="Zikula\ExtensionsModule\Twig\Extension\ExtensionsExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Zikula\ExtensionsModule\Twig\Extension\ModVarExtension" class="Zikula\ExtensionsModule\Twig\Extension\ModVarExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Twig\Extension\ModVarExtension" class="Zikula\ExtensionsModule\Twig\Extension\ModVarExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Zikula\ExtensionsModule\Twig\Extension\UserInterfaceExtension" class="Zikula\ExtensionsModule\Twig\Extension\UserInterfaceExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ExtensionsModule\Twig\Extension\UserInterfaceExtension" class="Zikula\ExtensionsModule\Twig\Extension\UserInterfaceExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\GroupsModule\Controller\ApplicationController" class="Zikula\GroupsModule\Controller\ApplicationController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\GroupsModule\Controller\ApplicationController" class="Zikula\GroupsModule\Controller\ApplicationController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\GroupsModule\Controller\ApplicationController" class="Zikula\GroupsModule\Controller\ApplicationController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\GroupsModule\Controller\ConfigController" class="Zikula\GroupsModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\GroupsModule\Controller\ConfigController" class="Zikula\GroupsModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\GroupsModule\Controller\ConfigController" class="Zikula\GroupsModule\Controller\ConfigController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\GroupsModule\Controller\GroupController" class="Zikula\GroupsModule\Controller\GroupController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\GroupsModule\Controller\GroupController" class="Zikula\GroupsModule\Controller\GroupController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\GroupsModule\Controller\GroupController" class="Zikula\GroupsModule\Controller\GroupController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\GroupsModule\Controller\MembershipController" class="Zikula\GroupsModule\Controller\MembershipController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\GroupsModule\Controller\MembershipController" class="Zikula\GroupsModule\Controller\MembershipController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\GroupsModule\Controller\MembershipController" class="Zikula\GroupsModule\Controller\MembershipController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\GroupsModule\Entity\Repository\GroupApplicationRepository" class="Zikula\GroupsModule\Entity\Repository\GroupApplicationRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\GroupsModule\Entity\Repository\GroupApplicationRepository" class="Zikula\GroupsModule\Entity\Repository\GroupApplicationRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\GroupsModule\Entity\Repository\GroupRepository" class="Zikula\GroupsModule\Entity\Repository\GroupRepository" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\GroupsModule\Entity\Repository\GroupRepository" class="Zikula\GroupsModule\Entity\Repository\GroupRepository" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\GroupsModule\Form\Type\ConfigType" class="Zikula\GroupsModule\Form\Type\ConfigType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\GroupsModule\Form\Type\ConfigType" class="Zikula\GroupsModule\Form\Type\ConfigType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\GroupsModule\Form\Type\CreateGroupType" class="Zikula\GroupsModule\Form\Type\CreateGroupType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\GroupsModule\Form\Type\CreateGroupType" class="Zikula\GroupsModule\Form\Type\CreateGroupType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\GroupsModule\Form\Type\EditGroupType" class="Zikula\GroupsModule\Form\Type\EditGroupType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\GroupsModule\Form\Type\EditGroupType" class="Zikula\GroupsModule\Form\Type\EditGroupType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\GroupsModule\Form\Type\ManageApplicationType" class="Zikula\GroupsModule\Form\Type\ManageApplicationType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\GroupsModule\Form\Type\ManageApplicationType" class="Zikula\GroupsModule\Form\Type\ManageApplicationType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\GroupsModule\Form\Type\MembershipApplicationType" class="Zikula\GroupsModule\Form\Type\MembershipApplicationType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\GroupsModule\Form\Type\MembershipApplicationType" class="Zikula\GroupsModule\Form\Type\MembershipApplicationType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\GroupsModule\Form\Type\RemoveUserType" class="Zikula\GroupsModule\Form\Type\RemoveUserType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\GroupsModule\Form\Type\RemoveUserType" class="Zikula\GroupsModule\Form\Type\RemoveUserType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\GroupsModule\Listener\GroupEventListener" class="Zikula\GroupsModule\Listener\GroupEventListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\GroupsModule\Listener\GroupEventListener" class="Zikula\GroupsModule\Listener\GroupEventListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\MenuModule\ExtensionMenu\ExtensionMenuInterface.0.Zikula\GroupsModule\Menu\ExtensionMenu" class="Zikula\GroupsModule\Menu\ExtensionMenu" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\GroupsModule\Menu\ExtensionMenu" class="Zikula\GroupsModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Zikula\GroupsModule\Validator\Constraints\ValidGroupNameValidator" class="Zikula\GroupsModule\Validator\Constraints\ValidGroupNameValidator" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\GroupsModule\Validator\Constraints\ValidGroupNameValidator" class="Zikula\GroupsModule\Validator\Constraints\ValidGroupNameValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\MailerModule\Controller\ConfigController" class="Zikula\MailerModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\MailerModule\Controller\ConfigController" class="Zikula\MailerModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\MailerModule\Controller\ConfigController" class="Zikula\MailerModule\Controller\ConfigController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\MailerModule\Form\Type\ConfigType" class="Zikula\MailerModule\Form\Type\ConfigType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\MailerModule\Form\Type\ConfigType" class="Zikula\MailerModule\Form\Type\ConfigType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\MailerModule\Form\Type\TestType" class="Zikula\MailerModule\Form\Type\TestType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\MailerModule\Form\Type\TestType" class="Zikula\MailerModule\Form\Type\TestType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\Bundle\HookBundle\HookSubscriberInterface.0.Zikula\MailerModule\HookSubscriber\UiHooksSubscriber" class="Zikula\MailerModule\HookSubscriber\UiHooksSubscriber" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\MailerModule\HookSubscriber\UiHooksSubscriber" class="Zikula\MailerModule\HookSubscriber\UiHooksSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\MenuModule\ExtensionMenu\ExtensionMenuInterface.0.Zikula\MailerModule\Menu\ExtensionMenu" class="Zikula\MailerModule\Menu\ExtensionMenu" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\MailerModule\Menu\ExtensionMenu" class="Zikula\MailerModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\MenuModule\Block\Form\Type\MenuType" class="Zikula\MenuModule\Block\Form\Type\MenuType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\MenuModule\Block\Form\Type\MenuType" class="Zikula\MenuModule\Block\Form\Type\MenuType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\BlocksModule\BlockHandlerInterface.0.Zikula\MenuModule\Block\MenuBlock" class="Zikula\MenuModule\Block\MenuBlock" shared="false" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\MenuModule\Block\MenuBlock" class="Zikula\MenuModule\Block\MenuBlock" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\MenuModule\Controller\ConfigController" class="Zikula\MenuModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\MenuModule\Controller\ConfigController" class="Zikula\MenuModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\MenuModule\Controller\ConfigController" class="Zikula\MenuModule\Controller\ConfigController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\MenuModule\Controller\MenuController" class="Zikula\MenuModule\Controller\MenuController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\MenuModule\Controller\MenuController" class="Zikula\MenuModule\Controller\MenuController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\MenuModule\Controller\MenuController" class="Zikula\MenuModule\Controller\MenuController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\MenuModule\Controller\NodeController" class="Zikula\MenuModule\Controller\NodeController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\MenuModule\Controller\NodeController" class="Zikula\MenuModule\Controller\NodeController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\MenuModule\Controller\NodeController" class="Zikula\MenuModule\Controller\NodeController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\MenuModule\Entity\Repository\MenuItemRepository" class="Zikula\MenuModule\Entity\Repository\MenuItemRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\MenuModule\Entity\Repository\MenuItemRepository" class="Zikula\MenuModule\Entity\Repository\MenuItemRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\MenuModule\Form\EventListener\KeyValueFixerListener" class="Zikula\MenuModule\Form\EventListener\KeyValueFixerListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\MenuModule\Form\EventListener\KeyValueFixerListener" class="Zikula\MenuModule\Form\EventListener\KeyValueFixerListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\MenuModule\Form\EventListener\OptionValidatorListener" class="Zikula\MenuModule\Form\EventListener\OptionValidatorListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\MenuModule\Form\EventListener\OptionValidatorListener" class="Zikula\MenuModule\Form\EventListener\OptionValidatorListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\MenuModule\Form\Type\DeleteMenuItemType" class="Zikula\MenuModule\Form\Type\DeleteMenuItemType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\MenuModule\Form\Type\DeleteMenuItemType" class="Zikula\MenuModule\Form\Type\DeleteMenuItemType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\MenuModule\Form\Type\HiddenMenuItemType" class="Zikula\MenuModule\Form\Type\HiddenMenuItemType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\MenuModule\Form\Type\HiddenMenuItemType" class="Zikula\MenuModule\Form\Type\HiddenMenuItemType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\MenuModule\Form\Type\KeyValuePairType" class="Zikula\MenuModule\Form\Type\KeyValuePairType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\MenuModule\Form\Type\KeyValuePairType" class="Zikula\MenuModule\Form\Type\KeyValuePairType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\MenuModule\Form\Type\MenuItemType" class="Zikula\MenuModule\Form\Type\MenuItemType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\MenuModule\Form\Type\MenuItemType" class="Zikula\MenuModule\Form\Type\MenuItemType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\MenuModule\ExtensionMenu\ExtensionMenuInterface.0.Zikula\MenuModule\Menu\ExtensionMenu" class="Zikula\MenuModule\Menu\ExtensionMenu" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\MenuModule\Menu\ExtensionMenu" class="Zikula\MenuModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Knp\Menu\Matcher\Voter\VoterInterface.0.Zikula\MenuModule\Voter\RequestVoter" class="Zikula\MenuModule\Voter\RequestVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\MenuModule\Voter\RequestVoter" class="Zikula\MenuModule\Voter\RequestVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\PermissionsModule\Controller\ConfigController" class="Zikula\PermissionsModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\PermissionsModule\Controller\ConfigController" class="Zikula\PermissionsModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\PermissionsModule\Controller\ConfigController" class="Zikula\PermissionsModule\Controller\ConfigController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\PermissionsModule\Controller\PermissionController" class="Zikula\PermissionsModule\Controller\PermissionController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\PermissionsModule\Controller\PermissionController" class="Zikula\PermissionsModule\Controller\PermissionController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\PermissionsModule\Controller\PermissionController" class="Zikula\PermissionsModule\Controller\PermissionController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\PermissionsModule\Entity\Repository\PermissionRepository" class="Zikula\PermissionsModule\Entity\Repository\PermissionRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\PermissionsModule\Entity\Repository\PermissionRepository" class="Zikula\PermissionsModule\Entity\Repository\PermissionRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\PermissionsModule\Form\Type\ConfigType" class="Zikula\PermissionsModule\Form\Type\ConfigType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\PermissionsModule\Form\Type\ConfigType" class="Zikula\PermissionsModule\Form\Type\ConfigType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\PermissionsModule\Form\Type\FilterListType" class="Zikula\PermissionsModule\Form\Type\FilterListType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\PermissionsModule\Form\Type\FilterListType" class="Zikula\PermissionsModule\Form\Type\FilterListType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\PermissionsModule\Form\Type\PermissionCheckType" class="Zikula\PermissionsModule\Form\Type\PermissionCheckType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\PermissionsModule\Form\Type\PermissionCheckType" class="Zikula\PermissionsModule\Form\Type\PermissionCheckType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\PermissionsModule\Form\Type\PermissionType" class="Zikula\PermissionsModule\Form\Type\PermissionType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\PermissionsModule\Form\Type\PermissionType" class="Zikula\PermissionsModule\Form\Type\PermissionType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\PermissionsModule\Listener\Core3UpgradeListener" class="Zikula\PermissionsModule\Listener\Core3UpgradeListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\PermissionsModule\Listener\Core3UpgradeListener" class="Zikula\PermissionsModule\Listener\Core3UpgradeListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\PermissionsModule\Listener\GroupDeletionListener" class="Zikula\PermissionsModule\Listener\GroupDeletionListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\PermissionsModule\Listener\GroupDeletionListener" class="Zikula\PermissionsModule\Listener\GroupDeletionListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\MenuModule\ExtensionMenu\ExtensionMenuInterface.0.Zikula\PermissionsModule\Menu\ExtensionMenu" class="Zikula\PermissionsModule\Menu\ExtensionMenu" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\PermissionsModule\Menu\ExtensionMenu" class="Zikula\PermissionsModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Zikula\PermissionsModule\Twig\Extension\PermissionsExtension" class="Zikula\PermissionsModule\Twig\Extension\PermissionsExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\PermissionsModule\Twig\Extension\PermissionsExtension" class="Zikula\PermissionsModule\Twig\Extension\PermissionsExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\RoutesModule\Controller\AjaxController" class="Zikula\RoutesModule\Controller\AjaxController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\RoutesModule\Controller\AjaxController" class="Zikula\RoutesModule\Controller\AjaxController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Controller\AjaxController" class="Zikula\RoutesModule\Controller\AjaxController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\RoutesModule\Controller\ConfigController" class="Zikula\RoutesModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\RoutesModule\Controller\ConfigController" class="Zikula\RoutesModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Controller\ConfigController" class="Zikula\RoutesModule\Controller\ConfigController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\RoutesModule\Controller\RouteController" class="Zikula\RoutesModule\Controller\RouteController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\RoutesModule\Controller\RouteController" class="Zikula\RoutesModule\Controller\RouteController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Controller\RouteController" class="Zikula\RoutesModule\Controller\RouteController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\RoutesModule\Controller\UpdateController" class="Zikula\RoutesModule\Controller\UpdateController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\RoutesModule\Controller\UpdateController" class="Zikula\RoutesModule\Controller\UpdateController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Controller\UpdateController" class="Zikula\RoutesModule\Controller\UpdateController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\RoutesModule\Form\Type\ConfigType" class="Zikula\RoutesModule\Form\Type\ConfigType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Form\Type\ConfigType" class="Zikula\RoutesModule\Form\Type\ConfigType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\RoutesModule\Form\Type\Field\ArrayType" class="Zikula\RoutesModule\Form\Type\Field\ArrayType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Form\Type\Field\ArrayType" class="Zikula\RoutesModule\Form\Type\Field\ArrayType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\RoutesModule\Form\Type\Field\MultiListType" class="Zikula\RoutesModule\Form\Type\Field\MultiListType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Form\Type\Field\MultiListType" class="Zikula\RoutesModule\Form\Type\Field\MultiListType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\RoutesModule\Form\Type\QuickNavigation\RouteQuickNavType" class="Zikula\RoutesModule\Form\Type\QuickNavigation\RouteQuickNavType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Form\Type\QuickNavigation\RouteQuickNavType" class="Zikula\RoutesModule\Form\Type\QuickNavigation\RouteQuickNavType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\RoutesModule\Form\Type\RouteType" class="Zikula\RoutesModule\Form\Type\RouteType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Form\Type\RouteType" class="Zikula\RoutesModule\Form\Type\RouteType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\RoutesModule\Listener\GroupListener" class="Zikula\RoutesModule\Listener\GroupListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Listener\GroupListener" class="Zikula\RoutesModule\Listener\GroupListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\RoutesModule\Listener\InstallerListener" class="Zikula\RoutesModule\Listener\InstallerListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Listener\InstallerListener" class="Zikula\RoutesModule\Listener\InstallerListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\RoutesModule\Listener\KernelListener" class="Zikula\RoutesModule\Listener\KernelListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Listener\KernelListener" class="Zikula\RoutesModule\Listener\KernelListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\RoutesModule\Listener\MailerListener" class="Zikula\RoutesModule\Listener\MailerListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Listener\MailerListener" class="Zikula\RoutesModule\Listener\MailerListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\RoutesModule\Listener\ModuleDispatchListener" class="Zikula\RoutesModule\Listener\ModuleDispatchListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Listener\ModuleDispatchListener" class="Zikula\RoutesModule\Listener\ModuleDispatchListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\RoutesModule\Listener\ThemeListener" class="Zikula\RoutesModule\Listener\ThemeListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Listener\ThemeListener" class="Zikula\RoutesModule\Listener\ThemeListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\RoutesModule\Listener\UserListener" class="Zikula\RoutesModule\Listener\UserListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Listener\UserListener" class="Zikula\RoutesModule\Listener\UserListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\RoutesModule\Listener\UserLoginListener" class="Zikula\RoutesModule\Listener\UserLoginListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Listener\UserLoginListener" class="Zikula\RoutesModule\Listener\UserLoginListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\RoutesModule\Listener\UserLogoutListener" class="Zikula\RoutesModule\Listener\UserLogoutListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Listener\UserLogoutListener" class="Zikula\RoutesModule\Listener\UserLogoutListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\RoutesModule\Listener\UserRegistrationListener" class="Zikula\RoutesModule\Listener\UserRegistrationListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Listener\UserRegistrationListener" class="Zikula\RoutesModule\Listener\UserRegistrationListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\RoutesModule\Listener\UsersListener" class="Zikula\RoutesModule\Listener\UsersListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Listener\UsersListener" class="Zikula\RoutesModule\Listener\UsersListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\RoutesModule\Listener\WorkflowEventsListener" class="Zikula\RoutesModule\Listener\WorkflowEventsListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Listener\WorkflowEventsListener" class="Zikula\RoutesModule\Listener\WorkflowEventsListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\MenuModule\ExtensionMenu\ExtensionMenuInterface.0.Zikula\RoutesModule\Menu\ExtensionMenu" class="Zikula\RoutesModule\Menu\ExtensionMenu" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Menu\ExtensionMenu" class="Zikula\RoutesModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\RoutesModule\Translation\ConsoleCommandListener" class="Zikula\RoutesModule\Translation\ConsoleCommandListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Translation\ConsoleCommandListener" class="Zikula\RoutesModule\Translation\ConsoleCommandListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Zikula\RoutesModule\Twig\TwigExtension" class="Zikula\RoutesModule\Twig\TwigExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Twig\TwigExtension" class="Zikula\RoutesModule\Twig\TwigExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Zikula\RoutesModule\Validator\Constraints\ListEntryValidator" class="Zikula\RoutesModule\Validator\Constraints\ListEntryValidator" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\RoutesModule\Validator\Constraints\ListEntryValidator" class="Zikula\RoutesModule\Validator\Constraints\ListEntryValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\SearchModule\Block\Form\Type\SearchBlockType" class="Zikula\SearchModule\Block\Form\Type\SearchBlockType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SearchModule\Block\Form\Type\SearchBlockType" class="Zikula\SearchModule\Block\Form\Type\SearchBlockType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\BlocksModule\BlockHandlerInterface.0.Zikula\SearchModule\Block\SearchBlock" class="Zikula\SearchModule\Block\SearchBlock" shared="false" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SearchModule\Block\SearchBlock" class="Zikula\SearchModule\Block\SearchBlock" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\SearchModule\Controller\ConfigController" class="Zikula\SearchModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\SearchModule\Controller\ConfigController" class="Zikula\SearchModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SearchModule\Controller\ConfigController" class="Zikula\SearchModule\Controller\ConfigController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\SearchModule\Controller\SearchController" class="Zikula\SearchModule\Controller\SearchController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\SearchModule\Controller\SearchController" class="Zikula\SearchModule\Controller\SearchController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SearchModule\Controller\SearchController" class="Zikula\SearchModule\Controller\SearchController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\SearchModule\Entity\Repository\SearchResultRepository" class="Zikula\SearchModule\Entity\Repository\SearchResultRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SearchModule\Entity\Repository\SearchResultRepository" class="Zikula\SearchModule\Entity\Repository\SearchResultRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\SearchModule\Entity\Repository\SearchStatRepository" class="Zikula\SearchModule\Entity\Repository\SearchStatRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SearchModule\Entity\Repository\SearchStatRepository" class="Zikula\SearchModule\Entity\Repository\SearchStatRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\SearchModule\Form\Type\AmendableModuleSearchType" class="Zikula\SearchModule\Form\Type\AmendableModuleSearchType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SearchModule\Form\Type\AmendableModuleSearchType" class="Zikula\SearchModule\Form\Type\AmendableModuleSearchType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\SearchModule\Form\Type\ConfigType" class="Zikula\SearchModule\Form\Type\ConfigType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SearchModule\Form\Type\ConfigType" class="Zikula\SearchModule\Form\Type\ConfigType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\SearchModule\Form\Type\SearchType" class="Zikula\SearchModule\Form\Type\SearchType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SearchModule\Form\Type\SearchType" class="Zikula\SearchModule\Form\Type\SearchType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\SearchModule\Listener\FrontControllerListener" class="Zikula\SearchModule\Listener\FrontControllerListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SearchModule\Listener\FrontControllerListener" class="Zikula\SearchModule\Listener\FrontControllerListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\SearchModule\Listener\ModuleEventListener" class="Zikula\SearchModule\Listener\ModuleEventListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SearchModule\Listener\ModuleEventListener" class="Zikula\SearchModule\Listener\ModuleEventListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\MenuModule\ExtensionMenu\ExtensionMenuInterface.0.Zikula\SearchModule\Menu\ExtensionMenu" class="Zikula\SearchModule\Menu\ExtensionMenu" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SearchModule\Menu\ExtensionMenu" class="Zikula\SearchModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Zikula\SearchModule\Twig\TwigExtension" class="Zikula\SearchModule\Twig\TwigExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SearchModule\Twig\TwigExtension" class="Zikula\SearchModule\Twig\TwigExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\SecurityCenterModule\Controller\ConfigController" class="Zikula\SecurityCenterModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\SecurityCenterModule\Controller\ConfigController" class="Zikula\SecurityCenterModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SecurityCenterModule\Controller\ConfigController" class="Zikula\SecurityCenterModule\Controller\ConfigController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\SecurityCenterModule\Controller\IdsLogController" class="Zikula\SecurityCenterModule\Controller\IdsLogController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\SecurityCenterModule\Controller\IdsLogController" class="Zikula\SecurityCenterModule\Controller\IdsLogController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SecurityCenterModule\Controller\IdsLogController" class="Zikula\SecurityCenterModule\Controller\IdsLogController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\SecurityCenterModule\Entity\Repository\IntrusionRepository" class="Zikula\SecurityCenterModule\Entity\Repository\IntrusionRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SecurityCenterModule\Entity\Repository\IntrusionRepository" class="Zikula\SecurityCenterModule\Entity\Repository\IntrusionRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\SecurityCenterModule\Form\Type\ConfigType" class="Zikula\SecurityCenterModule\Form\Type\ConfigType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SecurityCenterModule\Form\Type\ConfigType" class="Zikula\SecurityCenterModule\Form\Type\ConfigType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\SecurityCenterModule\Form\Type\IdsLogExportType" class="Zikula\SecurityCenterModule\Form\Type\IdsLogExportType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SecurityCenterModule\Form\Type\IdsLogExportType" class="Zikula\SecurityCenterModule\Form\Type\IdsLogExportType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\SecurityCenterModule\Form\Type\IdsLogFilterType" class="Zikula\SecurityCenterModule\Form\Type\IdsLogFilterType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SecurityCenterModule\Form\Type\IdsLogFilterType" class="Zikula\SecurityCenterModule\Form\Type\IdsLogFilterType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\SecurityCenterModule\Listener\FilterListener" class="Zikula\SecurityCenterModule\Listener\FilterListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SecurityCenterModule\Listener\FilterListener" class="Zikula\SecurityCenterModule\Listener\FilterListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\SecurityCenterModule\Listener\PurifierListener" class="Zikula\SecurityCenterModule\Listener\PurifierListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SecurityCenterModule\Listener\PurifierListener" class="Zikula\SecurityCenterModule\Listener\PurifierListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\MenuModule\ExtensionMenu\ExtensionMenuInterface.0.Zikula\SecurityCenterModule\Menu\ExtensionMenu" class="Zikula\SecurityCenterModule\Menu\ExtensionMenu" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SecurityCenterModule\Menu\ExtensionMenu" class="Zikula\SecurityCenterModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Zikula\SecurityCenterModule\Twig\TwigExtension" class="Zikula\SecurityCenterModule\Twig\TwigExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SecurityCenterModule\Twig\TwigExtension" class="Zikula\SecurityCenterModule\Twig\TwigExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\BlocksModule\BlockHandlerInterface.0.Zikula\SettingsModule\Block\LocaleBlock" class="Zikula\SettingsModule\Block\LocaleBlock" shared="false" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SettingsModule\Block\LocaleBlock" class="Zikula\SettingsModule\Block\LocaleBlock" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\SettingsModule\Controller\SettingsController" class="Zikula\SettingsModule\Controller\SettingsController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\SettingsModule\Controller\SettingsController" class="Zikula\SettingsModule\Controller\SettingsController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SettingsModule\Controller\SettingsController" class="Zikula\SettingsModule\Controller\SettingsController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\SettingsModule\Form\Type\LocaleSettingsType" class="Zikula\SettingsModule\Form\Type\LocaleSettingsType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SettingsModule\Form\Type\LocaleSettingsType" class="Zikula\SettingsModule\Form\Type\LocaleSettingsType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\SettingsModule\Form\Type\MainSettingsType" class="Zikula\SettingsModule\Form\Type\MainSettingsType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SettingsModule\Form\Type\MainSettingsType" class="Zikula\SettingsModule\Form\Type\MainSettingsType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\SettingsModule\Listener\ExtensionInstallerListener" class="Zikula\SettingsModule\Listener\ExtensionInstallerListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SettingsModule\Listener\ExtensionInstallerListener" class="Zikula\SettingsModule\Listener\ExtensionInstallerListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\SettingsModule\Listener\LocaleListener" class="Zikula\SettingsModule\Listener\LocaleListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SettingsModule\Listener\LocaleListener" class="Zikula\SettingsModule\Listener\LocaleListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\SettingsModule\Listener\LocalizedVariableListener" class="Zikula\SettingsModule\Listener\LocalizedVariableListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SettingsModule\Listener\LocalizedVariableListener" class="Zikula\SettingsModule\Listener\LocalizedVariableListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\SettingsModule\Listener\ModuleListener" class="Zikula\SettingsModule\Listener\ModuleListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SettingsModule\Listener\ModuleListener" class="Zikula\SettingsModule\Listener\ModuleListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\SettingsModule\Listener\TranslationUiListener" class="Zikula\SettingsModule\Listener\TranslationUiListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SettingsModule\Listener\TranslationUiListener" class="Zikula\SettingsModule\Listener\TranslationUiListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\MenuModule\ExtensionMenu\ExtensionMenuInterface.0.Zikula\SettingsModule\Menu\ExtensionMenu" class="Zikula\SettingsModule\Menu\ExtensionMenu" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SettingsModule\Menu\ExtensionMenu" class="Zikula\SettingsModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Zikula\SettingsModule\Validator\Constraints\ValidControllerValidator" class="Zikula\SettingsModule\Validator\Constraints\ValidControllerValidator" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\SettingsModule\Validator\Constraints\ValidControllerValidator" class="Zikula\SettingsModule\Validator\Constraints\ValidControllerValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\ThemeModule\Controller\CombinedAssetController" class="Zikula\ThemeModule\Controller\CombinedAssetController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\ThemeModule\Controller\CombinedAssetController" class="Zikula\ThemeModule\Controller\CombinedAssetController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ThemeModule\Controller\CombinedAssetController" class="Zikula\ThemeModule\Controller\CombinedAssetController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\ThemeModule\Controller\ThemeController" class="Zikula\ThemeModule\Controller\ThemeController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\ThemeModule\Controller\ThemeController" class="Zikula\ThemeModule\Controller\ThemeController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ThemeModule\Controller\ThemeController" class="Zikula\ThemeModule\Controller\ThemeController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\ThemeModule\Controller\VarController" class="Zikula\ThemeModule\Controller\VarController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\ThemeModule\Controller\VarController" class="Zikula\ThemeModule\Controller\VarController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ThemeModule\Controller\VarController" class="Zikula\ThemeModule\Controller\VarController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\ThemeModule\Entity\Repository\ThemeEntityRepository" class="Zikula\ThemeModule\Entity\Repository\ThemeEntityRepository" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ThemeModule\Entity\Repository\ThemeEntityRepository" class="Zikula\ThemeModule\Entity\Repository\ThemeEntityRepository" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\ThemeModule\EventListener\AddJSConfigListener" class="Zikula\ThemeModule\EventListener\AddJSConfigListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ThemeModule\EventListener\AddJSConfigListener" class="Zikula\ThemeModule\EventListener\AddJSConfigListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\ThemeModule\EventListener\ControllerAnnotationReaderListener" class="Zikula\ThemeModule\EventListener\ControllerAnnotationReaderListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ThemeModule\EventListener\ControllerAnnotationReaderListener" class="Zikula\ThemeModule\EventListener\ControllerAnnotationReaderListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\ThemeModule\EventListener\Core3UpgradeListener" class="Zikula\ThemeModule\EventListener\Core3UpgradeListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ThemeModule\EventListener\Core3UpgradeListener" class="Zikula\ThemeModule\EventListener\Core3UpgradeListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\ThemeModule\EventListener\CreateThemedResponseListener" class="Zikula\ThemeModule\EventListener\CreateThemedResponseListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ThemeModule\EventListener\CreateThemedResponseListener" class="Zikula\ThemeModule\EventListener\CreateThemedResponseListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\ThemeModule\EventListener\DefaultPageAssetSetterListener" class="Zikula\ThemeModule\EventListener\DefaultPageAssetSetterListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ThemeModule\EventListener\DefaultPageAssetSetterListener" class="Zikula\ThemeModule\EventListener\DefaultPageAssetSetterListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\ThemeModule\EventListener\DefaultPageVarSetterListener" class="Zikula\ThemeModule\EventListener\DefaultPageVarSetterListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ThemeModule\EventListener\DefaultPageVarSetterListener" class="Zikula\ThemeModule\EventListener\DefaultPageVarSetterListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\ThemeModule\EventListener\ExtensionInstallationListener" class="Zikula\ThemeModule\EventListener\ExtensionInstallationListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ThemeModule\EventListener\ExtensionInstallationListener" class="Zikula\ThemeModule\EventListener\ExtensionInstallationListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\ThemeModule\EventListener\ModuleStylesheetInsertListener" class="Zikula\ThemeModule\EventListener\ModuleStylesheetInsertListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ThemeModule\EventListener\ModuleStylesheetInsertListener" class="Zikula\ThemeModule\EventListener\ModuleStylesheetInsertListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\ThemeModule\EventListener\TemplateNameExposeListener" class="Zikula\ThemeModule\EventListener\TemplateNameExposeListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ThemeModule\EventListener\TemplateNameExposeListener" class="Zikula\ThemeModule\EventListener\TemplateNameExposeListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\ThemeModule\EventListener\TemplatePathOverrideListener" class="Zikula\ThemeModule\EventListener\TemplatePathOverrideListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ThemeModule\EventListener\TemplatePathOverrideListener" class="Zikula\ThemeModule\EventListener\TemplatePathOverrideListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\ThemeModule\Form\Type\DeleteThemeType" class="Zikula\ThemeModule\Form\Type\DeleteThemeType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ThemeModule\Form\Type\DeleteThemeType" class="Zikula\ThemeModule\Form\Type\DeleteThemeType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\ThemeModule\Form\Type\SetDefaultThemeType" class="Zikula\ThemeModule\Form\Type\SetDefaultThemeType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ThemeModule\Form\Type\SetDefaultThemeType" class="Zikula\ThemeModule\Form\Type\SetDefaultThemeType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\MenuModule\ExtensionMenu\ExtensionMenuInterface.0.Zikula\ThemeModule\Menu\ExtensionMenu" class="Zikula\ThemeModule\Menu\ExtensionMenu" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ThemeModule\Menu\ExtensionMenu" class="Zikula\ThemeModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Zikula\ThemeModule\Twig\Extension\PageVarExtension" class="Zikula\ThemeModule\Twig\Extension\PageVarExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ThemeModule\Twig\Extension\PageVarExtension" class="Zikula\ThemeModule\Twig\Extension\PageVarExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Zikula\ThemeModule\Twig\Extension\ThemeExtension" class="Zikula\ThemeModule\Twig\Extension\ThemeExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ThemeModule\Twig\Extension\ThemeExtension" class="Zikula\ThemeModule\Twig\Extension\ThemeExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\BlocksModule\BlockHandlerInterface.0.Zikula\UsersModule\Block\AccountLinksBlock" class="Zikula\UsersModule\Block\AccountLinksBlock" shared="false" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Block\AccountLinksBlock" class="Zikula\UsersModule\Block\AccountLinksBlock" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\BlocksModule\BlockHandlerInterface.0.Zikula\UsersModule\Block\LoginBlock" class="Zikula\UsersModule\Block\LoginBlock" shared="false" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Block\LoginBlock" class="Zikula\UsersModule\Block\LoginBlock" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\BlocksModule\BlockHandlerInterface.0.Zikula\UsersModule\Block\OnlineBlock" class="Zikula\UsersModule\Block\OnlineBlock" shared="false" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Block\OnlineBlock" class="Zikula\UsersModule\Block\OnlineBlock" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\UsersModule\Controller\AccessController" class="Zikula\UsersModule\Controller\AccessController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\UsersModule\Controller\AccessController" class="Zikula\UsersModule\Controller\AccessController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Controller\AccessController" class="Zikula\UsersModule\Controller\AccessController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\UsersModule\Controller\AccountController" class="Zikula\UsersModule\Controller\AccountController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\UsersModule\Controller\AccountController" class="Zikula\UsersModule\Controller\AccountController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Controller\AccountController" class="Zikula\UsersModule\Controller\AccountController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\UsersModule\Controller\ConfigController" class="Zikula\UsersModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\UsersModule\Controller\ConfigController" class="Zikula\UsersModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Controller\ConfigController" class="Zikula\UsersModule\Controller\ConfigController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\UsersModule\Controller\FileIOController" class="Zikula\UsersModule\Controller\FileIOController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\UsersModule\Controller\FileIOController" class="Zikula\UsersModule\Controller\FileIOController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Controller\FileIOController" class="Zikula\UsersModule\Controller\FileIOController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\UsersModule\Controller\LiveSearchController" class="Zikula\UsersModule\Controller\LiveSearchController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\UsersModule\Controller\LiveSearchController" class="Zikula\UsersModule\Controller\LiveSearchController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Controller\LiveSearchController" class="Zikula\UsersModule\Controller\LiveSearchController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\UsersModule\Controller\RegistrationController" class="Zikula\UsersModule\Controller\RegistrationController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\UsersModule\Controller\RegistrationController" class="Zikula\UsersModule\Controller\RegistrationController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Controller\RegistrationController" class="Zikula\UsersModule\Controller\RegistrationController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\UsersModule\Controller\UserAdministrationController" class="Zikula\UsersModule\Controller\UserAdministrationController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\UsersModule\Controller\UserAdministrationController" class="Zikula\UsersModule\Controller\UserAdministrationController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Controller\UserAdministrationController" class="Zikula\UsersModule\Controller\UserAdministrationController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\UsersModule\Entity\Repository\UserAttributeRepository" class="Zikula\UsersModule\Entity\Repository\UserAttributeRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Entity\Repository\UserAttributeRepository" class="Zikula\UsersModule\Entity\Repository\UserAttributeRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\UsersModule\Entity\Repository\UserRepository" class="Zikula\UsersModule\Entity\Repository\UserRepository" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Entity\Repository\UserRepository" class="Zikula\UsersModule\Entity\Repository\UserRepository" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\UsersModule\Entity\Repository\UserSessionRepository" class="Zikula\UsersModule\Entity\Repository\UserSessionRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Entity\Repository\UserSessionRepository" class="Zikula\UsersModule\Entity\Repository\UserSessionRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\UsersModule\Form\Type\AdminModifyUserType" class="Zikula\UsersModule\Form\Type\AdminModifyUserType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Form\Type\AdminModifyUserType" class="Zikula\UsersModule\Form\Type\AdminModifyUserType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\UsersModule\Form\Type\ChangeLanguageType" class="Zikula\UsersModule\Form\Type\ChangeLanguageType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Form\Type\ChangeLanguageType" class="Zikula\UsersModule\Form\Type\ChangeLanguageType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\UsersModule\Form\Type\ConfigType\AuthenticationMethodsType" class="Zikula\UsersModule\Form\Type\ConfigType\AuthenticationMethodsType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Form\Type\ConfigType\AuthenticationMethodsType" class="Zikula\UsersModule\Form\Type\ConfigType\AuthenticationMethodsType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\UsersModule\Form\Type\ConfigType\ConfigType" class="Zikula\UsersModule\Form\Type\ConfigType\ConfigType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Form\Type\ConfigType\ConfigType" class="Zikula\UsersModule\Form\Type\ConfigType\ConfigType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\UsersModule\Form\Type\DefaultLoginType" class="Zikula\UsersModule\Form\Type\DefaultLoginType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Form\Type\DefaultLoginType" class="Zikula\UsersModule\Form\Type\DefaultLoginType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\UsersModule\Form\Type\DeleteConfirmationType" class="Zikula\UsersModule\Form\Type\DeleteConfirmationType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Form\Type\DeleteConfirmationType" class="Zikula\UsersModule\Form\Type\DeleteConfirmationType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\UsersModule\Form\Type\DeleteType" class="Zikula\UsersModule\Form\Type\DeleteType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Form\Type\DeleteType" class="Zikula\UsersModule\Form\Type\DeleteType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\UsersModule\Form\Type\ExportUsersType" class="Zikula\UsersModule\Form\Type\ExportUsersType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Form\Type\ExportUsersType" class="Zikula\UsersModule\Form\Type\ExportUsersType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\UsersModule\Form\Type\MailType" class="Zikula\UsersModule\Form\Type\MailType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Form\Type\MailType" class="Zikula\UsersModule\Form\Type\MailType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\UsersModule\Form\Type\RegistrationType\ApproveRegistrationConfirmationType" class="Zikula\UsersModule\Form\Type\RegistrationType\ApproveRegistrationConfirmationType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Form\Type\RegistrationType\ApproveRegistrationConfirmationType" class="Zikula\UsersModule\Form\Type\RegistrationType\ApproveRegistrationConfirmationType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\UsersModule\Form\Type\RegistrationType\DefaultRegistrationType" class="Zikula\UsersModule\Form\Type\RegistrationType\DefaultRegistrationType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Form\Type\RegistrationType\DefaultRegistrationType" class="Zikula\UsersModule\Form\Type\RegistrationType\DefaultRegistrationType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\UsersModule\Form\Type\SearchUserType" class="Zikula\UsersModule\Form\Type\SearchUserType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Form\Type\SearchUserType" class="Zikula\UsersModule\Form\Type\SearchUserType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\UsersModule\Form\Type\UserLiveSearchType" class="Zikula\UsersModule\Form\Type\UserLiveSearchType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Form\Type\UserLiveSearchType" class="Zikula\UsersModule\Form\Type\UserLiveSearchType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\SearchModule\SearchableInterface.0.Zikula\UsersModule\Helper\SearchHelper" class="Zikula\UsersModule\Helper\SearchHelper" public="false" lazy="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Helper\SearchHelper" class="Zikula\UsersModule\Helper\SearchHelper" public="false" lazy="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\Bundle\HookBundle\HookSubscriberInterface.0.Zikula\UsersModule\HookSubscriber\LoginUiHooksSubscriber" class="Zikula\UsersModule\HookSubscriber\LoginUiHooksSubscriber" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\HookSubscriber\LoginUiHooksSubscriber" class="Zikula\UsersModule\HookSubscriber\LoginUiHooksSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\Bundle\HookBundle\HookSubscriberInterface.0.Zikula\UsersModule\HookSubscriber\RegistrationUiHooksSubscriber" class="Zikula\UsersModule\HookSubscriber\RegistrationUiHooksSubscriber" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\HookSubscriber\RegistrationUiHooksSubscriber" class="Zikula\UsersModule\HookSubscriber\RegistrationUiHooksSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\Bundle\HookBundle\HookSubscriberInterface.0.Zikula\UsersModule\HookSubscriber\UserManagementUiHooksSubscriber" class="Zikula\UsersModule\HookSubscriber\UserManagementUiHooksSubscriber" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\HookSubscriber\UserManagementUiHooksSubscriber" class="Zikula\UsersModule\HookSubscriber\UserManagementUiHooksSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\UsersModule\Listener\PendingContentListener" class="Zikula\UsersModule\Listener\PendingContentListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Listener\PendingContentListener" class="Zikula\UsersModule\Listener\PendingContentListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\UsersModule\Listener\RegistrationEventsListener" class="Zikula\UsersModule\Listener\RegistrationEventsListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Listener\RegistrationEventsListener" class="Zikula\UsersModule\Listener\RegistrationEventsListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\UsersModule\Listener\UserEventListener" class="Zikula\UsersModule\Listener\UserEventListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Listener\UserEventListener" class="Zikula\UsersModule\Listener\UserEventListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\MenuModule\ExtensionMenu\ExtensionMenuInterface.0.Zikula\UsersModule\Menu\ExtensionMenu" class="Zikula\UsersModule\Menu\ExtensionMenu" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Menu\ExtensionMenu" class="Zikula\UsersModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\UsersModule\MessageModule\MessageModuleInterface.0.Zikula\UsersModule\MessageModule\IdentityMessageModule" class="Zikula\UsersModule\MessageModule\IdentityMessageModule" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\MessageModule\IdentityMessageModule" class="Zikula\UsersModule\MessageModule\IdentityMessageModule" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\UsersModule\ProfileModule\ProfileModuleInterface.0.Zikula\UsersModule\ProfileModule\IdentityProfileModule" class="Zikula\UsersModule\ProfileModule\IdentityProfileModule" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\ProfileModule\IdentityProfileModule" class="Zikula\UsersModule\ProfileModule\IdentityProfileModule" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Zikula\UsersModule\Twig\Extension\MessageExtension" class="Zikula\UsersModule\Twig\Extension\MessageExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Twig\Extension\MessageExtension" class="Zikula\UsersModule\Twig\Extension\MessageExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Zikula\UsersModule\Twig\Extension\OnlineExtension" class="Zikula\UsersModule\Twig\Extension\OnlineExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Twig\Extension\OnlineExtension" class="Zikula\UsersModule\Twig\Extension\OnlineExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Zikula\UsersModule\Twig\Extension\ProfileExtension" class="Zikula\UsersModule\Twig\Extension\ProfileExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Twig\Extension\ProfileExtension" class="Zikula\UsersModule\Twig\Extension\ProfileExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Zikula\UsersModule\Validator\Constraints\ValidEmailValidator" class="Zikula\UsersModule\Validator\Constraints\ValidEmailValidator" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Validator\Constraints\ValidEmailValidator" class="Zikula\UsersModule\Validator\Constraints\ValidEmailValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Zikula\UsersModule\Validator\Constraints\ValidUnameValidator" class="Zikula\UsersModule\Validator\Constraints\ValidUnameValidator" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Validator\Constraints\ValidUnameValidator" class="Zikula\UsersModule\Validator\Constraints\ValidUnameValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Zikula\UsersModule\Validator\Constraints\ValidUserFieldsValidator" class="Zikula\UsersModule\Validator\Constraints\ValidUserFieldsValidator" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\UsersModule\Validator\Constraints\ValidUserFieldsValidator" class="Zikula\UsersModule\Validator\Constraints\ValidUserFieldsValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\UsersModule\AuthenticationMethodInterface\AuthenticationMethodInterface.0.Zikula\ZAuthModule\AuthenticationMethod\NativeEitherAuthenticationMethod" class="Zikula\ZAuthModule\AuthenticationMethod\NativeEitherAuthenticationMethod" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\AuthenticationMethod\NativeEitherAuthenticationMethod" class="Zikula\ZAuthModule\AuthenticationMethod\NativeEitherAuthenticationMethod" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\UsersModule\AuthenticationMethodInterface\AuthenticationMethodInterface.0.Zikula\ZAuthModule\AuthenticationMethod\NativeEmailAuthenticationMethod" class="Zikula\ZAuthModule\AuthenticationMethod\NativeEmailAuthenticationMethod" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\AuthenticationMethod\NativeEmailAuthenticationMethod" class="Zikula\ZAuthModule\AuthenticationMethod\NativeEmailAuthenticationMethod" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\UsersModule\AuthenticationMethodInterface\AuthenticationMethodInterface.0.Zikula\ZAuthModule\AuthenticationMethod\NativeUnameAuthenticationMethod" class="Zikula\ZAuthModule\AuthenticationMethod\NativeUnameAuthenticationMethod" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\AuthenticationMethod\NativeUnameAuthenticationMethod" class="Zikula\ZAuthModule\AuthenticationMethod\NativeUnameAuthenticationMethod" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\ZAuthModule\Controller\AccountController" class="Zikula\ZAuthModule\Controller\AccountController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\ZAuthModule\Controller\AccountController" class="Zikula\ZAuthModule\Controller\AccountController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Controller\AccountController" class="Zikula\ZAuthModule\Controller\AccountController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\ZAuthModule\Controller\ConfigController" class="Zikula\ZAuthModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\ZAuthModule\Controller\ConfigController" class="Zikula\ZAuthModule\Controller\ConfigController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Controller\ConfigController" class="Zikula\ZAuthModule\Controller\ConfigController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\ZAuthModule\Controller\FileIOController" class="Zikula\ZAuthModule\Controller\FileIOController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\ZAuthModule\Controller\FileIOController" class="Zikula\ZAuthModule\Controller\FileIOController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Controller\FileIOController" class="Zikula\ZAuthModule\Controller\FileIOController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\ZAuthModule\Controller\RegistrationController" class="Zikula\ZAuthModule\Controller\RegistrationController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\ZAuthModule\Controller\RegistrationController" class="Zikula\ZAuthModule\Controller\RegistrationController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Controller\RegistrationController" class="Zikula\ZAuthModule\Controller\RegistrationController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Zikula\ZAuthModule\Controller\UserAdministrationController" class="Zikula\ZAuthModule\Controller\UserAdministrationController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Zikula\ZAuthModule\Controller\UserAdministrationController" class="Zikula\ZAuthModule\Controller\UserAdministrationController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Controller\UserAdministrationController" class="Zikula\ZAuthModule\Controller\UserAdministrationController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository" class="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository" class="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository" class="Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository" class="Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\ZAuthModule\Form\Type\AdminCreatedUserType" class="Zikula\ZAuthModule\Form\Type\AdminCreatedUserType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Form\Type\AdminCreatedUserType" class="Zikula\ZAuthModule\Form\Type\AdminCreatedUserType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\ZAuthModule\Form\Type\AdminModifyUserType" class="Zikula\ZAuthModule\Form\Type\AdminModifyUserType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Form\Type\AdminModifyUserType" class="Zikula\ZAuthModule\Form\Type\AdminModifyUserType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\ZAuthModule\Form\Type\ChangeEmailType" class="Zikula\ZAuthModule\Form\Type\ChangeEmailType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Form\Type\ChangeEmailType" class="Zikula\ZAuthModule\Form\Type\ChangeEmailType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\ZAuthModule\Form\Type\ChangePasswordType" class="Zikula\ZAuthModule\Form\Type\ChangePasswordType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Form\Type\ChangePasswordType" class="Zikula\ZAuthModule\Form\Type\ChangePasswordType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\ZAuthModule\Form\Type\ConfigType" class="Zikula\ZAuthModule\Form\Type\ConfigType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Form\Type\ConfigType" class="Zikula\ZAuthModule\Form\Type\ConfigType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\ZAuthModule\Form\Type\EitherLoginType" class="Zikula\ZAuthModule\Form\Type\EitherLoginType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Form\Type\EitherLoginType" class="Zikula\ZAuthModule\Form\Type\EitherLoginType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\ZAuthModule\Form\Type\EmailLoginType" class="Zikula\ZAuthModule\Form\Type\EmailLoginType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Form\Type\EmailLoginType" class="Zikula\ZAuthModule\Form\Type\EmailLoginType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\ZAuthModule\Form\Type\ImportUserType" class="Zikula\ZAuthModule\Form\Type\ImportUserType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Form\Type\ImportUserType" class="Zikula\ZAuthModule\Form\Type\ImportUserType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\ZAuthModule\Form\Type\LostPasswordType" class="Zikula\ZAuthModule\Form\Type\LostPasswordType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Form\Type\LostPasswordType" class="Zikula\ZAuthModule\Form\Type\LostPasswordType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\ZAuthModule\Form\Type\LostUserNameType" class="Zikula\ZAuthModule\Form\Type\LostUserNameType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Form\Type\LostUserNameType" class="Zikula\ZAuthModule\Form\Type\LostUserNameType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\ZAuthModule\Form\Type\RegistrationType" class="Zikula\ZAuthModule\Form\Type\RegistrationType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Form\Type\RegistrationType" class="Zikula\ZAuthModule\Form\Type\RegistrationType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\ZAuthModule\Form\Type\SendVerificationConfirmationType" class="Zikula\ZAuthModule\Form\Type\SendVerificationConfirmationType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Form\Type\SendVerificationConfirmationType" class="Zikula\ZAuthModule\Form\Type\SendVerificationConfirmationType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\ZAuthModule\Form\Type\TogglePasswordConfirmationType" class="Zikula\ZAuthModule\Form\Type\TogglePasswordConfirmationType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Form\Type\TogglePasswordConfirmationType" class="Zikula\ZAuthModule\Form\Type\TogglePasswordConfirmationType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\ZAuthModule\Form\Type\UnameLoginType" class="Zikula\ZAuthModule\Form\Type\UnameLoginType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Form\Type\UnameLoginType" class="Zikula\ZAuthModule\Form\Type\UnameLoginType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Zikula\ZAuthModule\Form\Type\VerifyRegistrationType" class="Zikula\ZAuthModule\Form\Type\VerifyRegistrationType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Form\Type\VerifyRegistrationType" class="Zikula\ZAuthModule\Form\Type\VerifyRegistrationType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\ZAuthModule\Listener\RegistrationListener" class="Zikula\ZAuthModule\Listener\RegistrationListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Listener\RegistrationListener" class="Zikula\ZAuthModule\Listener\RegistrationListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\ZAuthModule\Listener\UserDeleteListener" class="Zikula\ZAuthModule\Listener\UserDeleteListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Listener\UserDeleteListener" class="Zikula\ZAuthModule\Listener\UserDeleteListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Zikula\ZAuthModule\Listener\UserEventListener" class="Zikula\ZAuthModule\Listener\UserEventListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Listener\UserEventListener" class="Zikula\ZAuthModule\Listener\UserEventListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Zikula\MenuModule\ExtensionMenu\ExtensionMenuInterface.0.Zikula\ZAuthModule\Menu\ExtensionMenu" class="Zikula\ZAuthModule\Menu\ExtensionMenu" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Menu\ExtensionMenu" class="Zikula\ZAuthModule\Menu\ExtensionMenu" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Zikula\ZAuthModule\Validator\Constraints\ValidAntiSpamAnswerValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidAntiSpamAnswerValidator" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Validator\Constraints\ValidAntiSpamAnswerValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidAntiSpamAnswerValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Zikula\ZAuthModule\Validator\Constraints\ValidEmailValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidEmailValidator" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Validator\Constraints\ValidEmailValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidEmailValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Zikula\ZAuthModule\Validator\Constraints\ValidPasswordChangeValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidPasswordChangeValidator" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Validator\Constraints\ValidPasswordChangeValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidPasswordChangeValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Zikula\ZAuthModule\Validator\Constraints\ValidPasswordValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidPasswordValidator" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Validator\Constraints\ValidPasswordValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidPasswordValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Zikula\ZAuthModule\Validator\Constraints\ValidRegistrationVerificationValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidRegistrationVerificationValidator" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Validator\Constraints\ValidRegistrationVerificationValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidRegistrationVerificationValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Zikula\ZAuthModule\Validator\Constraints\ValidUnameValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidUnameValidator" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Validator\Constraints\ValidUnameValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidUnameValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Zikula\ZAuthModule\Validator\Constraints\ValidUserFieldsValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidUserFieldsValidator" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Zikula\ZAuthModule\Validator\Constraints\ValidUserFieldsValidator" class="Zikula\ZAuthModule\Validator\Constraints\ValidUserFieldsValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".service_locator.CmORmuK" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service" id="container.env_var_processor"/>
        <argument key="bool" type="service" id="container.env_var_processor"/>
        <argument key="const" type="service" id="container.env_var_processor"/>
        <argument key="csv" type="service" id="container.env_var_processor"/>
        <argument key="default" type="service" id="container.env_var_processor"/>
        <argument key="file" type="service" id="container.env_var_processor"/>
        <argument key="float" type="service" id="container.env_var_processor"/>
        <argument key="int" type="service" id="container.env_var_processor"/>
        <argument key="json" type="service" id="container.env_var_processor"/>
        <argument key="key" type="service" id="container.env_var_processor"/>
        <argument key="query_string" type="service" id="container.env_var_processor"/>
        <argument key="require" type="service" id="container.env_var_processor"/>
        <argument key="resolve" type="service" id="container.env_var_processor"/>
        <argument key="string" type="service" id="container.env_var_processor"/>
        <argument key="trim" type="service" id="container.env_var_processor"/>
        <argument key="url" type="service" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id=".service_locator.9Ua32ha" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="collector" type="service" id="Zikula\Bundle\HookBundle\Collector\HookCollector"/>
        <argument key="dispatcher" type="service" id="Zikula\Bundle\HookBundle\Dispatcher\HookDispatcher"/>
        <argument key="extensionRepository" type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
        <argument key="permissionApi" type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
        <argument key="requestStack" type="service" id="request_stack"/>
      </argument>
    </service>
    <service id=".service_locator.3ir3T5X" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="collector" type="service" id="Zikula\Bundle\HookBundle\Collector\HookCollector"/>
        <argument key="dispatcher" type="service" id="Zikula\Bundle\HookBundle\Dispatcher\HookDispatcher"/>
        <argument key="kernel" type="service" id="kernel"/>
        <argument key="permissionApi" type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
        <argument key="translator" type="service" id="translator.default"/>
      </argument>
    </service>
    <service id=".service_locator.T5htiMj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="collector" type="service" id="Zikula\Bundle\HookBundle\Collector\HookCollector"/>
        <argument key="hookDispatcher" type="service" id="Zikula\Bundle\HookBundle\Dispatcher\HookDispatcher"/>
        <argument key="kernel" type="service" id="kernel"/>
        <argument key="permissionApi" type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
        <argument key="translator" type="service" id="translator.default"/>
      </argument>
    </service>
    <service id=".service_locator.SRnkpTI" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.default"/>
      </argument>
    </service>
    <service id=".service_locator.woEf4Un" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="container" type="service" id="service_container"/>
        <argument key="permissionApi" type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
        <argument key="translator" type="service" id="translator.default"/>
        <argument key="workflowRegistry" type="service" id="workflow.registry"/>
      </argument>
    </service>
    <service id=".service_locator.Q6Excfe" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="repository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminCategoryRepository"/>
      </argument>
    </service>
    <service id=".service_locator.qi_rkSP" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="category" type="service" id="Zikula\AdminModule\Entity\AdminCategoryEntity"/>
      </argument>
    </service>
    <service id=".service_locator.ddxR4fK" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="adminCategoryRepository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminCategoryRepository"/>
        <argument key="adminLinksHelper" type="service" id="Zikula\AdminModule\Helper\AdminLinksHelper"/>
        <argument key="adminModuleRepository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminModuleRepository"/>
        <argument key="capabilityApi" type="service" id="Zikula\ExtensionsModule\Api\CapabilityApi"/>
        <argument key="extensionMenuCollector" type="service" id="Zikula\MenuModule\ExtensionMenu\ExtensionMenuCollector"/>
        <argument key="kernel" type="service" id="kernel"/>
        <argument key="router" type="service" id="jms_i18n_routing.router"/>
      </argument>
    </service>
    <service id=".service_locator.gxU0C5u" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="adminCategoryRepository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminCategoryRepository"/>
        <argument key="adminLinksHelper" type="service" id="Zikula\AdminModule\Helper\AdminLinksHelper"/>
        <argument key="adminModuleRepository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminModuleRepository"/>
        <argument key="capabilityApi" type="service" id="Zikula\ExtensionsModule\Api\CapabilityApi"/>
        <argument key="router" type="service" id="jms_i18n_routing.router"/>
      </argument>
    </service>
    <service id=".service_locator.hjzXoCw" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id=".service_locator.DxQr8Um" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="requestStack" type="service" id="request_stack"/>
      </argument>
    </service>
    <service id=".service_locator.CNpdA_S" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="extensionRepository" type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
        <argument key="requestStack" type="service" id="request_stack"/>
      </argument>
    </service>
    <service id=".service_locator.wTOCTmi" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="adminCategoryRepository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminCategoryRepository"/>
        <argument key="adminModuleRepository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminModuleRepository"/>
        <argument key="extensionRepository" type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
        <argument key="requestStack" type="service" id="request_stack"/>
      </argument>
    </service>
    <service id=".service_locator.ZYCs5qz" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service" id="kernel"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.ARmHTLY" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service" id="kernel"/>
        <argument key="requestStack" type="service" id="request_stack"/>
        <argument key="updateCheckHelper" type="service" id="Zikula\AdminModule\Helper\UpdateCheckHelper"/>
      </argument>
    </service>
    <service id=".service_locator.Qd2v43d" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="adminCategoryRepository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminCategoryRepository"/>
        <argument key="adminModuleRepository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminModuleRepository"/>
        <argument key="capabilityApi" type="service" id="Zikula\ExtensionsModule\Api\CapabilityApi"/>
        <argument key="extensionMenuCollector" type="service" id="Zikula\MenuModule\ExtensionMenu\ExtensionMenuCollector"/>
        <argument key="extensionRepository" type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
        <argument key="requestStack" type="service" id="request_stack"/>
        <argument key="router" type="service" id="jms_i18n_routing.router"/>
      </argument>
    </service>
    <service id=".service_locator.8493evj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="adminCategoryRepository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminCategoryRepository"/>
        <argument key="adminModuleRepository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminModuleRepository"/>
        <argument key="extensionRepository" type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
        <argument key="router" type="service" id="jms_i18n_routing.router"/>
      </argument>
    </service>
    <service id=".service_locator.E8jKebo" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="adminCategoryRepository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminCategoryRepository"/>
        <argument key="router" type="service" id="jms_i18n_routing.router"/>
      </argument>
    </service>
    <service id=".service_locator.zkRr5GG" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="adminCategoryRepository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminCategoryRepository"/>
        <argument key="adminModuleRepository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminModuleRepository"/>
      </argument>
    </service>
    <service id=".service_locator.UYLqkkP" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="adminCategoryRepository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminCategoryRepository"/>
      </argument>
    </service>
    <service id=".service_locator.6oiuNod" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="adminCategoryRepository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminCategoryRepository"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.DVCX.KX" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="adminModuleRepository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminModuleRepository"/>
      </argument>
    </service>
    <service id=".service_locator.o2lcBnc" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="adminCategoryRepository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminCategoryRepository"/>
        <argument key="adminModuleHelper" type="service" id="Zikula\AdminModule\Helper\AdminModuleHelper"/>
        <argument key="adminModuleRepository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminModuleRepository"/>
        <argument key="capabilityApi" type="service" id="Zikula\ExtensionsModule\Api\CapabilityApi"/>
        <argument key="themeEntityRepository" type="service" id="Zikula\ThemeModule\Entity\Repository\ThemeEntityRepository"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.lLVQ1cm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="blockApi" type="service" id="Zikula\BlocksModule\Api\BlockApi"/>
        <argument key="blockRepository" type="service" id="Zikula\BlocksModule\Entity\Repository\BlockRepository"/>
        <argument key="localeApi" type="service" id="Zikula\SettingsModule\Api\LocaleApi"/>
        <argument key="positionRepository" type="service" id="Zikula\BlocksModule\Entity\Repository\BlockPositionRepository"/>
        <argument key="router" type="service" id="jms_i18n_routing.router"/>
      </argument>
    </service>
    <service id=".service_locator.j_lmtN." class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="blockApi" type="service" id="Zikula\BlocksModule\Api\BlockApi"/>
      </argument>
    </service>
    <service id=".service_locator.rjioojn" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="blockApi" type="service" id="Zikula\BlocksModule\Api\BlockApi"/>
        <argument key="blockEntity" type="service" id="Zikula\BlocksModule\Entity\BlockEntity" on-invalid="ignore"/>
        <argument key="extensionRepository" type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
      </argument>
    </service>
    <service id=".service_locator.0DbeZ.F" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="blockEntity" type="service" id="Zikula\BlocksModule\Entity\BlockEntity"/>
      </argument>
    </service>
    <service id=".service_locator.uv0Gloe" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="blockEntity" type="service" id="Zikula\BlocksModule\Entity\BlockEntity" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.nwBlUkS" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="blockRepository" type="service" id="Zikula\BlocksModule\Entity\Repository\BlockRepository"/>
        <argument key="positionEntity" type="service" id="Zikula\BlocksModule\Entity\BlockPositionEntity"/>
        <argument key="positionRepository" type="service" id="Zikula\BlocksModule\Entity\Repository\BlockPositionRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Y6FYYyz" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="positionEntity" type="service" id="Zikula\BlocksModule\Entity\BlockPositionEntity" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.LJO0t4C" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="positionEntity" type="service" id="Zikula\BlocksModule\Entity\BlockPositionEntity"/>
      </argument>
    </service>
    <service id=".service_locator.Yt68Lxm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="category" type="service" id="Zikula\CategoriesModule\Entity\CategoryEntity"/>
        <argument key="categoryRepository" type="service" id="Zikula\CategoriesModule\Entity\Repository\CategoryRepository"/>
      </argument>
    </service>
    <service id=".service_locator._BDNuWv" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="category" type="service" id="Zikula\CategoriesModule\Entity\CategoryEntity" on-invalid="ignore"/>
        <argument key="categoryRepository" type="service" id="Zikula\CategoriesModule\Entity\Repository\CategoryRepository"/>
        <argument key="localeApi" type="service" id="Zikula\SettingsModule\Api\LocaleApi"/>
        <argument key="processingHelper" type="service" id="Zikula\CategoriesModule\Helper\CategoryProcessingHelper"/>
      </argument>
    </service>
    <service id=".service_locator.F7mvmfb" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="categoryRepository" type="service" id="Zikula\CategoriesModule\Entity\Repository\CategoryRepository"/>
        <argument key="processingHelper" type="service" id="Zikula\CategoriesModule\Helper\CategoryProcessingHelper"/>
      </argument>
    </service>
    <service id=".service_locator.fWyCulK" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="capabilityApi" type="service" id="Zikula\ExtensionsModule\Api\CapabilityApi"/>
        <argument key="entityManager" type="service" id="doctrine.orm.default_entity_manager"/>
        <argument key="registryEntity" type="service" id="Zikula\CategoriesModule\Entity\CategoryRegistryEntity" on-invalid="ignore"/>
        <argument key="registryRepository" type="service" id="Zikula\CategoriesModule\Entity\Repository\CategoryRegistryRepository"/>
      </argument>
    </service>
    <service id=".service_locator.2zylTpH" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityManager" type="service" id="doctrine.orm.default_entity_manager"/>
        <argument key="registry" type="service" id="Zikula\CategoriesModule\Entity\CategoryRegistryEntity"/>
      </argument>
    </service>
    <service id=".service_locator.RehufEE" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="bundleSyncHelper" type="service" id="Zikula\ExtensionsModule\Helper\BundleSyncHelper"/>
        <argument key="cacheClearer" type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
      </argument>
    </service>
    <service id=".service_locator.3vQOZkO" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="assetHelper" type="service" id="Zikula\ThemeModule\Engine\Asset"/>
        <argument key="extensionRepository" type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
        <argument key="requestStack" type="service" id="request_stack"/>
      </argument>
    </service>
    <service id=".service_locator.YMGaOSJ" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="extensionMenuCollector" type="service" id="Zikula\MenuModule\ExtensionMenu\ExtensionMenuCollector"/>
        <argument key="extensionRepository" type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
        <argument key="requestStack" type="service" id="request_stack"/>
      </argument>
    </service>
    <service id=".service_locator.Mjns3VX" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="bundleSyncHelper" type="service" id="Zikula\ExtensionsModule\Helper\BundleSyncHelper"/>
        <argument key="eventDispatcher" type="service" id="debug.event_dispatcher"/>
        <argument key="extensionRepository" type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
        <argument key="router" type="service" id="jms_i18n_routing.router"/>
      </argument>
    </service>
    <service id=".service_locator.B60LH_3" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cacheClearer" type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
        <argument key="extensionRepository" type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
        <argument key="extensionStateHelper" type="service" id="Zikula\ExtensionsModule\Helper\ExtensionStateHelper"/>
      </argument>
    </service>
    <service id=".service_locator.x2mM6.W" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cacheClearer" type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
        <argument key="extension" type="service" id="Zikula\ExtensionsModule\Entity\ExtensionEntity"/>
        <argument key="kernel" type="service" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.AO0lF5Z" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="extension" type="service" id="Zikula\ExtensionsModule\Entity\ExtensionEntity"/>
      </argument>
    </service>
    <service id=".service_locator.bxPsQVH" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cacheClearer" type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
        <argument key="dependencyHelper" type="service" id="Zikula\ExtensionsModule\Helper\ExtensionDependencyHelper"/>
        <argument key="extension" type="service" id="Zikula\ExtensionsModule\Entity\ExtensionEntity"/>
        <argument key="extensionHelper" type="service" id="Zikula\ExtensionsModule\Helper\ExtensionHelper"/>
        <argument key="extensionRepository" type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
        <argument key="extensionStateHelper" type="service" id="Zikula\ExtensionsModule\Helper\ExtensionStateHelper"/>
        <argument key="kernel" type="service" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.v2pqszd" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eventDispatcher" type="service" id="debug.event_dispatcher"/>
        <argument key="extensionRepository" type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
        <argument key="kernel" type="service" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.ZnkMVkQ" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="extension" type="service" id="Zikula\ExtensionsModule\Entity\ExtensionEntity"/>
        <argument key="extensionHelper" type="service" id="Zikula\ExtensionsModule\Helper\ExtensionHelper"/>
      </argument>
    </service>
    <service id=".service_locator.PyFwzGk" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="blockRepository" type="service" id="Zikula\BlocksModule\Entity\Repository\BlockRepository"/>
        <argument key="cacheClearer" type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
        <argument key="dependencyHelper" type="service" id="Zikula\ExtensionsModule\Helper\ExtensionDependencyHelper"/>
        <argument key="extension" type="service" id="Zikula\ExtensionsModule\Entity\ExtensionEntity"/>
        <argument key="extensionHelper" type="service" id="Zikula\ExtensionsModule\Helper\ExtensionHelper"/>
        <argument key="extensionStateHelper" type="service" id="Zikula\ExtensionsModule\Helper\ExtensionStateHelper"/>
        <argument key="kernel" type="service" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.XdDM4ci" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eventDispatcher" type="service" id="debug.event_dispatcher"/>
      </argument>
    </service>
    <service id=".service_locator.ymo5u1_" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eventDispatcher" type="service" id="debug.event_dispatcher"/>
        <argument key="groupApplicationEntity" type="service" id="Zikula\GroupsModule\Entity\GroupApplicationEntity"/>
      </argument>
    </service>
    <service id=".service_locator.uGcwr.9" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="applicationRepository" type="service" id="Zikula\GroupsModule\Entity\Repository\GroupApplicationRepository"/>
        <argument key="currentUserApi" type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
        <argument key="eventDispatcher" type="service" id="debug.event_dispatcher"/>
        <argument key="group" type="service" id="Zikula\GroupsModule\Entity\GroupEntity"/>
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.MP6F85r" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="groupRepository" type="service" id="Zikula\GroupsModule\Entity\Repository\GroupRepository"/>
      </argument>
    </service>
    <service id=".service_locator.y2AvubJ" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="applicationRepository" type="service" id="Zikula\GroupsModule\Entity\Repository\GroupApplicationRepository"/>
        <argument key="groupRepository" type="service" id="Zikula\GroupsModule\Entity\Repository\GroupRepository"/>
      </argument>
    </service>
    <service id=".service_locator.AX19wVn" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eventDispatcher" type="service" id="debug.event_dispatcher"/>
        <argument key="groupEntity" type="service" id="Zikula\GroupsModule\Entity\GroupEntity"/>
      </argument>
    </service>
    <service id=".service_locator.EoJL95I" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="group" type="service" id="Zikula\GroupsModule\Entity\GroupEntity"/>
        <argument key="userSessionRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserSessionRepository"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.jx7C1V3" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="group" type="service" id="Zikula\GroupsModule\Entity\GroupEntity"/>
      </argument>
    </service>
    <service id=".service_locator.NPQiHiN" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eventDispatcher" type="service" id="debug.event_dispatcher"/>
        <argument key="group" type="service" id="Zikula\GroupsModule\Entity\GroupEntity"/>
        <argument key="userEntity" type="service" id="Zikula\UsersModule\Entity\UserEntity"/>
      </argument>
    </service>
    <service id=".service_locator.hg8Nqz8" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="currentUserApi" type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
        <argument key="eventDispatcher" type="service" id="debug.event_dispatcher"/>
        <argument key="group" type="service" id="Zikula\GroupsModule\Entity\GroupEntity"/>
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.gSvt8Pq" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eventDispatcher" type="service" id="debug.event_dispatcher"/>
        <argument key="groupRepository" type="service" id="Zikula\GroupsModule\Entity\Repository\GroupRepository"/>
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.S3oQfnr" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.trGWsqD" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="configDumper" type="service" id="Zikula\Bundle\CoreBundle\DynamicConfigDumper"/>
        <argument key="kernel" type="service" id="kernel"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.J36JJqg" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="configDumper" type="service" id="Zikula\Bundle\CoreBundle\DynamicConfigDumper"/>
        <argument key="mailerApi" type="service" id="Zikula\MailerModule\Api\MailerApi"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.u8DyEi_" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="menuItemRepository" type="service" id="Zikula\MenuModule\Entity\Repository\MenuItemRepository"/>
      </argument>
    </service>
    <service id=".service_locator.EyHY1Lm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="menuItemEntity" type="service" id="Zikula\MenuModule\Entity\MenuItemEntity"/>
        <argument key="menuItemRepository" type="service" id="Zikula\MenuModule\Entity\Repository\MenuItemRepository"/>
      </argument>
    </service>
    <service id=".service_locator.jM8x..f" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="menuItemEntity" type="service" id="Zikula\MenuModule\Entity\MenuItemEntity" on-invalid="ignore"/>
        <argument key="menuItemRepository" type="service" id="Zikula\MenuModule\Entity\Repository\MenuItemRepository"/>
      </argument>
    </service>
    <service id=".service_locator.UXQzp0z" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="menuItemEntity" type="service" id="Zikula\MenuModule\Entity\MenuItemEntity"/>
      </argument>
    </service>
    <service id=".service_locator.x.KNJyk" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="permissionRepository" type="service" id="Zikula\PermissionsModule\Entity\Repository\PermissionRepository"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.c4QGT1L" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="groupsRepository" type="service" id="Zikula\GroupsModule\Entity\Repository\GroupRepository"/>
        <argument key="permissionApi" type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
        <argument key="permissionRepository" type="service" id="Zikula\PermissionsModule\Entity\Repository\PermissionRepository"/>
        <argument key="schemaHelper" type="service" id="Zikula\PermissionsModule\Helper\SchemaHelper"/>
      </argument>
    </service>
    <service id=".service_locator.0tHmwTc" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="groupsRepository" type="service" id="Zikula\GroupsModule\Entity\Repository\GroupRepository"/>
        <argument key="permissionApi" type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
        <argument key="permissionEntity" type="service" id="Zikula\PermissionsModule\Entity\PermissionEntity" on-invalid="ignore"/>
        <argument key="permissionRepository" type="service" id="Zikula\PermissionsModule\Entity\Repository\PermissionRepository"/>
      </argument>
    </service>
    <service id=".service_locator.DJ.IY53" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="permissionRepository" type="service" id="Zikula\PermissionsModule\Entity\Repository\PermissionRepository"/>
      </argument>
    </service>
    <service id=".service_locator.kl87m7D" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="permissionEntity" type="service" id="Zikula\PermissionsModule\Entity\PermissionEntity"/>
        <argument key="permissionRepository" type="service" id="Zikula\PermissionsModule\Entity\Repository\PermissionRepository"/>
      </argument>
    </service>
    <service id=".service_locator.bhmUFxm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="permissionApi" type="service" id="Zikula\PermissionsModule\Api\PermissionApi"/>
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.RAt1Xco" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityFactory" type="service" id="Zikula\RoutesModule\Entity\Factory\EntityFactory"/>
      </argument>
    </service>
    <service id=".service_locator.PxQboCn" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="appSettings" type="service" id="Zikula\RoutesModule\AppSettings"/>
        <argument key="currentUserApi" type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
        <argument key="logger" type="service" id="monolog.logger"/>
        <argument key="permissionHelper" type="service" id="Zikula\RoutesModule\Helper\PermissionHelper"/>
      </argument>
    </service>
    <service id=".service_locator.hohOVVO" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="permissionHelper" type="service" id="Zikula\RoutesModule\Helper\PermissionHelper"/>
      </argument>
    </service>
    <service id=".service_locator.B5P8uRf" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="controllerHelper" type="service" id="Zikula\RoutesModule\Helper\ControllerHelper"/>
        <argument key="permissionHelper" type="service" id="Zikula\RoutesModule\Helper\PermissionHelper"/>
        <argument key="router" type="service" id="jms_i18n_routing.router"/>
        <argument key="viewHelper" type="service" id="Zikula\RoutesModule\Helper\ViewHelper"/>
      </argument>
    </service>
    <service id=".service_locator.SZXLtQR" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="controllerHelper" type="service" id="Zikula\RoutesModule\Helper\ControllerHelper"/>
        <argument key="entityFactory" type="service" id="Zikula\RoutesModule\Entity\Factory\EntityFactory"/>
        <argument key="permissionHelper" type="service" id="Zikula\RoutesModule\Helper\PermissionHelper"/>
        <argument key="route" type="service" id="Zikula\RoutesModule\Entity\RouteEntity" on-invalid="ignore"/>
        <argument key="viewHelper" type="service" id="Zikula\RoutesModule\Helper\ViewHelper"/>
      </argument>
    </service>
    <service id=".service_locator.qUTQ8Yv" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="controllerHelper" type="service" id="Zikula\RoutesModule\Helper\ControllerHelper"/>
        <argument key="formHandler" type="service" id="Zikula\RoutesModule\Form\Handler\Route\EditHandler"/>
        <argument key="permissionHelper" type="service" id="Zikula\RoutesModule\Helper\PermissionHelper"/>
        <argument key="viewHelper" type="service" id="Zikula\RoutesModule\Helper\ViewHelper"/>
      </argument>
    </service>
    <service id=".service_locator.r4oPMH7" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="currentUserApi" type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
        <argument key="entityFactory" type="service" id="Zikula\RoutesModule\Entity\Factory\EntityFactory"/>
        <argument key="logger" type="service" id="monolog.logger"/>
        <argument key="workflowHelper" type="service" id="Zikula\RoutesModule\Helper\WorkflowHelper"/>
      </argument>
    </service>
    <service id=".service_locator.FxrlP9R" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cacheClearer" type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
        <argument key="permissionHelper" type="service" id="Zikula\RoutesModule\Helper\PermissionHelper"/>
        <argument key="routeDumperHelper" type="service" id="Zikula\RoutesModule\Helper\RouteDumperHelper"/>
      </argument>
    </service>
    <service id=".service_locator.EgMOG4q" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="multilingualRoutingHelper" type="service" id="Zikula\RoutesModule\Helper\MultilingualRoutingHelper"/>
        <argument key="permissionHelper" type="service" id="Zikula\RoutesModule\Helper\PermissionHelper"/>
      </argument>
    </service>
    <service id=".service_locator.NX_lu0O" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="permissionHelper" type="service" id="Zikula\RoutesModule\Helper\PermissionHelper"/>
        <argument key="routeDumperHelper" type="service" id="Zikula\RoutesModule\Helper\RouteDumperHelper"/>
      </argument>
    </service>
    <service id=".service_locator.gDZjEEP" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="collector" type="service" id="Zikula\SearchModule\Collector\SearchableModuleCollector"/>
        <argument key="kernel" type="service" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.z8jU37N" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="collector" type="service" id="Zikula\SearchModule\Collector\SearchableModuleCollector"/>
        <argument key="formFactory" type="service" id="form.factory"/>
        <argument key="kernel" type="service" id="kernel"/>
        <argument key="router" type="service" id="jms_i18n_routing.router"/>
        <argument key="searchApi" type="service" id="Zikula\SearchModule\Api\SearchApi"/>
      </argument>
    </service>
    <service id=".service_locator.z1ANE._" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="searchStatRepository" type="service" id="Zikula\SearchModule\Entity\Repository\SearchStatRepository"/>
      </argument>
    </service>
    <service id=".service_locator.DJ6_IjB" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.nzfZYg." class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="accessHelper" type="service" id="Zikula\UsersModule\Helper\AccessHelper"/>
        <argument key="cacheClearer" type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
        <argument key="configDumper" type="service" id="Zikula\Bundle\CoreBundle\DynamicConfigDumper"/>
        <argument key="router" type="service" id="jms_i18n_routing.router"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.Rn.c2h9" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cacheClearer" type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
        <argument key="purifierHelper" type="service" id="Zikula\SecurityCenterModule\Helper\PurifierHelper"/>
      </argument>
    </service>
    <service id=".service_locator.LFdkE7T" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cacheClearer" type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
        <argument key="router" type="service" id="jms_i18n_routing.router"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.ghFHQf1" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="repository" type="service" id="Zikula\SecurityCenterModule\Entity\Repository\IntrusionRepository"/>
        <argument key="router" type="service" id="jms_i18n_routing.router"/>
      </argument>
    </service>
    <service id=".service_locator.S9SudG." class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="repository" type="service" id="Zikula\SecurityCenterModule\Entity\Repository\IntrusionRepository"/>
      </argument>
    </service>
    <service id=".service_locator.P7qdpMw" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="localeApi" type="service" id="Zikula\SettingsModule\Api\LocaleApi"/>
        <argument key="messageModuleCollector" type="service" id="Zikula\UsersModule\Collector\MessageModuleCollector"/>
        <argument key="profileModuleCollector" type="service" id="Zikula\UsersModule\Collector\ProfileModuleCollector"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.g77nwt4" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="localeApi" type="service" id="Zikula\SettingsModule\Api\LocaleApi"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.QbjOsEa" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="activator" type="service" id=".errored..service_locator.QbjOsEa.Translation\Bundle\EditInPlace\Activator"/>
      </argument>
    </service>
    <service id=".service_locator.VC15VB8" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.xkQyMNr" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eventDispatcher" type="service" id="debug.event_dispatcher"/>
        <argument key="syncHelper" type="service" id="Zikula\ThemeModule\Helper\BundleSyncHelper"/>
        <argument key="themeRepository" type="service" id="Zikula\ThemeModule\Entity\Repository\ThemeEntityRepository"/>
        <argument key="translationConfigHelper" type="service" id="Zikula\SettingsModule\Helper\TranslationConfigHelper"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.aukUB8P" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="engine" type="service" id="Zikula\ThemeModule\Engine\Engine"/>
      </argument>
    </service>
    <service id=".service_locator.vvjD5fm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cacheClearer" type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
        <argument key="themeRepository" type="service" id="Zikula\ThemeModule\Entity\Repository\ThemeEntityRepository"/>
      </argument>
    </service>
    <service id=".service_locator.wT30FSu" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cacheClearer" type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator._9jopT8" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cacheClearer" type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
        <argument key="kernel" type="service" id="kernel"/>
        <argument key="themeRepository" type="service" id="Zikula\ThemeModule\Entity\Repository\ThemeEntityRepository"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.GXTYbGg" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="themeRepository" type="service" id="Zikula\ThemeModule\Entity\Repository\ThemeEntityRepository"/>
      </argument>
    </service>
    <service id=".service_locator.ktNcpdk" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="accessHelper" type="service" id="Zikula\UsersModule\Helper\AccessHelper"/>
        <argument key="authenticationMethodCollector" type="service" id="Zikula\UsersModule\Collector\AuthenticationMethodCollector"/>
        <argument key="currentUserApi" type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
        <argument key="eventDispatcher" type="service" id="debug.event_dispatcher"/>
        <argument key="hookDispatcher" type="service" id="Zikula\Bundle\HookBundle\Dispatcher\HookDispatcher"/>
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.VCOH3Fw" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="accessHelper" type="service" id="Zikula\UsersModule\Helper\AccessHelper"/>
        <argument key="currentUserApi" type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
        <argument key="eventDispatcher" type="service" id="debug.event_dispatcher"/>
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.msOSgbQ" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="currentUserApi" type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
        <argument key="extensionMenuCollector" type="service" id="Zikula\MenuModule\ExtensionMenu\ExtensionMenuCollector"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.yeFq60B" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="currentUserApi" type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.yMnaMnu" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authenticationMethodCollector" type="service" id="Zikula\UsersModule\Collector\AuthenticationMethodCollector"/>
        <argument key="cacheClearer" type="service" id="Zikula\Bundle\CoreBundle\CacheClearer"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.IK_AoaO" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="profileModuleCollector" type="service" id="Zikula\UsersModule\Collector\ProfileModuleCollector"/>
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.1HH3vz4" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="accessHelper" type="service" id="Zikula\UsersModule\Helper\AccessHelper"/>
        <argument key="authenticationMethodCollector" type="service" id="Zikula\UsersModule\Collector\AuthenticationMethodCollector"/>
        <argument key="currentUserApi" type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
        <argument key="eventDispatcher" type="service" id="debug.event_dispatcher"/>
        <argument key="hookDispatcher" type="service" id="Zikula\Bundle\HookBundle\Dispatcher\HookDispatcher"/>
        <argument key="registrationHelper" type="service" id="Zikula\UsersModule\Helper\RegistrationHelper"/>
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
        <argument key="validator" type="service" id="validator"/>
      </argument>
    </service>
    <service id=".service_locator.cNZ2NkP" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="actionsHelper" type="service" id="Zikula\UsersModule\Helper\AdministrationActionsHelper"/>
        <argument key="router" type="service" id="jms_i18n_routing.router"/>
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.olqsteU" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="actionsHelper" type="service" id="Zikula\UsersModule\Helper\AdministrationActionsHelper"/>
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.45wSGGP" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="currentUserApi" type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
        <argument key="eventDispatcher" type="service" id="debug.event_dispatcher"/>
        <argument key="hookDispatcher" type="service" id="Zikula\Bundle\HookBundle\Dispatcher\HookDispatcher"/>
        <argument key="user" type="service" id="Zikula\UsersModule\Entity\UserEntity"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.p6UcmdX" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="mailHelper" type="service" id="Zikula\UsersModule\Helper\MailHelper"/>
        <argument key="registrationHelper" type="service" id="Zikula\UsersModule\Helper\RegistrationHelper"/>
        <argument key="user" type="service" id="Zikula\UsersModule\Entity\UserEntity"/>
      </argument>
    </service>
    <service id=".service_locator.kgFMb_g" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="currentUserApi" type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
        <argument key="eventDispatcher" type="service" id="debug.event_dispatcher"/>
        <argument key="hookDispatcher" type="service" id="Zikula\Bundle\HookBundle\Dispatcher\HookDispatcher"/>
        <argument key="user" type="service" id="Zikula\UsersModule\Entity\UserEntity" on-invalid="ignore"/>
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Ay.NhXZ" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.MFwmbgB" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="mailHelper" type="service" id="Zikula\UsersModule\Helper\MailHelper"/>
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator._HVhBvb" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authenticationMappingRepository" type="service" id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository"/>
        <argument key="currentUserApi" type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
        <argument key="mailHelper" type="service" id="Zikula\ZAuthModule\Helper\MailHelper"/>
        <argument key="router" type="service" id="jms_i18n_routing.router"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.pdFAuYB" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authenticationMappingRepository" type="service" id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository"/>
        <argument key="currentUserApi" type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
        <argument key="lostPasswordVerificationHelper" type="service" id="Zikula\ZAuthModule\Helper\LostPasswordVerificationHelper"/>
        <argument key="mailHelper" type="service" id="Zikula\ZAuthModule\Helper\MailHelper"/>
        <argument key="router" type="service" id="jms_i18n_routing.router"/>
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.ZEEmRh5" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="accessHelper" type="service" id="Zikula\UsersModule\Helper\AccessHelper"/>
        <argument key="authenticationMappingRepository" type="service" id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository"/>
        <argument key="authenticationMethodCollector" type="service" id="Zikula\UsersModule\Collector\AuthenticationMethodCollector"/>
        <argument key="currentUserApi" type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
        <argument key="lostPasswordVerificationHelper" type="service" id="Zikula\ZAuthModule\Helper\LostPasswordVerificationHelper"/>
        <argument key="passwordApi" type="service" id="Zikula\ZAuthModule\Api\PasswordApi"/>
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.W5exam." class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="currentUserApi" type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
        <argument key="mailHelper" type="service" id="Zikula\ZAuthModule\Helper\MailHelper"/>
        <argument key="passwordApi" type="service" id="Zikula\ZAuthModule\Api\PasswordApi"/>
        <argument key="router" type="service" id="jms_i18n_routing.router"/>
        <argument key="userVerificationRepository" type="service" id="Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository"/>
      </argument>
    </service>
    <service id=".service_locator.sVSDQFF" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authenticationMappingRepository" type="service" id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository"/>
        <argument key="currentUserApi" type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
        <argument key="passwordApi" type="service" id="Zikula\ZAuthModule\Api\PasswordApi"/>
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
        <argument key="userVerificationRepository" type="service" id="Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository"/>
      </argument>
    </service>
    <service id=".service_locator.HogTcZF" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="accessHelper" type="service" id="Zikula\UsersModule\Helper\AccessHelper"/>
        <argument key="authenticationMappingRepository" type="service" id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository"/>
        <argument key="currentUserApi" type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
        <argument key="passwordApi" type="service" id="Zikula\ZAuthModule\Api\PasswordApi"/>
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.cqSHDFJ" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="groupRepository" type="service" id="Zikula\GroupsModule\Entity\Repository\GroupRepository"/>
        <argument key="ioHelper" type="service" id="Zikula\ZAuthModule\Helper\FileIOHelper"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.etNUnIn" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="accessHelper" type="service" id="Zikula\UsersModule\Helper\AccessHelper"/>
        <argument key="authenticationMappingRepository" type="service" id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository"/>
        <argument key="currentUserApi" type="service" id="Zikula\UsersModule\Api\CurrentUserApi"/>
        <argument key="eventDispatcher" type="service" id="debug.event_dispatcher"/>
        <argument key="mailHelper" type="service" id="Zikula\UsersModule\Helper\MailHelper"/>
        <argument key="passwordApi" type="service" id="Zikula\ZAuthModule\Api\PasswordApi"/>
        <argument key="registrationHelper" type="service" id="Zikula\UsersModule\Helper\RegistrationHelper"/>
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
        <argument key="userVerificationRepository" type="service" id="Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository"/>
        <argument key="validator" type="service" id="validator"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.kHEP6vB" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="actionsHelper" type="service" id="Zikula\ZAuthModule\Helper\AdministrationActionsHelper"/>
        <argument key="authenticationMappingRepository" type="service" id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository"/>
        <argument key="router" type="service" id="jms_i18n_routing.router"/>
      </argument>
    </service>
    <service id=".service_locator.XNSlN14" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="actionsHelper" type="service" id="Zikula\ZAuthModule\Helper\AdministrationActionsHelper"/>
        <argument key="authenticationMappingRepository" type="service" id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository"/>
      </argument>
    </service>
    <service id=".service_locator.nHwaLpR" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authenticationMethodCollector" type="service" id="Zikula\UsersModule\Collector\AuthenticationMethodCollector"/>
        <argument key="eventDispatcher" type="service" id="debug.event_dispatcher"/>
        <argument key="hookDispatcher" type="service" id="Zikula\Bundle\HookBundle\Dispatcher\HookDispatcher"/>
        <argument key="mailHelper" type="service" id="Zikula\UsersModule\Helper\MailHelper"/>
        <argument key="registrationHelper" type="service" id="Zikula\UsersModule\Helper\RegistrationHelper"/>
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.KmZNtaq" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authenticationMappingRepository" type="service" id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository"/>
        <argument key="eventDispatcher" type="service" id="debug.event_dispatcher"/>
        <argument key="hookDispatcher" type="service" id="Zikula\Bundle\HookBundle\Dispatcher\HookDispatcher"/>
        <argument key="mapping" type="service" id="Zikula\ZAuthModule\Entity\AuthenticationMappingEntity"/>
        <argument key="passwordApi" type="service" id="Zikula\ZAuthModule\Api\PasswordApi"/>
        <argument key="userRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
        <argument key="variableApi" type="service" id="Zikula\ExtensionsModule\Api\VariableApi"/>
      </argument>
    </service>
    <service id=".service_locator.xw2rwYO" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authenticationMappingRepository" type="service" id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository"/>
        <argument key="mapping" type="service" id="Zikula\ZAuthModule\Entity\AuthenticationMappingEntity"/>
        <argument key="registrationVerificationHelper" type="service" id="Zikula\ZAuthModule\Helper\RegistrationVerificationHelper"/>
      </argument>
    </service>
    <service id=".service_locator.2iIdcUP" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="lostPasswordVerificationHelper" type="service" id="Zikula\ZAuthModule\Helper\LostPasswordVerificationHelper"/>
        <argument key="mailHelper" type="service" id="Zikula\ZAuthModule\Helper\MailHelper"/>
        <argument key="mapping" type="service" id="Zikula\ZAuthModule\Entity\AuthenticationMappingEntity"/>
      </argument>
    </service>
    <service id=".service_locator.uc8W4ZT" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="mailHelper" type="service" id="Zikula\ZAuthModule\Helper\MailHelper"/>
        <argument key="mapping" type="service" id="Zikula\ZAuthModule\Entity\AuthenticationMappingEntity"/>
      </argument>
    </service>
    <service id=".service_locator.uGiYVVQ" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="user" type="service" id="Zikula\UsersModule\Entity\UserEntity"/>
      </argument>
    </service>
    <service id=".service_locator.JHsD_cg" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Zikula\AdminModule\Controller\AdminController::adminpanelAction" type="service" id=".service_locator.ddxR4fK"/>
        <argument key="Zikula\AdminModule\Controller\AdminController::categorymenuAction" type="service" id=".service_locator.gxU0C5u"/>
        <argument key="Zikula\AdminModule\Controller\AdminController::deleteAction" type="service" id=".service_locator.qi_rkSP"/>
        <argument key="Zikula\AdminModule\Controller\AdminController::modifyAction" type="service" id=".service_locator.qi_rkSP"/>
        <argument key="Zikula\AdminModule\Controller\AdminController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\AdminModule\Controller\AdminController::viewAction" type="service" id=".service_locator.Q6Excfe"/>
        <argument key="Zikula\AdminModule\Controller\AdminInterfaceController::breadcrumbsAction" type="service" id=".service_locator.wTOCTmi"/>
        <argument key="Zikula\AdminModule\Controller\AdminInterfaceController::footerAction" type="service" id=".service_locator.CNpdA_S"/>
        <argument key="Zikula\AdminModule\Controller\AdminInterfaceController::headerAction" type="service" id=".service_locator.DxQr8Um"/>
        <argument key="Zikula\AdminModule\Controller\AdminInterfaceController::menuAction" type="service" id=".service_locator.Qd2v43d"/>
        <argument key="Zikula\AdminModule\Controller\AdminInterfaceController::securityanalyzerAction" type="service" id=".service_locator.ZYCs5qz"/>
        <argument key="Zikula\AdminModule\Controller\AdminInterfaceController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\AdminModule\Controller\AdminInterfaceController::updatecheckAction" type="service" id=".service_locator.ARmHTLY"/>
        <argument key="Zikula\AdminModule\Controller\AjaxController::addCategoryAction" type="service" id=".service_locator.E8jKebo"/>
        <argument key="Zikula\AdminModule\Controller\AjaxController::changeModuleCategoryAction" type="service" id=".service_locator.8493evj"/>
        <argument key="Zikula\AdminModule\Controller\AjaxController::defaultCategoryAction" type="service" id=".service_locator.6oiuNod"/>
        <argument key="Zikula\AdminModule\Controller\AjaxController::deleteCategoryAction" type="service" id=".service_locator.zkRr5GG"/>
        <argument key="Zikula\AdminModule\Controller\AjaxController::editCategoryAction" type="service" id=".service_locator.UYLqkkP"/>
        <argument key="Zikula\AdminModule\Controller\AjaxController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\AdminModule\Controller\AjaxController::sortCategoriesAction" type="service" id=".service_locator.UYLqkkP"/>
        <argument key="Zikula\AdminModule\Controller\AjaxController::sortModulesAction" type="service" id=".service_locator.DVCX.KX"/>
        <argument key="Zikula\AdminModule\Controller\ConfigController::configAction" type="service" id=".service_locator.o2lcBnc"/>
        <argument key="Zikula\AdminModule\Controller\ConfigController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\BlocksModule\Controller\AdminController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\BlocksModule\Controller\AdminController::viewAction" type="service" id=".service_locator.lLVQ1cm"/>
        <argument key="Zikula\BlocksModule\Controller\BlockController::deleteAction" type="service" id=".service_locator.0DbeZ.F"/>
        <argument key="Zikula\BlocksModule\Controller\BlockController::editAction" type="service" id=".service_locator.rjioojn"/>
        <argument key="Zikula\BlocksModule\Controller\BlockController::newAction" type="service" id=".service_locator.j_lmtN."/>
        <argument key="Zikula\BlocksModule\Controller\BlockController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\BlocksModule\Controller\BlockController::viewAction" type="service" id=".service_locator.uv0Gloe"/>
        <argument key="Zikula\BlocksModule\Controller\ConfigController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\BlocksModule\Controller\PlacementController::editAction" type="service" id=".service_locator.nwBlUkS"/>
        <argument key="Zikula\BlocksModule\Controller\PlacementController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\BlocksModule\Controller\PositionController::deleteAction" type="service" id=".service_locator.LJO0t4C"/>
        <argument key="Zikula\BlocksModule\Controller\PositionController::editAction" type="service" id=".service_locator.Y6FYYyz"/>
        <argument key="Zikula\BlocksModule\Controller\PositionController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\Bundle\HookBundle\Controller\HookController::changeProviderAreaOrderAction" type="service" id=".service_locator.T5htiMj"/>
        <argument key="Zikula\Bundle\HookBundle\Controller\HookController::editAction" type="service" id=".service_locator.9Ua32ha"/>
        <argument key="Zikula\Bundle\HookBundle\Controller\HookController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\Bundle\HookBundle\Controller\HookController::toggleSubscribeAreaStatusAction" type="service" id=".service_locator.3ir3T5X"/>
        <argument key="Zikula\Bundle\WorkflowBundle\Controller\EditorController::indexAction" type="service" id=".service_locator.woEf4Un"/>
        <argument key="Zikula\CategoriesModule\Controller\CategoryController::listAction" type="service" id=".service_locator.Yt68Lxm"/>
        <argument key="Zikula\CategoriesModule\Controller\CategoryController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\CategoriesModule\Controller\NodeController::contextMenuAction" type="service" id=".service_locator._BDNuWv"/>
        <argument key="Zikula\CategoriesModule\Controller\NodeController::moveAction" type="service" id=".service_locator.F7mvmfb"/>
        <argument key="Zikula\CategoriesModule\Controller\NodeController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\CategoriesModule\Controller\RegistryController::deleteAction" type="service" id=".service_locator.2zylTpH"/>
        <argument key="Zikula\CategoriesModule\Controller\RegistryController::editAction" type="service" id=".service_locator.fWyCulK"/>
        <argument key="Zikula\CategoriesModule\Controller\RegistryController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ExtensionsModule\Controller\ConfigController::configAction" type="service" id=".service_locator.RehufEE"/>
        <argument key="Zikula\ExtensionsModule\Controller\ConfigController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController::breadcrumbsAction" type="service" id=".service_locator.CNpdA_S"/>
        <argument key="Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController::footerAction" type="service" id=".service_locator.DxQr8Um"/>
        <argument key="Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController::headerAction" type="service" id=".service_locator.3vQOZkO"/>
        <argument key="Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController::linksAction" type="service" id=".service_locator.YMGaOSJ"/>
        <argument key="Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ExtensionsModule\Controller\ModuleController::activateAction" type="service" id=".service_locator.B60LH_3"/>
        <argument key="Zikula\ExtensionsModule\Controller\ModuleController::compatibilityAction" type="service" id=".service_locator.AO0lF5Z"/>
        <argument key="Zikula\ExtensionsModule\Controller\ModuleController::deactivateAction" type="service" id=".service_locator.B60LH_3"/>
        <argument key="Zikula\ExtensionsModule\Controller\ModuleController::installAction" type="service" id=".service_locator.bxPsQVH"/>
        <argument key="Zikula\ExtensionsModule\Controller\ModuleController::modifyAction" type="service" id=".service_locator.x2mM6.W"/>
        <argument key="Zikula\ExtensionsModule\Controller\ModuleController::postInstallAction" type="service" id=".service_locator.v2pqszd"/>
        <argument key="Zikula\ExtensionsModule\Controller\ModuleController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ExtensionsModule\Controller\ModuleController::uninstallAction" type="service" id=".service_locator.PyFwzGk"/>
        <argument key="Zikula\ExtensionsModule\Controller\ModuleController::upgradeAction" type="service" id=".service_locator.ZnkMVkQ"/>
        <argument key="Zikula\ExtensionsModule\Controller\ModuleController::viewModuleListAction" type="service" id=".service_locator.Mjns3VX"/>
        <argument key="Zikula\ExtensionsModule\Controller\ServicesController::moduleServicesAction" type="service" id=".service_locator.XdDM4ci"/>
        <argument key="Zikula\ExtensionsModule\Controller\ServicesController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\GroupsModule\Controller\ApplicationController::adminAction" type="service" id=".service_locator.ymo5u1_"/>
        <argument key="Zikula\GroupsModule\Controller\ApplicationController::createAction" type="service" id=".service_locator.uGcwr.9"/>
        <argument key="Zikula\GroupsModule\Controller\ApplicationController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\GroupsModule\Controller\ConfigController::configAction" type="service" id=".service_locator.MP6F85r"/>
        <argument key="Zikula\GroupsModule\Controller\ConfigController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\GroupsModule\Controller\GroupController::adminListAction" type="service" id=".service_locator.y2AvubJ"/>
        <argument key="Zikula\GroupsModule\Controller\GroupController::createAction" type="service" id=".service_locator.XdDM4ci"/>
        <argument key="Zikula\GroupsModule\Controller\GroupController::editAction" type="service" id=".service_locator.AX19wVn"/>
        <argument key="Zikula\GroupsModule\Controller\GroupController::listAction" type="service" id=".service_locator.MP6F85r"/>
        <argument key="Zikula\GroupsModule\Controller\GroupController::removeAction" type="service" id=".service_locator.AX19wVn"/>
        <argument key="Zikula\GroupsModule\Controller\GroupController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\GroupsModule\Controller\MembershipController::addAction" type="service" id=".service_locator.NPQiHiN"/>
        <argument key="Zikula\GroupsModule\Controller\MembershipController::adminListAction" type="service" id=".service_locator.jx7C1V3"/>
        <argument key="Zikula\GroupsModule\Controller\MembershipController::getUsersByFragmentAsTableAction" type="service" id=".service_locator.S3oQfnr"/>
        <argument key="Zikula\GroupsModule\Controller\MembershipController::joinAction" type="service" id=".service_locator.hg8Nqz8"/>
        <argument key="Zikula\GroupsModule\Controller\MembershipController::leaveAction" type="service" id=".service_locator.hg8Nqz8"/>
        <argument key="Zikula\GroupsModule\Controller\MembershipController::listAction" type="service" id=".service_locator.EoJL95I"/>
        <argument key="Zikula\GroupsModule\Controller\MembershipController::removeAction" type="service" id=".service_locator.gSvt8Pq"/>
        <argument key="Zikula\GroupsModule\Controller\MembershipController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\MailerModule\Controller\ConfigController::configAction" type="service" id=".service_locator.trGWsqD"/>
        <argument key="Zikula\MailerModule\Controller\ConfigController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\MailerModule\Controller\ConfigController::testAction" type="service" id=".service_locator.J36JJqg"/>
        <argument key="Zikula\MenuModule\Controller\ConfigController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\MenuModule\Controller\MenuController::deleteAction" type="service" id=".service_locator.UXQzp0z"/>
        <argument key="Zikula\MenuModule\Controller\MenuController::editAction" type="service" id=".service_locator.jM8x..f"/>
        <argument key="Zikula\MenuModule\Controller\MenuController::listAction" type="service" id=".service_locator.u8DyEi_"/>
        <argument key="Zikula\MenuModule\Controller\MenuController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\MenuModule\Controller\MenuController::viewAction" type="service" id=".service_locator.EyHY1Lm"/>
        <argument key="Zikula\MenuModule\Controller\NodeController::contextMenuAction" type="service" id=".service_locator.jM8x..f"/>
        <argument key="Zikula\MenuModule\Controller\NodeController::moveAction" type="service" id=".service_locator.u8DyEi_"/>
        <argument key="Zikula\MenuModule\Controller\NodeController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\PermissionsModule\Controller\ConfigController::configAction" type="service" id=".service_locator.x.KNJyk"/>
        <argument key="Zikula\PermissionsModule\Controller\ConfigController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\PermissionsModule\Controller\PermissionController::changeOrderAction" type="service" id=".service_locator.DJ.IY53"/>
        <argument key="Zikula\PermissionsModule\Controller\PermissionController::deleteAction" type="service" id=".service_locator.kl87m7D"/>
        <argument key="Zikula\PermissionsModule\Controller\PermissionController::editAction" type="service" id=".service_locator.0tHmwTc"/>
        <argument key="Zikula\PermissionsModule\Controller\PermissionController::listAction" type="service" id=".service_locator.c4QGT1L"/>
        <argument key="Zikula\PermissionsModule\Controller\PermissionController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\PermissionsModule\Controller\PermissionController::testAction" type="service" id=".service_locator.bhmUFxm"/>
        <argument key="Zikula\RoutesModule\Controller\AjaxController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\RoutesModule\Controller\AjaxController::updateSortPositionsAction" type="service" id=".service_locator.RAt1Xco"/>
        <argument key="Zikula\RoutesModule\Controller\ConfigController::configAction" type="service" id=".service_locator.PxQboCn"/>
        <argument key="Zikula\RoutesModule\Controller\ConfigController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController::adminDisplayAction" type="service" id=".service_locator.SZXLtQR"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController::adminEditAction" type="service" id=".service_locator.qUTQ8Yv"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController::adminHandleSelectedEntriesAction" type="service" id=".service_locator.r4oPMH7"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController::adminIndexAction" type="service" id=".service_locator.hohOVVO"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController::adminViewAction" type="service" id=".service_locator.B5P8uRf"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController::displayAction" type="service" id=".service_locator.SZXLtQR"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController::editAction" type="service" id=".service_locator.qUTQ8Yv"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController::handleSelectedEntriesAction" type="service" id=".service_locator.r4oPMH7"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController::indexAction" type="service" id=".service_locator.hohOVVO"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController::viewAction" type="service" id=".service_locator.B5P8uRf"/>
        <argument key="Zikula\RoutesModule\Controller\UpdateController::dumpJsRoutesAction" type="service" id=".service_locator.NX_lu0O"/>
        <argument key="Zikula\RoutesModule\Controller\UpdateController::reloadAction" type="service" id=".service_locator.FxrlP9R"/>
        <argument key="Zikula\RoutesModule\Controller\UpdateController::renewAction" type="service" id=".service_locator.EgMOG4q"/>
        <argument key="Zikula\RoutesModule\Controller\UpdateController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\SearchModule\Controller\ConfigController::configAction" type="service" id=".service_locator.gDZjEEP"/>
        <argument key="Zikula\SearchModule\Controller\ConfigController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\SearchModule\Controller\SearchController::executeAction" type="service" id=".service_locator.z8jU37N"/>
        <argument key="Zikula\SearchModule\Controller\SearchController::opensearchAction" type="service" id=".service_locator.DJ6_IjB"/>
        <argument key="Zikula\SearchModule\Controller\SearchController::recentAction" type="service" id=".service_locator.z1ANE._"/>
        <argument key="Zikula\SearchModule\Controller\SearchController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\SecurityCenterModule\Controller\ConfigController::allowedhtmlAction" type="service" id=".service_locator.LFdkE7T"/>
        <argument key="Zikula\SecurityCenterModule\Controller\ConfigController::configAction" type="service" id=".service_locator.nzfZYg."/>
        <argument key="Zikula\SecurityCenterModule\Controller\ConfigController::purifierconfigAction" type="service" id=".service_locator.Rn.c2h9"/>
        <argument key="Zikula\SecurityCenterModule\Controller\ConfigController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\SecurityCenterModule\Controller\IdsLogController::deleteentryAction" type="service" id=".service_locator.S9SudG."/>
        <argument key="Zikula\SecurityCenterModule\Controller\IdsLogController::exportAction" type="service" id=".service_locator.S9SudG."/>
        <argument key="Zikula\SecurityCenterModule\Controller\IdsLogController::purgeAction" type="service" id=".service_locator.S9SudG."/>
        <argument key="Zikula\SecurityCenterModule\Controller\IdsLogController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\SecurityCenterModule\Controller\IdsLogController::viewAction" type="service" id=".service_locator.ghFHQf1"/>
        <argument key="Zikula\SettingsModule\Controller\SettingsController::localeAction" type="service" id=".service_locator.g77nwt4"/>
        <argument key="Zikula\SettingsModule\Controller\SettingsController::mainAction" type="service" id=".service_locator.P7qdpMw"/>
        <argument key="Zikula\SettingsModule\Controller\SettingsController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\SettingsModule\Controller\SettingsController::toggleEditInPlaceAction" type="service" id=".service_locator.QbjOsEa"/>
        <argument key="Zikula\ThemeModule\Controller\CombinedAssetController::assetAction" type="service" id=".service_locator.VC15VB8"/>
        <argument key="Zikula\ThemeModule\Controller\CombinedAssetController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ThemeModule\Controller\ThemeController::activateAction" type="service" id=".service_locator.vvjD5fm"/>
        <argument key="Zikula\ThemeModule\Controller\ThemeController::creditsAction" type="service" id=".service_locator.GXTYbGg"/>
        <argument key="Zikula\ThemeModule\Controller\ThemeController::deleteAction" type="service" id=".service_locator._9jopT8"/>
        <argument key="Zikula\ThemeModule\Controller\ThemeController::previewAction" type="service" id=".service_locator.aukUB8P"/>
        <argument key="Zikula\ThemeModule\Controller\ThemeController::setAsDefaultAction" type="service" id=".service_locator.wT30FSu"/>
        <argument key="Zikula\ThemeModule\Controller\ThemeController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ThemeModule\Controller\ThemeController::viewAction" type="service" id=".service_locator.xkQyMNr"/>
        <argument key="Zikula\ThemeModule\Controller\VarController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ThemeModule\Controller\VarController::varAction" type="service" id=".service_locator.ZYCs5qz"/>
        <argument key="Zikula\UsersModule\Controller\AccessController::loginAction" type="service" id=".service_locator.ktNcpdk"/>
        <argument key="Zikula\UsersModule\Controller\AccessController::logoutAction" type="service" id=".service_locator.VCOH3Fw"/>
        <argument key="Zikula\UsersModule\Controller\AccessController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\UsersModule\Controller\AccountController::changeLanguageAction" type="service" id=".service_locator.yeFq60B"/>
        <argument key="Zikula\UsersModule\Controller\AccountController::menuAction" type="service" id=".service_locator.msOSgbQ"/>
        <argument key="Zikula\UsersModule\Controller\AccountController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\UsersModule\Controller\ConfigController::authenticationMethodsAction" type="service" id=".service_locator.yMnaMnu"/>
        <argument key="Zikula\UsersModule\Controller\ConfigController::configAction" type="service" id=".service_locator.XdDM4ci"/>
        <argument key="Zikula\UsersModule\Controller\ConfigController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\UsersModule\Controller\FileIOController::exportAction" type="service" id=".service_locator.S3oQfnr"/>
        <argument key="Zikula\UsersModule\Controller\FileIOController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\UsersModule\Controller\LiveSearchController::getUsersAction" type="service" id=".service_locator.IK_AoaO"/>
        <argument key="Zikula\UsersModule\Controller\LiveSearchController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\UsersModule\Controller\RegistrationController::registerAction" type="service" id=".service_locator.1HH3vz4"/>
        <argument key="Zikula\UsersModule\Controller\RegistrationController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\UsersModule\Controller\UserAdministrationController::approveAction" type="service" id=".service_locator.p6UcmdX"/>
        <argument key="Zikula\UsersModule\Controller\UserAdministrationController::deleteAction" type="service" id=".service_locator.kgFMb_g"/>
        <argument key="Zikula\UsersModule\Controller\UserAdministrationController::getUsersByFragmentAsTableAction" type="service" id=".service_locator.olqsteU"/>
        <argument key="Zikula\UsersModule\Controller\UserAdministrationController::listAction" type="service" id=".service_locator.cNZ2NkP"/>
        <argument key="Zikula\UsersModule\Controller\UserAdministrationController::mailUsersAction" type="service" id=".service_locator.MFwmbgB"/>
        <argument key="Zikula\UsersModule\Controller\UserAdministrationController::modifyAction" type="service" id=".service_locator.45wSGGP"/>
        <argument key="Zikula\UsersModule\Controller\UserAdministrationController::searchAction" type="service" id=".service_locator.Ay.NhXZ"/>
        <argument key="Zikula\UsersModule\Controller\UserAdministrationController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ZAuthModule\Controller\AccountController::changeEmailAction" type="service" id=".service_locator.W5exam."/>
        <argument key="Zikula\ZAuthModule\Controller\AccountController::changePasswordAction" type="service" id=".service_locator.HogTcZF"/>
        <argument key="Zikula\ZAuthModule\Controller\AccountController::confirmChangedEmailAction" type="service" id=".service_locator.sVSDQFF"/>
        <argument key="Zikula\ZAuthModule\Controller\AccountController::lostPasswordAction" type="service" id=".service_locator.pdFAuYB"/>
        <argument key="Zikula\ZAuthModule\Controller\AccountController::lostPasswordResetAction" type="service" id=".service_locator.ZEEmRh5"/>
        <argument key="Zikula\ZAuthModule\Controller\AccountController::lostUserNameAction" type="service" id=".service_locator._HVhBvb"/>
        <argument key="Zikula\ZAuthModule\Controller\AccountController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ZAuthModule\Controller\ConfigController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ZAuthModule\Controller\FileIOController::importAction" type="service" id=".service_locator.cqSHDFJ"/>
        <argument key="Zikula\ZAuthModule\Controller\FileIOController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ZAuthModule\Controller\RegistrationController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ZAuthModule\Controller\RegistrationController::verifyAction" type="service" id=".service_locator.etNUnIn"/>
        <argument key="Zikula\ZAuthModule\Controller\UserAdministrationController::createAction" type="service" id=".service_locator.nHwaLpR"/>
        <argument key="Zikula\ZAuthModule\Controller\UserAdministrationController::getUsersByFragmentAsTableAction" type="service" id=".service_locator.XNSlN14"/>
        <argument key="Zikula\ZAuthModule\Controller\UserAdministrationController::listAction" type="service" id=".service_locator.kHEP6vB"/>
        <argument key="Zikula\ZAuthModule\Controller\UserAdministrationController::modifyAction" type="service" id=".service_locator.KmZNtaq"/>
        <argument key="Zikula\ZAuthModule\Controller\UserAdministrationController::sendConfirmationAction" type="service" id=".service_locator.2iIdcUP"/>
        <argument key="Zikula\ZAuthModule\Controller\UserAdministrationController::sendUserNameAction" type="service" id=".service_locator.uc8W4ZT"/>
        <argument key="Zikula\ZAuthModule\Controller\UserAdministrationController::setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ZAuthModule\Controller\UserAdministrationController::togglePasswordChangeAction" type="service" id=".service_locator.uGiYVVQ"/>
        <argument key="Zikula\ZAuthModule\Controller\UserAdministrationController::verifyAction" type="service" id=".service_locator.xw2rwYO"/>
        <argument key="Zikula\AdminModule\Controller\AdminController:adminpanelAction" type="service" id=".service_locator.ddxR4fK"/>
        <argument key="Zikula\AdminModule\Controller\AdminController:categorymenuAction" type="service" id=".service_locator.gxU0C5u"/>
        <argument key="Zikula\AdminModule\Controller\AdminController:deleteAction" type="service" id=".service_locator.qi_rkSP"/>
        <argument key="Zikula\AdminModule\Controller\AdminController:modifyAction" type="service" id=".service_locator.qi_rkSP"/>
        <argument key="Zikula\AdminModule\Controller\AdminController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\AdminModule\Controller\AdminController:viewAction" type="service" id=".service_locator.Q6Excfe"/>
        <argument key="Zikula\AdminModule\Controller\AdminInterfaceController:breadcrumbsAction" type="service" id=".service_locator.wTOCTmi"/>
        <argument key="Zikula\AdminModule\Controller\AdminInterfaceController:footerAction" type="service" id=".service_locator.CNpdA_S"/>
        <argument key="Zikula\AdminModule\Controller\AdminInterfaceController:headerAction" type="service" id=".service_locator.DxQr8Um"/>
        <argument key="Zikula\AdminModule\Controller\AdminInterfaceController:menuAction" type="service" id=".service_locator.Qd2v43d"/>
        <argument key="Zikula\AdminModule\Controller\AdminInterfaceController:securityanalyzerAction" type="service" id=".service_locator.ZYCs5qz"/>
        <argument key="Zikula\AdminModule\Controller\AdminInterfaceController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\AdminModule\Controller\AdminInterfaceController:updatecheckAction" type="service" id=".service_locator.ARmHTLY"/>
        <argument key="Zikula\AdminModule\Controller\AjaxController:addCategoryAction" type="service" id=".service_locator.E8jKebo"/>
        <argument key="Zikula\AdminModule\Controller\AjaxController:changeModuleCategoryAction" type="service" id=".service_locator.8493evj"/>
        <argument key="Zikula\AdminModule\Controller\AjaxController:defaultCategoryAction" type="service" id=".service_locator.6oiuNod"/>
        <argument key="Zikula\AdminModule\Controller\AjaxController:deleteCategoryAction" type="service" id=".service_locator.zkRr5GG"/>
        <argument key="Zikula\AdminModule\Controller\AjaxController:editCategoryAction" type="service" id=".service_locator.UYLqkkP"/>
        <argument key="Zikula\AdminModule\Controller\AjaxController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\AdminModule\Controller\AjaxController:sortCategoriesAction" type="service" id=".service_locator.UYLqkkP"/>
        <argument key="Zikula\AdminModule\Controller\AjaxController:sortModulesAction" type="service" id=".service_locator.DVCX.KX"/>
        <argument key="Zikula\AdminModule\Controller\ConfigController:configAction" type="service" id=".service_locator.o2lcBnc"/>
        <argument key="Zikula\AdminModule\Controller\ConfigController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\BlocksModule\Controller\AdminController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\BlocksModule\Controller\AdminController:viewAction" type="service" id=".service_locator.lLVQ1cm"/>
        <argument key="Zikula\BlocksModule\Controller\BlockController:deleteAction" type="service" id=".service_locator.0DbeZ.F"/>
        <argument key="Zikula\BlocksModule\Controller\BlockController:editAction" type="service" id=".service_locator.rjioojn"/>
        <argument key="Zikula\BlocksModule\Controller\BlockController:newAction" type="service" id=".service_locator.j_lmtN."/>
        <argument key="Zikula\BlocksModule\Controller\BlockController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\BlocksModule\Controller\BlockController:viewAction" type="service" id=".service_locator.uv0Gloe"/>
        <argument key="Zikula\BlocksModule\Controller\ConfigController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\BlocksModule\Controller\PlacementController:editAction" type="service" id=".service_locator.nwBlUkS"/>
        <argument key="Zikula\BlocksModule\Controller\PlacementController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\BlocksModule\Controller\PositionController:deleteAction" type="service" id=".service_locator.LJO0t4C"/>
        <argument key="Zikula\BlocksModule\Controller\PositionController:editAction" type="service" id=".service_locator.Y6FYYyz"/>
        <argument key="Zikula\BlocksModule\Controller\PositionController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\Bundle\HookBundle\Controller\HookController:changeProviderAreaOrderAction" type="service" id=".service_locator.T5htiMj"/>
        <argument key="Zikula\Bundle\HookBundle\Controller\HookController:editAction" type="service" id=".service_locator.9Ua32ha"/>
        <argument key="Zikula\Bundle\HookBundle\Controller\HookController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\Bundle\HookBundle\Controller\HookController:toggleSubscribeAreaStatusAction" type="service" id=".service_locator.3ir3T5X"/>
        <argument key="Zikula\Bundle\WorkflowBundle\Controller\EditorController:indexAction" type="service" id=".service_locator.woEf4Un"/>
        <argument key="Zikula\CategoriesModule\Controller\CategoryController:listAction" type="service" id=".service_locator.Yt68Lxm"/>
        <argument key="Zikula\CategoriesModule\Controller\CategoryController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\CategoriesModule\Controller\NodeController:contextMenuAction" type="service" id=".service_locator._BDNuWv"/>
        <argument key="Zikula\CategoriesModule\Controller\NodeController:moveAction" type="service" id=".service_locator.F7mvmfb"/>
        <argument key="Zikula\CategoriesModule\Controller\NodeController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\CategoriesModule\Controller\RegistryController:deleteAction" type="service" id=".service_locator.2zylTpH"/>
        <argument key="Zikula\CategoriesModule\Controller\RegistryController:editAction" type="service" id=".service_locator.fWyCulK"/>
        <argument key="Zikula\CategoriesModule\Controller\RegistryController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ExtensionsModule\Controller\ConfigController:configAction" type="service" id=".service_locator.RehufEE"/>
        <argument key="Zikula\ExtensionsModule\Controller\ConfigController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController:breadcrumbsAction" type="service" id=".service_locator.CNpdA_S"/>
        <argument key="Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController:footerAction" type="service" id=".service_locator.DxQr8Um"/>
        <argument key="Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController:headerAction" type="service" id=".service_locator.3vQOZkO"/>
        <argument key="Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController:linksAction" type="service" id=".service_locator.YMGaOSJ"/>
        <argument key="Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ExtensionsModule\Controller\ModuleController:activateAction" type="service" id=".service_locator.B60LH_3"/>
        <argument key="Zikula\ExtensionsModule\Controller\ModuleController:compatibilityAction" type="service" id=".service_locator.AO0lF5Z"/>
        <argument key="Zikula\ExtensionsModule\Controller\ModuleController:deactivateAction" type="service" id=".service_locator.B60LH_3"/>
        <argument key="Zikula\ExtensionsModule\Controller\ModuleController:installAction" type="service" id=".service_locator.bxPsQVH"/>
        <argument key="Zikula\ExtensionsModule\Controller\ModuleController:modifyAction" type="service" id=".service_locator.x2mM6.W"/>
        <argument key="Zikula\ExtensionsModule\Controller\ModuleController:postInstallAction" type="service" id=".service_locator.v2pqszd"/>
        <argument key="Zikula\ExtensionsModule\Controller\ModuleController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ExtensionsModule\Controller\ModuleController:uninstallAction" type="service" id=".service_locator.PyFwzGk"/>
        <argument key="Zikula\ExtensionsModule\Controller\ModuleController:upgradeAction" type="service" id=".service_locator.ZnkMVkQ"/>
        <argument key="Zikula\ExtensionsModule\Controller\ModuleController:viewModuleListAction" type="service" id=".service_locator.Mjns3VX"/>
        <argument key="Zikula\ExtensionsModule\Controller\ServicesController:moduleServicesAction" type="service" id=".service_locator.XdDM4ci"/>
        <argument key="Zikula\ExtensionsModule\Controller\ServicesController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\GroupsModule\Controller\ApplicationController:adminAction" type="service" id=".service_locator.ymo5u1_"/>
        <argument key="Zikula\GroupsModule\Controller\ApplicationController:createAction" type="service" id=".service_locator.uGcwr.9"/>
        <argument key="Zikula\GroupsModule\Controller\ApplicationController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\GroupsModule\Controller\ConfigController:configAction" type="service" id=".service_locator.MP6F85r"/>
        <argument key="Zikula\GroupsModule\Controller\ConfigController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\GroupsModule\Controller\GroupController:adminListAction" type="service" id=".service_locator.y2AvubJ"/>
        <argument key="Zikula\GroupsModule\Controller\GroupController:createAction" type="service" id=".service_locator.XdDM4ci"/>
        <argument key="Zikula\GroupsModule\Controller\GroupController:editAction" type="service" id=".service_locator.AX19wVn"/>
        <argument key="Zikula\GroupsModule\Controller\GroupController:listAction" type="service" id=".service_locator.MP6F85r"/>
        <argument key="Zikula\GroupsModule\Controller\GroupController:removeAction" type="service" id=".service_locator.AX19wVn"/>
        <argument key="Zikula\GroupsModule\Controller\GroupController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\GroupsModule\Controller\MembershipController:addAction" type="service" id=".service_locator.NPQiHiN"/>
        <argument key="Zikula\GroupsModule\Controller\MembershipController:adminListAction" type="service" id=".service_locator.jx7C1V3"/>
        <argument key="Zikula\GroupsModule\Controller\MembershipController:getUsersByFragmentAsTableAction" type="service" id=".service_locator.S3oQfnr"/>
        <argument key="Zikula\GroupsModule\Controller\MembershipController:joinAction" type="service" id=".service_locator.hg8Nqz8"/>
        <argument key="Zikula\GroupsModule\Controller\MembershipController:leaveAction" type="service" id=".service_locator.hg8Nqz8"/>
        <argument key="Zikula\GroupsModule\Controller\MembershipController:listAction" type="service" id=".service_locator.EoJL95I"/>
        <argument key="Zikula\GroupsModule\Controller\MembershipController:removeAction" type="service" id=".service_locator.gSvt8Pq"/>
        <argument key="Zikula\GroupsModule\Controller\MembershipController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\MailerModule\Controller\ConfigController:configAction" type="service" id=".service_locator.trGWsqD"/>
        <argument key="Zikula\MailerModule\Controller\ConfigController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\MailerModule\Controller\ConfigController:testAction" type="service" id=".service_locator.J36JJqg"/>
        <argument key="Zikula\MenuModule\Controller\ConfigController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\MenuModule\Controller\MenuController:deleteAction" type="service" id=".service_locator.UXQzp0z"/>
        <argument key="Zikula\MenuModule\Controller\MenuController:editAction" type="service" id=".service_locator.jM8x..f"/>
        <argument key="Zikula\MenuModule\Controller\MenuController:listAction" type="service" id=".service_locator.u8DyEi_"/>
        <argument key="Zikula\MenuModule\Controller\MenuController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\MenuModule\Controller\MenuController:viewAction" type="service" id=".service_locator.EyHY1Lm"/>
        <argument key="Zikula\MenuModule\Controller\NodeController:contextMenuAction" type="service" id=".service_locator.jM8x..f"/>
        <argument key="Zikula\MenuModule\Controller\NodeController:moveAction" type="service" id=".service_locator.u8DyEi_"/>
        <argument key="Zikula\MenuModule\Controller\NodeController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\PermissionsModule\Controller\ConfigController:configAction" type="service" id=".service_locator.x.KNJyk"/>
        <argument key="Zikula\PermissionsModule\Controller\ConfigController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\PermissionsModule\Controller\PermissionController:changeOrderAction" type="service" id=".service_locator.DJ.IY53"/>
        <argument key="Zikula\PermissionsModule\Controller\PermissionController:deleteAction" type="service" id=".service_locator.kl87m7D"/>
        <argument key="Zikula\PermissionsModule\Controller\PermissionController:editAction" type="service" id=".service_locator.0tHmwTc"/>
        <argument key="Zikula\PermissionsModule\Controller\PermissionController:listAction" type="service" id=".service_locator.c4QGT1L"/>
        <argument key="Zikula\PermissionsModule\Controller\PermissionController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\PermissionsModule\Controller\PermissionController:testAction" type="service" id=".service_locator.bhmUFxm"/>
        <argument key="Zikula\RoutesModule\Controller\AjaxController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\RoutesModule\Controller\AjaxController:updateSortPositionsAction" type="service" id=".service_locator.RAt1Xco"/>
        <argument key="Zikula\RoutesModule\Controller\ConfigController:configAction" type="service" id=".service_locator.PxQboCn"/>
        <argument key="Zikula\RoutesModule\Controller\ConfigController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController:adminDisplayAction" type="service" id=".service_locator.SZXLtQR"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController:adminEditAction" type="service" id=".service_locator.qUTQ8Yv"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController:adminHandleSelectedEntriesAction" type="service" id=".service_locator.r4oPMH7"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController:adminIndexAction" type="service" id=".service_locator.hohOVVO"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController:adminViewAction" type="service" id=".service_locator.B5P8uRf"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController:displayAction" type="service" id=".service_locator.SZXLtQR"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController:editAction" type="service" id=".service_locator.qUTQ8Yv"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController:handleSelectedEntriesAction" type="service" id=".service_locator.r4oPMH7"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController:indexAction" type="service" id=".service_locator.hohOVVO"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\RoutesModule\Controller\RouteController:viewAction" type="service" id=".service_locator.B5P8uRf"/>
        <argument key="Zikula\RoutesModule\Controller\UpdateController:dumpJsRoutesAction" type="service" id=".service_locator.NX_lu0O"/>
        <argument key="Zikula\RoutesModule\Controller\UpdateController:reloadAction" type="service" id=".service_locator.FxrlP9R"/>
        <argument key="Zikula\RoutesModule\Controller\UpdateController:renewAction" type="service" id=".service_locator.EgMOG4q"/>
        <argument key="Zikula\RoutesModule\Controller\UpdateController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\SearchModule\Controller\ConfigController:configAction" type="service" id=".service_locator.gDZjEEP"/>
        <argument key="Zikula\SearchModule\Controller\ConfigController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\SearchModule\Controller\SearchController:executeAction" type="service" id=".service_locator.z8jU37N"/>
        <argument key="Zikula\SearchModule\Controller\SearchController:opensearchAction" type="service" id=".service_locator.DJ6_IjB"/>
        <argument key="Zikula\SearchModule\Controller\SearchController:recentAction" type="service" id=".service_locator.z1ANE._"/>
        <argument key="Zikula\SearchModule\Controller\SearchController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\SecurityCenterModule\Controller\ConfigController:allowedhtmlAction" type="service" id=".service_locator.LFdkE7T"/>
        <argument key="Zikula\SecurityCenterModule\Controller\ConfigController:configAction" type="service" id=".service_locator.nzfZYg."/>
        <argument key="Zikula\SecurityCenterModule\Controller\ConfigController:purifierconfigAction" type="service" id=".service_locator.Rn.c2h9"/>
        <argument key="Zikula\SecurityCenterModule\Controller\ConfigController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\SecurityCenterModule\Controller\IdsLogController:deleteentryAction" type="service" id=".service_locator.S9SudG."/>
        <argument key="Zikula\SecurityCenterModule\Controller\IdsLogController:exportAction" type="service" id=".service_locator.S9SudG."/>
        <argument key="Zikula\SecurityCenterModule\Controller\IdsLogController:purgeAction" type="service" id=".service_locator.S9SudG."/>
        <argument key="Zikula\SecurityCenterModule\Controller\IdsLogController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\SecurityCenterModule\Controller\IdsLogController:viewAction" type="service" id=".service_locator.ghFHQf1"/>
        <argument key="Zikula\SettingsModule\Controller\SettingsController:localeAction" type="service" id=".service_locator.g77nwt4"/>
        <argument key="Zikula\SettingsModule\Controller\SettingsController:mainAction" type="service" id=".service_locator.P7qdpMw"/>
        <argument key="Zikula\SettingsModule\Controller\SettingsController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\SettingsModule\Controller\SettingsController:toggleEditInPlaceAction" type="service" id=".service_locator.QbjOsEa"/>
        <argument key="Zikula\ThemeModule\Controller\CombinedAssetController:assetAction" type="service" id=".service_locator.VC15VB8"/>
        <argument key="Zikula\ThemeModule\Controller\CombinedAssetController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ThemeModule\Controller\ThemeController:activateAction" type="service" id=".service_locator.vvjD5fm"/>
        <argument key="Zikula\ThemeModule\Controller\ThemeController:creditsAction" type="service" id=".service_locator.GXTYbGg"/>
        <argument key="Zikula\ThemeModule\Controller\ThemeController:deleteAction" type="service" id=".service_locator._9jopT8"/>
        <argument key="Zikula\ThemeModule\Controller\ThemeController:previewAction" type="service" id=".service_locator.aukUB8P"/>
        <argument key="Zikula\ThemeModule\Controller\ThemeController:setAsDefaultAction" type="service" id=".service_locator.wT30FSu"/>
        <argument key="Zikula\ThemeModule\Controller\ThemeController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ThemeModule\Controller\ThemeController:viewAction" type="service" id=".service_locator.xkQyMNr"/>
        <argument key="Zikula\ThemeModule\Controller\VarController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ThemeModule\Controller\VarController:varAction" type="service" id=".service_locator.ZYCs5qz"/>
        <argument key="Zikula\UsersModule\Controller\AccessController:loginAction" type="service" id=".service_locator.ktNcpdk"/>
        <argument key="Zikula\UsersModule\Controller\AccessController:logoutAction" type="service" id=".service_locator.VCOH3Fw"/>
        <argument key="Zikula\UsersModule\Controller\AccessController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\UsersModule\Controller\AccountController:changeLanguageAction" type="service" id=".service_locator.yeFq60B"/>
        <argument key="Zikula\UsersModule\Controller\AccountController:menuAction" type="service" id=".service_locator.msOSgbQ"/>
        <argument key="Zikula\UsersModule\Controller\AccountController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\UsersModule\Controller\ConfigController:authenticationMethodsAction" type="service" id=".service_locator.yMnaMnu"/>
        <argument key="Zikula\UsersModule\Controller\ConfigController:configAction" type="service" id=".service_locator.XdDM4ci"/>
        <argument key="Zikula\UsersModule\Controller\ConfigController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\UsersModule\Controller\FileIOController:exportAction" type="service" id=".service_locator.S3oQfnr"/>
        <argument key="Zikula\UsersModule\Controller\FileIOController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\UsersModule\Controller\LiveSearchController:getUsersAction" type="service" id=".service_locator.IK_AoaO"/>
        <argument key="Zikula\UsersModule\Controller\LiveSearchController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\UsersModule\Controller\RegistrationController:registerAction" type="service" id=".service_locator.1HH3vz4"/>
        <argument key="Zikula\UsersModule\Controller\RegistrationController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\UsersModule\Controller\UserAdministrationController:approveAction" type="service" id=".service_locator.p6UcmdX"/>
        <argument key="Zikula\UsersModule\Controller\UserAdministrationController:deleteAction" type="service" id=".service_locator.kgFMb_g"/>
        <argument key="Zikula\UsersModule\Controller\UserAdministrationController:getUsersByFragmentAsTableAction" type="service" id=".service_locator.olqsteU"/>
        <argument key="Zikula\UsersModule\Controller\UserAdministrationController:listAction" type="service" id=".service_locator.cNZ2NkP"/>
        <argument key="Zikula\UsersModule\Controller\UserAdministrationController:mailUsersAction" type="service" id=".service_locator.MFwmbgB"/>
        <argument key="Zikula\UsersModule\Controller\UserAdministrationController:modifyAction" type="service" id=".service_locator.45wSGGP"/>
        <argument key="Zikula\UsersModule\Controller\UserAdministrationController:searchAction" type="service" id=".service_locator.Ay.NhXZ"/>
        <argument key="Zikula\UsersModule\Controller\UserAdministrationController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ZAuthModule\Controller\AccountController:changeEmailAction" type="service" id=".service_locator.W5exam."/>
        <argument key="Zikula\ZAuthModule\Controller\AccountController:changePasswordAction" type="service" id=".service_locator.HogTcZF"/>
        <argument key="Zikula\ZAuthModule\Controller\AccountController:confirmChangedEmailAction" type="service" id=".service_locator.sVSDQFF"/>
        <argument key="Zikula\ZAuthModule\Controller\AccountController:lostPasswordAction" type="service" id=".service_locator.pdFAuYB"/>
        <argument key="Zikula\ZAuthModule\Controller\AccountController:lostPasswordResetAction" type="service" id=".service_locator.ZEEmRh5"/>
        <argument key="Zikula\ZAuthModule\Controller\AccountController:lostUserNameAction" type="service" id=".service_locator._HVhBvb"/>
        <argument key="Zikula\ZAuthModule\Controller\AccountController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ZAuthModule\Controller\ConfigController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ZAuthModule\Controller\FileIOController:importAction" type="service" id=".service_locator.cqSHDFJ"/>
        <argument key="Zikula\ZAuthModule\Controller\FileIOController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ZAuthModule\Controller\RegistrationController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ZAuthModule\Controller\RegistrationController:verifyAction" type="service" id=".service_locator.etNUnIn"/>
        <argument key="Zikula\ZAuthModule\Controller\UserAdministrationController:createAction" type="service" id=".service_locator.nHwaLpR"/>
        <argument key="Zikula\ZAuthModule\Controller\UserAdministrationController:getUsersByFragmentAsTableAction" type="service" id=".service_locator.XNSlN14"/>
        <argument key="Zikula\ZAuthModule\Controller\UserAdministrationController:listAction" type="service" id=".service_locator.kHEP6vB"/>
        <argument key="Zikula\ZAuthModule\Controller\UserAdministrationController:modifyAction" type="service" id=".service_locator.KmZNtaq"/>
        <argument key="Zikula\ZAuthModule\Controller\UserAdministrationController:sendConfirmationAction" type="service" id=".service_locator.2iIdcUP"/>
        <argument key="Zikula\ZAuthModule\Controller\UserAdministrationController:sendUserNameAction" type="service" id=".service_locator.uc8W4ZT"/>
        <argument key="Zikula\ZAuthModule\Controller\UserAdministrationController:setTranslator" type="service" id=".service_locator.SRnkpTI"/>
        <argument key="Zikula\ZAuthModule\Controller\UserAdministrationController:togglePasswordChangeAction" type="service" id=".service_locator.uGiYVVQ"/>
        <argument key="Zikula\ZAuthModule\Controller\UserAdministrationController:verifyAction" type="service" id=".service_locator.xw2rwYO"/>
      </argument>
    </service>
    <service id=".service_locator.uEoGQ84" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" type="service" id="validator.not_compromised_password"/>
        <argument key="Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\AuthenticateAdminLoginValidator" type="service" id="Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\AuthenticateAdminLoginValidator"/>
        <argument key="Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\ValidPdoConnectionValidator" type="service" id="Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\ValidPdoConnectionValidator"/>
        <argument key="Zikula\CategoriesModule\Validator\Constraints\UniqueNameForPositionValidator" type="service" id="Zikula\CategoriesModule\Validator\Constraints\UniqueNameForPositionValidator"/>
        <argument key="Zikula\GroupsModule\Validator\Constraints\ValidGroupNameValidator" type="service" id="Zikula\GroupsModule\Validator\Constraints\ValidGroupNameValidator"/>
        <argument key="Zikula\RoutesModule\Validator\Constraints\ListEntryValidator" type="service" id="Zikula\RoutesModule\Validator\Constraints\ListEntryValidator"/>
        <argument key="Zikula\SettingsModule\Validator\Constraints\ValidControllerValidator" type="service" id="Zikula\SettingsModule\Validator\Constraints\ValidControllerValidator"/>
        <argument key="Zikula\UsersModule\Validator\Constraints\ValidEmailValidator" type="service" id="Zikula\UsersModule\Validator\Constraints\ValidEmailValidator"/>
        <argument key="Zikula\UsersModule\Validator\Constraints\ValidUnameValidator" type="service" id="Zikula\UsersModule\Validator\Constraints\ValidUnameValidator"/>
        <argument key="Zikula\UsersModule\Validator\Constraints\ValidUserFieldsValidator" type="service" id="Zikula\UsersModule\Validator\Constraints\ValidUserFieldsValidator"/>
        <argument key="Zikula\ZAuthModule\Validator\Constraints\ValidAntiSpamAnswerValidator" type="service" id="Zikula\ZAuthModule\Validator\Constraints\ValidAntiSpamAnswerValidator"/>
        <argument key="Zikula\ZAuthModule\Validator\Constraints\ValidEmailValidator" type="service" id="Zikula\ZAuthModule\Validator\Constraints\ValidEmailValidator"/>
        <argument key="Zikula\ZAuthModule\Validator\Constraints\ValidPasswordChangeValidator" type="service" id="Zikula\ZAuthModule\Validator\Constraints\ValidPasswordChangeValidator"/>
        <argument key="Zikula\ZAuthModule\Validator\Constraints\ValidPasswordValidator" type="service" id="Zikula\ZAuthModule\Validator\Constraints\ValidPasswordValidator"/>
        <argument key="Zikula\ZAuthModule\Validator\Constraints\ValidRegistrationVerificationValidator" type="service" id="Zikula\ZAuthModule\Validator\Constraints\ValidRegistrationVerificationValidator"/>
        <argument key="Zikula\ZAuthModule\Validator\Constraints\ValidUnameValidator" type="service" id="Zikula\ZAuthModule\Validator\Constraints\ValidUnameValidator"/>
        <argument key="Zikula\ZAuthModule\Validator\Constraints\ValidUserFieldsValidator" type="service" id="Zikula\ZAuthModule\Validator\Constraints\ValidUserFieldsValidator"/>
        <argument key="doctrine.orm.validator.unique" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service" id="security.validator.user_password"/>
        <argument key="validator.expression" type="service" id="validator.expression"/>
      </argument>
    </service>
    <service id=".service_locator._cmka45" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="inline" type="service" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="debug.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="100"/>
      <argument type="service" id="debug.argument_resolver.request_attribute.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.request.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.session.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.security.user_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="40"/>
      <argument type="service" id="debug.security.user_value_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id="debug.argument_resolver.service.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-100"/>
      <argument type="service" id="debug.argument_resolver.default.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-150"/>
      <argument type="service" id="debug.argument_resolver.variadic.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-200"/>
      <argument type="service" id="debug.argument_resolver.not_tagged_controller.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".service_locator.2O.a6sX" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Liip\ImagineBundle\Form\Type\ImageType" type="service" id="liip_imagine.form.type.image"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FileType" type="service" id="form.type.file"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service" id="form.type.form"/>
        <argument key="Zikula\AdminModule\Form\Type\AdminCategoryType" type="service" id="Zikula\AdminModule\Form\Type\AdminCategoryType"/>
        <argument key="Zikula\AdminModule\Form\Type\ConfigType" type="service" id="Zikula\AdminModule\Form\Type\ConfigType"/>
        <argument key="Zikula\BlocksModule\Block\Form\Type\FincludeBlockType" type="service" id="Zikula\BlocksModule\Block\Form\Type\FincludeBlockType"/>
        <argument key="Zikula\BlocksModule\Block\Form\Type\HtmlBlockType" type="service" id="Zikula\BlocksModule\Block\Form\Type\HtmlBlockType"/>
        <argument key="Zikula\BlocksModule\Block\Form\Type\TextBlockType" type="service" id="Zikula\BlocksModule\Block\Form\Type\TextBlockType"/>
        <argument key="Zikula\BlocksModule\Block\Form\Type\XsltBlockType" type="service" id="Zikula\BlocksModule\Block\Form\Type\XsltBlockType"/>
        <argument key="Zikula\BlocksModule\Form\Type\AdminViewFilterType" type="service" id="Zikula\BlocksModule\Form\Type\AdminViewFilterType"/>
        <argument key="Zikula\BlocksModule\Form\Type\BlockFilterType" type="service" id="Zikula\BlocksModule\Form\Type\BlockFilterType"/>
        <argument key="Zikula\BlocksModule\Form\Type\BlockPositionType" type="service" id="Zikula\BlocksModule\Form\Type\BlockPositionType"/>
        <argument key="Zikula\BlocksModule\Form\Type\BlockType" type="service" id="Zikula\BlocksModule\Form\Type\BlockType"/>
        <argument key="Zikula\BlocksModule\Form\Type\ConfigType" type="service" id="Zikula\BlocksModule\Form\Type\ConfigType"/>
        <argument key="Zikula\BlocksModule\Form\Type\NewBlockType" type="service" id="Zikula\BlocksModule\Form\Type\NewBlockType"/>
        <argument key="Zikula\Bundle\CoreInstallerBundle\Form\Type\CreateAdminType" type="service" id="Zikula\Bundle\CoreInstallerBundle\Form\Type\CreateAdminType"/>
        <argument key="Zikula\Bundle\CoreInstallerBundle\Form\Type\DbCredsType" type="service" id="Zikula\Bundle\CoreInstallerBundle\Form\Type\DbCredsType"/>
        <argument key="Zikula\Bundle\CoreInstallerBundle\Form\Type\LocaleType" type="service" id="Zikula\Bundle\CoreInstallerBundle\Form\Type\LocaleType"/>
        <argument key="Zikula\Bundle\CoreInstallerBundle\Form\Type\LoginType" type="service" id="Zikula\Bundle\CoreInstallerBundle\Form\Type\LoginType"/>
        <argument key="Zikula\Bundle\CoreInstallerBundle\Form\Type\RequestContextType" type="service" id="Zikula\Bundle\CoreInstallerBundle\Form\Type\RequestContextType"/>
        <argument key="Zikula\Bundle\FormExtensionBundle\Form\Type\DeletionType" type="service" id="Zikula\Bundle\FormExtensionBundle\Form\Type\DeletionType"/>
        <argument key="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicFieldType" type="service" id="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicFieldType"/>
        <argument key="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\ChoiceFormOptionsArrayType" type="service" id="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\ChoiceFormOptionsArrayType"/>
        <argument key="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\DateTimeFormOptionsArrayType" type="service" id="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\DateTimeFormOptionsArrayType"/>
        <argument key="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\FormOptionsArrayType" type="service" id="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\FormOptionsArrayType"/>
        <argument key="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\MoneyFormOptionsArrayType" type="service" id="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\MoneyFormOptionsArrayType"/>
        <argument key="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\RegexibleFormOptionsArrayType" type="service" id="Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\RegexibleFormOptionsArrayType"/>
        <argument key="Zikula\Bundle\FormExtensionBundle\Form\Type\IconType" type="service" id="Zikula\Bundle\FormExtensionBundle\Form\Type\IconType"/>
        <argument key="Zikula\Bundle\FormExtensionBundle\Form\Type\InlineFormDefinitionType" type="service" id="Zikula\Bundle\FormExtensionBundle\Form\Type\InlineFormDefinitionType"/>
        <argument key="Zikula\Bundle\FormExtensionBundle\Form\Type\LocaleType" type="service" id="Zikula\Bundle\FormExtensionBundle\Form\Type\LocaleType"/>
        <argument key="Zikula\CategoriesModule\Form\Type\CategoriesType" type="service" id="Zikula\CategoriesModule\Form\Type\CategoriesType"/>
        <argument key="Zikula\CategoriesModule\Form\Type\CategoryAttributeType" type="service" id="Zikula\CategoriesModule\Form\Type\CategoryAttributeType"/>
        <argument key="Zikula\CategoriesModule\Form\Type\CategoryRegistryType" type="service" id="Zikula\CategoriesModule\Form\Type\CategoryRegistryType"/>
        <argument key="Zikula\CategoriesModule\Form\Type\CategoryTreeType" type="service" id="Zikula\CategoriesModule\Form\Type\CategoryTreeType"/>
        <argument key="Zikula\CategoriesModule\Form\Type\CategoryType" type="service" id="Zikula\CategoriesModule\Form\Type\CategoryType"/>
        <argument key="Zikula\ExtensionsModule\Form\Type\ConfigType" type="service" id="Zikula\ExtensionsModule\Form\Type\ConfigType"/>
        <argument key="Zikula\ExtensionsModule\Form\Type\ExtensionInstallType" type="service" id="Zikula\ExtensionsModule\Form\Type\ExtensionInstallType"/>
        <argument key="Zikula\ExtensionsModule\Form\Type\ExtensionModifyType" type="service" id="Zikula\ExtensionsModule\Form\Type\ExtensionModifyType"/>
        <argument key="Zikula\GroupsModule\Form\Type\ConfigType" type="service" id="Zikula\GroupsModule\Form\Type\ConfigType"/>
        <argument key="Zikula\GroupsModule\Form\Type\CreateGroupType" type="service" id="Zikula\GroupsModule\Form\Type\CreateGroupType"/>
        <argument key="Zikula\GroupsModule\Form\Type\EditGroupType" type="service" id="Zikula\GroupsModule\Form\Type\EditGroupType"/>
        <argument key="Zikula\GroupsModule\Form\Type\ManageApplicationType" type="service" id="Zikula\GroupsModule\Form\Type\ManageApplicationType"/>
        <argument key="Zikula\GroupsModule\Form\Type\MembershipApplicationType" type="service" id="Zikula\GroupsModule\Form\Type\MembershipApplicationType"/>
        <argument key="Zikula\GroupsModule\Form\Type\RemoveUserType" type="service" id="Zikula\GroupsModule\Form\Type\RemoveUserType"/>
        <argument key="Zikula\MailerModule\Form\Type\ConfigType" type="service" id="Zikula\MailerModule\Form\Type\ConfigType"/>
        <argument key="Zikula\MailerModule\Form\Type\TestType" type="service" id="Zikula\MailerModule\Form\Type\TestType"/>
        <argument key="Zikula\MenuModule\Block\Form\Type\MenuType" type="service" id="Zikula\MenuModule\Block\Form\Type\MenuType"/>
        <argument key="Zikula\MenuModule\Form\Type\DeleteMenuItemType" type="service" id="Zikula\MenuModule\Form\Type\DeleteMenuItemType"/>
        <argument key="Zikula\MenuModule\Form\Type\HiddenMenuItemType" type="service" id="Zikula\MenuModule\Form\Type\HiddenMenuItemType"/>
        <argument key="Zikula\MenuModule\Form\Type\KeyValuePairType" type="service" id="Zikula\MenuModule\Form\Type\KeyValuePairType"/>
        <argument key="Zikula\MenuModule\Form\Type\MenuItemType" type="service" id="Zikula\MenuModule\Form\Type\MenuItemType"/>
        <argument key="Zikula\PermissionsModule\Form\Type\ConfigType" type="service" id="Zikula\PermissionsModule\Form\Type\ConfigType"/>
        <argument key="Zikula\PermissionsModule\Form\Type\FilterListType" type="service" id="Zikula\PermissionsModule\Form\Type\FilterListType"/>
        <argument key="Zikula\PermissionsModule\Form\Type\PermissionCheckType" type="service" id="Zikula\PermissionsModule\Form\Type\PermissionCheckType"/>
        <argument key="Zikula\PermissionsModule\Form\Type\PermissionType" type="service" id="Zikula\PermissionsModule\Form\Type\PermissionType"/>
        <argument key="Zikula\RoutesModule\Form\Type\ConfigType" type="service" id="Zikula\RoutesModule\Form\Type\ConfigType"/>
        <argument key="Zikula\RoutesModule\Form\Type\Field\ArrayType" type="service" id="Zikula\RoutesModule\Form\Type\Field\ArrayType"/>
        <argument key="Zikula\RoutesModule\Form\Type\Field\MultiListType" type="service" id="Zikula\RoutesModule\Form\Type\Field\MultiListType"/>
        <argument key="Zikula\RoutesModule\Form\Type\QuickNavigation\RouteQuickNavType" type="service" id="Zikula\RoutesModule\Form\Type\QuickNavigation\RouteQuickNavType"/>
        <argument key="Zikula\RoutesModule\Form\Type\RouteType" type="service" id="Zikula\RoutesModule\Form\Type\RouteType"/>
        <argument key="Zikula\SearchModule\Block\Form\Type\SearchBlockType" type="service" id="Zikula\SearchModule\Block\Form\Type\SearchBlockType"/>
        <argument key="Zikula\SearchModule\Form\Type\AmendableModuleSearchType" type="service" id="Zikula\SearchModule\Form\Type\AmendableModuleSearchType"/>
        <argument key="Zikula\SearchModule\Form\Type\ConfigType" type="service" id="Zikula\SearchModule\Form\Type\ConfigType"/>
        <argument key="Zikula\SearchModule\Form\Type\SearchType" type="service" id="Zikula\SearchModule\Form\Type\SearchType"/>
        <argument key="Zikula\SecurityCenterModule\Form\Type\ConfigType" type="service" id="Zikula\SecurityCenterModule\Form\Type\ConfigType"/>
        <argument key="Zikula\SecurityCenterModule\Form\Type\IdsLogExportType" type="service" id="Zikula\SecurityCenterModule\Form\Type\IdsLogExportType"/>
        <argument key="Zikula\SecurityCenterModule\Form\Type\IdsLogFilterType" type="service" id="Zikula\SecurityCenterModule\Form\Type\IdsLogFilterType"/>
        <argument key="Zikula\SettingsModule\Form\Type\LocaleSettingsType" type="service" id="Zikula\SettingsModule\Form\Type\LocaleSettingsType"/>
        <argument key="Zikula\SettingsModule\Form\Type\MainSettingsType" type="service" id="Zikula\SettingsModule\Form\Type\MainSettingsType"/>
        <argument key="Zikula\ThemeModule\Form\Type\DeleteThemeType" type="service" id="Zikula\ThemeModule\Form\Type\DeleteThemeType"/>
        <argument key="Zikula\ThemeModule\Form\Type\SetDefaultThemeType" type="service" id="Zikula\ThemeModule\Form\Type\SetDefaultThemeType"/>
        <argument key="Zikula\UsersModule\Form\Type\AdminModifyUserType" type="service" id="Zikula\UsersModule\Form\Type\AdminModifyUserType"/>
        <argument key="Zikula\UsersModule\Form\Type\ChangeLanguageType" type="service" id="Zikula\UsersModule\Form\Type\ChangeLanguageType"/>
        <argument key="Zikula\UsersModule\Form\Type\ConfigType\AuthenticationMethodsType" type="service" id="Zikula\UsersModule\Form\Type\ConfigType\AuthenticationMethodsType"/>
        <argument key="Zikula\UsersModule\Form\Type\ConfigType\ConfigType" type="service" id="Zikula\UsersModule\Form\Type\ConfigType\ConfigType"/>
        <argument key="Zikula\UsersModule\Form\Type\DefaultLoginType" type="service" id="Zikula\UsersModule\Form\Type\DefaultLoginType"/>
        <argument key="Zikula\UsersModule\Form\Type\DeleteConfirmationType" type="service" id="Zikula\UsersModule\Form\Type\DeleteConfirmationType"/>
        <argument key="Zikula\UsersModule\Form\Type\DeleteType" type="service" id="Zikula\UsersModule\Form\Type\DeleteType"/>
        <argument key="Zikula\UsersModule\Form\Type\ExportUsersType" type="service" id="Zikula\UsersModule\Form\Type\ExportUsersType"/>
        <argument key="Zikula\UsersModule\Form\Type\MailType" type="service" id="Zikula\UsersModule\Form\Type\MailType"/>
        <argument key="Zikula\UsersModule\Form\Type\RegistrationType\ApproveRegistrationConfirmationType" type="service" id="Zikula\UsersModule\Form\Type\RegistrationType\ApproveRegistrationConfirmationType"/>
        <argument key="Zikula\UsersModule\Form\Type\RegistrationType\DefaultRegistrationType" type="service" id="Zikula\UsersModule\Form\Type\RegistrationType\DefaultRegistrationType"/>
        <argument key="Zikula\UsersModule\Form\Type\SearchUserType" type="service" id="Zikula\UsersModule\Form\Type\SearchUserType"/>
        <argument key="Zikula\UsersModule\Form\Type\UserLiveSearchType" type="service" id="Zikula\UsersModule\Form\Type\UserLiveSearchType"/>
        <argument key="Zikula\ZAuthModule\Form\Type\AdminCreatedUserType" type="service" id="Zikula\ZAuthModule\Form\Type\AdminCreatedUserType"/>
        <argument key="Zikula\ZAuthModule\Form\Type\AdminModifyUserType" type="service" id="Zikula\ZAuthModule\Form\Type\AdminModifyUserType"/>
        <argument key="Zikula\ZAuthModule\Form\Type\ChangeEmailType" type="service" id="Zikula\ZAuthModule\Form\Type\ChangeEmailType"/>
        <argument key="Zikula\ZAuthModule\Form\Type\ChangePasswordType" type="service" id="Zikula\ZAuthModule\Form\Type\ChangePasswordType"/>
        <argument key="Zikula\ZAuthModule\Form\Type\ConfigType" type="service" id="Zikula\ZAuthModule\Form\Type\ConfigType"/>
        <argument key="Zikula\ZAuthModule\Form\Type\EitherLoginType" type="service" id="Zikula\ZAuthModule\Form\Type\EitherLoginType"/>
        <argument key="Zikula\ZAuthModule\Form\Type\EmailLoginType" type="service" id="Zikula\ZAuthModule\Form\Type\EmailLoginType"/>
        <argument key="Zikula\ZAuthModule\Form\Type\ImportUserType" type="service" id="Zikula\ZAuthModule\Form\Type\ImportUserType"/>
        <argument key="Zikula\ZAuthModule\Form\Type\LostPasswordType" type="service" id="Zikula\ZAuthModule\Form\Type\LostPasswordType"/>
        <argument key="Zikula\ZAuthModule\Form\Type\LostUserNameType" type="service" id="Zikula\ZAuthModule\Form\Type\LostUserNameType"/>
        <argument key="Zikula\ZAuthModule\Form\Type\RegistrationType" type="service" id="Zikula\ZAuthModule\Form\Type\RegistrationType"/>
        <argument key="Zikula\ZAuthModule\Form\Type\SendVerificationConfirmationType" type="service" id="Zikula\ZAuthModule\Form\Type\SendVerificationConfirmationType"/>
        <argument key="Zikula\ZAuthModule\Form\Type\TogglePasswordConfirmationType" type="service" id="Zikula\ZAuthModule\Form\Type\TogglePasswordConfirmationType"/>
        <argument key="Zikula\ZAuthModule\Form\Type\UnameLoginType" type="service" id="Zikula\ZAuthModule\Form\Type\UnameLoginType"/>
        <argument key="Zikula\ZAuthModule\Form\Type\VerifyRegistrationType" type="service" id="Zikula\ZAuthModule\Form\Type\VerifyRegistrationType"/>
      </argument>
    </service>
    <service id="debug.security.voter.security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.authenticated_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.role_hierarchy_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.expression_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.logout.handler.csrf_token_clearing" class="Symfony\Component\Security\Http\Logout\CsrfTokenClearingLogoutHandler" public="false">
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.deprecation_filter"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id=".service_locator.bpvU51K" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
      </argument>
    </service>
    <service id=".service_locator.YkL78jj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Zikula\AdminModule\Entity\Repository\AdminCategoryRepository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminCategoryRepository"/>
        <argument key="Zikula\AdminModule\Entity\Repository\AdminModuleRepository" type="service" id="Zikula\AdminModule\Entity\Repository\AdminModuleRepository"/>
        <argument key="Zikula\BlocksModule\Entity\Repository\BlockPositionRepository" type="service" id="Zikula\BlocksModule\Entity\Repository\BlockPositionRepository"/>
        <argument key="Zikula\BlocksModule\Entity\Repository\BlockRepository" type="service" id="Zikula\BlocksModule\Entity\Repository\BlockRepository"/>
        <argument key="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookBindingRepository" type="service" id="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookBindingRepository"/>
        <argument key="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookRuntimeRepository" type="service" id="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookRuntimeRepository"/>
        <argument key="Zikula\CategoriesModule\Entity\Repository\CategoryRegistryRepository" type="service" id="Zikula\CategoriesModule\Entity\Repository\CategoryRegistryRepository"/>
        <argument key="Zikula\CategoriesModule\Entity\Repository\CategoryRepository" type="service" id="Zikula\CategoriesModule\Entity\Repository\CategoryRepository"/>
        <argument key="Zikula\ExtensionsModule\Entity\Repository\ExtensionDependencyRepository" type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionDependencyRepository"/>
        <argument key="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository" type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository"/>
        <argument key="Zikula\ExtensionsModule\Entity\Repository\ExtensionVarRepository" type="service" id="Zikula\ExtensionsModule\Entity\Repository\ExtensionVarRepository"/>
        <argument key="Zikula\GroupsModule\Entity\Repository\GroupApplicationRepository" type="service" id="Zikula\GroupsModule\Entity\Repository\GroupApplicationRepository"/>
        <argument key="Zikula\GroupsModule\Entity\Repository\GroupRepository" type="service" id="Zikula\GroupsModule\Entity\Repository\GroupRepository"/>
        <argument key="Zikula\MenuModule\Entity\Repository\MenuItemRepository" type="service" id="Zikula\MenuModule\Entity\Repository\MenuItemRepository"/>
        <argument key="Zikula\PermissionsModule\Entity\Repository\PermissionRepository" type="service" id="Zikula\PermissionsModule\Entity\Repository\PermissionRepository"/>
        <argument key="Zikula\SearchModule\Entity\Repository\SearchResultRepository" type="service" id="Zikula\SearchModule\Entity\Repository\SearchResultRepository"/>
        <argument key="Zikula\SearchModule\Entity\Repository\SearchStatRepository" type="service" id="Zikula\SearchModule\Entity\Repository\SearchStatRepository"/>
        <argument key="Zikula\SecurityCenterModule\Entity\Repository\IntrusionRepository" type="service" id="Zikula\SecurityCenterModule\Entity\Repository\IntrusionRepository"/>
        <argument key="Zikula\ThemeModule\Entity\Repository\ThemeEntityRepository" type="service" id="Zikula\ThemeModule\Entity\Repository\ThemeEntityRepository"/>
        <argument key="Zikula\UsersModule\Entity\Repository\UserAttributeRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserAttributeRepository"/>
        <argument key="Zikula\UsersModule\Entity\Repository\UserRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserRepository"/>
        <argument key="Zikula\UsersModule\Entity\Repository\UserSessionRepository" type="service" id="Zikula\UsersModule\Entity\Repository\UserSessionRepository"/>
        <argument key="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository" type="service" id="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository"/>
        <argument key="Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository" type="service" id="Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository"/>
      </argument>
    </service>
    <service id=".service_locator.lHZYdJL" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="list" type="service" id="knp_menu.renderer.list"/>
        <argument key="twig" type="service" id="knp_menu.renderer.twig"/>
      </argument>
    </service>
    <service id=".service_locator.V.o0zE7" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id=".service_locator.JFjjyG5" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.default"/>
      </argument>
    </service>
    <service id=".service_locator.JFjjyG5.translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="translation.warmer"/>
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.JFjjyG5" method="withContext"/>
    </service>
    <service id=".service_locator.SXRFexO" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.SXRFexO.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.SXRFexO" method="withContext"/>
    </service>
    <service id=".service_locator.3TLJ8AE" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service" id="jms_i18n_routing.router"/>
      </argument>
    </service>
    <service id=".service_locator.3TLJ8AE.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.3TLJ8AE" method="withContext"/>
    </service>
    <service id=".service_locator.lSARbri" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.lSARbri.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="twig.template_cache_warmer"/>
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.lSARbri" method="withContext"/>
    </service>
    <service id=".service_locator.pNNo5z3" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="jms_i18n_routing.router" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.pNNo5z3.Zikula\Bundle\HookBundle\Controller\HookController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\Bundle\HookBundle\Controller\HookController"/>
      <argument>Zikula\Bundle\HookBundle\Controller\HookController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.pNNo5z3" method="withContext"/>
    </service>
    <service id=".service_locator.pNNo5z3.Zikula\Bundle\WorkflowBundle\Controller\EditorController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\Bundle\WorkflowBundle\Controller\EditorController"/>
      <argument>Zikula\Bundle\WorkflowBundle\Controller\EditorController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.pNNo5z3" method="withContext"/>
    </service>
    <service id=".service_locator.IQcf4l5" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="jms_i18n_routing.router" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.IQcf4l5.Zikula\AdminModule\Controller\AdminController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\AdminModule\Controller\AdminController"/>
      <argument>Zikula\AdminModule\Controller\AdminController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.IQcf4l5" method="withContext"/>
    </service>
    <service id=".service_locator.IQcf4l5.Zikula\AdminModule\Controller\AdminInterfaceController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\AdminModule\Controller\AdminInterfaceController"/>
      <argument>Zikula\AdminModule\Controller\AdminInterfaceController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.IQcf4l5" method="withContext"/>
    </service>
    <service id=".service_locator.IQcf4l5.Zikula\AdminModule\Controller\AjaxController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\AdminModule\Controller\AjaxController"/>
      <argument>Zikula\AdminModule\Controller\AjaxController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.IQcf4l5" method="withContext"/>
    </service>
    <service id=".service_locator.IQcf4l5.Zikula\AdminModule\Controller\ConfigController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\AdminModule\Controller\ConfigController"/>
      <argument>Zikula\AdminModule\Controller\ConfigController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.IQcf4l5" method="withContext"/>
    </service>
    <service id=".service_locator.TfcQtI2" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="jms_i18n_routing.router" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.TfcQtI2.Zikula\BlocksModule\Controller\AdminController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\BlocksModule\Controller\AdminController"/>
      <argument>Zikula\BlocksModule\Controller\AdminController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.TfcQtI2" method="withContext"/>
    </service>
    <service id=".service_locator.TfcQtI2.Zikula\BlocksModule\Controller\BlockController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\BlocksModule\Controller\BlockController"/>
      <argument>Zikula\BlocksModule\Controller\BlockController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.TfcQtI2" method="withContext"/>
    </service>
    <service id=".service_locator.TfcQtI2.Zikula\BlocksModule\Controller\ConfigController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\BlocksModule\Controller\ConfigController"/>
      <argument>Zikula\BlocksModule\Controller\ConfigController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.TfcQtI2" method="withContext"/>
    </service>
    <service id=".service_locator.TfcQtI2.Zikula\BlocksModule\Controller\PlacementController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\BlocksModule\Controller\PlacementController"/>
      <argument>Zikula\BlocksModule\Controller\PlacementController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.TfcQtI2" method="withContext"/>
    </service>
    <service id=".service_locator.TfcQtI2.Zikula\BlocksModule\Controller\PositionController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\BlocksModule\Controller\PositionController"/>
      <argument>Zikula\BlocksModule\Controller\PositionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.TfcQtI2" method="withContext"/>
    </service>
    <service id=".service_locator.GT5Kcf8" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="jms_i18n_routing.router" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.GT5Kcf8.Zikula\CategoriesModule\Controller\CategoryController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\CategoriesModule\Controller\CategoryController"/>
      <argument>Zikula\CategoriesModule\Controller\CategoryController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.GT5Kcf8" method="withContext"/>
    </service>
    <service id=".service_locator.GT5Kcf8.Zikula\CategoriesModule\Controller\NodeController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\CategoriesModule\Controller\NodeController"/>
      <argument>Zikula\CategoriesModule\Controller\NodeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.GT5Kcf8" method="withContext"/>
    </service>
    <service id=".service_locator.GT5Kcf8.Zikula\CategoriesModule\Controller\RegistryController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\CategoriesModule\Controller\RegistryController"/>
      <argument>Zikula\CategoriesModule\Controller\RegistryController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.GT5Kcf8" method="withContext"/>
    </service>
    <service id=".service_locator.ybqw7s0" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="jms_i18n_routing.router" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.ybqw7s0.Zikula\ExtensionsModule\Controller\ConfigController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\ExtensionsModule\Controller\ConfigController"/>
      <argument>Zikula\ExtensionsModule\Controller\ConfigController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ybqw7s0" method="withContext"/>
    </service>
    <service id=".service_locator.ybqw7s0.Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController"/>
      <argument>Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ybqw7s0" method="withContext"/>
    </service>
    <service id=".service_locator.ybqw7s0.Zikula\ExtensionsModule\Controller\ModuleController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\ExtensionsModule\Controller\ModuleController"/>
      <argument>Zikula\ExtensionsModule\Controller\ModuleController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ybqw7s0" method="withContext"/>
    </service>
    <service id=".service_locator.ybqw7s0.Zikula\ExtensionsModule\Controller\ServicesController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\ExtensionsModule\Controller\ServicesController"/>
      <argument>Zikula\ExtensionsModule\Controller\ServicesController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ybqw7s0" method="withContext"/>
    </service>
    <service id=".service_locator.7vj43mn" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="jms_i18n_routing.router" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.7vj43mn.Zikula\GroupsModule\Controller\ApplicationController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\GroupsModule\Controller\ApplicationController"/>
      <argument>Zikula\GroupsModule\Controller\ApplicationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7vj43mn" method="withContext"/>
    </service>
    <service id=".service_locator.7vj43mn.Zikula\GroupsModule\Controller\ConfigController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\GroupsModule\Controller\ConfigController"/>
      <argument>Zikula\GroupsModule\Controller\ConfigController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7vj43mn" method="withContext"/>
    </service>
    <service id=".service_locator.7vj43mn.Zikula\GroupsModule\Controller\GroupController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\GroupsModule\Controller\GroupController"/>
      <argument>Zikula\GroupsModule\Controller\GroupController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7vj43mn" method="withContext"/>
    </service>
    <service id=".service_locator.7vj43mn.Zikula\GroupsModule\Controller\MembershipController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\GroupsModule\Controller\MembershipController"/>
      <argument>Zikula\GroupsModule\Controller\MembershipController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7vj43mn" method="withContext"/>
    </service>
    <service id=".service_locator.jb7EPjY" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="jms_i18n_routing.router" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.jb7EPjY.Zikula\MailerModule\Controller\ConfigController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\MailerModule\Controller\ConfigController"/>
      <argument>Zikula\MailerModule\Controller\ConfigController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.jb7EPjY" method="withContext"/>
    </service>
    <service id=".service_locator.NTCZSds" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="jms_i18n_routing.router" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.NTCZSds.Zikula\MenuModule\Controller\ConfigController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\MenuModule\Controller\ConfigController"/>
      <argument>Zikula\MenuModule\Controller\ConfigController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.NTCZSds" method="withContext"/>
    </service>
    <service id=".service_locator.NTCZSds.Zikula\MenuModule\Controller\MenuController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\MenuModule\Controller\MenuController"/>
      <argument>Zikula\MenuModule\Controller\MenuController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.NTCZSds" method="withContext"/>
    </service>
    <service id=".service_locator.NTCZSds.Zikula\MenuModule\Controller\NodeController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\MenuModule\Controller\NodeController"/>
      <argument>Zikula\MenuModule\Controller\NodeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.NTCZSds" method="withContext"/>
    </service>
    <service id=".service_locator.crDPbqM" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="jms_i18n_routing.router" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.crDPbqM.Zikula\PermissionsModule\Controller\ConfigController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\PermissionsModule\Controller\ConfigController"/>
      <argument>Zikula\PermissionsModule\Controller\ConfigController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.crDPbqM" method="withContext"/>
    </service>
    <service id=".service_locator.crDPbqM.Zikula\PermissionsModule\Controller\PermissionController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\PermissionsModule\Controller\PermissionController"/>
      <argument>Zikula\PermissionsModule\Controller\PermissionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.crDPbqM" method="withContext"/>
    </service>
    <service id=".service_locator.GNc7rhp" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="jms_i18n_routing.router" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.GNc7rhp.Zikula\RoutesModule\Controller\AjaxController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\RoutesModule\Controller\AjaxController"/>
      <argument>Zikula\RoutesModule\Controller\AjaxController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.GNc7rhp" method="withContext"/>
    </service>
    <service id=".service_locator.GNc7rhp.Zikula\RoutesModule\Controller\ConfigController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\RoutesModule\Controller\ConfigController"/>
      <argument>Zikula\RoutesModule\Controller\ConfigController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.GNc7rhp" method="withContext"/>
    </service>
    <service id=".service_locator.GNc7rhp.Zikula\RoutesModule\Controller\RouteController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\RoutesModule\Controller\RouteController"/>
      <argument>Zikula\RoutesModule\Controller\RouteController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.GNc7rhp" method="withContext"/>
    </service>
    <service id=".service_locator.GNc7rhp.Zikula\RoutesModule\Controller\UpdateController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\RoutesModule\Controller\UpdateController"/>
      <argument>Zikula\RoutesModule\Controller\UpdateController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.GNc7rhp" method="withContext"/>
    </service>
    <service id=".service_locator.e.U7W_3" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="jms_i18n_routing.router" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.e.U7W_3.Zikula\SearchModule\Controller\ConfigController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\SearchModule\Controller\ConfigController"/>
      <argument>Zikula\SearchModule\Controller\ConfigController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.e.U7W_3" method="withContext"/>
    </service>
    <service id=".service_locator.e.U7W_3.Zikula\SearchModule\Controller\SearchController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\SearchModule\Controller\SearchController"/>
      <argument>Zikula\SearchModule\Controller\SearchController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.e.U7W_3" method="withContext"/>
    </service>
    <service id=".service_locator.Twi25pd" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="jms_i18n_routing.router" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.Twi25pd.Zikula\SecurityCenterModule\Controller\ConfigController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\SecurityCenterModule\Controller\ConfigController"/>
      <argument>Zikula\SecurityCenterModule\Controller\ConfigController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.Twi25pd" method="withContext"/>
    </service>
    <service id=".service_locator.Twi25pd.Zikula\SecurityCenterModule\Controller\IdsLogController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\SecurityCenterModule\Controller\IdsLogController"/>
      <argument>Zikula\SecurityCenterModule\Controller\IdsLogController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.Twi25pd" method="withContext"/>
    </service>
    <service id=".service_locator.nzK5Xi3" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="jms_i18n_routing.router" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.nzK5Xi3.Zikula\SettingsModule\Controller\SettingsController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\SettingsModule\Controller\SettingsController"/>
      <argument>Zikula\SettingsModule\Controller\SettingsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.nzK5Xi3" method="withContext"/>
    </service>
    <service id=".service_locator.pQSbIFR" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="jms_i18n_routing.router" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.pQSbIFR.Zikula\ThemeModule\Controller\CombinedAssetController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\ThemeModule\Controller\CombinedAssetController"/>
      <argument>Zikula\ThemeModule\Controller\CombinedAssetController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.pQSbIFR" method="withContext"/>
    </service>
    <service id=".service_locator.pQSbIFR.Zikula\ThemeModule\Controller\ThemeController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\ThemeModule\Controller\ThemeController"/>
      <argument>Zikula\ThemeModule\Controller\ThemeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.pQSbIFR" method="withContext"/>
    </service>
    <service id=".service_locator.pQSbIFR.Zikula\ThemeModule\Controller\VarController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\ThemeModule\Controller\VarController"/>
      <argument>Zikula\ThemeModule\Controller\VarController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.pQSbIFR" method="withContext"/>
    </service>
    <service id=".service_locator.Mhd.iFW" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="jms_i18n_routing.router" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.Mhd.iFW.Zikula\UsersModule\Controller\AccessController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\UsersModule\Controller\AccessController"/>
      <argument>Zikula\UsersModule\Controller\AccessController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.Mhd.iFW" method="withContext"/>
    </service>
    <service id=".service_locator.Mhd.iFW.Zikula\UsersModule\Controller\AccountController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\UsersModule\Controller\AccountController"/>
      <argument>Zikula\UsersModule\Controller\AccountController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.Mhd.iFW" method="withContext"/>
    </service>
    <service id=".service_locator.Mhd.iFW.Zikula\UsersModule\Controller\ConfigController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\UsersModule\Controller\ConfigController"/>
      <argument>Zikula\UsersModule\Controller\ConfigController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.Mhd.iFW" method="withContext"/>
    </service>
    <service id=".service_locator.Mhd.iFW.Zikula\UsersModule\Controller\FileIOController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\UsersModule\Controller\FileIOController"/>
      <argument>Zikula\UsersModule\Controller\FileIOController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.Mhd.iFW" method="withContext"/>
    </service>
    <service id=".service_locator.Mhd.iFW.Zikula\UsersModule\Controller\LiveSearchController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\UsersModule\Controller\LiveSearchController"/>
      <argument>Zikula\UsersModule\Controller\LiveSearchController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.Mhd.iFW" method="withContext"/>
    </service>
    <service id=".service_locator.Mhd.iFW.Zikula\UsersModule\Controller\RegistrationController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\UsersModule\Controller\RegistrationController"/>
      <argument>Zikula\UsersModule\Controller\RegistrationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.Mhd.iFW" method="withContext"/>
    </service>
    <service id=".service_locator.Mhd.iFW.Zikula\UsersModule\Controller\UserAdministrationController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\UsersModule\Controller\UserAdministrationController"/>
      <argument>Zikula\UsersModule\Controller\UserAdministrationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.Mhd.iFW" method="withContext"/>
    </service>
    <service id=".service_locator.tGwLL8t" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="jms_i18n_routing.router" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.tGwLL8t.Zikula\ZAuthModule\Controller\AccountController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\ZAuthModule\Controller\AccountController"/>
      <argument>Zikula\ZAuthModule\Controller\AccountController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.tGwLL8t" method="withContext"/>
    </service>
    <service id=".service_locator.tGwLL8t.Zikula\ZAuthModule\Controller\ConfigController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\ZAuthModule\Controller\ConfigController"/>
      <argument>Zikula\ZAuthModule\Controller\ConfigController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.tGwLL8t" method="withContext"/>
    </service>
    <service id=".service_locator.tGwLL8t.Zikula\ZAuthModule\Controller\FileIOController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\ZAuthModule\Controller\FileIOController"/>
      <argument>Zikula\ZAuthModule\Controller\FileIOController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.tGwLL8t" method="withContext"/>
    </service>
    <service id=".service_locator.tGwLL8t.Zikula\ZAuthModule\Controller\RegistrationController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\ZAuthModule\Controller\RegistrationController"/>
      <argument>Zikula\ZAuthModule\Controller\RegistrationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.tGwLL8t" method="withContext"/>
    </service>
    <service id=".service_locator.tGwLL8t.Zikula\ZAuthModule\Controller\UserAdministrationController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Zikula\ZAuthModule\Controller\UserAdministrationController"/>
      <argument>Zikula\ZAuthModule\Controller\UserAdministrationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.tGwLL8t" method="withContext"/>
    </service>
    <service id=".service_locator.wnlveDj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.Bppmeg3" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="initialized_session" type="service" id="session" on-invalid="ignore_uninitialized"/>
        <argument key="request_stack" type="service" id="request_stack"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="session_storage" type="service" id="zikula_core.bridge.http_foundation.zikula_session_storage_file" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.yOuJyes" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.XjnY8xG" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session" type="service" id="session"/>
      </argument>
    </service>
    <service id=".service_locator.6zQlgQt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker"/>
        <argument key="security.token_storage" type="service" id="security.token_storage"/>
      </argument>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher" public="false"/>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="debug.argument_resolver.request_attribute"/>
        <argument type="service" id="debug.argument_resolver.request"/>
        <argument type="service" id="debug.argument_resolver.session"/>
        <argument type="service" id="debug.security.user_value_resolver"/>
        <argument type="service" id="debug.argument_resolver.service"/>
        <argument type="service" id="debug.argument_resolver.default"/>
        <argument type="service" id="debug.argument_resolver.variadic"/>
        <argument type="service" id="debug.argument_resolver.not_tagged_controller"/>
      </argument>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="iterator">
        <argument type="service" id="debug.security.voter.security.access.authenticated_voter"/>
        <argument type="service" id="debug.security.voter.security.access.role_hierarchy_voter"/>
        <argument type="service" id="debug.security.voter.security.access.expression_voter"/>
      </argument>
      <argument>affirmative</argument>
      <argument>false</argument>
      <argument>true</argument>
    </service>
    <service id="debug.argument_resolver.request_attribute.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false"/>
    <service id="debug.argument_resolver.request.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false"/>
    <service id="debug.argument_resolver.session.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" public="false"/>
    <service id="debug.security.user_value_resolver.inner" class="Symfony\Component\Security\Http\Controller\UserValueResolver" public="false">
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="debug.argument_resolver.service.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" public="false">
      <argument type="service" id=".service_locator.JHsD_cg"/>
    </service>
    <service id="debug.argument_resolver.default.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false"/>
    <service id="debug.argument_resolver.variadic.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false"/>
    <service id="debug.argument_resolver.not_tagged_controller.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\NotTaggedControllerValueResolver" public="false">
      <argument type="service" id=".service_locator.JHsD_cg"/>
    </service>
    <service id=".errored..service_locator.QbjOsEa.Translation\Bundle\EditInPlace\Activator" class="Translation\Bundle\EditInPlace\Activator"/>
    <service id="doctrine.annotation_driver" class="Doctrine\ORM\Mapping\Driver\AnnotationDriver">
      <argument type="service" id="annotation_reader"/>
    </service>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <argument type="service" id=".service_locator.luJaqGj"/>
      <argument type="collection">
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:pool:list">console.command.cache_pool_list</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="lint:container">console.command.container_lint</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:update">console.command.translation_update</argument>
        <argument key="workflow:dump">console.command.workflow_dump</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="secrets:set">console.command.secrets_set</argument>
        <argument key="secrets:remove">console.command.secrets_remove</argument>
        <argument key="secrets:generate-keys">console.command.secrets_generate_key</argument>
        <argument key="secrets:list">console.command.secrets_list</argument>
        <argument key="secrets:decrypt-to-local">console.command.secrets_decrypt_to_local</argument>
        <argument key="secrets:encrypt-from-local">console.command.secrets_encrypt_from_local</argument>
        <argument key="security:encode-password">security.command.user_password_encoder</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="debug:swiftmailer">swiftmailer.command.debug</argument>
        <argument key="swiftmailer:email:send">swiftmailer.command.new_email</argument>
        <argument key="swiftmailer:spool:send">swiftmailer.command.send_email</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:database:import">doctrine.database_import_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:mapping:convert">doctrine.mapping_convert_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:ensure-production-settings">doctrine.ensure_production_settings_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:mapping:import">doctrine.mapping_import_command</argument>
        <argument key="fos:js-routing:dump">fos_js_routing.dump_command</argument>
        <argument key="fos:js-routing:debug">fos_js_routing.router_debug_exposed_command</argument>
        <argument key="liip:imagine:cache:remove">liip_imagine.command.cache_remove</argument>
        <argument key="liip:imagine:cache:resolve">liip_imagine.command.cache_resolve</argument>
        <argument key="translation:delete-obsolete">Translation\Bundle\Command\DeleteObsoleteCommand</argument>
        <argument key="translation:download">Translation\Bundle\Command\DownloadCommand</argument>
        <argument key="translation:extract">Translation\Bundle\Command\ExtractCommand</argument>
        <argument key="translation:status">Translation\Bundle\Command\StatusCommand</argument>
        <argument key="translation:sync">Translation\Bundle\Command\SyncCommand</argument>
        <argument key="bazinga:js-translation:dump">bazinga.jstranslation.dump_command</argument>
        <argument key="zikula:extension:install">Zikula\ExtensionsModule\Command\ZikulaExtensionInstallCommand</argument>
        <argument key="zikula:extension:status">Zikula\ExtensionsModule\Command\ZikulaExtensionStatusCommand</argument>
        <argument key="zikula:extension:uninstall">Zikula\ExtensionsModule\Command\ZikulaExtensionUninstallCommand</argument>
        <argument key="zikula:extension:upgrade">Zikula\ExtensionsModule\Command\ZikulaExtensionUpgradeCommand</argument>
      </argument>
    </service>
    <service id=".service_locator.luJaqGj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Translation\Bundle\Command\DeleteObsoleteCommand" type="service" id="Translation\Bundle\Command\DeleteObsoleteCommand"/>
        <argument key="Translation\Bundle\Command\DownloadCommand" type="service" id="Translation\Bundle\Command\DownloadCommand"/>
        <argument key="Translation\Bundle\Command\ExtractCommand" type="service" id="Translation\Bundle\Command\ExtractCommand"/>
        <argument key="Translation\Bundle\Command\StatusCommand" type="service" id="Translation\Bundle\Command\StatusCommand"/>
        <argument key="Translation\Bundle\Command\SyncCommand" type="service" id="Translation\Bundle\Command\SyncCommand"/>
        <argument key="Zikula\ExtensionsModule\Command\ZikulaExtensionInstallCommand" type="service" id="Zikula\ExtensionsModule\Command\ZikulaExtensionInstallCommand"/>
        <argument key="Zikula\ExtensionsModule\Command\ZikulaExtensionStatusCommand" type="service" id="Zikula\ExtensionsModule\Command\ZikulaExtensionStatusCommand"/>
        <argument key="Zikula\ExtensionsModule\Command\ZikulaExtensionUninstallCommand" type="service" id="Zikula\ExtensionsModule\Command\ZikulaExtensionUninstallCommand"/>
        <argument key="Zikula\ExtensionsModule\Command\ZikulaExtensionUpgradeCommand" type="service" id="Zikula\ExtensionsModule\Command\ZikulaExtensionUpgradeCommand"/>
        <argument key="bazinga.jstranslation.dump_command" type="service" id="bazinga.jstranslation.dump_command"/>
        <argument key="console.command.about" type="service" id="console.command.about"/>
        <argument key="console.command.assets_install" type="service" id="console.command.assets_install"/>
        <argument key="console.command.cache_clear" type="service" id="console.command.cache_clear"/>
        <argument key="console.command.cache_pool_clear" type="service" id="console.command.cache_pool_clear"/>
        <argument key="console.command.cache_pool_delete" type="service" id="console.command.cache_pool_delete"/>
        <argument key="console.command.cache_pool_list" type="service" id="console.command.cache_pool_list"/>
        <argument key="console.command.cache_pool_prune" type="service" id="console.command.cache_pool_prune"/>
        <argument key="console.command.cache_warmup" type="service" id="console.command.cache_warmup"/>
        <argument key="console.command.config_debug" type="service" id="console.command.config_debug"/>
        <argument key="console.command.config_dump_reference" type="service" id="console.command.config_dump_reference"/>
        <argument key="console.command.container_debug" type="service" id="console.command.container_debug"/>
        <argument key="console.command.container_lint" type="service" id="console.command.container_lint"/>
        <argument key="console.command.debug_autowiring" type="service" id="console.command.debug_autowiring"/>
        <argument key="console.command.event_dispatcher_debug" type="service" id="console.command.event_dispatcher_debug"/>
        <argument key="console.command.form_debug" type="service" id="console.command.form_debug"/>
        <argument key="console.command.router_debug" type="service" id="console.command.router_debug"/>
        <argument key="console.command.router_match" type="service" id="console.command.router_match"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service" id="console.command.secrets_decrypt_to_local"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service" id="console.command.secrets_encrypt_from_local"/>
        <argument key="console.command.secrets_generate_key" type="service" id="console.command.secrets_generate_key"/>
        <argument key="console.command.secrets_list" type="service" id="console.command.secrets_list"/>
        <argument key="console.command.secrets_remove" type="service" id="console.command.secrets_remove"/>
        <argument key="console.command.secrets_set" type="service" id="console.command.secrets_set"/>
        <argument key="console.command.translation_debug" type="service" id="console.command.translation_debug"/>
        <argument key="console.command.translation_update" type="service" id="console.command.translation_update"/>
        <argument key="console.command.workflow_dump" type="service" id="console.command.workflow_dump"/>
        <argument key="console.command.xliff_lint" type="service" id="console.command.xliff_lint"/>
        <argument key="console.command.yaml_lint" type="service" id="console.command.yaml_lint"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.clear_query_region_command" type="service" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.database_create_command" type="service" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service" id="doctrine.database_drop_command"/>
        <argument key="doctrine.database_import_command" type="service" id="doctrine.database_import_command"/>
        <argument key="doctrine.ensure_production_settings_command" type="service" id="doctrine.ensure_production_settings_command"/>
        <argument key="doctrine.mapping_convert_command" type="service" id="doctrine.mapping_convert_command"/>
        <argument key="doctrine.mapping_import_command" type="service" id="doctrine.mapping_import_command"/>
        <argument key="doctrine.mapping_info_command" type="service" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.query_dql_command" type="service" id="doctrine.query_dql_command"/>
        <argument key="doctrine.query_sql_command" type="service" id="doctrine.query_sql_command"/>
        <argument key="doctrine.schema_create_command" type="service" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.schema_update_command" type="service" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service" id="doctrine.schema_validate_command"/>
        <argument key="fos_js_routing.dump_command" type="service" id="fos_js_routing.dump_command"/>
        <argument key="fos_js_routing.router_debug_exposed_command" type="service" id="fos_js_routing.router_debug_exposed_command"/>
        <argument key="liip_imagine.command.cache_remove" type="service" id="liip_imagine.command.cache_remove"/>
        <argument key="liip_imagine.command.cache_resolve" type="service" id="liip_imagine.command.cache_resolve"/>
        <argument key="security.command.user_password_encoder" type="service" id="security.command.user_password_encoder"/>
        <argument key="swiftmailer.command.debug" type="service" id="swiftmailer.command.debug"/>
        <argument key="swiftmailer.command.new_email" type="service" id="swiftmailer.command.new_email"/>
        <argument key="swiftmailer.command.send_email" type="service" id="swiftmailer.command.send_email"/>
        <argument key="twig.command.debug" type="service" id="twig.command.debug"/>
        <argument key="twig.command.lint" type="service" id="twig.command.lint"/>
      </argument>
    </service>
    <service id=".service_locator.nXUofNM" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service" id="twig.runtime.security_csrf"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service" id="twig.form.renderer"/>
        <argument key="Twig\Extra\Markdown\MarkdownRuntime" type="service" id="twig.runtime.markdown"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel" public="false"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack" public="false"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper" public="false"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel" public="false"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem" public="false"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container" public="false"/>
    <service id="Symfony\Component\String\Slugger\SluggerInterface" alias="slugger" public="false"/>
    <service id="error_renderer.html" alias="twig.error_renderer.html"/>
    <service id="error_renderer" alias="twig.error_renderer.html"/>
    <service id="Psr\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable" public="false"/>
    <service id="Symfony\Contracts\Translation\TranslatorInterface" alias="translator.default" public="false"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC" public="false"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX" public="false"/>
    <service id="cache.default_pdo_provider" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface $doctrineResultCachePool" alias=".doctrine.result_cache_pool.taggable"/>
    <service id="Symfony\Contracts\Cache\CacheInterface $doctrineResultCachePool" alias="doctrine.result_cache_pool"/>
    <service id="Psr\Cache\CacheItemPoolInterface $doctrineResultCachePool" alias="doctrine.result_cache_pool"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface $doctrineSystemCachePool" alias=".doctrine.system_cache_pool.taggable"/>
    <service id="Symfony\Contracts\Cache\CacheInterface $doctrineSystemCachePool" alias="doctrine.system_cache_pool"/>
    <service id="Psr\Cache\CacheItemPoolInterface $doctrineSystemCachePool" alias="doctrine.system_cache_pool"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias="session" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="zikula_core.bridge.http_foundation.zikula_session_storage_file" public="false"/>
    <service id="SessionHandlerInterface" alias="session.handler.native_file" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag" public="false"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file" public="false"/>
    <service id="session.storage" alias="zikula_core.bridge.http_foundation.zikula_session_storage_file"/>
    <service id="session.handler" alias="session.handler.native_file"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager" public="false"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory" public="false"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry" public="false"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory" public="false"/>
    <service id="form.property_accessor" alias="property_accessor" public="false"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached" public="false"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages" public="false"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="validator" public="false"/>
    <service id="validator.mapping.class_metadata_factory" alias="validator" public="false"/>
    <service id="Symfony\Component\Translation\Reader\TranslationReaderInterface" alias="translation.reader" public="false"/>
    <service id="Symfony\Component\Translation\Extractor\ExtractorInterface" alias="translation.extractor" public="false"/>
    <service id="Symfony\Component\Translation\Writer\TranslationWriterInterface" alias="translation.writer" public="false"/>
    <service id="translator" alias="translator.default" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default" public="false"/>
    <service id="Symfony\Component\Workflow\Registry" alias="workflow.registry" public="false"/>
    <service id="Symfony\Component\Workflow\WorkflowInterface $zikularoutesmoduleNoneStateMachine" alias="state_machine.zikularoutesmodule_none"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter" public="false"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch" public="false"/>
    <service id="router" alias="jms_i18n_routing.router" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="jms_i18n_routing.router" public="false"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="jms_i18n_routing.router" public="false"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="jms_i18n_routing.router" public="false"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="jms_i18n_routing.router" public="false"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context" public="false"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader" public="false"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias="security.authentication.manager" public="false"/>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy" public="false"/>
    <service id="security.encoder_factory" alias="security.encoder_factory.generic" public="false"/>
    <service id="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" alias="security.encoder_factory.generic" public="false"/>
    <service id="security.password_encoder" alias="security.user_password_encoder.generic" public="true"/>
    <service id="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" alias="security.user_password_encoder.generic" public="false"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager" public="false"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy" public="false"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall" public="false"/>
    <service id="Symfony\Component\Security\Http\HttpUtils" alias="security.http_utils" public="false"/>
    <service id="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" alias="security.authentication.guard_handler" public="false"/>
    <service id="security.firewall" alias="debug.security.firewall" public="false"/>
    <service id="Symfony\Component\Security\Core\User\UserProviderInterface" alias="security.user.provider.concrete.in_memory"/>
    <service id="security.authentication.session_strategy.secured_area" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.secured_area" alias="security.user_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\User\UserCheckerInterface" alias="security.user_checker" public="false"/>
    <service id="Twig_Environment" alias="twig" public="false"/>
    <service id="Twig\Environment" alias="twig" public="false"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger" public="false"/>
    <service id="swiftmailer.mailer.default.transport" alias="swiftmailer.mailer.default.transport.smtp" public="true"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.default.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.default"/>
    <service id="swiftmailer.transport" alias="swiftmailer.mailer.default.transport.smtp" public="true"/>
    <service id="Swift_Mailer" alias="swiftmailer.mailer.default" public="false"/>
    <service id="Swift_Transport" alias="swiftmailer.mailer.default.transport.smtp" public="false"/>
    <service id="mailer" alias="swiftmailer.mailer.default" public="true"/>
    <service id="Doctrine\DBAL\Driver\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader" public="false"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine.orm.cache.provider.doctrine.system_cache_pool" public="false"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine.orm.cache.provider.doctrine.result_cache_pool" public="false"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine.orm.cache.provider.doctrine.system_cache_pool" public="false"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language" alias="sensio_framework_extra.converter.doctrine.orm.expression_language.default" public="false"/>
    <service id="sensio_framework_extra.security.expression_language" alias="sensio_framework_extra.security.expression_language.default" public="false"/>
    <service id="Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager" alias="stof_doctrine_extensions.uploadable.manager" public="false"/>
    <service id="zikula_core.bridge.http_foundation.doctrine_session_handler" alias="Zikula\Bundle\CoreBundle\HttpFoundation\Session\DoctrineSessionHandler" public="false"/>
    <service id="Zikula\Bundle\CoreBundle\HttpKernel\ZikulaHttpKernelInterface" alias="kernel" public="false"/>
    <service id="Symfony\Component\HttpKernel\Fragment\FragmentHandler" alias="fragment.handler" public="false"/>
    <service id="Zikula\Bundle\CoreBundle\Collection\CollectionInterface" alias="Zikula\Bundle\CoreBundle\Collection\Container" public="false"/>
    <service id="Zikula\Bundle\CoreBundle\UrlInterface" alias="Zikula\Bundle\CoreBundle\RouteUrl" public="false"/>
    <service id="Zikula\Bundle\HookBundle\Collector\HookCollectorInterface" alias="Zikula\Bundle\HookBundle\Collector\HookCollector" public="false"/>
    <service id="Zikula\Bundle\HookBundle\Dispatcher\HookDispatcherInterface" alias="Zikula\Bundle\HookBundle\Dispatcher\HookDispatcher" public="false"/>
    <service id="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\RepositoryInterface\HookBindingRepositoryInterface" alias="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookBindingRepository" public="false"/>
    <service id="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\RepositoryInterface\HookRuntimeRepositoryInterface" alias="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookRuntimeRepository" public="false"/>
    <service id="Zikula\Bundle\HookBundle\Dispatcher\StorageInterface" alias="Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\DoctrineStorage" public="false"/>
    <service id="jms_i18n_routing.locale_resolver" alias="jms_i18n_routing.locale_resolver.default" public="false"/>
    <service id="jms_i18n_routing.pattern_generation_strategy" alias="jms_i18n_routing.pattern_generation_strategy.default" public="false"/>
    <service id="fos_js_routing.router" alias="jms_i18n_routing.router" public="false"/>
    <service id="console_form_helper" alias="matthias_symfony_console_form.form_helper"/>
    <service id="Knp\Menu\Provider\MenuProviderInterface" alias="knp_menu.menu_provider.chain" public="false"/>
    <service id="Knp\Menu\FactoryInterface" alias="knp_menu.factory" public="false"/>
    <service id="Knp\Menu\Matcher\MatcherInterface" alias="knp_menu.matcher" public="false"/>
    <service id="Knp\Menu\Util\MenuManipulator" alias="knp_menu.manipulator" public="false"/>
    <service id="Liip\ImagineBundle\Config\FilterFactoryCollection" alias="liip_imagine.config.filter_factory_collection"/>
    <service id="Liip\ImagineBundle\Config\StackBuilder" alias="liip_imagine.config.stack_builder"/>
    <service id="Liip\ImagineBundle\Config\StackCollection" alias="liip_imagine.config.stack_collection"/>
    <service id="liip_imagine.controller" alias="Liip\ImagineBundle\Controller\ImagineController" public="true"/>
    <service id="liip_imagine" alias="liip_imagine.gd"/>
    <service id="Liip\ImagineBundle\Imagine\Cache\CacheManager" alias="liip_imagine.cache.manager" public="false"/>
    <service id="Liip\ImagineBundle\Imagine\Data\DataManager" alias="liip_imagine.data.manager" public="false"/>
    <service id="Liip\ImagineBundle\Imagine\Filter\FilterManager" alias="liip_imagine.filter.manager" public="false"/>
    <service id="php_translation.storage" alias="php_translation.storage.zikula" public="true"/>
    <service id="Translation\Bundle\Service\StorageService" alias="php_translation.storage.zikula" public="true"/>
    <service id="php_translation.storage.default" alias="php_translation.storage.zikula" public="true"/>
    <service id="Zikula\AdminModule\Entity\RepositoryInterface\AdminCategoryRepositoryInterface" alias="Zikula\AdminModule\Entity\Repository\AdminCategoryRepository" public="false"/>
    <service id="Zikula\AdminModule\Entity\RepositoryInterface\AdminModuleRepositoryInterface" alias="Zikula\AdminModule\Entity\Repository\AdminModuleRepository" public="false"/>
    <service id="Zikula\BlocksModule\Api\ApiInterface\BlockApiInterface" alias="Zikula\BlocksModule\Api\BlockApi" public="false"/>
    <service id="Zikula\BlocksModule\Api\ApiInterface\BlockFactoryApiInterface" alias="Zikula\BlocksModule\Api\BlockFactoryApi" public="false"/>
    <service id="Zikula\BlocksModule\Api\ApiInterface\BlockFilterApiInterface" alias="Zikula\BlocksModule\Api\BlockFilterApi" public="false"/>
    <service id="Zikula\BlocksModule\Entity\RepositoryInterface\BlockPositionRepositoryInterface" alias="Zikula\BlocksModule\Entity\Repository\BlockPositionRepository" public="false"/>
    <service id="Zikula\BlocksModule\Entity\RepositoryInterface\BlockRepositoryInterface" alias="Zikula\BlocksModule\Entity\Repository\BlockRepository" public="false"/>
    <service id="Zikula\CategoriesModule\Api\ApiInterface\CategoryPermissionApiInterface" alias="Zikula\CategoriesModule\Api\CategoryPermissionApi" public="false"/>
    <service id="Zikula\CategoriesModule\Entity\RepositoryInterface\CategoryRegistryRepositoryInterface" alias="Zikula\CategoriesModule\Entity\Repository\CategoryRegistryRepository" public="false"/>
    <service id="Zikula\CategoriesModule\Entity\RepositoryInterface\CategoryRepositoryInterface" alias="Zikula\CategoriesModule\Entity\Repository\CategoryRepository" public="false"/>
    <service id="Zikula\ExtensionsModule\Api\ApiInterface\CapabilityApiInterface" alias="Zikula\ExtensionsModule\Api\CapabilityApi" public="false"/>
    <service id="Zikula\ExtensionsModule\Api\ApiInterface\VariableApiInterface" alias="Zikula\ExtensionsModule\Api\VariableApi" public="false"/>
    <service id="Zikula\ExtensionsModule\Entity\RepositoryInterface\ExtensionRepositoryInterface" alias="Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository" public="false"/>
    <service id="Zikula\ExtensionsModule\Entity\RepositoryInterface\ExtensionVarRepositoryInterface" alias="Zikula\ExtensionsModule\Entity\Repository\ExtensionVarRepository" public="false"/>
    <service id="Zikula\ExtensionsModule\Installer\ExtensionInstallerInterface" alias="Zikula\ExtensionsModule\ExtensionsModuleInstaller" public="false"/>
    <service id="Zikula\ExtensionsModule\Installer\InstallerInterface" alias="Zikula\ExtensionsModule\ExtensionsModuleInstaller" public="false"/>
    <service id="Zikula\GroupsModule\Entity\RepositoryInterface\GroupApplicationRepositoryInterface" alias="Zikula\GroupsModule\Entity\Repository\GroupApplicationRepository" public="false"/>
    <service id="Zikula\GroupsModule\Entity\RepositoryInterface\GroupRepositoryInterface" alias="Zikula\GroupsModule\Entity\Repository\GroupRepository" public="false"/>
    <service id="Zikula\MailerModule\Api\ApiInterface\MailerApiInterface" alias="Zikula\MailerModule\Api\MailerApi" public="false"/>
    <service id="Zikula\MenuModule\Entity\RepositoryInterface\MenuItemRepositoryInterface" alias="Zikula\MenuModule\Entity\Repository\MenuItemRepository" public="false"/>
    <service id="Zikula\MenuModule\ExtensionMenu\ExtensionMenuInterface" alias="Zikula\MenuModule\Menu\ExtensionMenu" public="false"/>
    <service id="Zikula\PermissionsModule\Api\ApiInterface\PermissionApiInterface" alias="Zikula\PermissionsModule\Api\PermissionApi" public="false"/>
    <service id="Zikula\PermissionsModule\Entity\RepositoryInterface\PermissionRepositoryInterface" alias="Zikula\PermissionsModule\Entity\Repository\PermissionRepository" public="false"/>
    <service id="JMS\I18nRoutingBundle\Router\RouteExclusionStrategyInterface" alias="jms_i18n_routing.route_exclusion_strategy" public="false"/>
    <service id="Zikula\SearchModule\Api\ApiInterface\SearchApiInterface" alias="Zikula\SearchModule\Api\SearchApi" public="false"/>
    <service id="Zikula\SearchModule\Entity\RepositoryInterface\SearchResultRepositoryInterface" alias="Zikula\SearchModule\Entity\Repository\SearchResultRepository" public="false"/>
    <service id="Zikula\SearchModule\Entity\RepositoryInterface\SearchStatRepositoryInterface" alias="Zikula\SearchModule\Entity\Repository\SearchStatRepository" public="false"/>
    <service id="Zikula\SecurityCenterModule\Api\ApiInterface\HtmlFilterApiInterface" alias="Zikula\SecurityCenterModule\Api\HtmlFilterApi" public="false"/>
    <service id="Zikula\SettingsModule\Api\ApiInterface\LocaleApiInterface" alias="Zikula\SettingsModule\Api\LocaleApi" public="false"/>
    <service id="Zikula\ThemeModule\Api\ApiInterface\PageAssetApiInterface" alias="Zikula\ThemeModule\Api\PageAssetApi" public="false"/>
    <service id="Zikula\ThemeModule\Entity\RepositoryInterface\ThemeEntityRepositoryInterface" alias="Zikula\ThemeModule\Entity\Repository\ThemeEntityRepository" public="false"/>
    <service id="Zikula\ThemeModule\Engine\Asset\MergerInterface" alias="Zikula\ThemeModule\Engine\Asset\Merger" public="false"/>
    <service id="Zikula\UsersModule\Api\ApiInterface\CurrentUserApiInterface" alias="Zikula\UsersModule\Api\CurrentUserApi" public="false"/>
    <service id="Zikula\UsersModule\Entity\RepositoryInterface\UserAttributeRepositoryInterface" alias="Zikula\UsersModule\Entity\Repository\UserAttributeRepository" public="false"/>
    <service id="Zikula\UsersModule\Entity\RepositoryInterface\UserRepositoryInterface" alias="Zikula\UsersModule\Entity\Repository\UserRepository" public="false"/>
    <service id="Zikula\UsersModule\Entity\RepositoryInterface\UserSessionRepositoryInterface" alias="Zikula\UsersModule\Entity\Repository\UserSessionRepository" public="false"/>
    <service id="Zikula\UsersModule\MessageModule\MessageModuleInterface" alias="Zikula\UsersModule\MessageModule\IdentityMessageModule" public="false"/>
    <service id="Zikula\UsersModule\ProfileModule\ProfileModuleInterface" alias="Zikula\UsersModule\ProfileModule\IdentityProfileModule" public="false"/>
    <service id="Zikula\ZAuthModule\Api\ApiInterface\PasswordApiInterface" alias="Zikula\ZAuthModule\Api\PasswordApi" public="false"/>
    <service id="Zikula\ZAuthModule\Entity\RepositoryInterface\AuthenticationMappingRepositoryInterface" alias="Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository" public="false"/>
    <service id="Zikula\ZAuthModule\Entity\RepositoryInterface\UserVerificationRepositoryInterface" alias="Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository" public="false"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.CmORmuK" public="true"/>
    <service id="twig.loader.filesystem" alias="twig.loader.native_filesystem" public="false"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.JHsD_cg"/>
    <service id="twig.loader" alias="twig.loader.native_filesystem"/>
    <service id="Psr\Log\LoggerInterface $requestLogger" alias="monolog.logger.request"/>
    <service id="Psr\Log\LoggerInterface $consoleLogger" alias="monolog.logger.console"/>
    <service id="Psr\Log\LoggerInterface $cacheLogger" alias="monolog.logger.cache"/>
    <service id="Psr\Log\LoggerInterface $translationLogger" alias="monolog.logger.translation"/>
    <service id="Psr\Log\LoggerInterface $phpLogger" alias="monolog.logger.php"/>
    <service id="Psr\Log\LoggerInterface $eventLogger" alias="monolog.logger.event"/>
    <service id="Psr\Log\LoggerInterface $routerLogger" alias="monolog.logger.router"/>
    <service id="Psr\Log\LoggerInterface $securityLogger" alias="monolog.logger.security"/>
    <service id="Psr\Log\LoggerInterface $doctrineLogger" alias="monolog.logger.doctrine"/>
    <service id="knp_menu.menu_provider" alias="knp_menu.menu_provider.chain"/>
    <service id=".service_locator.q_zGPK0" alias=".service_locator.uEoGQ84" public="false"/>
    <service id=".service_locator.LBholnY" alias=".service_locator.Twi25pd" public="false"/>
    <service id=".service_locator.E_s1uy4" alias=".service_locator.nzK5Xi3" public="false"/>
    <service id=".service_locator.mvOmpX5" alias=".service_locator.pQSbIFR" public="false"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver" public="false"/>
    <service id="argument_resolver" alias="debug.argument_resolver" public="false"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager" public="false"/>
    <service id="twig.error_renderer.html.inner" alias="error_handler.error_renderer.html" public="false"/>
    <service id="argument_resolver.request_attribute" alias="debug.argument_resolver.request_attribute" public="false"/>
    <service id="argument_resolver.request" alias="debug.argument_resolver.request" public="false"/>
    <service id="argument_resolver.session" alias="debug.argument_resolver.session" public="false"/>
    <service id="security.user_value_resolver" alias="debug.security.user_value_resolver" public="false"/>
    <service id="argument_resolver.service" alias="debug.argument_resolver.service" public="false"/>
    <service id="argument_resolver.default" alias="debug.argument_resolver.default" public="false"/>
    <service id="argument_resolver.variadic" alias="debug.argument_resolver.variadic" public="false"/>
    <service id="argument_resolver.not_tagged_controller" alias="debug.argument_resolver.not_tagged_controller" public="false"/>
    <service id="console.command.public_alias.Zikula\Bundle\CoreBundle\Command\AssetsInstallCommand" alias="Zikula\Bundle\CoreBundle\Command\AssetsInstallCommand" public="true"/>
  </services>
</container>
