<?php

namespace ContainerCBUxhwK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Container;
use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException;
use Symfony\Component\DependencyInjection\Exception\LogicException;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;
use Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag;
use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface;

/**
 * This class has been auto-generated
 * by the Symfony Dependency Injection Component.
 *
 * @final
 */
class KernelProdDebugContainer extends Container
{
    private $buildParameters;
    private $containerDir;
    private $targetDir;
    private $parameters = [];
    private $getService;

    public function __construct(array $buildParameters = [], $containerDir = __DIR__)
    {
        $this->getService = \Closure::fromCallable([$this, 'getService']);
        $this->buildParameters = $buildParameters;
        $this->containerDir = $containerDir;
        $this->targetDir = \dirname($containerDir);
        $this->parameters = $this->getDefaultParameters();

        $this->services = $this->privates = [];
        $this->syntheticIds = [
            'kernel' => true,
        ];
        $this->methodMap = [
            'Liip\\ImagineBundle\\Controller\\ImagineController' => 'getImagineControllerService',
            'Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController' => 'getRedirectControllerService',
            'Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController' => 'getTemplateControllerService',
            'Translation\\Bundle\\Catalogue\\CatalogueCounter' => 'getCatalogueCounterService',
            'Translation\\Bundle\\Catalogue\\CatalogueFetcher' => 'getCatalogueFetcherService',
            'Translation\\Bundle\\Catalogue\\CatalogueManager' => 'getCatalogueManagerService',
            'Translation\\Bundle\\Catalogue\\CatalogueWriter' => 'getCatalogueWriterService',
            'Translation\\Bundle\\Command\\DeleteObsoleteCommand' => 'getDeleteObsoleteCommandService',
            'Translation\\Bundle\\Command\\DownloadCommand' => 'getDownloadCommandService',
            'Translation\\Bundle\\Command\\ExtractCommand' => 'getExtractCommandService',
            'Translation\\Bundle\\Command\\StatusCommand' => 'getStatusCommandService',
            'Translation\\Bundle\\Command\\SyncCommand' => 'getSyncCommandService',
            'Translation\\Bundle\\Service\\CacheClearer' => 'getCacheClearerService',
            'Translation\\Bundle\\Service\\ConfigurationManager' => 'getConfigurationManagerService',
            'Translation\\Bundle\\Service\\Importer' => 'getImporterService',
            'Translation\\Bundle\\Service\\StorageManager' => 'getStorageManagerService',
            'Zikula\\AdminModule\\Block\\AdminnavBlock' => 'getAdminnavBlockService',
            'Zikula\\AdminModule\\Controller\\AdminController' => 'getAdminControllerService',
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController' => 'getAdminInterfaceControllerService',
            'Zikula\\AdminModule\\Controller\\AjaxController' => 'getAjaxControllerService',
            'Zikula\\AdminModule\\Controller\\ConfigController' => 'getConfigControllerService',
            'Zikula\\BlocksModule\\Block\\FincludeBlock' => 'getFincludeBlockService',
            'Zikula\\BlocksModule\\Block\\HtmlBlock' => 'getHtmlBlockService',
            'Zikula\\BlocksModule\\Block\\PendingContentBlock' => 'getPendingContentBlockService',
            'Zikula\\BlocksModule\\Block\\TextBlock' => 'getTextBlockService',
            'Zikula\\BlocksModule\\Block\\XsltBlock' => 'getXsltBlockService',
            'Zikula\\BlocksModule\\Controller\\AdminController' => 'getAdminController2Service',
            'Zikula\\BlocksModule\\Controller\\BlockController' => 'getBlockControllerService',
            'Zikula\\BlocksModule\\Controller\\ConfigController' => 'getConfigController2Service',
            'Zikula\\BlocksModule\\Controller\\PlacementController' => 'getPlacementControllerService',
            'Zikula\\BlocksModule\\Controller\\PositionController' => 'getPositionControllerService',
            'Zikula\\Bundle\\CoreBundle\\CacheClearer' => 'getCacheClearer2Service',
            'Zikula\\Bundle\\CoreBundle\\Controller\\MainController' => 'getMainControllerService',
            'Zikula\\Bundle\\CoreBundle\\Doctrine\\Helper\\SchemaHelper' => 'getSchemaHelperService',
            'Zikula\\Bundle\\CoreBundle\\DynamicConfigDumper' => 'getDynamicConfigDumperService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Command\\Install\\FinishCommand' => 'getFinishCommandService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Command\\Install\\StartCommand' => 'getStartCommandService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Command\\UpgradeCommand' => 'getUpgradeCommandService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Controller\\AjaxInstallController' => 'getAjaxInstallControllerService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Controller\\AjaxUpgradeController' => 'getAjaxUpgradeControllerService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Controller\\DocController' => 'getDocControllerService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Controller\\InstallerController' => 'getInstallerControllerService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Controller\\MigrationController' => 'getMigrationControllerService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Controller\\UpgraderController' => 'getUpgraderControllerService',
            'Zikula\\Bundle\\CoreInstallerBundle\\DependencyInjection\\ZikulaCoreInstallerExtension' => 'getZikulaCoreInstallerExtensionService',
            'Zikula\\Bundle\\CoreInstallerBundle\\EventListener\\InstallUpgradeCheckListener' => 'getInstallUpgradeCheckListenerService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\CreateAdminType' => 'getCreateAdminTypeService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\DbCredsType' => 'getDbCredsTypeService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\LocaleType' => 'getLocaleTypeService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\LoginType' => 'getLoginTypeService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\RequestContextType' => 'getRequestContextTypeService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Helper\\BlockHelper' => 'getBlockHelperService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Helper\\CacheHelper' => 'getCacheHelperService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Helper\\ControllerHelper' => 'getControllerHelperService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Helper\\MigrationHelper' => 'getMigrationHelperService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Helper\\ModuleHelper' => 'getModuleHelperService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Helper\\ParameterHelper' => 'getParameterHelperService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Helper\\StageHelper' => 'getStageHelperService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Helper\\SuperUserHelper' => 'getSuperUserHelperService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Helper\\ThemeHelper' => 'getThemeHelperService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Stage\\AlreadyInstalledStage' => 'getAlreadyInstalledStageService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Stage\\Install\\AjaxInstallerStage' => 'getAjaxInstallerStageService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Stage\\Install\\CompleteStage' => 'getCompleteStageService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Stage\\Install\\CreateAdminStage' => 'getCreateAdminStageService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Stage\\Install\\DbCredsStage' => 'getDbCredsStageService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Stage\\Install\\NotInstalledStage' => 'getNotInstalledStageService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Stage\\LocaleStage' => 'getLocaleStageService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Stage\\RequirementsStage' => 'getRequirementsStageService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Stage\\Upgrade\\AjaxUpgraderStage' => 'getAjaxUpgraderStageService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Stage\\Upgrade\\CompleteStage' => 'getCompleteStage2Service',
            'Zikula\\Bundle\\CoreInstallerBundle\\Stage\\Upgrade\\InitStage' => 'getInitStageService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Stage\\Upgrade\\LoginStage' => 'getLoginStageService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Stage\\Upgrade\\NotUpgradedStage' => 'getNotUpgradedStageService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Util\\ZikulaRequirements' => 'getZikulaRequirementsService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Validator\\Constraints\\AuthenticateAdminLogin' => 'getAuthenticateAdminLoginService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Validator\\Constraints\\AuthenticateAdminLoginValidator' => 'getAuthenticateAdminLoginValidatorService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Validator\\Constraints\\ValidPdoConnection' => 'getValidPdoConnectionService',
            'Zikula\\Bundle\\CoreInstallerBundle\\Validator\\Constraints\\ValidPdoConnectionValidator' => 'getValidPdoConnectionValidatorService',
            'Zikula\\Bundle\\CoreInstallerBundle\\ZikulaCoreInstallerBundle' => 'getZikulaCoreInstallerBundleService',
            'Zikula\\Bundle\\HookBundle\\Controller\\HookController' => 'getHookControllerService',
            'Zikula\\Bundle\\WorkflowBundle\\Controller\\EditorController' => 'getEditorControllerService',
            'Zikula\\CategoriesModule\\Api\\CategoryPermissionApi' => 'getCategoryPermissionApiService',
            'Zikula\\CategoriesModule\\Controller\\CategoryController' => 'getCategoryControllerService',
            'Zikula\\CategoriesModule\\Controller\\NodeController' => 'getNodeControllerService',
            'Zikula\\CategoriesModule\\Controller\\RegistryController' => 'getRegistryControllerService',
            'Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRegistryRepository' => 'getCategoryRegistryRepositoryService',
            'Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRepository' => 'getCategoryRepositoryService',
            'Zikula\\ExtensionsModule\\Api\\VariableApi' => 'getVariableApiService',
            'Zikula\\ExtensionsModule\\Controller\\ConfigController' => 'getConfigController3Service',
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController' => 'getExtensionsInterfaceControllerService',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController' => 'getModuleControllerService',
            'Zikula\\ExtensionsModule\\Controller\\ServicesController' => 'getServicesControllerService',
            'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository' => 'getExtensionRepositoryService',
            'Zikula\\ExtensionsModule\\Helper\\BundleSyncHelper' => 'getBundleSyncHelperService',
            'Zikula\\ExtensionsModule\\Helper\\ExtensionHelper' => 'getExtensionHelperService',
            'Zikula\\GroupsModule\\Controller\\ApplicationController' => 'getApplicationControllerService',
            'Zikula\\GroupsModule\\Controller\\ConfigController' => 'getConfigController4Service',
            'Zikula\\GroupsModule\\Controller\\GroupController' => 'getGroupControllerService',
            'Zikula\\GroupsModule\\Controller\\MembershipController' => 'getMembershipControllerService',
            'Zikula\\GroupsModule\\Entity\\Repository\\GroupRepository' => 'getGroupRepositoryService',
            'Zikula\\MailerModule\\Controller\\ConfigController' => 'getConfigController5Service',
            'Zikula\\MenuModule\\Block\\MenuBlock' => 'getMenuBlockService',
            'Zikula\\MenuModule\\Controller\\ConfigController' => 'getConfigController6Service',
            'Zikula\\MenuModule\\Controller\\MenuController' => 'getMenuControllerService',
            'Zikula\\MenuModule\\Controller\\NodeController' => 'getNodeController2Service',
            'Zikula\\PermissionsModule\\Controller\\ConfigController' => 'getConfigController7Service',
            'Zikula\\PermissionsModule\\Controller\\PermissionController' => 'getPermissionControllerService',
            'Zikula\\RoutesModule\\Controller\\AjaxController' => 'getAjaxController2Service',
            'Zikula\\RoutesModule\\Controller\\ConfigController' => 'getConfigController8Service',
            'Zikula\\RoutesModule\\Controller\\RouteController' => 'getRouteControllerService',
            'Zikula\\RoutesModule\\Controller\\UpdateController' => 'getUpdateControllerService',
            'Zikula\\RoutesModule\\Entity\\Factory\\EntityFactory' => 'getEntityFactoryService',
            'Zikula\\RoutesModule\\Helper\\MultilingualRoutingHelper' => 'getMultilingualRoutingHelperService',
            'Zikula\\SearchModule\\Block\\SearchBlock' => 'getSearchBlockService',
            'Zikula\\SearchModule\\Controller\\ConfigController' => 'getConfigController9Service',
            'Zikula\\SearchModule\\Controller\\SearchController' => 'getSearchControllerService',
            'Zikula\\SecurityCenterModule\\Controller\\ConfigController' => 'getConfigController10Service',
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController' => 'getIdsLogControllerService',
            'Zikula\\SecurityCenterModule\\Helper\\PurifierHelper' => 'getPurifierHelperService',
            'Zikula\\SettingsModule\\Api\\LocaleApi' => 'getLocaleApiService',
            'Zikula\\SettingsModule\\Block\\LocaleBlock' => 'getLocaleBlockService',
            'Zikula\\SettingsModule\\Controller\\SettingsController' => 'getSettingsControllerService',
            'Zikula\\ThemeModule\\Controller\\CombinedAssetController' => 'getCombinedAssetControllerService',
            'Zikula\\ThemeModule\\Controller\\ThemeController' => 'getThemeControllerService',
            'Zikula\\ThemeModule\\Controller\\VarController' => 'getVarControllerService',
            'Zikula\\ThemeModule\\Engine\\Asset' => 'getAssetService',
            'Zikula\\ThemeModule\\Engine\\Engine' => 'getEngineService',
            'Zikula\\ThemeModule\\Entity\\Repository\\ThemeEntityRepository' => 'getThemeEntityRepositoryService',
            'Zikula\\ThemeModule\\Helper\\BundleSyncHelper' => 'getBundleSyncHelper2Service',
            'Zikula\\UsersModule\\Api\\CurrentUserApi' => 'getCurrentUserApiService',
            'Zikula\\UsersModule\\Block\\AccountLinksBlock' => 'getAccountLinksBlockService',
            'Zikula\\UsersModule\\Block\\LoginBlock' => 'getLoginBlockService',
            'Zikula\\UsersModule\\Block\\OnlineBlock' => 'getOnlineBlockService',
            'Zikula\\UsersModule\\Controller\\AccessController' => 'getAccessControllerService',
            'Zikula\\UsersModule\\Controller\\AccountController' => 'getAccountControllerService',
            'Zikula\\UsersModule\\Controller\\ConfigController' => 'getConfigController11Service',
            'Zikula\\UsersModule\\Controller\\FileIOController' => 'getFileIOControllerService',
            'Zikula\\UsersModule\\Controller\\LiveSearchController' => 'getLiveSearchControllerService',
            'Zikula\\UsersModule\\Controller\\RegistrationController' => 'getRegistrationControllerService',
            'Zikula\\UsersModule\\Controller\\UserAdministrationController' => 'getUserAdministrationControllerService',
            'Zikula\\UsersModule\\Entity\\Repository\\UserRepository' => 'getUserRepositoryService',
            'Zikula\\ZAuthModule\\Api\\PasswordApi' => 'getPasswordApiService',
            'Zikula\\ZAuthModule\\Controller\\AccountController' => 'getAccountController2Service',
            'Zikula\\ZAuthModule\\Controller\\ConfigController' => 'getConfigController12Service',
            'Zikula\\ZAuthModule\\Controller\\FileIOController' => 'getFileIOController2Service',
            'Zikula\\ZAuthModule\\Controller\\RegistrationController' => 'getRegistrationController2Service',
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController' => 'getUserAdministrationController2Service',
            'bazinga.jstranslation.controller' => 'getBazinga_Jstranslation_ControllerService',
            'bazinga.jstranslation.dump_command' => 'getBazinga_Jstranslation_DumpCommandService',
            'bazinga.jstranslation.translation_dumper' => 'getBazinga_Jstranslation_TranslationDumperService',
            'bazinga.jstranslation.translation_finder' => 'getBazinga_Jstranslation_TranslationFinderService',
            'cache.app' => 'getCache_AppService',
            'cache.app_clearer' => 'getCache_AppClearerService',
            'cache.global_clearer' => 'getCache_GlobalClearerService',
            'cache.system' => 'getCache_SystemService',
            'cache.system_clearer' => 'getCache_SystemClearerService',
            'cache_clearer' => 'getCacheClearer3Service',
            'cache_warmer' => 'getCacheWarmerService',
            'console.command.public_alias.Zikula\\Bundle\\CoreBundle\\Command\\AssetsInstallCommand' => 'getAssetsInstallCommandService',
            'console.command_loader' => 'getConsole_CommandLoaderService',
            'container.env_var_processors_locator' => 'getContainer_EnvVarProcessorsLocatorService',
            'doctrine' => 'getDoctrineService',
            'doctrine.dbal.default_connection' => 'getDoctrine_Dbal_DefaultConnectionService',
            'doctrine.orm.default_entity_manager' => 'getDoctrine_Orm_DefaultEntityManagerService',
            'error_controller' => 'getErrorControllerService',
            'event_dispatcher' => 'getEventDispatcherService',
            'filesystem' => 'getFilesystemService',
            'form.factory' => 'getForm_FactoryService',
            'form.type.file' => 'getForm_Type_FileService',
            'fos_js_routing.controller' => 'getFosJsRouting_ControllerService',
            'fos_js_routing.extractor' => 'getFosJsRouting_ExtractorService',
            'fos_js_routing.serializer' => 'getFosJsRouting_SerializerService',
            'http_kernel' => 'getHttpKernelService',
            'jms_i18n_routing.loader' => 'getJmsI18nRouting_LoaderService',
            'knp_menu.factory' => 'getKnpMenu_FactoryService',
            'knp_menu.matcher' => 'getKnpMenu_MatcherService',
            'liip_imagine.binary.loader.default' => 'getLiipImagine_Binary_Loader_DefaultService',
            'liip_imagine.binary.loader.zikula_root' => 'getLiipImagine_Binary_Loader_ZikulaRootService',
            'liip_imagine.cache.manager' => 'getLiipImagine_Cache_ManagerService',
            'liip_imagine.cache.resolver.default' => 'getLiipImagine_Cache_Resolver_DefaultService',
            'liip_imagine.cache.resolver.no_cache_web_path' => 'getLiipImagine_Cache_Resolver_NoCacheWebPathService',
            'liip_imagine.cache.signer' => 'getLiipImagine_Cache_SignerService',
            'liip_imagine.config.stack_collection' => 'getLiipImagine_Config_StackCollectionService',
            'liip_imagine.data.manager' => 'getLiipImagine_Data_ManagerService',
            'liip_imagine.filter.loader.downscale' => 'getLiipImagine_Filter_Loader_DownscaleService',
            'liip_imagine.filter.loader.fixed' => 'getLiipImagine_Filter_Loader_FixedService',
            'liip_imagine.filter.loader.flip' => 'getLiipImagine_Filter_Loader_FlipService',
            'liip_imagine.filter.loader.grayscale' => 'getLiipImagine_Filter_Loader_GrayscaleService',
            'liip_imagine.filter.loader.interlace' => 'getLiipImagine_Filter_Loader_InterlaceService',
            'liip_imagine.filter.loader.resample' => 'getLiipImagine_Filter_Loader_ResampleService',
            'liip_imagine.filter.loader.rotate' => 'getLiipImagine_Filter_Loader_RotateService',
            'liip_imagine.filter.manager' => 'getLiipImagine_Filter_ManagerService',
            'matthias_symfony_console.register_styles_event_listener' => 'getMatthiasSymfonyConsole_RegisterStylesEventListenerService',
            'matthias_symfony_console_form.console_form_type_extension' => 'getMatthiasSymfonyConsoleForm_ConsoleFormTypeExtensionService',
            'matthias_symfony_console_form.handle_form_based_command_event_listener' => 'getMatthiasSymfonyConsoleForm_HandleFormBasedCommandEventListenerService',
            'matthias_symfony_console_form.register_helpers_event_listener' => 'getMatthiasSymfonyConsoleForm_RegisterHelpersEventListenerService',
            'matthias_symfony_console_form.set_input_definition_of_form_based_command_event_listener' => 'getMatthiasSymfonyConsoleForm_SetInputDefinitionOfFormBasedCommandEventListenerService',
            'php_translation.cache_clearer' => 'getPhpTranslation_CacheClearerService',
            'php_translation.catalogue_counter' => 'getPhpTranslation_CatalogueCounterService',
            'php_translation.catalogue_fetcher' => 'getPhpTranslation_CatalogueFetcherService',
            'php_translation.catalogue_manager' => 'getPhpTranslation_CatalogueManagerService',
            'php_translation.catalogue_writer' => 'getPhpTranslation_CatalogueWriterService',
            'php_translation.configuration_manager' => 'getPhpTranslation_ConfigurationManagerService',
            'php_translation.importer' => 'getPhpTranslation_ImporterService',
            'php_translation.storage.extension' => 'getPhpTranslation_Storage_ExtensionService',
            'php_translation.storage.zikula' => 'getPhpTranslation_Storage_ZikulaService',
            'php_translation.storage_manager' => 'getPhpTranslation_StorageManagerService',
            'php_translator.console.delete_obsolete' => 'getPhpTranslator_Console_DeleteObsoleteService',
            'php_translator.console.download' => 'getPhpTranslator_Console_DownloadService',
            'php_translator.console.extract' => 'getPhpTranslator_Console_ExtractService',
            'php_translator.console.status' => 'getPhpTranslator_Console_StatusService',
            'php_translator.console.sync' => 'getPhpTranslator_Console_SyncService',
            'request_stack' => 'getRequestStackService',
            'router' => 'getRouterService',
            'routing.loader' => 'getRouting_LoaderService',
            'security.authentication_utils' => 'getSecurity_AuthenticationUtilsService',
            'security.authorization_checker' => 'getSecurity_AuthorizationCheckerService',
            'security.csrf.token_manager' => 'getSecurity_Csrf_TokenManagerService',
            'security.password_encoder' => 'getSecurity_PasswordEncoderService',
            'security.token_storage' => 'getSecurity_TokenStorageService',
            'services_resetter' => 'getServicesResetterService',
            'session' => 'getSessionService',
            'state_machine.zikularoutesmodule_none' => 'getStateMachine_ZikularoutesmoduleNoneService',
            'stof_doctrine_extensions.uploadable.manager' => 'getStofDoctrineExtensions_Uploadable_ManagerService',
            'swiftmailer.mailer.default' => 'getSwiftmailer_Mailer_DefaultService',
            'swiftmailer.mailer.default.plugin.messagelogger' => 'getSwiftmailer_Mailer_Default_Plugin_MessageloggerService',
            'swiftmailer.mailer.default.transport' => 'getSwiftmailer_Mailer_Default_TransportService',
            'translator' => 'getTranslatorService',
            'twig' => 'getTwigService',
            'validator' => 'getValidatorService',
            'zikula_core.common.theme.assets_css' => 'getZikulaCore_Common_Theme_AssetsCssService',
            'zikula_core.common.theme.themevars' => 'getZikulaCore_Common_Theme_ThemevarsService',
        ];
        $this->aliases = [
            'Translation\\Bundle\\Service\\StorageService' => 'php_translation.storage.zikula',
            'database_connection' => 'doctrine.dbal.default_connection',
            'doctrine.orm.entity_manager' => 'doctrine.orm.default_entity_manager',
            'liip_imagine.controller' => 'Liip\\ImagineBundle\\Controller\\ImagineController',
            'mailer' => 'swiftmailer.mailer.default',
            'php_translation.storage' => 'php_translation.storage.zikula',
            'php_translation.storage.default' => 'php_translation.storage.zikula',
            'swiftmailer.transport' => 'swiftmailer.mailer.default.transport',
        ];

        $this->privates['service_container'] = function () {
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/HttpKernelInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/KernelInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/RebootableInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/TerminableInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Kernel.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/HttpKernel/ZikulaHttpKernelInterface.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/HttpKernel/ZikulaKernel.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Kernel/MicroKernelTrait.php';
            include_once \dirname(__DIR__, 4).'/src/Kernel.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/ControllerMetadata/ArgumentMetadataFactoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/ControllerMetadata/ArgumentMetadataFactory.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/EventDispatcher/EventSubscriberInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/ResponseListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/StreamedResponseListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/LocaleListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/ValidateRequestListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/DisallowRobotsIndexingListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/ErrorListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ParameterBag/ParameterBagInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ParameterBag/ParameterBag.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ParameterBag/FrozenParameterBag.php';
            include_once \dirname(__DIR__, 4).'/vendor/psr/container/src/ContainerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ParameterBag/ContainerBagInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ParameterBag/ContainerBag.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/HttpKernel.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ControllerResolverInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/TraceableControllerResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ControllerResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ContainerControllerResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/ControllerResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentResolverInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/TraceableArgumentResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/RequestStack.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Filesystem/Filesystem.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Config/ConfigCacheFactoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Config/ResourceCheckerConfigCacheFactory.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/LocaleAwareListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Fragment/FragmentHandler.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/DependencyInjection/LazyLoadingFragmentHandler.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/contracts/Service/ServiceProviderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/contracts/Service/ServiceLocatorTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ServiceLocator.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Cache/Marshaller/MarshallerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Cache/Marshaller/DefaultMarshaller.php';
            include_once \dirname(__DIR__, 4).'/vendor/psr/cache/src/CacheItemPoolInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Cache/Adapter/AdapterInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/contracts/Cache/CacheInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/psr/log/Psr/Log/LoggerAwareInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/contracts/Service/ResetInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Cache/ResettableInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/psr/log/Psr/Log/LoggerAwareTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Cache/Traits/AbstractAdapterTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/contracts/Cache/CacheTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Cache/Traits/ContractsTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Cache/Adapter/AbstractAdapter.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Cache/PruneableInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Cache/Traits/FilesystemCommonTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Cache/Traits/FilesystemTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Cache/Adapter/FilesystemAdapter.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/SessionInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/Session.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/SessionBagInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/Attribute/AttributeBagInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/Attribute/AttributeBag.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/Attribute/NamespacedAttributeBag.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/Flash/FlashBagInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/Flash/FlashBag.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/AbstractSessionListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/SessionListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Asset/Packages.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Asset/PackageInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Asset/Package.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Asset/PathPackage.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Asset/VersionStrategy/VersionStrategyInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Asset/VersionStrategy/EmptyVersionStrategy.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Asset/Context/ContextInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Asset/Context/RequestStackContext.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Workflow/Registry.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Workflow/SupportStrategy/WorkflowSupportStrategyInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Workflow/SupportStrategy/InstanceOfSupportStrategy.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Workflow/WorkflowInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Workflow/Workflow.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Workflow/StateMachine.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Workflow/Definition.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Workflow/Transition.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Workflow/Metadata/MetadataStoreInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Workflow/Metadata/GetMetadataTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Workflow/Metadata/InMemoryMetadataStore.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Workflow/MarkingStore/MarkingStoreInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Workflow/MarkingStore/MethodMarkingStore.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/DebugHandlersListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/psr/log/Psr/Log/LoggerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/ResettableInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Logger.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Log/DebugLoggerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Monolog/Logger.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Debug/FileLinkFormatter.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Stopwatch/Stopwatch.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Routing/RequestContext.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/RouterListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/Reader.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/AnnotationReader.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/AnnotationRegistry.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authorization/AuthorizationCheckerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authorization/AuthorizationChecker.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/Token/Storage/TokenStorageInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/contracts/Service/ServiceSubscriberInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/Token/Storage/UsageTrackingTokenStorage.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/Token/Storage/TokenStorage.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/AuthenticationManagerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/AuthenticationProviderManager.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/AuthenticationTrustResolverInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/AuthenticationTrustResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Role/RoleHierarchyInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Role/RoleHierarchy.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Logout/LogoutUrlGenerator.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/RememberMe/ResponseListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authorization/AccessDecisionManagerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authorization/TraceableAccessDecisionManager.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authorization/AccessDecisionManager.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/EventListener/FirewallListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Debug/TraceableFirewallListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/FirewallMapInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Security/FirewallMap.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/Environment.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Bridge/Twig/EventEnabledTwigEngine.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/Extension/ExtensionInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/Extension/AbstractExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/CsrfExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/LogoutUrlExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/SecurityExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/Extension/ProfilerExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/ProfilerExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/Profiler/Profile.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/TranslationExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/AssetExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/CodeExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/RoutingExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/YamlExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/StopwatchExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/ExpressionExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/HttpKernelExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/HttpFoundationExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/UrlHelper.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/WorkflowExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/FormExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/Extension/DebugExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Twig/DoctrineExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/html-extra/src/HtmlExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/markdown-extra/src/MarkdownExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/intl-extra/src/IntlExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/cssinliner-extra/src/CssInlinerExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/inky-extra/src/InkyExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/string-extra/src/StringExtension.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Twig/Extension/CoreExtension.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Twig/Extension/EventDispatcherExtension.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Twig/Extension/PagerExtension.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Twig/Extension/SessionExtension.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/Twig/Extension/HookExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Twig/MenuExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Twig/Helper.php';
            include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Renderer/RendererProviderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Renderer/PsrProvider.php';
            include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Provider/MenuProviderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Provider/ChainProvider.php';
            include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Util/MenuManipulator.php';
            include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Templating/FilterTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Templating/FilterExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Twig/TranslationExtension.php';
            include_once \dirname(__DIR__, 4).'/src/system/AdminModule/Twig/Extension/AdminExtension.php';
            include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Twig/Extension/BlocksExtension.php';
            include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Twig/Extension/DefaultPathExtension.php';
            include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Twig/Extension/ExtensionsExtension.php';
            include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Twig/Extension/ModVarExtension.php';
            include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Twig/Extension/UserInterfaceExtension.php';
            include_once \dirname(__DIR__, 4).'/src/system/PermissionsModule/Twig/Extension/PermissionsExtension.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Translation/TranslatorTrait.php';
            include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Twig/Base/AbstractTwigExtension.php';
            include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Twig/TwigExtension.php';
            include_once \dirname(__DIR__, 4).'/src/system/SearchModule/Twig/TwigExtension.php';
            include_once \dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Twig/TwigExtension.php';
            include_once \dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Api/ApiInterface/HtmlFilterApiInterface.php';
            include_once \dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Api/HtmlFilterApi.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Twig/Extension/PageVarExtension.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Twig/Extension/ThemeExtension.php';
            include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Twig/Extension/MessageExtension.php';
            include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Twig/Extension/OnlineExtension.php';
            include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Twig/Extension/ProfileExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/AppVariable.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/RuntimeLoader/RuntimeLoaderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/RuntimeLoader/ContainerRuntimeLoader.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/extra-bundle/src/MissingExtensionSuggestor.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/DependencyInjection/Configurator/EnvironmentConfigurator.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/Loader/LoaderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/Loader/FilesystemLoader.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Handler/Handler.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Handler/ProcessableHandlerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Handler/FormattableHandlerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Handler/ProcessableHandlerTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Handler/FormattableHandlerTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Handler/AbstractProcessingHandler.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ActivationStrategyInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ErrorLevelActivationStrategy.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Monolog/Handler/FingersCrossed/HttpCodeActivationStrategy.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Processor/ProcessorInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Processor/PsrLogMessageProcessor.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Monolog/Handler/ConsoleHandler.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/persistence/lib/Doctrine/Persistence/ConnectionRegistry.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/persistence/lib/Doctrine/Persistence/ManagerRegistry.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/persistence/lib/Doctrine/Persistence/AbstractManagerRegistry.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/ManagerRegistry.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Registry.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/Connection.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/dbal/lib/Doctrine/DBAL/Connection.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/dbal/lib/Doctrine/DBAL/Configuration.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/dbal/lib/Doctrine/DBAL/Logging/SQLLogger.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/dbal/lib/Doctrine/DBAL/Logging/LoggerChain.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/Logger/DbalLogger.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/dbal/lib/Doctrine/DBAL/Logging/DebugStack.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/event-manager/lib/Doctrine/Common/EventManager.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/ContainerAwareEventManager.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/event-manager/lib/Doctrine/Common/EventSubscriber.php';
            include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Mapping/MappedEventSubscriber.php';
            include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/AbstractTrackingListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Timestampable/TimestampableListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Sluggable/SluggableListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/TreeListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Sortable/SortableListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/SoftDeleteable/SoftDeleteableListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/ReferenceIntegrity/ReferenceIntegrityListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerAwareInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerAwareTrait.php';
            include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Listener/Base/AbstractEntityLifecycleListener.php';
            include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Listener/EntityLifecycleListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/ConnectionFactory.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/persistence/lib/Doctrine/Persistence/Mapping/Driver/MappingDriver.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/persistence/lib/Doctrine/Persistence/Mapping/Driver/AnnotationDriver.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/Driver/AnnotationDriver.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/persistence/lib/Doctrine/Persistence/ObjectManager.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/EntityManagerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/EntityManager.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Configuration.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/Cache.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/FlushableCache.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/ClearableCache.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/MultiGetCache.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/MultiDeleteCache.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/MultiPutCache.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/MultiOperationCache.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/CacheProvider.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Cache/DoctrineProvider.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/persistence/lib/Doctrine/Persistence/Mapping/Driver/MappingDriverChain.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/NamingStrategy.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/DefaultNamingStrategy.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/QuoteStrategy.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/DefaultQuoteStrategy.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/EntityListenerResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Mapping/EntityListenerServiceResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Mapping/ContainerEntityListenerResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Repository/RepositoryFactory.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Repository/ContainerRepositoryFactory.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/ManagerConfigurator.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/EventListener/ControllerListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/EventListener/ParamConverterListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/Request/ParamConverter/ParamConverterManager.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/Request/ParamConverter/ParamConverterInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/Request/ParamConverter/DoctrineParamConverter.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/ExpressionLanguage/ExpressionLanguage.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/Request/ParamConverter/DateTimeParamConverter.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/EventListener/TemplateListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/Templating/TemplateGuesser.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/EventListener/HttpCacheListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/EventListener/SecurityListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authorization/ExpressionLanguage.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/Security/ExpressionLanguage.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/EventListener/IsGrantedListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/Request/ArgumentNameConverter.php';
            include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/TranslatableListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/antishov/doctrine-extensions-bundle/EventListener/LocaleListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Blameable/BlameableListener.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/EventListener/BlameListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/LoggableListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/antishov/doctrine-extensions-bundle/EventListener/LoggerListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Uploadable/UploadableListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Uploadable/MimeType/MimeTypeGuesserInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/antishov/doctrine-extensions-bundle/Uploadable/MimeTypeGuesserAdapter.php';
            include_once \dirname(__DIR__, 4).'/vendor/antishov/doctrine-extensions-bundle/Uploadable/ValidatorConfigurator.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/Storage/SessionStorageInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/Storage/NativeSessionStorage.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/HttpFoundation/Session/ZikulaSessionStorage.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/Storage/Handler/AbstractSessionHandler.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/Storage/Handler/StrictSessionHandler.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Session/Storage/Handler/NativeFileSessionHandler.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/CacheClearer.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/YamlDumper.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/DynamicConfigDumper.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/EventListener/ClickjackProtectionListener.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/EventListener/DoctrineListener.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/EventListener/OutputCompressionListener.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/EventListener/SessionExpireListener.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/EventListener/SiteOffListener.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/EventListener/InstallUpgradeCheckListener.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/Collector/HookCollectorInterface.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/Collector/HookCollector.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/Dispatcher/HookDispatcherInterface.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/Dispatcher/HookDispatcher.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/Dispatcher/StorageInterface.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/Dispatcher/Storage/Doctrine/DoctrineStorage.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/persistence/lib/Doctrine/Persistence/ObjectRepository.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/collections/lib/Doctrine/Common/Collections/Selectable.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/EntityRepository.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Repository/ServiceEntityRepositoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Repository/ServiceEntityRepository.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/Dispatcher/Storage/Doctrine/Entity/RepositoryInterface/HookBindingRepositoryInterface.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/Dispatcher/Storage/Doctrine/Entity/Repository/HookBindingRepository.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/Dispatcher/Storage/Doctrine/Entity/RepositoryInterface/HookRuntimeRepositoryInterface.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/Dispatcher/Storage/Doctrine/Entity/Repository/HookRuntimeRepository.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/Listener/HookListenerBuilderListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/friendsofsymfony/jsrouting-bundle/Extractor/ExposedRoutesExtractorInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/friendsofsymfony/jsrouting-bundle/Extractor/ExposedRoutesExtractor.php';
            include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Matcher/MatcherInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Matcher/Matcher.php';
            include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Cache/Resolver/ResolverInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Cache/Resolver/WebPathResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Cache/CacheManager.php';
            include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/FilterConfiguration.php';
            include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Cache/Resolver/NoCacheWebPathResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Cache/SignerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Cache/Signer.php';
            include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Api/ApiInterface/BlockApiInterface.php';
            include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Api/BlockApi.php';
            include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Api/ApiInterface/BlockFactoryApiInterface.php';
            include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Api/BlockFactoryApi.php';
            include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Collector/BlockCollector.php';
            include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Api/ApiInterface/BlockFilterApiInterface.php';
            include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Api/BlockFilterApi.php';
            include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Entity/RepositoryInterface/BlockPositionRepositoryInterface.php';
            include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Entity/Repository/BlockPositionRepository.php';
            include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Listener/CollapseableBlockListener.php';
            include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Api/ApiInterface/CapabilityApiInterface.php';
            include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Api/CapabilityApi.php';
            include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Api/ApiInterface/VariableApiInterface.php';
            include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Api/VariableApi.php';
            include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Entity/RepositoryInterface/ExtensionRepositoryInterface.php';
            include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Entity/Repository/ExtensionRepository.php';
            include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Entity/RepositoryInterface/ExtensionVarRepositoryInterface.php';
            include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Entity/Repository/ExtensionVarRepository.php';
            include_once \dirname(__DIR__, 4).'/src/system/MailerModule/Api/ApiInterface/MailerApiInterface.php';
            include_once \dirname(__DIR__, 4).'/src/system/MailerModule/Api/MailerApi.php';
            include_once \dirname(__DIR__, 4).'/src/system/PermissionsModule/Api/ApiInterface/PermissionApiInterface.php';
            include_once \dirname(__DIR__, 4).'/src/system/PermissionsModule/Api/PermissionApi.php';
            include_once \dirname(__DIR__, 4).'/src/system/PermissionsModule/Entity/RepositoryInterface/PermissionRepositoryInterface.php';
            include_once \dirname(__DIR__, 4).'/src/system/PermissionsModule/Entity/Repository/PermissionRepository.php';
            include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Entity/Factory/Base/AbstractEntityFactory.php';
            include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Entity/Factory/EntityFactory.php';
            include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Entity/Factory/Base/AbstractEntityInitialiser.php';
            include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Entity/Factory/EntityInitialiser.php';
            include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/Base/AbstractCollectionFilterHelper.php';
            include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/CollectionFilterHelper.php';
            include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/Base/AbstractEntityDisplayHelper.php';
            include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/EntityDisplayHelper.php';
            include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/Base/AbstractListEntriesHelper.php';
            include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/ListEntriesHelper.php';
            include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/Base/AbstractPermissionHelper.php';
            include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/PermissionHelper.php';
            include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/Base/AbstractWorkflowHelper.php';
            include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/WorkflowHelper.php';
            include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Listener/Base/AbstractKernelListener.php';
            include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Listener/KernelListener.php';
            include_once \dirname(__DIR__, 4).'/src/system/SearchModule/Listener/FrontControllerListener.php';
            include_once \dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Listener/FilterListener.php';
            include_once \dirname(__DIR__, 4).'/src/system/SettingsModule/Api/ApiInterface/LocaleApiInterface.php';
            include_once \dirname(__DIR__, 4).'/src/system/SettingsModule/Api/LocaleApi.php';
            include_once \dirname(__DIR__, 4).'/src/system/SettingsModule/Helper/LocaleConfigHelper.php';
            include_once \dirname(__DIR__, 4).'/src/system/SettingsModule/Listener/LocaleListener.php';
            include_once \dirname(__DIR__, 4).'/src/system/SettingsModule/Listener/LocalizedVariableListener.php';
            include_once \dirname(__DIR__, 4).'/src/system/SettingsModule/Listener/TranslationUiListener.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Api/ApiInterface/PageAssetApiInterface.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Api/PageAssetApi.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Engine/Asset.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Engine/AssetFilter.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Engine/Asset/ResolverInterface.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Engine/Asset/JsResolver.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Engine/Asset/MergerInterface.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Engine/Asset/Merger.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Engine/Asset/CssResolver.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Engine/Engine.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/EventListener/AddJSConfigListener.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/EventListener/ControllerAnnotationReaderListener.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/EventListener/CreateThemedResponseListener.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/EventListener/DefaultPageAssetSetterListener.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/EventListener/DefaultPageVarSetterListener.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/EventListener/ModuleStylesheetInsertListener.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/EventListener/TemplatePathOverrideListener.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Engine/AssetBag.php';
            include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Engine/ParameterBag.php';
            include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Api/ApiInterface/CurrentUserApiInterface.php';
            include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Api/CurrentUserApi.php';
            include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Collector/MessageModuleCollector.php';
            include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Collector/ProfileModuleCollector.php';
            include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Entity/RepositoryInterface/UserRepositoryInterface.php';
            include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/WhereFromFilterTrait.php';
            include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Entity/Repository/UserRepository.php';
            include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Entity/RepositoryInterface/UserSessionRepositoryInterface.php';
            include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Entity/Repository/UserSessionRepository.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/contracts/Translation/TranslatorInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/TranslatorBagInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/contracts/Translation/LocaleAwareInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Translator.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheWarmer/WarmableInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Translation/Translator.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Formatter/MessageFormatterInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Formatter/IntlFormatterInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Formatter/MessageFormatter.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/contracts/Translation/TranslatorTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/IdentityTranslator.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Routing/RequestContextAwareInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Routing/Matcher/UrlMatcherInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Routing/Generator/UrlGeneratorInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Routing/RouterInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Routing/Matcher/RequestMatcherInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Routing/Router.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Routing/Router.php';
            include_once \dirname(__DIR__, 4).'/vendor/jms/i18n-routing-bundle/JMS/I18nRoutingBundle/Router/I18nRouter.php';
            include_once \dirname(__DIR__, 4).'/vendor/jms/i18n-routing-bundle/JMS/I18nRoutingBundle/Router/LocaleResolverInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/jms/i18n-routing-bundle/JMS/I18nRoutingBundle/Router/DefaultLocaleResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/psr/event-dispatcher/src/EventDispatcherInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/contracts/EventDispatcher/EventDispatcherInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/EventDispatcher/EventDispatcherInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/EventDispatcher/Debug/TraceableEventDispatcher.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Debug/TraceableEventDispatcher.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/EventDispatcher/EventDispatcher.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/CachedReader.php';
        };
    }

    public function compile(): void
    {
        throw new LogicException('You cannot compile a dumped container that was already compiled.');
    }

    public function isCompiled(): bool
    {
        return true;
    }

    public function getRemovedIds(): array
    {
        return require $this->containerDir.\DIRECTORY_SEPARATOR.'removed-ids.php';
    }

    /**
     * Gets the public 'Liip\ImagineBundle\Controller\ImagineController' shared service.
     *
     * @return \Liip\ImagineBundle\Controller\ImagineController
     */
    protected function getImagineControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Controller/ImagineController.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Service/FilterService.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Config/Controller/ControllerConfig.php';

        $a = ($this->services['liip_imagine.data.manager'] ?? $this->getLiipImagine_Data_ManagerService());

        return $this->services['Liip\\ImagineBundle\\Controller\\ImagineController'] = new \Liip\ImagineBundle\Controller\ImagineController(new \Liip\ImagineBundle\Service\FilterService($a, ($this->services['liip_imagine.filter.manager'] ?? $this->getLiipImagine_Filter_ManagerService()), ($this->services['liip_imagine.cache.manager'] ?? $this->getLiipImagine_Cache_ManagerService()), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService())), $a, ($this->services['liip_imagine.cache.signer'] ?? ($this->services['liip_imagine.cache.signer'] = new \Liip\ImagineBundle\Imagine\Cache\Signer('ThisTokenIsNotSoSecretChangeIt'))), new \Liip\ImagineBundle\Config\Controller\ControllerConfig(301));
    }

    /**
     * Gets the public 'Symfony\Bundle\FrameworkBundle\Controller\RedirectController' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Controller\RedirectController
     */
    protected function getRedirectControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/RedirectController.php';

        return $this->services['Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController'] = new \Symfony\Bundle\FrameworkBundle\Controller\RedirectController(($this->services['router'] ?? $this->getRouterService()), 80, 443);
    }

    /**
     * Gets the public 'Symfony\Bundle\FrameworkBundle\Controller\TemplateController' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Controller\TemplateController
     */
    protected function getTemplateControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/TemplateController.php';

        return $this->services['Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController'] = new \Symfony\Bundle\FrameworkBundle\Controller\TemplateController(($this->services['twig'] ?? $this->getTwigService()));
    }

    /**
     * Gets the public 'Translation\Bundle\Catalogue\CatalogueCounter' shared service.
     *
     * @return \Translation\Bundle\Catalogue\CatalogueCounter
     */
    protected function getCatalogueCounterService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Catalogue/CatalogueCounter.php';

        return $this->services['Translation\\Bundle\\Catalogue\\CatalogueCounter'] = new \Translation\Bundle\Catalogue\CatalogueCounter();
    }

    /**
     * Gets the public 'Translation\Bundle\Catalogue\CatalogueFetcher' shared service.
     *
     * @return \Translation\Bundle\Catalogue\CatalogueFetcher
     */
    protected function getCatalogueFetcherService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Catalogue/CatalogueFetcher.php';

        return $this->services['Translation\\Bundle\\Catalogue\\CatalogueFetcher'] = new \Translation\Bundle\Catalogue\CatalogueFetcher(($this->privates['translation.reader'] ?? $this->getTranslation_ReaderService()));
    }

    /**
     * Gets the public 'Translation\Bundle\Catalogue\CatalogueManager' shared service.
     *
     * @return \Translation\Bundle\Catalogue\CatalogueManager
     */
    protected function getCatalogueManagerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Catalogue/CatalogueManager.php';

        return $this->services['Translation\\Bundle\\Catalogue\\CatalogueManager'] = new \Translation\Bundle\Catalogue\CatalogueManager();
    }

    /**
     * Gets the public 'Translation\Bundle\Catalogue\CatalogueWriter' shared service.
     *
     * @return \Translation\Bundle\Catalogue\CatalogueWriter
     */
    protected function getCatalogueWriterService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Catalogue/CatalogueWriter.php';

        return $this->services['Translation\\Bundle\\Catalogue\\CatalogueWriter'] = new \Translation\Bundle\Catalogue\CatalogueWriter(($this->privates['translation.writer'] ?? $this->getTranslation_WriterService()), 'en');
    }

    /**
     * Gets the public 'Translation\Bundle\Command\DeleteObsoleteCommand' shared service.
     *
     * @return \Translation\Bundle\Command\DeleteObsoleteCommand
     */
    protected function getDeleteObsoleteCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Command/BundleTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Command/StorageTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Command/DeleteObsoleteCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Catalogue/CatalogueManager.php';

        $this->services['Translation\\Bundle\\Command\\DeleteObsoleteCommand'] = $instance = new \Translation\Bundle\Command\DeleteObsoleteCommand(($this->services['Translation\\Bundle\\Service\\StorageManager'] ?? $this->getStorageManagerService()), ($this->services['Translation\\Bundle\\Service\\ConfigurationManager'] ?? $this->getConfigurationManagerService()), ($this->services['Translation\\Bundle\\Catalogue\\CatalogueManager'] ?? ($this->services['Translation\\Bundle\\Catalogue\\CatalogueManager'] = new \Translation\Bundle\Catalogue\CatalogueManager())), ($this->services['Translation\\Bundle\\Catalogue\\CatalogueFetcher'] ?? $this->getCatalogueFetcherService()));

        $instance->setName('translation:delete-obsolete');

        return $instance;
    }

    /**
     * Gets the public 'Translation\Bundle\Command\DownloadCommand' shared service.
     *
     * @return \Translation\Bundle\Command\DownloadCommand
     */
    protected function getDownloadCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Command/BundleTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Command/StorageTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Command/DownloadCommand.php';

        $this->services['Translation\\Bundle\\Command\\DownloadCommand'] = $instance = new \Translation\Bundle\Command\DownloadCommand(($this->services['Translation\\Bundle\\Service\\StorageManager'] ?? $this->getStorageManagerService()), ($this->services['Translation\\Bundle\\Service\\ConfigurationManager'] ?? $this->getConfigurationManagerService()), ($this->services['Translation\\Bundle\\Service\\CacheClearer'] ?? $this->getCacheClearerService()), ($this->services['Translation\\Bundle\\Catalogue\\CatalogueWriter'] ?? $this->getCatalogueWriterService()));

        $instance->setName('translation:download');

        return $instance;
    }

    /**
     * Gets the public 'Translation\Bundle\Command\ExtractCommand' shared service.
     *
     * @return \Translation\Bundle\Command\ExtractCommand
     */
    protected function getExtractCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Command/BundleTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Command/ExtractCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Catalogue/CatalogueCounter.php';

        $this->services['Translation\\Bundle\\Command\\ExtractCommand'] = $instance = new \Translation\Bundle\Command\ExtractCommand(($this->services['Translation\\Bundle\\Catalogue\\CatalogueFetcher'] ?? $this->getCatalogueFetcherService()), ($this->services['Translation\\Bundle\\Catalogue\\CatalogueWriter'] ?? $this->getCatalogueWriterService()), ($this->services['Translation\\Bundle\\Catalogue\\CatalogueCounter'] ?? ($this->services['Translation\\Bundle\\Catalogue\\CatalogueCounter'] = new \Translation\Bundle\Catalogue\CatalogueCounter())), ($this->services['Translation\\Bundle\\Service\\Importer'] ?? $this->getImporterService()), ($this->services['Translation\\Bundle\\Service\\ConfigurationManager'] ?? $this->getConfigurationManagerService()));

        $instance->setName('translation:extract');

        return $instance;
    }

    /**
     * Gets the public 'Translation\Bundle\Command\StatusCommand' shared service.
     *
     * @return \Translation\Bundle\Command\StatusCommand
     */
    protected function getStatusCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Command/BundleTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Command/StatusCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Catalogue/CatalogueCounter.php';

        $this->services['Translation\\Bundle\\Command\\StatusCommand'] = $instance = new \Translation\Bundle\Command\StatusCommand(($this->services['Translation\\Bundle\\Catalogue\\CatalogueCounter'] ?? ($this->services['Translation\\Bundle\\Catalogue\\CatalogueCounter'] = new \Translation\Bundle\Catalogue\CatalogueCounter())), ($this->services['Translation\\Bundle\\Service\\ConfigurationManager'] ?? $this->getConfigurationManagerService()), ($this->services['Translation\\Bundle\\Catalogue\\CatalogueFetcher'] ?? $this->getCatalogueFetcherService()));

        $instance->setName('translation:status');

        return $instance;
    }

    /**
     * Gets the public 'Translation\Bundle\Command\SyncCommand' shared service.
     *
     * @return \Translation\Bundle\Command\SyncCommand
     */
    protected function getSyncCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Command/StorageTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Command/SyncCommand.php';

        $this->services['Translation\\Bundle\\Command\\SyncCommand'] = $instance = new \Translation\Bundle\Command\SyncCommand(($this->services['Translation\\Bundle\\Service\\StorageManager'] ?? $this->getStorageManagerService()));

        $instance->setName('translation:sync');

        return $instance;
    }

    /**
     * Gets the public 'Translation\Bundle\Service\CacheClearer' shared service.
     *
     * @return \Translation\Bundle\Service\CacheClearer
     */
    protected function getCacheClearerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Service/CacheClearer.php';

        return $this->services['Translation\\Bundle\\Service\\CacheClearer'] = new \Translation\Bundle\Service\CacheClearer($this->targetDir.'', ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['filesystem'] ?? ($this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem())));
    }

    /**
     * Gets the public 'Translation\Bundle\Service\ConfigurationManager' shared service.
     *
     * @return \Translation\Bundle\Service\ConfigurationManager
     */
    protected function getConfigurationManagerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Service/ConfigurationManager.php';

        $this->services['Translation\\Bundle\\Service\\ConfigurationManager'] = $instance = new \Translation\Bundle\Service\ConfigurationManager();

        $instance->addConfiguration('zikula', ($this->privates['php_translation.configuration.zikula'] ?? $this->getPhpTranslation_Configuration_ZikulaService()));
        $instance->addConfiguration('extension', ($this->privates['php_translation.configuration.extension'] ?? $this->getPhpTranslation_Configuration_ExtensionService()));

        return $instance;
    }

    /**
     * Gets the public 'Translation\Bundle\Service\Importer' shared service.
     *
     * @return \Translation\Bundle\Service\Importer
     */
    protected function getImporterService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Service/Importer.php';

        return $this->services['Translation\\Bundle\\Service\\Importer'] = new \Translation\Bundle\Service\Importer(($this->privates['Translation\\Extractor\\Extractor'] ?? $this->getExtractorService()), ($this->services['twig'] ?? $this->getTwigService()), 'en');
    }

    /**
     * Gets the public 'Translation\Bundle\Service\StorageManager' shared service.
     *
     * @return \Translation\Bundle\Service\StorageManager
     */
    protected function getStorageManagerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Service/StorageManager.php';

        $this->services['Translation\\Bundle\\Service\\StorageManager'] = $instance = new \Translation\Bundle\Service\StorageManager();

        $instance->addStorage('zikula', ($this->services['php_translation.storage.zikula'] ?? $this->getPhpTranslation_Storage_ZikulaService()));
        $instance->addStorage('extension', ($this->services['php_translation.storage.extension'] ?? $this->getPhpTranslation_Storage_ExtensionService()));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\AdminModule\Block\AdminnavBlock' autowired service.
     *
     * @return \Zikula\AdminModule\Block\AdminnavBlock
     */
    protected function getAdminnavBlockService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/BlockHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/AbstractBlockHandler.php';
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/Block/AdminnavBlock.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/ZikulaAdminModule.php';

        $a = ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService());

        $instance = new \Zikula\AdminModule\Block\AdminnavBlock(($this->privates['Zikula\\AdminModule\\ZikulaAdminModule'] ?? ($this->privates['Zikula\\AdminModule\\ZikulaAdminModule'] = new \Zikula\AdminModule\ZikulaAdminModule())), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['translator'] ?? $this->getTranslatorService()), $a, ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['twig'] ?? $this->getTwigService()));

        $instance->setRouter(($this->services['router'] ?? $this->getRouterService()));
        $instance->setAdminCategoryRepository(($this->privates['Zikula\\AdminModule\\Entity\\Repository\\AdminCategoryRepository'] ?? $this->getAdminCategoryRepositoryService()));
        $instance->setVariableApi($a);
        $instance->setCapabilityApi(($this->privates['Zikula\\ExtensionsModule\\Api\\CapabilityApi'] ?? $this->getCapabilityApiService()));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\AdminModule\Controller\AdminController' shared autowired service.
     *
     * @return \Zikula\AdminModule\Controller\AdminController
     */
    protected function getAdminControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/Controller/AdminController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/ZikulaAdminModule.php';

        $this->services['Zikula\\AdminModule\\Controller\\AdminController'] = $instance = new \Zikula\AdminModule\Controller\AdminController(($this->privates['Zikula\\AdminModule\\ZikulaAdminModule'] ?? ($this->privates['Zikula\\AdminModule\\ZikulaAdminModule'] = new \Zikula\AdminModule\ZikulaAdminModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.IQcf4l5'] ?? $this->get_ServiceLocator_IQcf4l5Service())->withContext('Zikula\\AdminModule\\Controller\\AdminController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\AdminModule\Controller\AdminInterfaceController' shared autowired service.
     *
     * @return \Zikula\AdminModule\Controller\AdminInterfaceController
     */
    protected function getAdminInterfaceControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/Controller/AdminInterfaceController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/ZikulaAdminModule.php';

        $this->services['Zikula\\AdminModule\\Controller\\AdminInterfaceController'] = $instance = new \Zikula\AdminModule\Controller\AdminInterfaceController(($this->privates['Zikula\\AdminModule\\ZikulaAdminModule'] ?? ($this->privates['Zikula\\AdminModule\\ZikulaAdminModule'] = new \Zikula\AdminModule\ZikulaAdminModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.IQcf4l5'] ?? $this->get_ServiceLocator_IQcf4l5Service())->withContext('Zikula\\AdminModule\\Controller\\AdminInterfaceController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\AdminModule\Controller\AjaxController' shared autowired service.
     *
     * @return \Zikula\AdminModule\Controller\AjaxController
     */
    protected function getAjaxControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/Controller/AjaxController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/ZikulaAdminModule.php';

        $this->services['Zikula\\AdminModule\\Controller\\AjaxController'] = $instance = new \Zikula\AdminModule\Controller\AjaxController(($this->privates['Zikula\\AdminModule\\ZikulaAdminModule'] ?? ($this->privates['Zikula\\AdminModule\\ZikulaAdminModule'] = new \Zikula\AdminModule\ZikulaAdminModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.IQcf4l5'] ?? $this->get_ServiceLocator_IQcf4l5Service())->withContext('Zikula\\AdminModule\\Controller\\AjaxController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\AdminModule\Controller\ConfigController' shared autowired service.
     *
     * @return \Zikula\AdminModule\Controller\ConfigController
     */
    protected function getConfigControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/Controller/ConfigController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/ZikulaAdminModule.php';

        $this->services['Zikula\\AdminModule\\Controller\\ConfigController'] = $instance = new \Zikula\AdminModule\Controller\ConfigController(($this->privates['Zikula\\AdminModule\\ZikulaAdminModule'] ?? ($this->privates['Zikula\\AdminModule\\ZikulaAdminModule'] = new \Zikula\AdminModule\ZikulaAdminModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.IQcf4l5'] ?? $this->get_ServiceLocator_IQcf4l5Service())->withContext('Zikula\\AdminModule\\Controller\\ConfigController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\BlocksModule\Block\FincludeBlock' autowired service.
     *
     * @return \Zikula\BlocksModule\Block\FincludeBlock
     */
    protected function getFincludeBlockService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/BlockHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/AbstractBlockHandler.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Block/FincludeBlock.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/ZikulaBlocksModule.php';

        return new \Zikula\BlocksModule\Block\FincludeBlock(($this->privates['Zikula\\BlocksModule\\ZikulaBlocksModule'] ?? ($this->privates['Zikula\\BlocksModule\\ZikulaBlocksModule'] = new \Zikula\BlocksModule\ZikulaBlocksModule())), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['twig'] ?? $this->getTwigService()));
    }

    /**
     * Gets the public 'Zikula\BlocksModule\Block\HtmlBlock' autowired service.
     *
     * @return \Zikula\BlocksModule\Block\HtmlBlock
     */
    protected function getHtmlBlockService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/BlockHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/AbstractBlockHandler.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Block/HtmlBlock.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/ZikulaBlocksModule.php';

        return new \Zikula\BlocksModule\Block\HtmlBlock(($this->privates['Zikula\\BlocksModule\\ZikulaBlocksModule'] ?? ($this->privates['Zikula\\BlocksModule\\ZikulaBlocksModule'] = new \Zikula\BlocksModule\ZikulaBlocksModule())), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['twig'] ?? $this->getTwigService()));
    }

    /**
     * Gets the public 'Zikula\BlocksModule\Block\PendingContentBlock' autowired service.
     *
     * @return \Zikula\BlocksModule\Block\PendingContentBlock
     */
    protected function getPendingContentBlockService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/BlockHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/AbstractBlockHandler.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Block/PendingContentBlock.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/ZikulaBlocksModule.php';

        $instance = new \Zikula\BlocksModule\Block\PendingContentBlock(($this->privates['Zikula\\BlocksModule\\ZikulaBlocksModule'] ?? ($this->privates['Zikula\\BlocksModule\\ZikulaBlocksModule'] = new \Zikula\BlocksModule\ZikulaBlocksModule())), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['twig'] ?? $this->getTwigService()));

        $instance->setRouter(($this->services['router'] ?? $this->getRouterService()));
        $instance->setEventDispatcher(($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\BlocksModule\Block\TextBlock' autowired service.
     *
     * @return \Zikula\BlocksModule\Block\TextBlock
     */
    protected function getTextBlockService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/BlockHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/AbstractBlockHandler.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Block/TextBlock.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/ZikulaBlocksModule.php';

        return new \Zikula\BlocksModule\Block\TextBlock(($this->privates['Zikula\\BlocksModule\\ZikulaBlocksModule'] ?? ($this->privates['Zikula\\BlocksModule\\ZikulaBlocksModule'] = new \Zikula\BlocksModule\ZikulaBlocksModule())), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['twig'] ?? $this->getTwigService()));
    }

    /**
     * Gets the public 'Zikula\BlocksModule\Block\XsltBlock' autowired service.
     *
     * @return \Zikula\BlocksModule\Block\XsltBlock
     */
    protected function getXsltBlockService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/BlockHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/AbstractBlockHandler.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Block/XsltBlock.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/ZikulaBlocksModule.php';

        return new \Zikula\BlocksModule\Block\XsltBlock(($this->privates['Zikula\\BlocksModule\\ZikulaBlocksModule'] ?? ($this->privates['Zikula\\BlocksModule\\ZikulaBlocksModule'] = new \Zikula\BlocksModule\ZikulaBlocksModule())), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['twig'] ?? $this->getTwigService()));
    }

    /**
     * Gets the public 'Zikula\BlocksModule\Controller\AdminController' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Controller\AdminController
     */
    protected function getAdminController2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Controller/AdminController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/ZikulaBlocksModule.php';

        $this->services['Zikula\\BlocksModule\\Controller\\AdminController'] = $instance = new \Zikula\BlocksModule\Controller\AdminController(($this->privates['Zikula\\BlocksModule\\ZikulaBlocksModule'] ?? ($this->privates['Zikula\\BlocksModule\\ZikulaBlocksModule'] = new \Zikula\BlocksModule\ZikulaBlocksModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.TfcQtI2'] ?? $this->get_ServiceLocator_TfcQtI2Service())->withContext('Zikula\\BlocksModule\\Controller\\AdminController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\BlocksModule\Controller\BlockController' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Controller\BlockController
     */
    protected function getBlockControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Controller/BlockController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/ZikulaBlocksModule.php';

        $this->services['Zikula\\BlocksModule\\Controller\\BlockController'] = $instance = new \Zikula\BlocksModule\Controller\BlockController(($this->privates['Zikula\\BlocksModule\\ZikulaBlocksModule'] ?? ($this->privates['Zikula\\BlocksModule\\ZikulaBlocksModule'] = new \Zikula\BlocksModule\ZikulaBlocksModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.TfcQtI2'] ?? $this->get_ServiceLocator_TfcQtI2Service())->withContext('Zikula\\BlocksModule\\Controller\\BlockController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\BlocksModule\Controller\ConfigController' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Controller\ConfigController
     */
    protected function getConfigController2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Controller/ConfigController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/ZikulaBlocksModule.php';

        $this->services['Zikula\\BlocksModule\\Controller\\ConfigController'] = $instance = new \Zikula\BlocksModule\Controller\ConfigController(($this->privates['Zikula\\BlocksModule\\ZikulaBlocksModule'] ?? ($this->privates['Zikula\\BlocksModule\\ZikulaBlocksModule'] = new \Zikula\BlocksModule\ZikulaBlocksModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.TfcQtI2'] ?? $this->get_ServiceLocator_TfcQtI2Service())->withContext('Zikula\\BlocksModule\\Controller\\ConfigController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\BlocksModule\Controller\PlacementController' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Controller\PlacementController
     */
    protected function getPlacementControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Controller/PlacementController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/ZikulaBlocksModule.php';

        $this->services['Zikula\\BlocksModule\\Controller\\PlacementController'] = $instance = new \Zikula\BlocksModule\Controller\PlacementController(($this->privates['Zikula\\BlocksModule\\ZikulaBlocksModule'] ?? ($this->privates['Zikula\\BlocksModule\\ZikulaBlocksModule'] = new \Zikula\BlocksModule\ZikulaBlocksModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.TfcQtI2'] ?? $this->get_ServiceLocator_TfcQtI2Service())->withContext('Zikula\\BlocksModule\\Controller\\PlacementController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\BlocksModule\Controller\PositionController' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Controller\PositionController
     */
    protected function getPositionControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Controller/PositionController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/ZikulaBlocksModule.php';

        $this->services['Zikula\\BlocksModule\\Controller\\PositionController'] = $instance = new \Zikula\BlocksModule\Controller\PositionController(($this->privates['Zikula\\BlocksModule\\ZikulaBlocksModule'] ?? ($this->privates['Zikula\\BlocksModule\\ZikulaBlocksModule'] = new \Zikula\BlocksModule\ZikulaBlocksModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.TfcQtI2'] ?? $this->get_ServiceLocator_TfcQtI2Service())->withContext('Zikula\\BlocksModule\\Controller\\PositionController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreBundle\CacheClearer' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreBundle\CacheClearer
     */
    protected function getCacheClearer2Service()
    {
        return $this->services['Zikula\\Bundle\\CoreBundle\\CacheClearer'] = new \Zikula\Bundle\CoreBundle\CacheClearer($this->targetDir.'', 'KernelProdDebugContainer', ($this->services['fos_js_routing.extractor'] ?? $this->getFosJsRouting_ExtractorService()), $this->parameters['jms_i18n_routing.locales']);
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreBundle\Controller\MainController' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreBundle\Controller\MainController
     */
    protected function getMainControllerService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/MainController.php';

        return $this->services['Zikula\\Bundle\\CoreBundle\\Controller\\MainController'] = new \Zikula\Bundle\CoreBundle\Controller\MainController(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()));
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreBundle\Doctrine\Helper\SchemaHelper' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreBundle\Doctrine\Helper\SchemaHelper
     */
    protected function getSchemaHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/Helper/SchemaHelper.php';

        return $this->services['Zikula\\Bundle\\CoreBundle\\Doctrine\\Helper\\SchemaHelper'] = new \Zikula\Bundle\CoreBundle\Doctrine\Helper\SchemaHelper(($this->services['doctrine.orm.default_entity_manager'] ?? $this->getDoctrine_Orm_DefaultEntityManagerService()));
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreBundle\DynamicConfigDumper' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreBundle\DynamicConfigDumper
     */
    protected function getDynamicConfigDumperService()
    {
        return $this->services['Zikula\\Bundle\\CoreBundle\\DynamicConfigDumper'] = new \Zikula\Bundle\CoreBundle\DynamicConfigDumper((\dirname(__DIR__, 4).'/config'));
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Command\Install\FinishCommand' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Command\Install\FinishCommand
     */
    protected function getFinishCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Command/AbstractCoreInstallerCommand.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Command/Install/FinishCommand.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Command\\Install\\FinishCommand'] = new \Zikula\Bundle\CoreInstallerBundle\Command\Install\FinishCommand('prod', false, ($this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\StageHelper'] ?? $this->getStageHelperService()), ($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Command\Install\StartCommand' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Command\Install\StartCommand
     */
    protected function getStartCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Command/AbstractCoreInstallerCommand.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Command/Install/StartCommand.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Command\\Install\\StartCommand'] = new \Zikula\Bundle\CoreInstallerBundle\Command\Install\StartCommand('prod', false, ($this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\ControllerHelper'] ?? $this->getControllerHelperService()), ($this->services['Zikula\\SettingsModule\\Api\\LocaleApi'] ?? $this->getLocaleApiService()), ($this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\ParameterHelper'] ?? $this->getParameterHelperService()), ($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Command\UpgradeCommand' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Command\UpgradeCommand
     */
    protected function getUpgradeCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Command/AbstractCoreInstallerCommand.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Command/UpgradeCommand.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Command\\UpgradeCommand'] = new \Zikula\Bundle\CoreInstallerBundle\Command\UpgradeCommand(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\ControllerHelper'] ?? $this->getControllerHelperService()), ($this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\MigrationHelper'] ?? $this->getMigrationHelperService()), ($this->services['Zikula\\SettingsModule\\Api\\LocaleApi'] ?? $this->getLocaleApiService()), ($this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\StageHelper'] ?? $this->getStageHelperService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->privates['parameter_bag'] ?? ($this->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($this))));
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Controller\AjaxInstallController' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Controller\AjaxInstallController
     */
    protected function getAjaxInstallControllerService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Controller/AjaxInstallController.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Controller\\AjaxInstallController'] = new \Zikula\Bundle\CoreInstallerBundle\Controller\AjaxInstallController($this);
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Controller\AjaxUpgradeController' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Controller\AjaxUpgradeController
     */
    protected function getAjaxUpgradeControllerService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Controller/AjaxUpgradeController.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Controller\\AjaxUpgradeController'] = new \Zikula\Bundle\CoreInstallerBundle\Controller\AjaxUpgradeController($this);
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Controller\DocController' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Controller\DocController
     */
    protected function getDocControllerService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Controller/DocController.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Controller\\DocController'] = new \Zikula\Bundle\CoreInstallerBundle\Controller\DocController(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->services['twig'] ?? $this->getTwigService()), ($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Controller\InstallerController' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Controller\InstallerController
     */
    protected function getInstallerControllerService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Controller/InstallerController.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Controller\\InstallerController'] = new \Zikula\Bundle\CoreInstallerBundle\Controller\InstallerController($this);
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Controller\MigrationController' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Controller\MigrationController
     */
    protected function getMigrationControllerService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Controller/MigrationController.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Controller\\MigrationController'] = new \Zikula\Bundle\CoreInstallerBundle\Controller\MigrationController($this);
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Controller\UpgraderController' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Controller\UpgraderController
     */
    protected function getUpgraderControllerService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Controller/UpgraderController.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Controller\\UpgraderController'] = new \Zikula\Bundle\CoreInstallerBundle\Controller\UpgraderController($this);
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\DependencyInjection\ZikulaCoreInstallerExtension' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\DependencyInjection\ZikulaCoreInstallerExtension
     */
    protected function getZikulaCoreInstallerExtensionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Extension/ExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Extension/ConfigurationExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Extension/Extension.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/DependencyInjection/Extension.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/DependencyInjection/ZikulaCoreInstallerExtension.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\DependencyInjection\\ZikulaCoreInstallerExtension'] = new \Zikula\Bundle\CoreInstallerBundle\DependencyInjection\ZikulaCoreInstallerExtension();
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\EventListener\InstallUpgradeCheckListener' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\EventListener\InstallUpgradeCheckListener
     */
    protected function getInstallUpgradeCheckListenerService()
    {
        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\EventListener\\InstallUpgradeCheckListener'] = new \Zikula\Bundle\CoreInstallerBundle\EventListener\InstallUpgradeCheckListener($this);
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Form\Type\CreateAdminType' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Form\Type\CreateAdminType
     */
    protected function getCreateAdminTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Form/Type/CreateAdminType.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\CreateAdminType'] = new \Zikula\Bundle\CoreInstallerBundle\Form\Type\CreateAdminType();
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Form\Type\DbCredsType' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Form\Type\DbCredsType
     */
    protected function getDbCredsTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Form/Type/DbCredsType.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\DbCredsType'] = new \Zikula\Bundle\CoreInstallerBundle\Form\Type\DbCredsType();
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Form\Type\LocaleType' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Form\Type\LocaleType
     */
    protected function getLocaleTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Form/Type/LocaleType.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\LocaleType'] = new \Zikula\Bundle\CoreInstallerBundle\Form\Type\LocaleType();
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Form\Type\LoginType' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Form\Type\LoginType
     */
    protected function getLoginTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Form/Type/LoginType.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\LoginType'] = new \Zikula\Bundle\CoreInstallerBundle\Form\Type\LoginType();
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Form\Type\RequestContextType' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Form\Type\RequestContextType
     */
    protected function getRequestContextTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Form/Type/RequestContextType.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\RequestContextType'] = new \Zikula\Bundle\CoreInstallerBundle\Form\Type\RequestContextType();
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Helper\BlockHelper' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Helper\BlockHelper
     */
    protected function getBlockHelperService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Helper/BlockHelper.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\BlockHelper'] = new \Zikula\Bundle\CoreInstallerBundle\Helper\BlockHelper(($this->services['doctrine.orm.default_entity_manager'] ?? $this->getDoctrine_Orm_DefaultEntityManagerService()), ($this->services['translator'] ?? $this->getTranslatorService()), $this);
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Helper\CacheHelper' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Helper\CacheHelper
     */
    protected function getCacheHelperService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Helper/CacheHelper.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\CacheHelper'] = new \Zikula\Bundle\CoreInstallerBundle\Helper\CacheHelper(($this->services['Zikula\\Bundle\\CoreBundle\\CacheClearer'] ?? $this->getCacheClearer2Service()), ($this->services['cache_clearer'] ?? $this->getCacheClearer3Service()), 'prod');
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Helper\ControllerHelper' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Helper\ControllerHelper
     */
    protected function getControllerHelperService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Helper/ControllerHelper.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\ControllerHelper'] = new \Zikula\Bundle\CoreInstallerBundle\Helper\ControllerHelper(($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Helper\MigrationHelper' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Helper\MigrationHelper
     */
    protected function getMigrationHelperService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Helper/MigrationHelper.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\MigrationHelper'] = new \Zikula\Bundle\CoreInstallerBundle\Helper\MigrationHelper(($this->services['doctrine'] ?? $this->getDoctrineService()), ($this->services['validator'] ?? $this->getValidatorService()), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()));
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Helper\ModuleHelper' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Helper\ModuleHelper
     */
    protected function getModuleHelperService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Helper/ModuleHelper.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\ModuleHelper'] = new \Zikula\Bundle\CoreInstallerBundle\Helper\ModuleHelper($this, ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\ParameterHelper'] ?? $this->getParameterHelperService()));
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Helper\ParameterHelper' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Helper\ParameterHelper
     */
    protected function getParameterHelperService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Helper/ParameterHelper.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\ParameterHelper'] = new \Zikula\Bundle\CoreInstallerBundle\Helper\ParameterHelper((\dirname(__DIR__, 4).'/config'), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['Zikula\\Bundle\\CoreBundle\\CacheClearer'] ?? $this->getCacheClearer2Service()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['kernel'] ?? $this->get('kernel', 1)));
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Helper\StageHelper' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Helper\StageHelper
     */
    protected function getStageHelperService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Helper/StageHelper.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\StageHelper'] = new \Zikula\Bundle\CoreInstallerBundle\Helper\StageHelper(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->privates['Zikula\\Bundle\\CoreBundle\\Helper\\BundlesSchemaHelper'] ?? $this->getBundlesSchemaHelperService()), ($this->services['Zikula\\ExtensionsModule\\Helper\\ExtensionHelper'] ?? $this->getExtensionHelperService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\ModuleHelper'] ?? $this->getModuleHelperService()), ($this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\BlockHelper'] ?? $this->getBlockHelperService()), ($this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\ParameterHelper'] ?? $this->getParameterHelperService()), ($this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\SuperUserHelper'] ?? $this->getSuperUserHelperService()), ($this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\CacheHelper'] ?? $this->getCacheHelperService()), ($this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\ThemeHelper'] ?? $this->getThemeHelperService()));
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Helper\SuperUserHelper' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Helper\SuperUserHelper
     */
    protected function getSuperUserHelperService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Helper/SuperUserHelper.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/ApiInterface/PasswordApiInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/PasswordApi.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\SuperUserHelper'] = new \Zikula\Bundle\CoreInstallerBundle\Helper\SuperUserHelper(($this->services['Zikula\\UsersModule\\Entity\\Repository\\UserRepository'] ?? $this->getUserRepositoryService()), ($this->services['doctrine.orm.default_entity_manager'] ?? $this->getDoctrine_Orm_DefaultEntityManagerService()), ($this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\ParameterHelper'] ?? $this->getParameterHelperService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->privates['Zikula\\UsersModule\\Helper\\AccessHelper'] ?? $this->getAccessHelperService()), ($this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] ?? ($this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] = new \Zikula\ZAuthModule\Api\PasswordApi())));
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Helper\ThemeHelper' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Helper\ThemeHelper
     */
    protected function getThemeHelperService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Helper/ThemeHelper.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Helper\\ThemeHelper'] = new \Zikula\Bundle\CoreInstallerBundle\Helper\ThemeHelper(($this->services['Zikula\\ThemeModule\\Helper\\BundleSyncHelper'] ?? $this->getBundleSyncHelper2Service()), ($this->services['doctrine.orm.default_entity_manager'] ?? $this->getDoctrine_Orm_DefaultEntityManagerService()));
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Stage\AlreadyInstalledStage' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Stage\AlreadyInstalledStage
     */
    protected function getAlreadyInstalledStageService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/StageInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Stage/AlreadyInstalledStage.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Stage\\AlreadyInstalledStage'] = new \Zikula\Bundle\CoreInstallerBundle\Stage\AlreadyInstalledStage();
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Stage\Install\AjaxInstallerStage' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Stage\Install\AjaxInstallerStage
     */
    protected function getAjaxInstallerStageService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/StageInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Stage/AjaxStageInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/InjectContainerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Stage/Install/AjaxInstallerStage.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Stage\\Install\\AjaxInstallerStage'] = new \Zikula\Bundle\CoreInstallerBundle\Stage\Install\AjaxInstallerStage($this);
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Stage\Install\CompleteStage' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Stage\Install\CompleteStage
     */
    protected function getCompleteStageService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/StageInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/WizardCompleteInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/InjectContainerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Stage/Install/CompleteStage.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Stage\\Install\\CompleteStage'] = new \Zikula\Bundle\CoreInstallerBundle\Stage\Install\CompleteStage($this);
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Stage\Install\CreateAdminStage' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Stage\Install\CreateAdminStage
     */
    protected function getCreateAdminStageService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/StageInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/FormHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/InjectContainerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Stage/Install/CreateAdminStage.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Stage\\Install\\CreateAdminStage'] = new \Zikula\Bundle\CoreInstallerBundle\Stage\Install\CreateAdminStage($this);
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Stage\Install\DbCredsStage' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Stage\Install\DbCredsStage
     */
    protected function getDbCredsStageService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/StageInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/FormHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/InjectContainerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Stage/Install/DbCredsStage.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Stage\\Install\\DbCredsStage'] = new \Zikula\Bundle\CoreInstallerBundle\Stage\Install\DbCredsStage($this);
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Stage\Install\NotInstalledStage' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Stage\Install\NotInstalledStage
     */
    protected function getNotInstalledStageService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/StageInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Stage/Install/NotInstalledStage.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Stage\\Install\\NotInstalledStage'] = new \Zikula\Bundle\CoreInstallerBundle\Stage\Install\NotInstalledStage();
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Stage\LocaleStage' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Stage\LocaleStage
     */
    protected function getLocaleStageService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/StageInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/FormHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/InjectContainerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Stage/LocaleStage.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Stage\\LocaleStage'] = new \Zikula\Bundle\CoreInstallerBundle\Stage\LocaleStage($this);
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Stage\RequirementsStage' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Stage\RequirementsStage
     */
    protected function getRequirementsStageService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/StageInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/InjectContainerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Stage/RequirementsStage.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Stage\\RequirementsStage'] = new \Zikula\Bundle\CoreInstallerBundle\Stage\RequirementsStage($this);
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\AjaxUpgraderStage' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\AjaxUpgraderStage
     */
    protected function getAjaxUpgraderStageService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/StageInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Stage/AjaxStageInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Stage/Upgrade/AjaxUpgraderStage.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Stage\\Upgrade\\AjaxUpgraderStage'] = new \Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\AjaxUpgraderStage(($this->services['translator'] ?? $this->getTranslatorService()), ($this->privates['parameter_bag'] ?? ($this->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($this))));
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\CompleteStage' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\CompleteStage
     */
    protected function getCompleteStage2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/StageInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/WizardCompleteInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/InjectContainerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Stage/Upgrade/CompleteStage.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Stage\\Upgrade\\CompleteStage'] = new \Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\CompleteStage($this);
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\InitStage' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\InitStage
     */
    protected function getInitStageService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/StageInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/InjectContainerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Stage/Upgrade/InitStage.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Stage\\Upgrade\\InitStage'] = new \Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\InitStage($this);
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\LoginStage' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\LoginStage
     */
    protected function getLoginStageService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/StageInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/FormHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/InjectContainerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Stage/Upgrade/LoginStage.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Stage\\Upgrade\\LoginStage'] = new \Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\LoginStage($this);
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\NotUpgradedStage' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\NotUpgradedStage
     */
    protected function getNotUpgradedStageService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/StageInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/zikula/wizard/InjectContainerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Stage/Upgrade/NotUpgradedStage.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Stage\\Upgrade\\NotUpgradedStage'] = new \Zikula\Bundle\CoreInstallerBundle\Stage\Upgrade\NotUpgradedStage($this);
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Util\ZikulaRequirements' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Util\ZikulaRequirements
     */
    protected function getZikulaRequirementsService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Util/ZikulaRequirements.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Util\\ZikulaRequirements'] = new \Zikula\Bundle\CoreInstallerBundle\Util\ZikulaRequirements();
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\AuthenticateAdminLogin' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\AuthenticateAdminLogin
     */
    protected function getAuthenticateAdminLoginService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Constraint.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Validator/Constraints/AuthenticateAdminLogin.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Validator\\Constraints\\AuthenticateAdminLogin'] = new \Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\AuthenticateAdminLogin();
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\AuthenticateAdminLoginValidator' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\AuthenticateAdminLoginValidator
     */
    protected function getAuthenticateAdminLoginValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Validator/Constraints/AuthenticateAdminLoginValidator.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/ApiInterface/PasswordApiInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/PasswordApi.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Validator\\Constraints\\AuthenticateAdminLoginValidator'] = new \Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\AuthenticateAdminLoginValidator(($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['doctrine.dbal.default_connection'] ?? $this->getDoctrine_Dbal_DefaultConnectionService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] ?? ($this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] = new \Zikula\ZAuthModule\Api\PasswordApi())));
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\ValidPdoConnection' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\ValidPdoConnection
     */
    protected function getValidPdoConnectionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Constraint.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Validator/Constraints/ValidPdoConnection.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Validator\\Constraints\\ValidPdoConnection'] = new \Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\ValidPdoConnection();
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\ValidPdoConnectionValidator' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\ValidPdoConnectionValidator
     */
    protected function getValidPdoConnectionValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Validator/Constraints/ValidPdoConnectionValidator.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\Validator\\Constraints\\ValidPdoConnectionValidator'] = new \Zikula\Bundle\CoreInstallerBundle\Validator\Constraints\ValidPdoConnectionValidator(($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the public 'Zikula\Bundle\CoreInstallerBundle\ZikulaCoreInstallerBundle' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreInstallerBundle\ZikulaCoreInstallerBundle
     */
    protected function getZikulaCoreInstallerBundleService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/ZikulaCoreInstallerBundle.php';

        return $this->services['Zikula\\Bundle\\CoreInstallerBundle\\ZikulaCoreInstallerBundle'] = new \Zikula\Bundle\CoreInstallerBundle\ZikulaCoreInstallerBundle();
    }

    /**
     * Gets the public 'Zikula\Bundle\HookBundle\Controller\HookController' shared autowired service.
     *
     * @return \Zikula\Bundle\HookBundle\Controller\HookController
     */
    protected function getHookControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/Controller/HookController.php';

        $this->services['Zikula\\Bundle\\HookBundle\\Controller\\HookController'] = $instance = new \Zikula\Bundle\HookBundle\Controller\HookController();

        $instance->setContainer(($this->privates['.service_locator.pNNo5z3'] ?? $this->get_ServiceLocator_PNNo5z3Service())->withContext('Zikula\\Bundle\\HookBundle\\Controller\\HookController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\Bundle\WorkflowBundle\Controller\EditorController' shared autowired service.
     *
     * @return \Zikula\Bundle\WorkflowBundle\Controller\EditorController
     */
    protected function getEditorControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/WorkflowBundle/Controller/EditorController.php';

        $this->services['Zikula\\Bundle\\WorkflowBundle\\Controller\\EditorController'] = $instance = new \Zikula\Bundle\WorkflowBundle\Controller\EditorController();

        $instance->setContainer(($this->privates['.service_locator.pNNo5z3'] ?? $this->get_ServiceLocator_PNNo5z3Service())->withContext('Zikula\\Bundle\\WorkflowBundle\\Controller\\EditorController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\CategoriesModule\Api\CategoryPermissionApi' shared autowired service.
     *
     * @return \Zikula\CategoriesModule\Api\CategoryPermissionApi
     */
    protected function getCategoryPermissionApiService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Api/ApiInterface/CategoryPermissionApiInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Api/CategoryPermissionApi.php';

        return $this->services['Zikula\\CategoriesModule\\Api\\CategoryPermissionApi'] = new \Zikula\CategoriesModule\Api\CategoryPermissionApi(($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()));
    }

    /**
     * Gets the public 'Zikula\CategoriesModule\Controller\CategoryController' shared autowired service.
     *
     * @return \Zikula\CategoriesModule\Controller\CategoryController
     */
    protected function getCategoryControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Controller/CategoryController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/ZikulaCategoriesModule.php';

        $this->services['Zikula\\CategoriesModule\\Controller\\CategoryController'] = $instance = new \Zikula\CategoriesModule\Controller\CategoryController(($this->privates['Zikula\\CategoriesModule\\ZikulaCategoriesModule'] ?? ($this->privates['Zikula\\CategoriesModule\\ZikulaCategoriesModule'] = new \Zikula\CategoriesModule\ZikulaCategoriesModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.GT5Kcf8'] ?? $this->get_ServiceLocator_GT5Kcf8Service())->withContext('Zikula\\CategoriesModule\\Controller\\CategoryController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\CategoriesModule\Controller\NodeController' shared autowired service.
     *
     * @return \Zikula\CategoriesModule\Controller\NodeController
     */
    protected function getNodeControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Controller/NodeController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/ZikulaCategoriesModule.php';

        $this->services['Zikula\\CategoriesModule\\Controller\\NodeController'] = $instance = new \Zikula\CategoriesModule\Controller\NodeController(($this->privates['Zikula\\CategoriesModule\\ZikulaCategoriesModule'] ?? ($this->privates['Zikula\\CategoriesModule\\ZikulaCategoriesModule'] = new \Zikula\CategoriesModule\ZikulaCategoriesModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.GT5Kcf8'] ?? $this->get_ServiceLocator_GT5Kcf8Service())->withContext('Zikula\\CategoriesModule\\Controller\\NodeController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\CategoriesModule\Controller\RegistryController' shared autowired service.
     *
     * @return \Zikula\CategoriesModule\Controller\RegistryController
     */
    protected function getRegistryControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Controller/RegistryController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/ZikulaCategoriesModule.php';

        $this->services['Zikula\\CategoriesModule\\Controller\\RegistryController'] = $instance = new \Zikula\CategoriesModule\Controller\RegistryController(($this->privates['Zikula\\CategoriesModule\\ZikulaCategoriesModule'] ?? ($this->privates['Zikula\\CategoriesModule\\ZikulaCategoriesModule'] = new \Zikula\CategoriesModule\ZikulaCategoriesModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.GT5Kcf8'] ?? $this->get_ServiceLocator_GT5Kcf8Service())->withContext('Zikula\\CategoriesModule\\Controller\\RegistryController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\CategoriesModule\Entity\Repository\CategoryRegistryRepository' shared autowired service.
     *
     * @return \Zikula\CategoriesModule\Entity\Repository\CategoryRegistryRepository
     */
    protected function getCategoryRegistryRepositoryService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Entity/RepositoryInterface/CategoryRegistryRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Entity/Repository/CategoryRegistryRepository.php';

        return $this->services['Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRegistryRepository'] = new \Zikula\CategoriesModule\Entity\Repository\CategoryRegistryRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the public 'Zikula\CategoriesModule\Entity\Repository\CategoryRepository' shared autowired service.
     *
     * @return \Zikula\CategoriesModule\Entity\Repository\CategoryRepository
     */
    protected function getCategoryRepositoryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/RepositoryUtilsInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/RepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity/Repository/AbstractTreeRepository.php';
        include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity/Repository/NestedTreeRepository.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Entity/RepositoryInterface/CategoryRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Entity/Repository/CategoryRepository.php';

        return $this->services['Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRepository'] = new \Zikula\CategoriesModule\Entity\Repository\CategoryRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the public 'Zikula\ExtensionsModule\Api\VariableApi' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Api\VariableApi
     */
    protected function getVariableApiService()
    {
        return $this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] = new \Zikula\ExtensionsModule\Api\VariableApi(false, ($this->privates['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionVarRepository'] ?? $this->getExtensionVarRepositoryService()), ($this->services['kernel'] ?? $this->get('kernel', 1)), $this->parameters['multisites']);
    }

    /**
     * Gets the public 'Zikula\ExtensionsModule\Controller\ConfigController' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Controller\ConfigController
     */
    protected function getConfigController3Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Controller/ConfigController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ZikulaExtensionsModule.php';

        $this->services['Zikula\\ExtensionsModule\\Controller\\ConfigController'] = $instance = new \Zikula\ExtensionsModule\Controller\ConfigController(($this->privates['Zikula\\ExtensionsModule\\ZikulaExtensionsModule'] ?? ($this->privates['Zikula\\ExtensionsModule\\ZikulaExtensionsModule'] = new \Zikula\ExtensionsModule\ZikulaExtensionsModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.ybqw7s0'] ?? $this->get_ServiceLocator_Ybqw7s0Service())->withContext('Zikula\\ExtensionsModule\\Controller\\ConfigController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController
     */
    protected function getExtensionsInterfaceControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Controller/ExtensionsInterfaceController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ZikulaExtensionsModule.php';

        $this->services['Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController'] = $instance = new \Zikula\ExtensionsModule\Controller\ExtensionsInterfaceController(($this->privates['Zikula\\ExtensionsModule\\ZikulaExtensionsModule'] ?? ($this->privates['Zikula\\ExtensionsModule\\ZikulaExtensionsModule'] = new \Zikula\ExtensionsModule\ZikulaExtensionsModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.ybqw7s0'] ?? $this->get_ServiceLocator_Ybqw7s0Service())->withContext('Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\ExtensionsModule\Controller\ModuleController' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Controller\ModuleController
     */
    protected function getModuleControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Controller/ModuleController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ZikulaExtensionsModule.php';

        $this->services['Zikula\\ExtensionsModule\\Controller\\ModuleController'] = $instance = new \Zikula\ExtensionsModule\Controller\ModuleController(($this->privates['Zikula\\ExtensionsModule\\ZikulaExtensionsModule'] ?? ($this->privates['Zikula\\ExtensionsModule\\ZikulaExtensionsModule'] = new \Zikula\ExtensionsModule\ZikulaExtensionsModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.ybqw7s0'] ?? $this->get_ServiceLocator_Ybqw7s0Service())->withContext('Zikula\\ExtensionsModule\\Controller\\ModuleController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\ExtensionsModule\Controller\ServicesController' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Controller\ServicesController
     */
    protected function getServicesControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Controller/ServicesController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ZikulaExtensionsModule.php';

        $this->services['Zikula\\ExtensionsModule\\Controller\\ServicesController'] = $instance = new \Zikula\ExtensionsModule\Controller\ServicesController(($this->privates['Zikula\\ExtensionsModule\\ZikulaExtensionsModule'] ?? ($this->privates['Zikula\\ExtensionsModule\\ZikulaExtensionsModule'] = new \Zikula\ExtensionsModule\ZikulaExtensionsModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.ybqw7s0'] ?? $this->get_ServiceLocator_Ybqw7s0Service())->withContext('Zikula\\ExtensionsModule\\Controller\\ServicesController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository
     */
    protected function getExtensionRepositoryService()
    {
        return $this->services['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository'] = new \Zikula\ExtensionsModule\Entity\Repository\ExtensionRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the public 'Zikula\ExtensionsModule\Helper\BundleSyncHelper' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Helper\BundleSyncHelper
     */
    protected function getBundleSyncHelperService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Helper/BundleSyncHelper.php';

        return $this->services['Zikula\\ExtensionsModule\\Helper\\BundleSyncHelper'] = new \Zikula\ExtensionsModule\Helper\BundleSyncHelper(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->services['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository'] ?? $this->getExtensionRepositoryService()), ($this->privates['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionVarRepository'] ?? $this->getExtensionVarRepositoryService()), ($this->privates['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionDependencyRepository'] ?? $this->getExtensionDependencyRepositoryService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->privates['Zikula\\ExtensionsModule\\Helper\\ExtensionStateHelper'] ?? $this->getExtensionStateHelperService()), ($this->privates['Zikula\\Bundle\\CoreBundle\\Helper\\BundlesSchemaHelper'] ?? $this->getBundlesSchemaHelperService()), ($this->privates['Zikula\\ExtensionsModule\\Helper\\ComposerValidationHelper'] ?? $this->getComposerValidationHelperService()), ($this->services['session'] ?? $this->getSessionService()));
    }

    /**
     * Gets the public 'Zikula\ExtensionsModule\Helper\ExtensionHelper' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Helper\ExtensionHelper
     */
    protected function getExtensionHelperService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Helper/ExtensionHelper.php';

        return $this->services['Zikula\\ExtensionsModule\\Helper\\ExtensionHelper'] = new \Zikula\ExtensionsModule\Helper\ExtensionHelper($this, ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository'] ?? $this->getExtensionRepositoryService()), ($this->privates['Zikula\\ExtensionsModule\\Helper\\ExtensionStateHelper'] ?? $this->getExtensionStateHelperService()), ($this->services['Zikula\\Bundle\\CoreBundle\\CacheClearer'] ?? $this->getCacheClearer2Service()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /**
     * Gets the public 'Zikula\GroupsModule\Controller\ApplicationController' shared autowired service.
     *
     * @return \Zikula\GroupsModule\Controller\ApplicationController
     */
    protected function getApplicationControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Controller/ApplicationController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/ZikulaGroupsModule.php';

        $this->services['Zikula\\GroupsModule\\Controller\\ApplicationController'] = $instance = new \Zikula\GroupsModule\Controller\ApplicationController(($this->privates['Zikula\\GroupsModule\\ZikulaGroupsModule'] ?? ($this->privates['Zikula\\GroupsModule\\ZikulaGroupsModule'] = new \Zikula\GroupsModule\ZikulaGroupsModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.7vj43mn'] ?? $this->get_ServiceLocator_7vj43mnService())->withContext('Zikula\\GroupsModule\\Controller\\ApplicationController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\GroupsModule\Controller\ConfigController' shared autowired service.
     *
     * @return \Zikula\GroupsModule\Controller\ConfigController
     */
    protected function getConfigController4Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Controller/ConfigController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/ZikulaGroupsModule.php';

        $this->services['Zikula\\GroupsModule\\Controller\\ConfigController'] = $instance = new \Zikula\GroupsModule\Controller\ConfigController(($this->privates['Zikula\\GroupsModule\\ZikulaGroupsModule'] ?? ($this->privates['Zikula\\GroupsModule\\ZikulaGroupsModule'] = new \Zikula\GroupsModule\ZikulaGroupsModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.7vj43mn'] ?? $this->get_ServiceLocator_7vj43mnService())->withContext('Zikula\\GroupsModule\\Controller\\ConfigController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\GroupsModule\Controller\GroupController' shared autowired service.
     *
     * @return \Zikula\GroupsModule\Controller\GroupController
     */
    protected function getGroupControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Controller/GroupController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/ZikulaGroupsModule.php';

        $this->services['Zikula\\GroupsModule\\Controller\\GroupController'] = $instance = new \Zikula\GroupsModule\Controller\GroupController(($this->privates['Zikula\\GroupsModule\\ZikulaGroupsModule'] ?? ($this->privates['Zikula\\GroupsModule\\ZikulaGroupsModule'] = new \Zikula\GroupsModule\ZikulaGroupsModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.7vj43mn'] ?? $this->get_ServiceLocator_7vj43mnService())->withContext('Zikula\\GroupsModule\\Controller\\GroupController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\GroupsModule\Controller\MembershipController' shared autowired service.
     *
     * @return \Zikula\GroupsModule\Controller\MembershipController
     */
    protected function getMembershipControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Controller/MembershipController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/ZikulaGroupsModule.php';

        $this->services['Zikula\\GroupsModule\\Controller\\MembershipController'] = $instance = new \Zikula\GroupsModule\Controller\MembershipController(($this->privates['Zikula\\GroupsModule\\ZikulaGroupsModule'] ?? ($this->privates['Zikula\\GroupsModule\\ZikulaGroupsModule'] = new \Zikula\GroupsModule\ZikulaGroupsModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.7vj43mn'] ?? $this->get_ServiceLocator_7vj43mnService())->withContext('Zikula\\GroupsModule\\Controller\\MembershipController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\GroupsModule\Entity\Repository\GroupRepository' shared autowired service.
     *
     * @return \Zikula\GroupsModule\Entity\Repository\GroupRepository
     */
    protected function getGroupRepositoryService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Entity/RepositoryInterface/GroupRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Entity/Repository/GroupRepository.php';

        $this->services['Zikula\\GroupsModule\\Entity\\Repository\\GroupRepository'] = $instance = new \Zikula\GroupsModule\Entity\Repository\GroupRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));

        $instance->setTranslator(($this->services['translator'] ?? $this->getTranslatorService()));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\MailerModule\Controller\ConfigController' shared autowired service.
     *
     * @return \Zikula\MailerModule\Controller\ConfigController
     */
    protected function getConfigController5Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/MailerModule/Controller/ConfigController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/MailerModule/ZikulaMailerModule.php';

        $this->services['Zikula\\MailerModule\\Controller\\ConfigController'] = $instance = new \Zikula\MailerModule\Controller\ConfigController(new \Zikula\MailerModule\ZikulaMailerModule(), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer((new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'doctrine' => ['services', 'doctrine', 'getDoctrineService', false],
            'form.factory' => ['services', 'form.factory', 'getForm_FactoryService', false],
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'security.authorization_checker' => ['services', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'security.csrf.token_manager' => ['services', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', false],
            'security.token_storage' => ['services', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'session' => ['services', 'session', 'getSessionService', false],
            'twig' => ['services', 'twig', 'getTwigService', false],
        ], [
            'doctrine' => '?',
            'form.factory' => '?',
            'http_kernel' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
            'security.authorization_checker' => '?',
            'security.csrf.token_manager' => '?',
            'security.token_storage' => '?',
            'session' => '?',
            'twig' => '?',
        ]))->withContext('Zikula\\MailerModule\\Controller\\ConfigController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\MenuModule\Block\MenuBlock' autowired service.
     *
     * @return \Zikula\MenuModule\Block\MenuBlock
     */
    protected function getMenuBlockService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/BlockHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/AbstractBlockHandler.php';
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/Block/MenuBlock.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/ZikulaMenuModule.php';

        return new \Zikula\MenuModule\Block\MenuBlock(($this->privates['Zikula\\MenuModule\\ZikulaMenuModule'] ?? ($this->privates['Zikula\\MenuModule\\ZikulaMenuModule'] = new \Zikula\MenuModule\ZikulaMenuModule())), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['twig'] ?? $this->getTwigService()));
    }

    /**
     * Gets the public 'Zikula\MenuModule\Controller\ConfigController' shared autowired service.
     *
     * @return \Zikula\MenuModule\Controller\ConfigController
     */
    protected function getConfigController6Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/Controller/ConfigController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/ZikulaMenuModule.php';

        $this->services['Zikula\\MenuModule\\Controller\\ConfigController'] = $instance = new \Zikula\MenuModule\Controller\ConfigController(($this->privates['Zikula\\MenuModule\\ZikulaMenuModule'] ?? ($this->privates['Zikula\\MenuModule\\ZikulaMenuModule'] = new \Zikula\MenuModule\ZikulaMenuModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.NTCZSds'] ?? $this->get_ServiceLocator_NTCZSdsService())->withContext('Zikula\\MenuModule\\Controller\\ConfigController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\MenuModule\Controller\MenuController' shared autowired service.
     *
     * @return \Zikula\MenuModule\Controller\MenuController
     */
    protected function getMenuControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/Controller/MenuController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/ZikulaMenuModule.php';

        $this->services['Zikula\\MenuModule\\Controller\\MenuController'] = $instance = new \Zikula\MenuModule\Controller\MenuController(($this->privates['Zikula\\MenuModule\\ZikulaMenuModule'] ?? ($this->privates['Zikula\\MenuModule\\ZikulaMenuModule'] = new \Zikula\MenuModule\ZikulaMenuModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.NTCZSds'] ?? $this->get_ServiceLocator_NTCZSdsService())->withContext('Zikula\\MenuModule\\Controller\\MenuController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\MenuModule\Controller\NodeController' shared autowired service.
     *
     * @return \Zikula\MenuModule\Controller\NodeController
     */
    protected function getNodeController2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/Controller/NodeController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/ZikulaMenuModule.php';

        $this->services['Zikula\\MenuModule\\Controller\\NodeController'] = $instance = new \Zikula\MenuModule\Controller\NodeController(($this->privates['Zikula\\MenuModule\\ZikulaMenuModule'] ?? ($this->privates['Zikula\\MenuModule\\ZikulaMenuModule'] = new \Zikula\MenuModule\ZikulaMenuModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.NTCZSds'] ?? $this->get_ServiceLocator_NTCZSdsService())->withContext('Zikula\\MenuModule\\Controller\\NodeController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\PermissionsModule\Controller\ConfigController' shared autowired service.
     *
     * @return \Zikula\PermissionsModule\Controller\ConfigController
     */
    protected function getConfigController7Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/PermissionsModule/Controller/ConfigController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/PermissionsModule/ZikulaPermissionsModule.php';

        $this->services['Zikula\\PermissionsModule\\Controller\\ConfigController'] = $instance = new \Zikula\PermissionsModule\Controller\ConfigController(($this->privates['Zikula\\PermissionsModule\\ZikulaPermissionsModule'] ?? ($this->privates['Zikula\\PermissionsModule\\ZikulaPermissionsModule'] = new \Zikula\PermissionsModule\ZikulaPermissionsModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.crDPbqM'] ?? $this->get_ServiceLocator_CrDPbqMService())->withContext('Zikula\\PermissionsModule\\Controller\\ConfigController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\PermissionsModule\Controller\PermissionController' shared autowired service.
     *
     * @return \Zikula\PermissionsModule\Controller\PermissionController
     */
    protected function getPermissionControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/PermissionsModule/Controller/PermissionController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/PermissionsModule/ZikulaPermissionsModule.php';

        $this->services['Zikula\\PermissionsModule\\Controller\\PermissionController'] = $instance = new \Zikula\PermissionsModule\Controller\PermissionController(($this->privates['Zikula\\PermissionsModule\\ZikulaPermissionsModule'] ?? ($this->privates['Zikula\\PermissionsModule\\ZikulaPermissionsModule'] = new \Zikula\PermissionsModule\ZikulaPermissionsModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.crDPbqM'] ?? $this->get_ServiceLocator_CrDPbqMService())->withContext('Zikula\\PermissionsModule\\Controller\\PermissionController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\RoutesModule\Controller\AjaxController' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Controller\AjaxController
     */
    protected function getAjaxController2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Controller/Base/AbstractAjaxController.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Controller/AjaxController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Base/AbstractZikulaRoutesModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/ZikulaRoutesModule.php';

        $this->services['Zikula\\RoutesModule\\Controller\\AjaxController'] = $instance = new \Zikula\RoutesModule\Controller\AjaxController(($this->privates['Zikula\\RoutesModule\\ZikulaRoutesModule'] ?? ($this->privates['Zikula\\RoutesModule\\ZikulaRoutesModule'] = new \Zikula\RoutesModule\ZikulaRoutesModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.GNc7rhp'] ?? $this->get_ServiceLocator_GNc7rhpService())->withContext('Zikula\\RoutesModule\\Controller\\AjaxController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\RoutesModule\Controller\ConfigController' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Controller\ConfigController
     */
    protected function getConfigController8Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Controller/Base/AbstractConfigController.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Controller/ConfigController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Base/AbstractZikulaRoutesModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/ZikulaRoutesModule.php';

        $this->services['Zikula\\RoutesModule\\Controller\\ConfigController'] = $instance = new \Zikula\RoutesModule\Controller\ConfigController(($this->privates['Zikula\\RoutesModule\\ZikulaRoutesModule'] ?? ($this->privates['Zikula\\RoutesModule\\ZikulaRoutesModule'] = new \Zikula\RoutesModule\ZikulaRoutesModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.GNc7rhp'] ?? $this->get_ServiceLocator_GNc7rhpService())->withContext('Zikula\\RoutesModule\\Controller\\ConfigController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\RoutesModule\Controller\RouteController' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Controller\RouteController
     */
    protected function getRouteControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Controller/Base/AbstractRouteController.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Controller/RouteController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Base/AbstractZikulaRoutesModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/ZikulaRoutesModule.php';

        $this->services['Zikula\\RoutesModule\\Controller\\RouteController'] = $instance = new \Zikula\RoutesModule\Controller\RouteController(($this->privates['Zikula\\RoutesModule\\ZikulaRoutesModule'] ?? ($this->privates['Zikula\\RoutesModule\\ZikulaRoutesModule'] = new \Zikula\RoutesModule\ZikulaRoutesModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.GNc7rhp'] ?? $this->get_ServiceLocator_GNc7rhpService())->withContext('Zikula\\RoutesModule\\Controller\\RouteController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\RoutesModule\Controller\UpdateController' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Controller\UpdateController
     */
    protected function getUpdateControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Controller/UpdateController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Base/AbstractZikulaRoutesModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/ZikulaRoutesModule.php';

        $this->services['Zikula\\RoutesModule\\Controller\\UpdateController'] = $instance = new \Zikula\RoutesModule\Controller\UpdateController(($this->privates['Zikula\\RoutesModule\\ZikulaRoutesModule'] ?? ($this->privates['Zikula\\RoutesModule\\ZikulaRoutesModule'] = new \Zikula\RoutesModule\ZikulaRoutesModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.GNc7rhp'] ?? $this->get_ServiceLocator_GNc7rhpService())->withContext('Zikula\\RoutesModule\\Controller\\UpdateController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\RoutesModule\Entity\Factory\EntityFactory' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Entity\Factory\EntityFactory
     */
    protected function getEntityFactoryService()
    {
        return $this->services['Zikula\\RoutesModule\\Entity\\Factory\\EntityFactory'] = new \Zikula\RoutesModule\Entity\Factory\EntityFactory(($this->services['doctrine.orm.default_entity_manager'] ?? $this->getDoctrine_Orm_DefaultEntityManagerService()), new \Zikula\RoutesModule\Entity\Factory\EntityInitialiser(($this->privates['Zikula\\RoutesModule\\Helper\\PermissionHelper'] ?? $this->getPermissionHelperService()), ($this->privates['Zikula\\RoutesModule\\Helper\\ListEntriesHelper'] ?? $this->getListEntriesHelperService())), ($this->privates['Zikula\\RoutesModule\\Helper\\CollectionFilterHelper'] ?? $this->getCollectionFilterHelperService()));
    }

    /**
     * Gets the public 'Zikula\RoutesModule\Helper\MultilingualRoutingHelper' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Helper\MultilingualRoutingHelper
     */
    protected function getMultilingualRoutingHelperService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/MultilingualRoutingHelper.php';

        return $this->services['Zikula\\RoutesModule\\Helper\\MultilingualRoutingHelper'] = new \Zikula\RoutesModule\Helper\MultilingualRoutingHelper(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['Zikula\\Bundle\\CoreBundle\\DynamicConfigDumper'] ?? ($this->services['Zikula\\Bundle\\CoreBundle\\DynamicConfigDumper'] = new \Zikula\Bundle\CoreBundle\DynamicConfigDumper((\dirname(__DIR__, 4).'/config')))), ($this->services['Zikula\\Bundle\\CoreBundle\\CacheClearer'] ?? $this->getCacheClearer2Service()));
    }

    /**
     * Gets the public 'Zikula\SearchModule\Block\SearchBlock' autowired service.
     *
     * @return \Zikula\SearchModule\Block\SearchBlock
     */
    protected function getSearchBlockService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/BlockHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/AbstractBlockHandler.php';
        include_once \dirname(__DIR__, 4).'/src/system/SearchModule/Block/SearchBlock.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/SearchModule/ZikulaSearchModule.php';

        $instance = new \Zikula\SearchModule\Block\SearchBlock(($this->privates['Zikula\\SearchModule\\ZikulaSearchModule'] ?? ($this->privates['Zikula\\SearchModule\\ZikulaSearchModule'] = new \Zikula\SearchModule\ZikulaSearchModule())), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['twig'] ?? $this->getTwigService()));

        $instance->setKernel(($this->services['kernel'] ?? $this->get('kernel', 1)));
        $instance->setRouter(($this->services['router'] ?? $this->getRouterService()));
        $instance->setFormFactory(($this->services['form.factory'] ?? $this->getForm_FactoryService()));
        $instance->setSearchableModuleCollector(($this->privates['Zikula\\SearchModule\\Collector\\SearchableModuleCollector'] ?? $this->getSearchableModuleCollectorService()));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\SearchModule\Controller\ConfigController' shared autowired service.
     *
     * @return \Zikula\SearchModule\Controller\ConfigController
     */
    protected function getConfigController9Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/SearchModule/Controller/ConfigController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/SearchModule/ZikulaSearchModule.php';

        $this->services['Zikula\\SearchModule\\Controller\\ConfigController'] = $instance = new \Zikula\SearchModule\Controller\ConfigController(($this->privates['Zikula\\SearchModule\\ZikulaSearchModule'] ?? ($this->privates['Zikula\\SearchModule\\ZikulaSearchModule'] = new \Zikula\SearchModule\ZikulaSearchModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.e.U7W_3'] ?? $this->get_ServiceLocator_E_U7W3Service())->withContext('Zikula\\SearchModule\\Controller\\ConfigController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\SearchModule\Controller\SearchController' shared autowired service.
     *
     * @return \Zikula\SearchModule\Controller\SearchController
     */
    protected function getSearchControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/SearchModule/Controller/SearchController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/SearchModule/ZikulaSearchModule.php';

        $this->services['Zikula\\SearchModule\\Controller\\SearchController'] = $instance = new \Zikula\SearchModule\Controller\SearchController(($this->privates['Zikula\\SearchModule\\ZikulaSearchModule'] ?? ($this->privates['Zikula\\SearchModule\\ZikulaSearchModule'] = new \Zikula\SearchModule\ZikulaSearchModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.e.U7W_3'] ?? $this->get_ServiceLocator_E_U7W3Service())->withContext('Zikula\\SearchModule\\Controller\\SearchController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\SecurityCenterModule\Controller\ConfigController' shared autowired service.
     *
     * @return \Zikula\SecurityCenterModule\Controller\ConfigController
     */
    protected function getConfigController10Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Controller/ConfigController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/SecurityCenterModule/ZikulaSecurityCenterModule.php';

        $this->services['Zikula\\SecurityCenterModule\\Controller\\ConfigController'] = $instance = new \Zikula\SecurityCenterModule\Controller\ConfigController(($this->privates['Zikula\\SecurityCenterModule\\ZikulaSecurityCenterModule'] ?? ($this->privates['Zikula\\SecurityCenterModule\\ZikulaSecurityCenterModule'] = new \Zikula\SecurityCenterModule\ZikulaSecurityCenterModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.Twi25pd'] ?? $this->get_ServiceLocator_Twi25pdService())->withContext('Zikula\\SecurityCenterModule\\Controller\\ConfigController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\SecurityCenterModule\Controller\IdsLogController' shared autowired service.
     *
     * @return \Zikula\SecurityCenterModule\Controller\IdsLogController
     */
    protected function getIdsLogControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Controller/IdsLogController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/SecurityCenterModule/ZikulaSecurityCenterModule.php';

        $this->services['Zikula\\SecurityCenterModule\\Controller\\IdsLogController'] = $instance = new \Zikula\SecurityCenterModule\Controller\IdsLogController(($this->privates['Zikula\\SecurityCenterModule\\ZikulaSecurityCenterModule'] ?? ($this->privates['Zikula\\SecurityCenterModule\\ZikulaSecurityCenterModule'] = new \Zikula\SecurityCenterModule\ZikulaSecurityCenterModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.Twi25pd'] ?? $this->get_ServiceLocator_Twi25pdService())->withContext('Zikula\\SecurityCenterModule\\Controller\\IdsLogController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\SecurityCenterModule\Helper\PurifierHelper' shared autowired service.
     *
     * @return \Zikula\SecurityCenterModule\Helper\PurifierHelper
     */
    protected function getPurifierHelperService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Helper/PurifierHelper.php';

        return $this->services['Zikula\\SecurityCenterModule\\Helper\\PurifierHelper'] = new \Zikula\SecurityCenterModule\Helper\PurifierHelper(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->services['session'] ?? $this->getSessionService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()));
    }

    /**
     * Gets the public 'Zikula\SettingsModule\Api\LocaleApi' shared autowired service.
     *
     * @return \Zikula\SettingsModule\Api\LocaleApi
     */
    protected function getLocaleApiService()
    {
        $a = ($this->services['kernel'] ?? $this->get('kernel', 1));

        return $this->services['Zikula\\SettingsModule\\Api\\LocaleApi'] = new \Zikula\SettingsModule\Api\LocaleApi($a, ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), new \Zikula\SettingsModule\Helper\LocaleConfigHelper($a, ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['Zikula\\Bundle\\CoreBundle\\DynamicConfigDumper'] ?? ($this->services['Zikula\\Bundle\\CoreBundle\\DynamicConfigDumper'] = new \Zikula\Bundle\CoreBundle\DynamicConfigDumper((\dirname(__DIR__, 4).'/config')))), ($this->services['Zikula\\Bundle\\CoreBundle\\CacheClearer'] ?? $this->getCacheClearer2Service())));
    }

    /**
     * Gets the public 'Zikula\SettingsModule\Block\LocaleBlock' autowired service.
     *
     * @return \Zikula\SettingsModule\Block\LocaleBlock
     */
    protected function getLocaleBlockService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/BlockHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/AbstractBlockHandler.php';
        include_once \dirname(__DIR__, 4).'/src/system/SettingsModule/Block/LocaleBlock.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/SettingsModule/ZikulaSettingsModule.php';

        $instance = new \Zikula\SettingsModule\Block\LocaleBlock(($this->privates['Zikula\\SettingsModule\\ZikulaSettingsModule'] ?? ($this->privates['Zikula\\SettingsModule\\ZikulaSettingsModule'] = new \Zikula\SettingsModule\ZikulaSettingsModule())), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['twig'] ?? $this->getTwigService()));

        $instance->setRouter(($this->services['router'] ?? $this->getRouterService()));
        $instance->setFormFactory(($this->services['form.factory'] ?? $this->getForm_FactoryService()));
        $instance->setLocaleApi(($this->services['Zikula\\SettingsModule\\Api\\LocaleApi'] ?? $this->getLocaleApiService()));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\SettingsModule\Controller\SettingsController' shared autowired service.
     *
     * @return \Zikula\SettingsModule\Controller\SettingsController
     */
    protected function getSettingsControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/SettingsModule/Controller/SettingsController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/SettingsModule/ZikulaSettingsModule.php';

        $this->services['Zikula\\SettingsModule\\Controller\\SettingsController'] = $instance = new \Zikula\SettingsModule\Controller\SettingsController(($this->privates['Zikula\\SettingsModule\\ZikulaSettingsModule'] ?? ($this->privates['Zikula\\SettingsModule\\ZikulaSettingsModule'] = new \Zikula\SettingsModule\ZikulaSettingsModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer((new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'doctrine' => ['services', 'doctrine', 'getDoctrineService', false],
            'form.factory' => ['services', 'form.factory', 'getForm_FactoryService', false],
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'security.authorization_checker' => ['services', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'security.csrf.token_manager' => ['services', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', false],
            'security.token_storage' => ['services', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'session' => ['services', 'session', 'getSessionService', false],
            'twig' => ['services', 'twig', 'getTwigService', false],
        ], [
            'doctrine' => '?',
            'form.factory' => '?',
            'http_kernel' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
            'security.authorization_checker' => '?',
            'security.csrf.token_manager' => '?',
            'security.token_storage' => '?',
            'session' => '?',
            'twig' => '?',
        ]))->withContext('Zikula\\SettingsModule\\Controller\\SettingsController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\ThemeModule\Controller\CombinedAssetController' shared autowired service.
     *
     * @return \Zikula\ThemeModule\Controller\CombinedAssetController
     */
    protected function getCombinedAssetControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Controller/CombinedAssetController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/ZikulaThemeModule.php';

        $this->services['Zikula\\ThemeModule\\Controller\\CombinedAssetController'] = $instance = new \Zikula\ThemeModule\Controller\CombinedAssetController(($this->privates['Zikula\\ThemeModule\\ZikulaThemeModule'] ?? ($this->privates['Zikula\\ThemeModule\\ZikulaThemeModule'] = new \Zikula\ThemeModule\ZikulaThemeModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.pQSbIFR'] ?? $this->get_ServiceLocator_PQSbIFRService())->withContext('Zikula\\ThemeModule\\Controller\\CombinedAssetController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\ThemeModule\Controller\ThemeController' shared autowired service.
     *
     * @return \Zikula\ThemeModule\Controller\ThemeController
     */
    protected function getThemeControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Controller/ThemeController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/ZikulaThemeModule.php';

        $this->services['Zikula\\ThemeModule\\Controller\\ThemeController'] = $instance = new \Zikula\ThemeModule\Controller\ThemeController(($this->privates['Zikula\\ThemeModule\\ZikulaThemeModule'] ?? ($this->privates['Zikula\\ThemeModule\\ZikulaThemeModule'] = new \Zikula\ThemeModule\ZikulaThemeModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.pQSbIFR'] ?? $this->get_ServiceLocator_PQSbIFRService())->withContext('Zikula\\ThemeModule\\Controller\\ThemeController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\ThemeModule\Controller\VarController' shared autowired service.
     *
     * @return \Zikula\ThemeModule\Controller\VarController
     */
    protected function getVarControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Controller/VarController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/ZikulaThemeModule.php';

        $this->services['Zikula\\ThemeModule\\Controller\\VarController'] = $instance = new \Zikula\ThemeModule\Controller\VarController(($this->privates['Zikula\\ThemeModule\\ZikulaThemeModule'] ?? ($this->privates['Zikula\\ThemeModule\\ZikulaThemeModule'] = new \Zikula\ThemeModule\ZikulaThemeModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.pQSbIFR'] ?? $this->get_ServiceLocator_PQSbIFRService())->withContext('Zikula\\ThemeModule\\Controller\\VarController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\ThemeModule\Engine\Asset' shared autowired service.
     *
     * @return \Zikula\ThemeModule\Engine\Asset
     */
    protected function getAssetService()
    {
        return $this->services['Zikula\\ThemeModule\\Engine\\Asset'] = new \Zikula\ThemeModule\Engine\Asset(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->privates['assets.packages'] ?? $this->getAssets_PackagesService()), ($this->services['router'] ?? $this->getRouterService()), ($this->services['filesystem'] ?? ($this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem())), ($this->services['Zikula\\ThemeModule\\Engine\\Engine'] ?? $this->getEngineService()));
    }

    /**
     * Gets the public 'Zikula\ThemeModule\Engine\Engine' shared autowired service.
     *
     * @return \Zikula\ThemeModule\Engine\Engine
     */
    protected function getEngineService()
    {
        return $this->services['Zikula\\ThemeModule\\Engine\\Engine'] = new \Zikula\ThemeModule\Engine\Engine(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()), ($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->privates['Zikula\\ThemeModule\\Engine\\AssetFilter'] ?? $this->getAssetFilterService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()));
    }

    /**
     * Gets the public 'Zikula\ThemeModule\Entity\Repository\ThemeEntityRepository' shared autowired service.
     *
     * @return \Zikula\ThemeModule\Entity\Repository\ThemeEntityRepository
     */
    protected function getThemeEntityRepositoryService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Entity/RepositoryInterface/ThemeEntityRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Entity/Repository/ThemeEntityRepository.php';

        $this->services['Zikula\\ThemeModule\\Entity\\Repository\\ThemeEntityRepository'] = $instance = new \Zikula\ThemeModule\Entity\Repository\ThemeEntityRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));

        $instance->setKernel(($this->services['kernel'] ?? $this->get('kernel', 1)));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\ThemeModule\Helper\BundleSyncHelper' shared autowired service.
     *
     * @return \Zikula\ThemeModule\Helper\BundleSyncHelper
     */
    protected function getBundleSyncHelper2Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Helper/BundleSyncHelper.php';

        return $this->services['Zikula\\ThemeModule\\Helper\\BundleSyncHelper'] = new \Zikula\ThemeModule\Helper\BundleSyncHelper(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->services['Zikula\\ThemeModule\\Entity\\Repository\\ThemeEntityRepository'] ?? $this->getThemeEntityRepositoryService()), ($this->privates['Zikula\\Bundle\\CoreBundle\\Helper\\BundlesSchemaHelper'] ?? $this->getBundlesSchemaHelperService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->privates['Zikula\\ExtensionsModule\\Helper\\ComposerValidationHelper'] ?? $this->getComposerValidationHelperService()), ($this->services['session'] ?? $this->getSessionService()));
    }

    /**
     * Gets the public 'Zikula\UsersModule\Api\CurrentUserApi' shared autowired service.
     *
     * @return \Zikula\UsersModule\Api\CurrentUserApi
     */
    protected function getCurrentUserApiService()
    {
        return $this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] = new \Zikula\UsersModule\Api\CurrentUserApi(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['Zikula\\UsersModule\\Entity\\Repository\\UserRepository'] ?? $this->getUserRepositoryService()));
    }

    /**
     * Gets the public 'Zikula\UsersModule\Block\AccountLinksBlock' autowired service.
     *
     * @return \Zikula\UsersModule\Block\AccountLinksBlock
     */
    protected function getAccountLinksBlockService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/BlockHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/AbstractBlockHandler.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Block/AccountLinksBlock.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/ZikulaUsersModule.php';

        $instance = new \Zikula\UsersModule\Block\AccountLinksBlock(($this->privates['Zikula\\UsersModule\\ZikulaUsersModule'] ?? ($this->privates['Zikula\\UsersModule\\ZikulaUsersModule'] = new \Zikula\UsersModule\ZikulaUsersModule())), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['twig'] ?? $this->getTwigService()));

        $instance->setExtensionModuleCollector(($this->privates['Zikula\\MenuModule\\ExtensionMenu\\ExtensionMenuCollector'] ?? $this->getExtensionMenuCollectorService()));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\UsersModule\Block\LoginBlock' autowired service.
     *
     * @return \Zikula\UsersModule\Block\LoginBlock
     */
    protected function getLoginBlockService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/BlockHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/AbstractBlockHandler.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Block/LoginBlock.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/ZikulaUsersModule.php';

        $instance = new \Zikula\UsersModule\Block\LoginBlock(($this->privates['Zikula\\UsersModule\\ZikulaUsersModule'] ?? ($this->privates['Zikula\\UsersModule\\ZikulaUsersModule'] = new \Zikula\UsersModule\ZikulaUsersModule())), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['twig'] ?? $this->getTwigService()));

        $instance->setRouter(($this->services['router'] ?? $this->getRouterService()));
        $instance->setEventDispatcher(($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
        $instance->setFormFactory(($this->services['form.factory'] ?? $this->getForm_FactoryService()));
        $instance->setCurrentUserApi(($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()));
        $instance->setAuthenticationMethodCollector(($this->privates['Zikula\\UsersModule\\Collector\\AuthenticationMethodCollector'] ?? $this->getAuthenticationMethodCollectorService()));
        $instance->setHookDispatcher(($this->privates['Zikula\\Bundle\\HookBundle\\Dispatcher\\HookDispatcher'] ?? $this->getHookDispatcherService()));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\UsersModule\Block\OnlineBlock' autowired service.
     *
     * @return \Zikula\UsersModule\Block\OnlineBlock
     */
    protected function getOnlineBlockService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/BlockHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/AbstractBlockHandler.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Block/OnlineBlock.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/ZikulaUsersModule.php';

        $a = ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService());

        $instance = new \Zikula\UsersModule\Block\OnlineBlock(($this->privates['Zikula\\UsersModule\\ZikulaUsersModule'] ?? ($this->privates['Zikula\\UsersModule\\ZikulaUsersModule'] = new \Zikula\UsersModule\ZikulaUsersModule())), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['translator'] ?? $this->getTranslatorService()), $a, ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['twig'] ?? $this->getTwigService()));

        $instance->setVariableApi($a);
        $instance->setUserSessionRepository(($this->privates['Zikula\\UsersModule\\Entity\\Repository\\UserSessionRepository'] ?? $this->getUserSessionRepositoryService()));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\UsersModule\Controller\AccessController' shared autowired service.
     *
     * @return \Zikula\UsersModule\Controller\AccessController
     */
    protected function getAccessControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Controller/AccessController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/ZikulaUsersModule.php';

        $this->services['Zikula\\UsersModule\\Controller\\AccessController'] = $instance = new \Zikula\UsersModule\Controller\AccessController(($this->privates['Zikula\\UsersModule\\ZikulaUsersModule'] ?? ($this->privates['Zikula\\UsersModule\\ZikulaUsersModule'] = new \Zikula\UsersModule\ZikulaUsersModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.Mhd.iFW'] ?? $this->get_ServiceLocator_Mhd_IFWService())->withContext('Zikula\\UsersModule\\Controller\\AccessController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\UsersModule\Controller\AccountController' shared autowired service.
     *
     * @return \Zikula\UsersModule\Controller\AccountController
     */
    protected function getAccountControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Controller/AccountController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/ZikulaUsersModule.php';

        $this->services['Zikula\\UsersModule\\Controller\\AccountController'] = $instance = new \Zikula\UsersModule\Controller\AccountController(($this->privates['Zikula\\UsersModule\\ZikulaUsersModule'] ?? ($this->privates['Zikula\\UsersModule\\ZikulaUsersModule'] = new \Zikula\UsersModule\ZikulaUsersModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.Mhd.iFW'] ?? $this->get_ServiceLocator_Mhd_IFWService())->withContext('Zikula\\UsersModule\\Controller\\AccountController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\UsersModule\Controller\ConfigController' shared autowired service.
     *
     * @return \Zikula\UsersModule\Controller\ConfigController
     */
    protected function getConfigController11Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Controller/ConfigController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/ZikulaUsersModule.php';

        $this->services['Zikula\\UsersModule\\Controller\\ConfigController'] = $instance = new \Zikula\UsersModule\Controller\ConfigController(($this->privates['Zikula\\UsersModule\\ZikulaUsersModule'] ?? ($this->privates['Zikula\\UsersModule\\ZikulaUsersModule'] = new \Zikula\UsersModule\ZikulaUsersModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.Mhd.iFW'] ?? $this->get_ServiceLocator_Mhd_IFWService())->withContext('Zikula\\UsersModule\\Controller\\ConfigController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\UsersModule\Controller\FileIOController' shared autowired service.
     *
     * @return \Zikula\UsersModule\Controller\FileIOController
     */
    protected function getFileIOControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Controller/FileIOController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/ZikulaUsersModule.php';

        $this->services['Zikula\\UsersModule\\Controller\\FileIOController'] = $instance = new \Zikula\UsersModule\Controller\FileIOController(($this->privates['Zikula\\UsersModule\\ZikulaUsersModule'] ?? ($this->privates['Zikula\\UsersModule\\ZikulaUsersModule'] = new \Zikula\UsersModule\ZikulaUsersModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.Mhd.iFW'] ?? $this->get_ServiceLocator_Mhd_IFWService())->withContext('Zikula\\UsersModule\\Controller\\FileIOController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\UsersModule\Controller\LiveSearchController' shared autowired service.
     *
     * @return \Zikula\UsersModule\Controller\LiveSearchController
     */
    protected function getLiveSearchControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Controller/LiveSearchController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/ZikulaUsersModule.php';

        $this->services['Zikula\\UsersModule\\Controller\\LiveSearchController'] = $instance = new \Zikula\UsersModule\Controller\LiveSearchController(($this->privates['Zikula\\UsersModule\\ZikulaUsersModule'] ?? ($this->privates['Zikula\\UsersModule\\ZikulaUsersModule'] = new \Zikula\UsersModule\ZikulaUsersModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.Mhd.iFW'] ?? $this->get_ServiceLocator_Mhd_IFWService())->withContext('Zikula\\UsersModule\\Controller\\LiveSearchController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\UsersModule\Controller\RegistrationController' shared autowired service.
     *
     * @return \Zikula\UsersModule\Controller\RegistrationController
     */
    protected function getRegistrationControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Controller/RegistrationController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/ZikulaUsersModule.php';

        $this->services['Zikula\\UsersModule\\Controller\\RegistrationController'] = $instance = new \Zikula\UsersModule\Controller\RegistrationController(($this->privates['Zikula\\UsersModule\\ZikulaUsersModule'] ?? ($this->privates['Zikula\\UsersModule\\ZikulaUsersModule'] = new \Zikula\UsersModule\ZikulaUsersModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.Mhd.iFW'] ?? $this->get_ServiceLocator_Mhd_IFWService())->withContext('Zikula\\UsersModule\\Controller\\RegistrationController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\UsersModule\Controller\UserAdministrationController' shared autowired service.
     *
     * @return \Zikula\UsersModule\Controller\UserAdministrationController
     */
    protected function getUserAdministrationControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Controller/UserAdministrationController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/ZikulaUsersModule.php';

        $this->services['Zikula\\UsersModule\\Controller\\UserAdministrationController'] = $instance = new \Zikula\UsersModule\Controller\UserAdministrationController(($this->privates['Zikula\\UsersModule\\ZikulaUsersModule'] ?? ($this->privates['Zikula\\UsersModule\\ZikulaUsersModule'] = new \Zikula\UsersModule\ZikulaUsersModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.Mhd.iFW'] ?? $this->get_ServiceLocator_Mhd_IFWService())->withContext('Zikula\\UsersModule\\Controller\\UserAdministrationController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\UsersModule\Entity\Repository\UserRepository' shared autowired service.
     *
     * @return \Zikula\UsersModule\Entity\Repository\UserRepository
     */
    protected function getUserRepositoryService()
    {
        return $this->services['Zikula\\UsersModule\\Entity\\Repository\\UserRepository'] = new \Zikula\UsersModule\Entity\Repository\UserRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the public 'Zikula\ZAuthModule\Api\PasswordApi' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Api\PasswordApi
     */
    protected function getPasswordApiService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/ApiInterface/PasswordApiInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/PasswordApi.php';

        return $this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] = new \Zikula\ZAuthModule\Api\PasswordApi();
    }

    /**
     * Gets the public 'Zikula\ZAuthModule\Controller\AccountController' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Controller\AccountController
     */
    protected function getAccountController2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Controller/AccountController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/ZikulaZAuthModule.php';

        $this->services['Zikula\\ZAuthModule\\Controller\\AccountController'] = $instance = new \Zikula\ZAuthModule\Controller\AccountController(($this->privates['Zikula\\ZAuthModule\\ZikulaZAuthModule'] ?? ($this->privates['Zikula\\ZAuthModule\\ZikulaZAuthModule'] = new \Zikula\ZAuthModule\ZikulaZAuthModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.tGwLL8t'] ?? $this->get_ServiceLocator_TGwLL8tService())->withContext('Zikula\\ZAuthModule\\Controller\\AccountController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\ZAuthModule\Controller\ConfigController' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Controller\ConfigController
     */
    protected function getConfigController12Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Controller/ConfigController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/ZikulaZAuthModule.php';

        $this->services['Zikula\\ZAuthModule\\Controller\\ConfigController'] = $instance = new \Zikula\ZAuthModule\Controller\ConfigController(($this->privates['Zikula\\ZAuthModule\\ZikulaZAuthModule'] ?? ($this->privates['Zikula\\ZAuthModule\\ZikulaZAuthModule'] = new \Zikula\ZAuthModule\ZikulaZAuthModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.tGwLL8t'] ?? $this->get_ServiceLocator_TGwLL8tService())->withContext('Zikula\\ZAuthModule\\Controller\\ConfigController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\ZAuthModule\Controller\FileIOController' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Controller\FileIOController
     */
    protected function getFileIOController2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Controller/FileIOController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/ZikulaZAuthModule.php';

        $this->services['Zikula\\ZAuthModule\\Controller\\FileIOController'] = $instance = new \Zikula\ZAuthModule\Controller\FileIOController(($this->privates['Zikula\\ZAuthModule\\ZikulaZAuthModule'] ?? ($this->privates['Zikula\\ZAuthModule\\ZikulaZAuthModule'] = new \Zikula\ZAuthModule\ZikulaZAuthModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.tGwLL8t'] ?? $this->get_ServiceLocator_TGwLL8tService())->withContext('Zikula\\ZAuthModule\\Controller\\FileIOController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\ZAuthModule\Controller\RegistrationController' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Controller\RegistrationController
     */
    protected function getRegistrationController2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Controller/RegistrationController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/ZikulaZAuthModule.php';

        $this->services['Zikula\\ZAuthModule\\Controller\\RegistrationController'] = $instance = new \Zikula\ZAuthModule\Controller\RegistrationController(($this->privates['Zikula\\ZAuthModule\\ZikulaZAuthModule'] ?? ($this->privates['Zikula\\ZAuthModule\\ZikulaZAuthModule'] = new \Zikula\ZAuthModule\ZikulaZAuthModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.tGwLL8t'] ?? $this->get_ServiceLocator_TGwLL8tService())->withContext('Zikula\\ZAuthModule\\Controller\\RegistrationController', $this));

        return $instance;
    }

    /**
     * Gets the public 'Zikula\ZAuthModule\Controller\UserAdministrationController' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Controller\UserAdministrationController
     */
    protected function getUserAdministrationController2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/ExtensionVariablesTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Controller/UserAdministrationController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/AbstractBundle.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/AbstractCoreModule.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/ZikulaZAuthModule.php';

        $this->services['Zikula\\ZAuthModule\\Controller\\UserAdministrationController'] = $instance = new \Zikula\ZAuthModule\Controller\UserAdministrationController(($this->privates['Zikula\\ZAuthModule\\ZikulaZAuthModule'] ?? ($this->privates['Zikula\\ZAuthModule\\ZikulaZAuthModule'] = new \Zikula\ZAuthModule\ZikulaZAuthModule())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));

        $instance->setContainer(($this->privates['.service_locator.tGwLL8t'] ?? $this->get_ServiceLocator_TGwLL8tService())->withContext('Zikula\\ZAuthModule\\Controller\\UserAdministrationController', $this));

        return $instance;
    }

    /**
     * Gets the public 'bazinga.jstranslation.controller' shared service.
     *
     * @return \Bazinga\Bundle\JsTranslationBundle\Controller\Controller
     */
    protected function getBazinga_Jstranslation_ControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/willdurand/js-translation-bundle/Controller/Controller.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/ArrayLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/PhpFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/YamlFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/XliffFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/PoFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/MoFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/QtFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/CsvFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/IcuResFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/IcuDatFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/IniFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/JsonFileLoader.php';

        $this->services['bazinga.jstranslation.controller'] = $instance = new \Bazinga\Bundle\JsTranslationBundle\Controller\Controller(($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['twig'] ?? $this->getTwigService()), ($this->services['bazinga.jstranslation.translation_finder'] ?? $this->getBazinga_Jstranslation_TranslationFinderService()), ($this->targetDir.''.'/bazinga-js-translation'), true, 'en', 'zikula_javascript', '86400');

        $a = ($this->privates['translation.loader.yml'] ?? ($this->privates['translation.loader.yml'] = new \Symfony\Component\Translation\Loader\YamlFileLoader()));
        $b = ($this->privates['translation.loader.xliff'] ?? ($this->privates['translation.loader.xliff'] = new \Symfony\Component\Translation\Loader\XliffFileLoader()));

        $instance->addLoader('php', ($this->privates['translation.loader.php'] ?? ($this->privates['translation.loader.php'] = new \Symfony\Component\Translation\Loader\PhpFileLoader())));
        $instance->addLoader('yaml', $a);
        $instance->addLoader('yml', $a);
        $instance->addLoader('xlf', $b);
        $instance->addLoader('xliff', $b);
        $instance->addLoader('po', ($this->privates['translation.loader.po'] ?? ($this->privates['translation.loader.po'] = new \Symfony\Component\Translation\Loader\PoFileLoader())));
        $instance->addLoader('mo', ($this->privates['translation.loader.mo'] ?? ($this->privates['translation.loader.mo'] = new \Symfony\Component\Translation\Loader\MoFileLoader())));
        $instance->addLoader('ts', ($this->privates['translation.loader.qt'] ?? ($this->privates['translation.loader.qt'] = new \Symfony\Component\Translation\Loader\QtFileLoader())));
        $instance->addLoader('csv', ($this->privates['translation.loader.csv'] ?? ($this->privates['translation.loader.csv'] = new \Symfony\Component\Translation\Loader\CsvFileLoader())));
        $instance->addLoader('res', ($this->privates['translation.loader.res'] ?? ($this->privates['translation.loader.res'] = new \Symfony\Component\Translation\Loader\IcuResFileLoader())));
        $instance->addLoader('dat', ($this->privates['translation.loader.dat'] ?? ($this->privates['translation.loader.dat'] = new \Symfony\Component\Translation\Loader\IcuDatFileLoader())));
        $instance->addLoader('ini', ($this->privates['translation.loader.ini'] ?? ($this->privates['translation.loader.ini'] = new \Symfony\Component\Translation\Loader\IniFileLoader())));
        $instance->addLoader('json', ($this->privates['translation.loader.json'] ?? ($this->privates['translation.loader.json'] = new \Symfony\Component\Translation\Loader\JsonFileLoader())));

        return $instance;
    }

    /**
     * Gets the public 'bazinga.jstranslation.dump_command' shared service.
     *
     * @return \Bazinga\Bundle\JsTranslationBundle\Command\DumpCommand
     */
    protected function getBazinga_Jstranslation_DumpCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/willdurand/js-translation-bundle/Command/DumpCommand.php';

        $this->services['bazinga.jstranslation.dump_command'] = $instance = new \Bazinga\Bundle\JsTranslationBundle\Command\DumpCommand(($this->services['bazinga.jstranslation.translation_dumper'] ?? $this->getBazinga_Jstranslation_TranslationDumperService()), \dirname(__DIR__, 4));

        $instance->setName('bazinga:js-translation:dump');

        return $instance;
    }

    /**
     * Gets the public 'bazinga.jstranslation.translation_dumper' shared service.
     *
     * @return \Bazinga\Bundle\JsTranslationBundle\Dumper\TranslationDumper
     */
    protected function getBazinga_Jstranslation_TranslationDumperService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/willdurand/js-translation-bundle/Dumper/TranslationDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/ArrayLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/PhpFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/YamlFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/XliffFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/PoFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/MoFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/QtFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/CsvFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/IcuResFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/IcuDatFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/IniFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/JsonFileLoader.php';

        $this->services['bazinga.jstranslation.translation_dumper'] = $instance = new \Bazinga\Bundle\JsTranslationBundle\Dumper\TranslationDumper(($this->services['twig'] ?? $this->getTwigService()), ($this->services['bazinga.jstranslation.translation_finder'] ?? $this->getBazinga_Jstranslation_TranslationFinderService()), ($this->services['filesystem'] ?? ($this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem())), 'en', 'zikula_javascript', $this->parameters['localisation.locales'], []);

        $a = ($this->privates['translation.loader.yml'] ?? ($this->privates['translation.loader.yml'] = new \Symfony\Component\Translation\Loader\YamlFileLoader()));
        $b = ($this->privates['translation.loader.xliff'] ?? ($this->privates['translation.loader.xliff'] = new \Symfony\Component\Translation\Loader\XliffFileLoader()));

        $instance->addLoader('php', ($this->privates['translation.loader.php'] ?? ($this->privates['translation.loader.php'] = new \Symfony\Component\Translation\Loader\PhpFileLoader())));
        $instance->addLoader('yaml', $a);
        $instance->addLoader('yml', $a);
        $instance->addLoader('xlf', $b);
        $instance->addLoader('xliff', $b);
        $instance->addLoader('po', ($this->privates['translation.loader.po'] ?? ($this->privates['translation.loader.po'] = new \Symfony\Component\Translation\Loader\PoFileLoader())));
        $instance->addLoader('mo', ($this->privates['translation.loader.mo'] ?? ($this->privates['translation.loader.mo'] = new \Symfony\Component\Translation\Loader\MoFileLoader())));
        $instance->addLoader('ts', ($this->privates['translation.loader.qt'] ?? ($this->privates['translation.loader.qt'] = new \Symfony\Component\Translation\Loader\QtFileLoader())));
        $instance->addLoader('csv', ($this->privates['translation.loader.csv'] ?? ($this->privates['translation.loader.csv'] = new \Symfony\Component\Translation\Loader\CsvFileLoader())));
        $instance->addLoader('res', ($this->privates['translation.loader.res'] ?? ($this->privates['translation.loader.res'] = new \Symfony\Component\Translation\Loader\IcuResFileLoader())));
        $instance->addLoader('dat', ($this->privates['translation.loader.dat'] ?? ($this->privates['translation.loader.dat'] = new \Symfony\Component\Translation\Loader\IcuDatFileLoader())));
        $instance->addLoader('ini', ($this->privates['translation.loader.ini'] ?? ($this->privates['translation.loader.ini'] = new \Symfony\Component\Translation\Loader\IniFileLoader())));
        $instance->addLoader('json', ($this->privates['translation.loader.json'] ?? ($this->privates['translation.loader.json'] = new \Symfony\Component\Translation\Loader\JsonFileLoader())));

        return $instance;
    }

    /**
     * Gets the public 'bazinga.jstranslation.translation_finder' shared service.
     *
     * @return \Bazinga\Bundle\JsTranslationBundle\Finder\TranslationFinder
     */
    protected function getBazinga_Jstranslation_TranslationFinderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/willdurand/js-translation-bundle/Finder/TranslationFinder.php';

        return $this->services['bazinga.jstranslation.translation_finder'] = new \Bazinga\Bundle\JsTranslationBundle\Finder\TranslationFinder(['af' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.af.xlf')], 'ar' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ar.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ar.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ar.xlf')], 'az' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.az.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.az.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.az.xlf')], 'be' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.be.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.be.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.be.xlf')], 'bg' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.bg.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.bg.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.bg.xlf')], 'ca' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ca.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ca.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ca.xlf')], 'cs' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cs.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.cs.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.cs.xlf')], 'cy' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cy.xlf')], 'da' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.da.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.da.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.da.xlf')], 'de' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.de.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.de.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.de.xlf')], 'el' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.el.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.el.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.el.xlf')], 'en' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.en.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.en.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.en.xlf'), 3 => (\dirname(__DIR__, 4).'/translations/mail.en.yaml'), 4 => (\dirname(__DIR__, 4).'/translations/messages.en.yaml'), 5 => (\dirname(__DIR__, 4).'/translations/routes.en.yaml'), 6 => (\dirname(__DIR__, 4).'/translations/security.en.yaml'), 7 => (\dirname(__DIR__, 4).'/translations/validators.en.yaml')], 'es' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.es.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.es.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.es.xlf')], 'et' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.et.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.et.xlf')], 'eu' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.eu.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.eu.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.eu.xlf')], 'fa' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fa.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fa.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fa.xlf')], 'fi' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fi.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fi.xlf')], 'fr' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fr.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fr.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fr.xlf')], 'gl' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.gl.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.gl.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.gl.xlf')], 'he' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.he.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.he.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.he.xlf')], 'hr' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hr.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hr.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hr.xlf')], 'hu' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hu.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hu.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hu.xlf')], 'hy' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hy.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hy.xlf')], 'id' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.id.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.id.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.id.xlf')], 'it' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.it.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.it.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.it.xlf')], 'ja' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ja.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ja.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ja.xlf')], 'lb' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lb.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lb.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lb.xlf')], 'lt' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lt.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lt.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lt.xlf')], 'lv' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lv.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lv.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lv.xlf')], 'mn' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.mn.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.mn.xlf')], 'nb' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nb.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nb.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nb.xlf')], 'nl' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nl.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nl.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nl.xlf')], 'nn' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nn.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nn.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nn.xlf')], 'no' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.no.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.no.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.no.xlf')], 'pl' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pl.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pl.xlf')], 'pt' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt.xlf')], 'pt_BR' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt_BR.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt_BR.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_BR.xlf')], 'ro' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ro.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ro.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ro.xlf')], 'ru' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ru.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ru.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ru.xlf')], 'sk' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sk.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sk.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sk.xlf')], 'sl' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sl.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sl.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sl.xlf')], 'sq' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sq.xlf')], 'sr_Cyrl' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Cyrl.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Cyrl.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Cyrl.xlf')], 'sr_Latn' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Latn.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Latn.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Latn.xlf')], 'sv' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sv.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sv.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sv.xlf')], 'th' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.th.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.th.xlf')], 'tl' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tl.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.tl.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.tl.xlf')], 'tr' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tr.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.tr.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.tr.xlf')], 'uk' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.uk.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.uk.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.uk.xlf')], 'vi' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.vi.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.vi.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.vi.xlf')], 'zh_CN' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_CN.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.zh_CN.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.zh_CN.xlf')], 'zh_TW' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_TW.xlf')], 'pt_PT' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_PT.xlf')]]);
    }

    /**
     * Gets the public 'cache.app' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\FilesystemAdapter
     */
    protected function getCache_AppService()
    {
        $this->services['cache.app'] = $instance = new \Symfony\Component\Cache\Adapter\FilesystemAdapter('RYCKEa5TLu', 0, ($this->targetDir.''.'/pools'), ($this->privates['cache.default_marshaller'] ?? ($this->privates['cache.default_marshaller'] = new \Symfony\Component\Cache\Marshaller\DefaultMarshaller(NULL))));

        $instance->setLogger(($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));

        return $instance;
    }

    /**
     * Gets the public 'cache.app_clearer' shared service.
     *
     * @return \Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer
     */
    protected function getCache_AppClearerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheClearer/CacheClearerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheClearer/Psr6CacheClearer.php';

        return $this->services['cache.app_clearer'] = new \Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer(['cache.app' => ($this->services['cache.app'] ?? $this->getCache_AppService()), 'doctrine.result_cache_pool' => ($this->privates['doctrine.result_cache_pool'] ?? $this->getDoctrine_ResultCachePoolService())]);
    }

    /**
     * Gets the public 'cache.global_clearer' shared service.
     *
     * @return \Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer
     */
    protected function getCache_GlobalClearerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheClearer/CacheClearerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheClearer/Psr6CacheClearer.php';

        return $this->services['cache.global_clearer'] = new \Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer(['cache.app' => ($this->services['cache.app'] ?? $this->getCache_AppService()), 'cache.system' => ($this->services['cache.system'] ?? $this->getCache_SystemService()), 'cache.annotations' => ($this->privates['cache.annotations'] ?? $this->getCache_AnnotationsService()), 'doctrine.result_cache_pool' => ($this->privates['doctrine.result_cache_pool'] ?? $this->getDoctrine_ResultCachePoolService()), 'doctrine.system_cache_pool' => ($this->privates['doctrine.system_cache_pool'] ?? $this->getDoctrine_SystemCachePoolService()), 'cache.security_expression_language' => ($this->privates['cache.security_expression_language'] ?? $this->getCache_SecurityExpressionLanguageService())]);
    }

    /**
     * Gets the public 'cache.system' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getCache_SystemService()
    {
        return $this->services['cache.system'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('pT17bGofBC', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /**
     * Gets the public 'cache.system_clearer' shared service.
     *
     * @return \Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer
     */
    protected function getCache_SystemClearerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheClearer/CacheClearerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheClearer/Psr6CacheClearer.php';

        return $this->services['cache.system_clearer'] = new \Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer(['cache.system' => ($this->services['cache.system'] ?? $this->getCache_SystemService()), 'cache.annotations' => ($this->privates['cache.annotations'] ?? $this->getCache_AnnotationsService()), 'doctrine.system_cache_pool' => ($this->privates['doctrine.system_cache_pool'] ?? $this->getDoctrine_SystemCachePoolService()), 'cache.security_expression_language' => ($this->privates['cache.security_expression_language'] ?? $this->getCache_SecurityExpressionLanguageService())]);
    }

    /**
     * Gets the public 'cache_clearer' shared service.
     *
     * @return \Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer
     */
    protected function getCacheClearer3Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheClearer/CacheClearerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheClearer/ChainCacheClearer.php';

        return $this->services['cache_clearer'] = new \Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer(new RewindableGenerator(function () {
            yield 0 => ($this->services['cache.system_clearer'] ?? $this->getCache_SystemClearerService());
        }, 1));
    }

    /**
     * Gets the public 'cache_warmer' shared service.
     *
     * @return \Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate
     */
    protected function getCacheWarmerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheWarmer/CacheWarmerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheWarmer/CacheWarmerAggregate.php';

        return $this->services['cache_warmer'] = new \Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate(new RewindableGenerator(function () {
            yield 0 => ($this->privates['validator.mapping.cache_warmer'] ?? $this->getValidator_Mapping_CacheWarmerService());
            yield 1 => ($this->privates['translation.warmer'] ?? $this->getTranslation_WarmerService());
            yield 2 => ($this->privates['router.cache_warmer'] ?? $this->getRouter_CacheWarmerService());
            yield 3 => ($this->privates['annotations.cache_warmer'] ?? $this->getAnnotations_CacheWarmerService());
            yield 4 => ($this->privates['twig.template_cache_warmer'] ?? $this->getTwig_TemplateCacheWarmerService());
            yield 5 => ($this->privates['doctrine.orm.proxy_cache_warmer'] ?? $this->getDoctrine_Orm_ProxyCacheWarmerService());
        }, 6), true, ($this->targetDir.''.'/KernelProdDebugContainerDeprecations.log'));
    }

    /**
     * Gets the public 'console.command.public_alias.Zikula\Bundle\CoreBundle\Command\AssetsInstallCommand' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreBundle\Command\AssetsInstallCommand
     */
    protected function getAssetsInstallCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Command/AssetsInstallCommand.php';

        return $this->services['console.command.public_alias.Zikula\\Bundle\\CoreBundle\\Command\\AssetsInstallCommand'] = new \Zikula\Bundle\CoreBundle\Command\AssetsInstallCommand(($this->services['filesystem'] ?? ($this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem())), ($this->services['kernel'] ?? $this->get('kernel', 1)));
    }

    /**
     * Gets the public 'console.command_loader' shared service.
     *
     * @return \Symfony\Component\Console\CommandLoader\ContainerCommandLoader
     */
    protected function getConsole_CommandLoaderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/CommandLoader/CommandLoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/CommandLoader/ContainerCommandLoader.php';

        return $this->services['console.command_loader'] = new \Symfony\Component\Console\CommandLoader\ContainerCommandLoader(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'Translation\\Bundle\\Command\\DeleteObsoleteCommand' => ['services', 'Translation\\Bundle\\Command\\DeleteObsoleteCommand', 'getDeleteObsoleteCommandService', false],
            'Translation\\Bundle\\Command\\DownloadCommand' => ['services', 'Translation\\Bundle\\Command\\DownloadCommand', 'getDownloadCommandService', false],
            'Translation\\Bundle\\Command\\ExtractCommand' => ['services', 'Translation\\Bundle\\Command\\ExtractCommand', 'getExtractCommandService', false],
            'Translation\\Bundle\\Command\\StatusCommand' => ['services', 'Translation\\Bundle\\Command\\StatusCommand', 'getStatusCommandService', false],
            'Translation\\Bundle\\Command\\SyncCommand' => ['services', 'Translation\\Bundle\\Command\\SyncCommand', 'getSyncCommandService', false],
            'Zikula\\ExtensionsModule\\Command\\ZikulaExtensionInstallCommand' => ['privates', 'Zikula\\ExtensionsModule\\Command\\ZikulaExtensionInstallCommand', 'getZikulaExtensionInstallCommandService', false],
            'Zikula\\ExtensionsModule\\Command\\ZikulaExtensionStatusCommand' => ['privates', 'Zikula\\ExtensionsModule\\Command\\ZikulaExtensionStatusCommand', 'getZikulaExtensionStatusCommandService', false],
            'Zikula\\ExtensionsModule\\Command\\ZikulaExtensionUninstallCommand' => ['privates', 'Zikula\\ExtensionsModule\\Command\\ZikulaExtensionUninstallCommand', 'getZikulaExtensionUninstallCommandService', false],
            'Zikula\\ExtensionsModule\\Command\\ZikulaExtensionUpgradeCommand' => ['privates', 'Zikula\\ExtensionsModule\\Command\\ZikulaExtensionUpgradeCommand', 'getZikulaExtensionUpgradeCommandService', false],
            'bazinga.jstranslation.dump_command' => ['services', 'bazinga.jstranslation.dump_command', 'getBazinga_Jstranslation_DumpCommandService', false],
            'console.command.about' => ['privates', 'console.command.about', 'getConsole_Command_AboutService', false],
            'console.command.assets_install' => ['privates', 'console.command.assets_install', 'getConsole_Command_AssetsInstallService', false],
            'console.command.cache_clear' => ['privates', 'console.command.cache_clear', 'getConsole_Command_CacheClearService', false],
            'console.command.cache_pool_clear' => ['privates', 'console.command.cache_pool_clear', 'getConsole_Command_CachePoolClearService', false],
            'console.command.cache_pool_delete' => ['privates', 'console.command.cache_pool_delete', 'getConsole_Command_CachePoolDeleteService', false],
            'console.command.cache_pool_list' => ['privates', 'console.command.cache_pool_list', 'getConsole_Command_CachePoolListService', false],
            'console.command.cache_pool_prune' => ['privates', 'console.command.cache_pool_prune', 'getConsole_Command_CachePoolPruneService', false],
            'console.command.cache_warmup' => ['privates', 'console.command.cache_warmup', 'getConsole_Command_CacheWarmupService', false],
            'console.command.config_debug' => ['privates', 'console.command.config_debug', 'getConsole_Command_ConfigDebugService', false],
            'console.command.config_dump_reference' => ['privates', 'console.command.config_dump_reference', 'getConsole_Command_ConfigDumpReferenceService', false],
            'console.command.container_debug' => ['privates', 'console.command.container_debug', 'getConsole_Command_ContainerDebugService', false],
            'console.command.container_lint' => ['privates', 'console.command.container_lint', 'getConsole_Command_ContainerLintService', false],
            'console.command.debug_autowiring' => ['privates', 'console.command.debug_autowiring', 'getConsole_Command_DebugAutowiringService', false],
            'console.command.event_dispatcher_debug' => ['privates', 'console.command.event_dispatcher_debug', 'getConsole_Command_EventDispatcherDebugService', false],
            'console.command.form_debug' => ['privates', 'console.command.form_debug', 'getConsole_Command_FormDebugService', false],
            'console.command.router_debug' => ['privates', 'console.command.router_debug', 'getConsole_Command_RouterDebugService', false],
            'console.command.router_match' => ['privates', 'console.command.router_match', 'getConsole_Command_RouterMatchService', false],
            'console.command.secrets_decrypt_to_local' => ['privates', 'console.command.secrets_decrypt_to_local', 'getConsole_Command_SecretsDecryptToLocalService', false],
            'console.command.secrets_encrypt_from_local' => ['privates', 'console.command.secrets_encrypt_from_local', 'getConsole_Command_SecretsEncryptFromLocalService', false],
            'console.command.secrets_generate_key' => ['privates', 'console.command.secrets_generate_key', 'getConsole_Command_SecretsGenerateKeyService', false],
            'console.command.secrets_list' => ['privates', 'console.command.secrets_list', 'getConsole_Command_SecretsListService', false],
            'console.command.secrets_remove' => ['privates', 'console.command.secrets_remove', 'getConsole_Command_SecretsRemoveService', false],
            'console.command.secrets_set' => ['privates', 'console.command.secrets_set', 'getConsole_Command_SecretsSetService', false],
            'console.command.translation_debug' => ['privates', 'console.command.translation_debug', 'getConsole_Command_TranslationDebugService', false],
            'console.command.translation_update' => ['privates', 'console.command.translation_update', 'getConsole_Command_TranslationUpdateService', false],
            'console.command.workflow_dump' => ['privates', 'console.command.workflow_dump', 'getConsole_Command_WorkflowDumpService', false],
            'console.command.xliff_lint' => ['privates', 'console.command.xliff_lint', 'getConsole_Command_XliffLintService', false],
            'console.command.yaml_lint' => ['privates', 'console.command.yaml_lint', 'getConsole_Command_YamlLintService', false],
            'doctrine.cache_clear_metadata_command' => ['privates', 'doctrine.cache_clear_metadata_command', 'getDoctrine_CacheClearMetadataCommandService', false],
            'doctrine.cache_clear_query_cache_command' => ['privates', 'doctrine.cache_clear_query_cache_command', 'getDoctrine_CacheClearQueryCacheCommandService', false],
            'doctrine.cache_clear_result_command' => ['privates', 'doctrine.cache_clear_result_command', 'getDoctrine_CacheClearResultCommandService', false],
            'doctrine.cache_collection_region_command' => ['privates', 'doctrine.cache_collection_region_command', 'getDoctrine_CacheCollectionRegionCommandService', false],
            'doctrine.clear_entity_region_command' => ['privates', 'doctrine.clear_entity_region_command', 'getDoctrine_ClearEntityRegionCommandService', false],
            'doctrine.clear_query_region_command' => ['privates', 'doctrine.clear_query_region_command', 'getDoctrine_ClearQueryRegionCommandService', false],
            'doctrine.database_create_command' => ['privates', 'doctrine.database_create_command', 'getDoctrine_DatabaseCreateCommandService', false],
            'doctrine.database_drop_command' => ['privates', 'doctrine.database_drop_command', 'getDoctrine_DatabaseDropCommandService', false],
            'doctrine.database_import_command' => ['privates', 'doctrine.database_import_command', 'getDoctrine_DatabaseImportCommandService', false],
            'doctrine.ensure_production_settings_command' => ['privates', 'doctrine.ensure_production_settings_command', 'getDoctrine_EnsureProductionSettingsCommandService', false],
            'doctrine.mapping_convert_command' => ['privates', 'doctrine.mapping_convert_command', 'getDoctrine_MappingConvertCommandService', false],
            'doctrine.mapping_import_command' => ['privates', 'doctrine.mapping_import_command', 'getDoctrine_MappingImportCommandService', false],
            'doctrine.mapping_info_command' => ['privates', 'doctrine.mapping_info_command', 'getDoctrine_MappingInfoCommandService', false],
            'doctrine.query_dql_command' => ['privates', 'doctrine.query_dql_command', 'getDoctrine_QueryDqlCommandService', false],
            'doctrine.query_sql_command' => ['privates', 'doctrine.query_sql_command', 'getDoctrine_QuerySqlCommandService', false],
            'doctrine.schema_create_command' => ['privates', 'doctrine.schema_create_command', 'getDoctrine_SchemaCreateCommandService', false],
            'doctrine.schema_drop_command' => ['privates', 'doctrine.schema_drop_command', 'getDoctrine_SchemaDropCommandService', false],
            'doctrine.schema_update_command' => ['privates', 'doctrine.schema_update_command', 'getDoctrine_SchemaUpdateCommandService', false],
            'doctrine.schema_validate_command' => ['privates', 'doctrine.schema_validate_command', 'getDoctrine_SchemaValidateCommandService', false],
            'fos_js_routing.dump_command' => ['privates', 'fos_js_routing.dump_command', 'getFosJsRouting_DumpCommandService', false],
            'fos_js_routing.router_debug_exposed_command' => ['privates', 'fos_js_routing.router_debug_exposed_command', 'getFosJsRouting_RouterDebugExposedCommandService', false],
            'liip_imagine.command.cache_remove' => ['privates', 'liip_imagine.command.cache_remove', 'getLiipImagine_Command_CacheRemoveService', false],
            'liip_imagine.command.cache_resolve' => ['privates', 'liip_imagine.command.cache_resolve', 'getLiipImagine_Command_CacheResolveService', false],
            'security.command.user_password_encoder' => ['privates', 'security.command.user_password_encoder', 'getSecurity_Command_UserPasswordEncoderService', false],
            'swiftmailer.command.debug' => ['privates', 'swiftmailer.command.debug', 'getSwiftmailer_Command_DebugService', false],
            'swiftmailer.command.new_email' => ['privates', 'swiftmailer.command.new_email', 'getSwiftmailer_Command_NewEmailService', false],
            'swiftmailer.command.send_email' => ['privates', 'swiftmailer.command.send_email', 'getSwiftmailer_Command_SendEmailService', false],
            'twig.command.debug' => ['privates', 'twig.command.debug', 'getTwig_Command_DebugService', false],
            'twig.command.lint' => ['privates', 'twig.command.lint', 'getTwig_Command_LintService', false],
        ], [
            'Translation\\Bundle\\Command\\DeleteObsoleteCommand' => 'Translation\\Bundle\\Command\\DeleteObsoleteCommand',
            'Translation\\Bundle\\Command\\DownloadCommand' => 'Translation\\Bundle\\Command\\DownloadCommand',
            'Translation\\Bundle\\Command\\ExtractCommand' => 'Translation\\Bundle\\Command\\ExtractCommand',
            'Translation\\Bundle\\Command\\StatusCommand' => 'Translation\\Bundle\\Command\\StatusCommand',
            'Translation\\Bundle\\Command\\SyncCommand' => 'Translation\\Bundle\\Command\\SyncCommand',
            'Zikula\\ExtensionsModule\\Command\\ZikulaExtensionInstallCommand' => 'Zikula\\ExtensionsModule\\Command\\ZikulaExtensionInstallCommand',
            'Zikula\\ExtensionsModule\\Command\\ZikulaExtensionStatusCommand' => 'Zikula\\ExtensionsModule\\Command\\ZikulaExtensionStatusCommand',
            'Zikula\\ExtensionsModule\\Command\\ZikulaExtensionUninstallCommand' => 'Zikula\\ExtensionsModule\\Command\\ZikulaExtensionUninstallCommand',
            'Zikula\\ExtensionsModule\\Command\\ZikulaExtensionUpgradeCommand' => 'Zikula\\ExtensionsModule\\Command\\ZikulaExtensionUpgradeCommand',
            'bazinga.jstranslation.dump_command' => 'Bazinga\\Bundle\\JsTranslationBundle\\Command\\DumpCommand',
            'console.command.about' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\AboutCommand',
            'console.command.assets_install' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\AssetsInstallCommand',
            'console.command.cache_clear' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\CacheClearCommand',
            'console.command.cache_pool_clear' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\CachePoolClearCommand',
            'console.command.cache_pool_delete' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\CachePoolDeleteCommand',
            'console.command.cache_pool_list' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\CachePoolListCommand',
            'console.command.cache_pool_prune' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\CachePoolPruneCommand',
            'console.command.cache_warmup' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\CacheWarmupCommand',
            'console.command.config_debug' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\ConfigDebugCommand',
            'console.command.config_dump_reference' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\ConfigDumpReferenceCommand',
            'console.command.container_debug' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\ContainerDebugCommand',
            'console.command.container_lint' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\ContainerLintCommand',
            'console.command.debug_autowiring' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\DebugAutowiringCommand',
            'console.command.event_dispatcher_debug' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\EventDispatcherDebugCommand',
            'console.command.form_debug' => 'Symfony\\Component\\Form\\Command\\DebugCommand',
            'console.command.router_debug' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\RouterDebugCommand',
            'console.command.router_match' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\RouterMatchCommand',
            'console.command.secrets_decrypt_to_local' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\SecretsDecryptToLocalCommand',
            'console.command.secrets_encrypt_from_local' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\SecretsEncryptFromLocalCommand',
            'console.command.secrets_generate_key' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\SecretsGenerateKeysCommand',
            'console.command.secrets_list' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\SecretsListCommand',
            'console.command.secrets_remove' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\SecretsRemoveCommand',
            'console.command.secrets_set' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\SecretsSetCommand',
            'console.command.translation_debug' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\TranslationDebugCommand',
            'console.command.translation_update' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\TranslationUpdateCommand',
            'console.command.workflow_dump' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\WorkflowDumpCommand',
            'console.command.xliff_lint' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\XliffLintCommand',
            'console.command.yaml_lint' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\YamlLintCommand',
            'doctrine.cache_clear_metadata_command' => 'Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\ClearMetadataCacheDoctrineCommand',
            'doctrine.cache_clear_query_cache_command' => 'Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\ClearQueryCacheDoctrineCommand',
            'doctrine.cache_clear_result_command' => 'Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\ClearResultCacheDoctrineCommand',
            'doctrine.cache_collection_region_command' => 'Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\CollectionRegionDoctrineCommand',
            'doctrine.clear_entity_region_command' => 'Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\EntityRegionCacheDoctrineCommand',
            'doctrine.clear_query_region_command' => 'Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\QueryRegionCacheDoctrineCommand',
            'doctrine.database_create_command' => 'Doctrine\\Bundle\\DoctrineBundle\\Command\\CreateDatabaseDoctrineCommand',
            'doctrine.database_drop_command' => 'Doctrine\\Bundle\\DoctrineBundle\\Command\\DropDatabaseDoctrineCommand',
            'doctrine.database_import_command' => 'Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\ImportDoctrineCommand',
            'doctrine.ensure_production_settings_command' => 'Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\EnsureProductionSettingsDoctrineCommand',
            'doctrine.mapping_convert_command' => 'Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\ConvertMappingDoctrineCommand',
            'doctrine.mapping_import_command' => 'Doctrine\\Bundle\\DoctrineBundle\\Command\\ImportMappingDoctrineCommand',
            'doctrine.mapping_info_command' => 'Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\InfoDoctrineCommand',
            'doctrine.query_dql_command' => 'Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\RunDqlDoctrineCommand',
            'doctrine.query_sql_command' => 'Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\RunSqlDoctrineCommand',
            'doctrine.schema_create_command' => 'Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\CreateSchemaDoctrineCommand',
            'doctrine.schema_drop_command' => 'Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\DropSchemaDoctrineCommand',
            'doctrine.schema_update_command' => 'Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\UpdateSchemaDoctrineCommand',
            'doctrine.schema_validate_command' => 'Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\ValidateSchemaCommand',
            'fos_js_routing.dump_command' => 'FOS\\JsRoutingBundle\\Command\\DumpCommand',
            'fos_js_routing.router_debug_exposed_command' => 'FOS\\JsRoutingBundle\\Command\\RouterDebugExposedCommand',
            'liip_imagine.command.cache_remove' => 'Liip\\ImagineBundle\\Command\\RemoveCacheCommand',
            'liip_imagine.command.cache_resolve' => 'Liip\\ImagineBundle\\Command\\ResolveCacheCommand',
            'security.command.user_password_encoder' => 'Symfony\\Bundle\\SecurityBundle\\Command\\UserPasswordEncoderCommand',
            'swiftmailer.command.debug' => 'Symfony\\Bundle\\SwiftmailerBundle\\Command\\DebugCommand',
            'swiftmailer.command.new_email' => 'Symfony\\Bundle\\SwiftmailerBundle\\Command\\NewEmailCommand',
            'swiftmailer.command.send_email' => 'Symfony\\Bundle\\SwiftmailerBundle\\Command\\SendEmailCommand',
            'twig.command.debug' => 'Symfony\\Bridge\\Twig\\Command\\DebugCommand',
            'twig.command.lint' => 'Symfony\\Bundle\\TwigBundle\\Command\\LintCommand',
        ]), ['about' => 'console.command.about', 'assets:install' => 'console.command.assets_install', 'cache:clear' => 'console.command.cache_clear', 'cache:pool:clear' => 'console.command.cache_pool_clear', 'cache:pool:prune' => 'console.command.cache_pool_prune', 'cache:pool:delete' => 'console.command.cache_pool_delete', 'cache:pool:list' => 'console.command.cache_pool_list', 'cache:warmup' => 'console.command.cache_warmup', 'debug:config' => 'console.command.config_debug', 'config:dump-reference' => 'console.command.config_dump_reference', 'debug:container' => 'console.command.container_debug', 'lint:container' => 'console.command.container_lint', 'debug:autowiring' => 'console.command.debug_autowiring', 'debug:event-dispatcher' => 'console.command.event_dispatcher_debug', 'debug:router' => 'console.command.router_debug', 'router:match' => 'console.command.router_match', 'debug:translation' => 'console.command.translation_debug', 'translation:update' => 'console.command.translation_update', 'workflow:dump' => 'console.command.workflow_dump', 'lint:xliff' => 'console.command.xliff_lint', 'lint:yaml' => 'console.command.yaml_lint', 'debug:form' => 'console.command.form_debug', 'secrets:set' => 'console.command.secrets_set', 'secrets:remove' => 'console.command.secrets_remove', 'secrets:generate-keys' => 'console.command.secrets_generate_key', 'secrets:list' => 'console.command.secrets_list', 'secrets:decrypt-to-local' => 'console.command.secrets_decrypt_to_local', 'secrets:encrypt-from-local' => 'console.command.secrets_encrypt_from_local', 'security:encode-password' => 'security.command.user_password_encoder', 'debug:twig' => 'twig.command.debug', 'lint:twig' => 'twig.command.lint', 'debug:swiftmailer' => 'swiftmailer.command.debug', 'swiftmailer:email:send' => 'swiftmailer.command.new_email', 'swiftmailer:spool:send' => 'swiftmailer.command.send_email', 'doctrine:database:create' => 'doctrine.database_create_command', 'doctrine:database:drop' => 'doctrine.database_drop_command', 'doctrine:database:import' => 'doctrine.database_import_command', 'doctrine:query:sql' => 'doctrine.query_sql_command', 'doctrine:cache:clear-metadata' => 'doctrine.cache_clear_metadata_command', 'doctrine:cache:clear-query' => 'doctrine.cache_clear_query_cache_command', 'doctrine:cache:clear-result' => 'doctrine.cache_clear_result_command', 'doctrine:cache:clear-collection-region' => 'doctrine.cache_collection_region_command', 'doctrine:mapping:convert' => 'doctrine.mapping_convert_command', 'doctrine:schema:create' => 'doctrine.schema_create_command', 'doctrine:schema:drop' => 'doctrine.schema_drop_command', 'doctrine:ensure-production-settings' => 'doctrine.ensure_production_settings_command', 'doctrine:cache:clear-entity-region' => 'doctrine.clear_entity_region_command', 'doctrine:mapping:info' => 'doctrine.mapping_info_command', 'doctrine:cache:clear-query-region' => 'doctrine.clear_query_region_command', 'doctrine:query:dql' => 'doctrine.query_dql_command', 'doctrine:schema:update' => 'doctrine.schema_update_command', 'doctrine:schema:validate' => 'doctrine.schema_validate_command', 'doctrine:mapping:import' => 'doctrine.mapping_import_command', 'fos:js-routing:dump' => 'fos_js_routing.dump_command', 'fos:js-routing:debug' => 'fos_js_routing.router_debug_exposed_command', 'liip:imagine:cache:remove' => 'liip_imagine.command.cache_remove', 'liip:imagine:cache:resolve' => 'liip_imagine.command.cache_resolve', 'translation:delete-obsolete' => 'Translation\\Bundle\\Command\\DeleteObsoleteCommand', 'translation:download' => 'Translation\\Bundle\\Command\\DownloadCommand', 'translation:extract' => 'Translation\\Bundle\\Command\\ExtractCommand', 'translation:status' => 'Translation\\Bundle\\Command\\StatusCommand', 'translation:sync' => 'Translation\\Bundle\\Command\\SyncCommand', 'bazinga:js-translation:dump' => 'bazinga.jstranslation.dump_command', 'zikula:extension:install' => 'Zikula\\ExtensionsModule\\Command\\ZikulaExtensionInstallCommand', 'zikula:extension:status' => 'Zikula\\ExtensionsModule\\Command\\ZikulaExtensionStatusCommand', 'zikula:extension:uninstall' => 'Zikula\\ExtensionsModule\\Command\\ZikulaExtensionUninstallCommand', 'zikula:extension:upgrade' => 'Zikula\\ExtensionsModule\\Command\\ZikulaExtensionUpgradeCommand']);
    }

    /**
     * Gets the public 'container.env_var_processors_locator' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function getContainer_EnvVarProcessorsLocatorService()
    {
        return $this->services['container.env_var_processors_locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'base64' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'bool' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'const' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'csv' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'default' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'file' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'float' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'int' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'json' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'key' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'query_string' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'require' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'resolve' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'string' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'trim' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'url' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
        ], [
            'base64' => '?',
            'bool' => '?',
            'const' => '?',
            'csv' => '?',
            'default' => '?',
            'file' => '?',
            'float' => '?',
            'int' => '?',
            'json' => '?',
            'key' => '?',
            'query_string' => '?',
            'require' => '?',
            'resolve' => '?',
            'string' => '?',
            'trim' => '?',
            'url' => '?',
        ]);
    }

    /**
     * Gets the public 'doctrine' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Registry
     */
    protected function getDoctrineService()
    {
        return $this->services['doctrine'] = new \Doctrine\Bundle\DoctrineBundle\Registry($this, $this->parameters['doctrine.connections'], $this->parameters['doctrine.entity_managers'], 'default', 'default');
    }

    /**
     * Gets the public 'doctrine.dbal.default_connection' shared service.
     *
     * @return \Doctrine\DBAL\Connection
     */
    protected function getDoctrine_Dbal_DefaultConnectionService()
    {
        $a = new \Doctrine\DBAL\Configuration();

        $b = new \Doctrine\DBAL\Logging\LoggerChain();

        $c = new \Symfony\Bridge\Monolog\Logger('doctrine');
        $c->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        $b->addLogger(new \Symfony\Bridge\Doctrine\Logger\DbalLogger($c, ($this->privates['debug.stopwatch'] ?? ($this->privates['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true)))));
        $b->addLogger(new \Doctrine\DBAL\Logging\DebugStack());

        $a->setSQLLogger($b);
        $d = new \Symfony\Bridge\Doctrine\ContainerAwareEventManager(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'doctrine.orm.default_listeners.attach_entity_listeners' => ['privates', 'doctrine.orm.default_listeners.attach_entity_listeners', 'getDoctrine_Orm_DefaultListeners_AttachEntityListenersService', false],
        ], [
            'doctrine.orm.default_listeners.attach_entity_listeners' => '?',
        ]));

        $e = new \Gedmo\Timestampable\TimestampableListener();

        $f = ($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService());

        $e->setAnnotationReader($f);
        $g = new \Gedmo\Sluggable\SluggableListener();
        $g->setAnnotationReader($f);
        $h = new \Gedmo\Tree\TreeListener();
        $h->setAnnotationReader($f);
        $i = new \Gedmo\Sortable\SortableListener();
        $i->setAnnotationReader($f);
        $j = new \Gedmo\SoftDeleteable\SoftDeleteableListener();
        $j->setAnnotationReader($f);
        $k = new \Gedmo\ReferenceIntegrity\ReferenceIntegrityListener();
        $k->setAnnotationReader($f);

        $d->addEventSubscriber(($this->privates['stof_doctrine_extensions.listener.loggable'] ?? $this->getStofDoctrineExtensions_Listener_LoggableService()));
        $d->addEventSubscriber($e);
        $d->addEventSubscriber(($this->privates['stof_doctrine_extensions.listener.blameable'] ?? $this->getStofDoctrineExtensions_Listener_BlameableService()));
        $d->addEventSubscriber($g);
        $d->addEventSubscriber($h);
        $d->addEventSubscriber($i);
        $d->addEventSubscriber($j);
        $d->addEventSubscriber($k);
        $d->addEventSubscriber(new \Zikula\RoutesModule\Listener\EntityLifecycleListener($this, ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService())));
        $d->addEventSubscriber(($this->privates['stof_doctrine_extensions.listener.uploadable'] ?? $this->getStofDoctrineExtensions_Listener_UploadableService()));
        $d->addEventSubscriber(($this->privates['stof_doctrine_extensions.listener.translatable'] ?? $this->getStofDoctrineExtensions_Listener_TranslatableService()));
        $d->addEventListener([0 => 'loadClassMetadata'], 'doctrine.orm.default_listeners.attach_entity_listeners');

        return $this->services['doctrine.dbal.default_connection'] = (new \Doctrine\Bundle\DoctrineBundle\ConnectionFactory($this->parameters['doctrine.dbal.connection_factory.types']))->createConnection(['driver' => 'pdo_mysql', 'host' => 'localhost', 'port' => NULL, 'dbname' => NULL, 'user' => NULL, 'password' => NULL, 'charset' => 'UTF8', 'path' => NULL, 'driverOptions' => [], 'serverVersion' => '5.7', 'defaultTableOptions' => []], $a, $d, []);
    }

    /**
     * Gets the public 'doctrine.orm.default_entity_manager' shared service.
     *
     * @return \Doctrine\ORM\EntityManager
     */
    protected function getDoctrine_Orm_DefaultEntityManagerService($lazyLoad = true)
    {
        $a = new \Doctrine\ORM\Configuration();

        $b = new \Symfony\Component\Cache\DoctrineProvider(($this->privates['doctrine.system_cache_pool'] ?? $this->getDoctrine_SystemCachePoolService()));
        $c = new \Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain();

        $d = ($this->privates['doctrine.orm.default_annotation_metadata_driver'] ?? $this->getDoctrine_Orm_DefaultAnnotationMetadataDriverService());

        $c->addDriver($d, 'Zikula\\Bundle\\HookBundle\\Dispatcher\\Storage\\Doctrine\\Entity');
        $c->addDriver($d, 'Gedmo\\Translatable\\Entity');
        $c->addDriver($d, 'Gedmo\\Translator\\Entity');
        $c->addDriver($d, 'Gedmo\\Loggable\\Entity');
        $c->addDriver($d, 'Gedmo\\Tree\\Entity');
        $c->addDriver($d, 'Zikula\\AdminModule\\Entity');
        $c->addDriver($d, 'Zikula\\BlocksModule\\Entity');
        $c->addDriver($d, 'Zikula\\CategoriesModule\\Entity');
        $c->addDriver($d, 'Zikula\\ExtensionsModule\\Entity');
        $c->addDriver($d, 'Zikula\\GroupsModule\\Entity');
        $c->addDriver($d, 'Zikula\\MenuModule\\Entity');
        $c->addDriver($d, 'Zikula\\PermissionsModule\\Entity');
        $c->addDriver($d, 'Zikula\\RoutesModule\\Entity');
        $c->addDriver($d, 'Zikula\\SearchModule\\Entity');
        $c->addDriver($d, 'Zikula\\SecurityCenterModule\\Entity');
        $c->addDriver($d, 'Zikula\\ThemeModule\\Entity');
        $c->addDriver($d, 'Zikula\\UsersModule\\Entity');
        $c->addDriver($d, 'Zikula\\ZAuthModule\\Entity');

        $a->setEntityNamespaces(['ZikulaHookStorage' => 'Zikula\\Bundle\\HookBundle\\Dispatcher\\Storage\\Doctrine\\Entity', 'GedmoTranslatable' => 'Gedmo\\Translatable\\Entity', 'GedmoTranslator' => 'Gedmo\\Translator\\Entity', 'GedmoLoggable' => 'Gedmo\\Loggable\\Entity', 'GedmoTree' => 'Gedmo\\Tree\\Entity', 'ZikulaAdminModule' => 'Zikula\\AdminModule\\Entity', 'ZikulaBlocksModule' => 'Zikula\\BlocksModule\\Entity', 'ZikulaCategoriesModule' => 'Zikula\\CategoriesModule\\Entity', 'ZikulaExtensionsModule' => 'Zikula\\ExtensionsModule\\Entity', 'ZikulaGroupsModule' => 'Zikula\\GroupsModule\\Entity', 'ZikulaMenuModule' => 'Zikula\\MenuModule\\Entity', 'ZikulaPermissionsModule' => 'Zikula\\PermissionsModule\\Entity', 'ZikulaRoutesModule' => 'Zikula\\RoutesModule\\Entity', 'ZikulaSearchModule' => 'Zikula\\SearchModule\\Entity', 'ZikulaSecurityCenterModule' => 'Zikula\\SecurityCenterModule\\Entity', 'ZikulaThemeModule' => 'Zikula\\ThemeModule\\Entity', 'ZikulaUsersModule' => 'Zikula\\UsersModule\\Entity', 'ZikulaZAuthModule' => 'Zikula\\ZAuthModule\\Entity']);
        $a->setMetadataCacheImpl($b);
        $a->setQueryCacheImpl($b);
        $a->setResultCacheImpl(new \Symfony\Component\Cache\DoctrineProvider(($this->privates['doctrine.result_cache_pool'] ?? $this->getDoctrine_ResultCachePoolService())));
        $a->setMetadataDriverImpl($c);
        $a->setProxyDir(($this->targetDir.''.'/doctrine/orm/DoctrineProxy'));
        $a->setProxyNamespace('DoctrineProxy');
        $a->setAutoGenerateProxyClasses(false);
        $a->setClassMetadataFactoryName('Doctrine\\ORM\\Mapping\\ClassMetadataFactory');
        $a->setDefaultRepositoryClassName('Doctrine\\ORM\\EntityRepository');
        $a->setNamingStrategy(new \Doctrine\ORM\Mapping\DefaultNamingStrategy());
        $a->setQuoteStrategy(new \Doctrine\ORM\Mapping\DefaultQuoteStrategy());
        $a->setEntityListenerResolver(new \Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver($this));
        $a->setRepositoryFactory(new \Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'Zikula\\AdminModule\\Entity\\Repository\\AdminCategoryRepository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminCategoryRepository', 'getAdminCategoryRepositoryService', false],
            'Zikula\\AdminModule\\Entity\\Repository\\AdminModuleRepository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminModuleRepository', 'getAdminModuleRepositoryService', false],
            'Zikula\\BlocksModule\\Entity\\Repository\\BlockPositionRepository' => ['privates', 'Zikula\\BlocksModule\\Entity\\Repository\\BlockPositionRepository', 'getBlockPositionRepositoryService', false],
            'Zikula\\BlocksModule\\Entity\\Repository\\BlockRepository' => ['privates', 'Zikula\\BlocksModule\\Entity\\Repository\\BlockRepository', 'getBlockRepositoryService', false],
            'Zikula\\Bundle\\HookBundle\\Dispatcher\\Storage\\Doctrine\\Entity\\Repository\\HookBindingRepository' => ['privates', 'Zikula\\Bundle\\HookBundle\\Dispatcher\\Storage\\Doctrine\\Entity\\Repository\\HookBindingRepository', 'getHookBindingRepositoryService', false],
            'Zikula\\Bundle\\HookBundle\\Dispatcher\\Storage\\Doctrine\\Entity\\Repository\\HookRuntimeRepository' => ['privates', 'Zikula\\Bundle\\HookBundle\\Dispatcher\\Storage\\Doctrine\\Entity\\Repository\\HookRuntimeRepository', 'getHookRuntimeRepositoryService', false],
            'Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRegistryRepository' => ['services', 'Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRegistryRepository', 'getCategoryRegistryRepositoryService', false],
            'Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRepository' => ['services', 'Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRepository', 'getCategoryRepositoryService', false],
            'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionDependencyRepository' => ['privates', 'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionDependencyRepository', 'getExtensionDependencyRepositoryService', false],
            'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository' => ['services', 'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository', 'getExtensionRepositoryService', false],
            'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionVarRepository' => ['privates', 'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionVarRepository', 'getExtensionVarRepositoryService', false],
            'Zikula\\GroupsModule\\Entity\\Repository\\GroupApplicationRepository' => ['privates', 'Zikula\\GroupsModule\\Entity\\Repository\\GroupApplicationRepository', 'getGroupApplicationRepositoryService', false],
            'Zikula\\GroupsModule\\Entity\\Repository\\GroupRepository' => ['services', 'Zikula\\GroupsModule\\Entity\\Repository\\GroupRepository', 'getGroupRepositoryService', false],
            'Zikula\\MenuModule\\Entity\\Repository\\MenuItemRepository' => ['privates', 'Zikula\\MenuModule\\Entity\\Repository\\MenuItemRepository', 'getMenuItemRepositoryService', false],
            'Zikula\\PermissionsModule\\Entity\\Repository\\PermissionRepository' => ['privates', 'Zikula\\PermissionsModule\\Entity\\Repository\\PermissionRepository', 'getPermissionRepositoryService', false],
            'Zikula\\SearchModule\\Entity\\Repository\\SearchResultRepository' => ['privates', 'Zikula\\SearchModule\\Entity\\Repository\\SearchResultRepository', 'getSearchResultRepositoryService', false],
            'Zikula\\SearchModule\\Entity\\Repository\\SearchStatRepository' => ['privates', 'Zikula\\SearchModule\\Entity\\Repository\\SearchStatRepository', 'getSearchStatRepositoryService', false],
            'Zikula\\SecurityCenterModule\\Entity\\Repository\\IntrusionRepository' => ['privates', 'Zikula\\SecurityCenterModule\\Entity\\Repository\\IntrusionRepository', 'getIntrusionRepositoryService', false],
            'Zikula\\ThemeModule\\Entity\\Repository\\ThemeEntityRepository' => ['services', 'Zikula\\ThemeModule\\Entity\\Repository\\ThemeEntityRepository', 'getThemeEntityRepositoryService', false],
            'Zikula\\UsersModule\\Entity\\Repository\\UserAttributeRepository' => ['privates', 'Zikula\\UsersModule\\Entity\\Repository\\UserAttributeRepository', 'getUserAttributeRepositoryService', false],
            'Zikula\\UsersModule\\Entity\\Repository\\UserRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
            'Zikula\\UsersModule\\Entity\\Repository\\UserSessionRepository' => ['privates', 'Zikula\\UsersModule\\Entity\\Repository\\UserSessionRepository', 'getUserSessionRepositoryService', false],
            'Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository' => ['privates', 'Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository', 'getAuthenticationMappingRepositoryService', false],
            'Zikula\\ZAuthModule\\Entity\\Repository\\UserVerificationRepository' => ['privates', 'Zikula\\ZAuthModule\\Entity\\Repository\\UserVerificationRepository', 'getUserVerificationRepositoryService', false],
        ], [
            'Zikula\\AdminModule\\Entity\\Repository\\AdminCategoryRepository' => '?',
            'Zikula\\AdminModule\\Entity\\Repository\\AdminModuleRepository' => '?',
            'Zikula\\BlocksModule\\Entity\\Repository\\BlockPositionRepository' => '?',
            'Zikula\\BlocksModule\\Entity\\Repository\\BlockRepository' => '?',
            'Zikula\\Bundle\\HookBundle\\Dispatcher\\Storage\\Doctrine\\Entity\\Repository\\HookBindingRepository' => '?',
            'Zikula\\Bundle\\HookBundle\\Dispatcher\\Storage\\Doctrine\\Entity\\Repository\\HookRuntimeRepository' => '?',
            'Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRegistryRepository' => '?',
            'Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRepository' => '?',
            'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionDependencyRepository' => '?',
            'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository' => '?',
            'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionVarRepository' => '?',
            'Zikula\\GroupsModule\\Entity\\Repository\\GroupApplicationRepository' => '?',
            'Zikula\\GroupsModule\\Entity\\Repository\\GroupRepository' => '?',
            'Zikula\\MenuModule\\Entity\\Repository\\MenuItemRepository' => '?',
            'Zikula\\PermissionsModule\\Entity\\Repository\\PermissionRepository' => '?',
            'Zikula\\SearchModule\\Entity\\Repository\\SearchResultRepository' => '?',
            'Zikula\\SearchModule\\Entity\\Repository\\SearchStatRepository' => '?',
            'Zikula\\SecurityCenterModule\\Entity\\Repository\\IntrusionRepository' => '?',
            'Zikula\\ThemeModule\\Entity\\Repository\\ThemeEntityRepository' => '?',
            'Zikula\\UsersModule\\Entity\\Repository\\UserAttributeRepository' => '?',
            'Zikula\\UsersModule\\Entity\\Repository\\UserRepository' => '?',
            'Zikula\\UsersModule\\Entity\\Repository\\UserSessionRepository' => '?',
            'Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository' => '?',
            'Zikula\\ZAuthModule\\Entity\\Repository\\UserVerificationRepository' => '?',
        ])));

        $this->services['doctrine.orm.default_entity_manager'] = $instance = \Doctrine\ORM\EntityManager::create(($this->services['doctrine.dbal.default_connection'] ?? $this->getDoctrine_Dbal_DefaultConnectionService()), $a);

        (new \Doctrine\Bundle\DoctrineBundle\ManagerConfigurator([], []))->configure($instance);

        return $instance;
    }

    /**
     * Gets the public 'error_controller' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ErrorController
     */
    protected function getErrorControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ErrorController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/ErrorHandler/ErrorRenderer/ErrorRendererInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/ErrorRenderer/TwigErrorRenderer.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/ErrorHandler/ErrorRenderer/HtmlErrorRenderer.php';

        $a = ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack()));

        return $this->services['error_controller'] = new \Symfony\Component\HttpKernel\Controller\ErrorController(($this->services['http_kernel'] ?? $this->getHttpKernelService()), 'error_controller', new \Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer(($this->services['twig'] ?? $this->getTwigService()), new \Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer(\Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer::isDebug($a, true), 'UTF-8', ($this->privates['debug.file_link_formatter'] ?? ($this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL))), \dirname(__DIR__, 4), \Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer::getAndCleanOutputBuffer($a), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService())), \Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer::isDebug($a, true)));
    }

    /**
     * Gets the public 'event_dispatcher' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher
     */
    protected function getEventDispatcherService()
    {
        $a = new \Symfony\Bridge\Monolog\Logger('event');
        $a->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        $this->services['event_dispatcher'] = $instance = new \Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher(new \Symfony\Component\EventDispatcher\EventDispatcher(), ($this->privates['debug.stopwatch'] ?? ($this->privates['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true))), $a, ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));

        $instance->addListener('console.command', [0 => function () {
            return ($this->services['matthias_symfony_console_form.handle_form_based_command_event_listener'] ?? $this->getMatthiasSymfonyConsoleForm_HandleFormBasedCommandEventListenerService());
        }, 1 => 'onConsoleCommand'], 200);
        $instance->addListener('console.command', [0 => function () {
            return ($this->services['matthias_symfony_console_form.set_input_definition_of_form_based_command_event_listener'] ?? $this->getMatthiasSymfonyConsoleForm_SetInputDefinitionOfFormBasedCommandEventListenerService());
        }, 1 => 'onConsoleCommand'], 2000);
        $instance->addListener('console.command', [0 => function () {
            return ($this->services['matthias_symfony_console.register_styles_event_listener'] ?? $this->getMatthiasSymfonyConsole_RegisterStylesEventListenerService());
        }, 1 => 'onConsoleCommand'], 1000);
        $instance->addListener('console.command', [0 => function () {
            return ($this->services['matthias_symfony_console_form.register_helpers_event_listener'] ?? $this->getMatthiasSymfonyConsoleForm_RegisterHelpersEventListenerService());
        }, 1 => 'onConsoleCommand'], 1000);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['response_listener'] ?? ($this->privates['response_listener'] = new \Symfony\Component\HttpKernel\EventListener\ResponseListener('UTF-8')));
        }, 1 => 'onKernelResponse'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['streamed_response_listener'] ?? ($this->privates['streamed_response_listener'] = new \Symfony\Component\HttpKernel\EventListener\StreamedResponseListener()));
        }, 1 => 'onKernelResponse'], -1024);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['locale_listener'] ?? $this->getLocaleListener2Service());
        }, 1 => 'setDefaultLocale'], 100);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['locale_listener'] ?? $this->getLocaleListener2Service());
        }, 1 => 'onKernelRequest'], 16);
        $instance->addListener('kernel.finish_request', [0 => function () {
            return ($this->privates['locale_listener'] ?? $this->getLocaleListener2Service());
        }, 1 => 'onKernelFinishRequest'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['validate_request_listener'] ?? ($this->privates['validate_request_listener'] = new \Symfony\Component\HttpKernel\EventListener\ValidateRequestListener()));
        }, 1 => 'onKernelRequest'], 256);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['disallow_search_engine_index_response_listener'] ?? ($this->privates['disallow_search_engine_index_response_listener'] = new \Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener()));
        }, 1 => 'onResponse'], -255);
        $instance->addListener('kernel.controller_arguments', [0 => function () {
            return ($this->privates['exception_listener'] ?? $this->getExceptionListener2Service());
        }, 1 => 'onControllerArguments'], 0);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['exception_listener'] ?? $this->getExceptionListener2Service());
        }, 1 => 'logKernelException'], 0);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['exception_listener'] ?? $this->getExceptionListener2Service());
        }, 1 => 'onKernelException'], -128);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['locale_aware_listener'] ?? $this->getLocaleAwareListenerService());
        }, 1 => 'onKernelRequest'], 15);
        $instance->addListener('kernel.finish_request', [0 => function () {
            return ($this->privates['locale_aware_listener'] ?? $this->getLocaleAwareListenerService());
        }, 1 => 'onKernelFinishRequest'], -15);
        $instance->addListener('console.error', [0 => function () {
            return ($this->privates['console.error_listener'] ?? $this->getConsole_ErrorListenerService());
        }, 1 => 'onConsoleError'], -128);
        $instance->addListener('console.terminate', [0 => function () {
            return ($this->privates['console.error_listener'] ?? $this->getConsole_ErrorListenerService());
        }, 1 => 'onConsoleTerminate'], -128);
        $instance->addListener('console.error', [0 => function () {
            return ($this->privates['console.suggest_missing_package_subscriber'] ?? ($this->privates['console.suggest_missing_package_subscriber'] = new \Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber()));
        }, 1 => 'onConsoleError'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['session_listener'] ?? $this->getSessionListenerService());
        }, 1 => 'onKernelRequest'], 128);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['session_listener'] ?? $this->getSessionListenerService());
        }, 1 => 'onKernelResponse'], -1000);
        $instance->addListener('kernel.finish_request', [0 => function () {
            return ($this->privates['session_listener'] ?? $this->getSessionListenerService());
        }, 1 => 'onFinishRequest'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['debug.debug_handlers_listener'] ?? $this->getDebug_DebugHandlersListenerService());
        }, 1 => 'configure'], 2048);
        $instance->addListener('console.command', [0 => function () {
            return ($this->privates['debug.debug_handlers_listener'] ?? $this->getDebug_DebugHandlersListenerService());
        }, 1 => 'configure'], 2048);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['router_listener'] ?? $this->getRouterListenerService());
        }, 1 => 'onKernelRequest'], 32);
        $instance->addListener('kernel.finish_request', [0 => function () {
            return ($this->privates['router_listener'] ?? $this->getRouterListenerService());
        }, 1 => 'onKernelFinishRequest'], 0);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['router_listener'] ?? $this->getRouterListenerService());
        }, 1 => 'onKernelException'], -64);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['security.rememberme.response_listener'] ?? ($this->privates['security.rememberme.response_listener'] = new \Symfony\Component\Security\Http\RememberMe\ResponseListener()));
        }, 1 => 'onKernelResponse'], 0);
        $instance->addListener('debug.security.authorization.vote', [0 => function () {
            return ($this->privates['debug.security.voter.vote_listener'] ?? $this->getDebug_Security_Voter_VoteListenerService());
        }, 1 => 'onVoterVote'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['debug.security.firewall'] ?? $this->getDebug_Security_FirewallService());
        }, 1 => 'configureLogoutUrlGenerator'], 8);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['debug.security.firewall'] ?? $this->getDebug_Security_FirewallService());
        }, 1 => 'onKernelRequest'], 8);
        $instance->addListener('kernel.finish_request', [0 => function () {
            return ($this->privates['debug.security.firewall'] ?? $this->getDebug_Security_FirewallService());
        }, 1 => 'onKernelFinishRequest'], 0);
        $instance->addListener('Symfony\\Component\\Mailer\\Event\\MessageEvent', [0 => function () {
            return ($this->privates['twig.mailer.message_listener'] ?? $this->getTwig_Mailer_MessageListenerService());
        }, 1 => 'onMessage'], 0);
        $instance->addListener('console.command', [0 => function () {
            return ($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService());
        }, 1 => 'onCommand'], 255);
        $instance->addListener('console.terminate', [0 => function () {
            return ($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService());
        }, 1 => 'onTerminate'], -255);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['swiftmailer.email_sender.listener'] ?? $this->getSwiftmailer_EmailSender_ListenerService());
        }, 1 => 'onException'], 0);
        $instance->addListener('kernel.terminate', [0 => function () {
            return ($this->privates['swiftmailer.email_sender.listener'] ?? $this->getSwiftmailer_EmailSender_ListenerService());
        }, 1 => 'onTerminate'], 0);
        $instance->addListener('console.error', [0 => function () {
            return ($this->privates['swiftmailer.email_sender.listener'] ?? $this->getSwiftmailer_EmailSender_ListenerService());
        }, 1 => 'onException'], 0);
        $instance->addListener('console.terminate', [0 => function () {
            return ($this->privates['swiftmailer.email_sender.listener'] ?? $this->getSwiftmailer_EmailSender_ListenerService());
        }, 1 => 'onTerminate'], 0);
        $instance->addListener('Symfony\\Component\\Messenger\\Event\\WorkerMessageHandledEvent', [0 => function () {
            return ($this->privates['doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager'] ?? $this->getDoctrine_Orm_Messenger_EventSubscriber_DoctrineClearEntityManagerService());
        }, 1 => 'onWorkerMessageHandled'], 0);
        $instance->addListener('Symfony\\Component\\Messenger\\Event\\WorkerMessageFailedEvent', [0 => function () {
            return ($this->privates['doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager'] ?? $this->getDoctrine_Orm_Messenger_EventSubscriber_DoctrineClearEntityManagerService());
        }, 1 => 'onWorkerMessageFailed'], 0);
        $instance->addListener('kernel.controller', [0 => function () {
            return ($this->privates['sensio_framework_extra.controller.listener'] ?? $this->getSensioFrameworkExtra_Controller_ListenerService());
        }, 1 => 'onKernelController'], 0);
        $instance->addListener('kernel.controller', [0 => function () {
            return ($this->privates['sensio_framework_extra.converter.listener'] ?? $this->getSensioFrameworkExtra_Converter_ListenerService());
        }, 1 => 'onKernelController'], 0);
        $instance->addListener('kernel.controller', [0 => function () {
            return ($this->privates['sensio_framework_extra.view.listener'] ?? $this->getSensioFrameworkExtra_View_ListenerService());
        }, 1 => 'onKernelController'], -128);
        $instance->addListener('kernel.view', [0 => function () {
            return ($this->privates['sensio_framework_extra.view.listener'] ?? $this->getSensioFrameworkExtra_View_ListenerService());
        }, 1 => 'onKernelView'], 0);
        $instance->addListener('kernel.controller', [0 => function () {
            return ($this->privates['sensio_framework_extra.cache.listener'] ?? ($this->privates['sensio_framework_extra.cache.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener()));
        }, 1 => 'onKernelController'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['sensio_framework_extra.cache.listener'] ?? ($this->privates['sensio_framework_extra.cache.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener()));
        }, 1 => 'onKernelResponse'], 0);
        $instance->addListener('kernel.controller_arguments', [0 => function () {
            return ($this->privates['sensio_framework_extra.security.listener'] ?? $this->getSensioFrameworkExtra_Security_ListenerService());
        }, 1 => 'onKernelControllerArguments'], 0);
        $instance->addListener('kernel.controller_arguments', [0 => function () {
            return ($this->privates['framework_extra_bundle.event.is_granted'] ?? $this->getFrameworkExtraBundle_Event_IsGrantedService());
        }, 1 => 'onKernelControllerArguments'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['stof_doctrine_extensions.event_listener.locale'] ?? $this->getStofDoctrineExtensions_EventListener_LocaleService());
        }, 1 => 'onKernelRequest'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['stof_doctrine_extensions.event_listener.blame'] ?? $this->getStofDoctrineExtensions_EventListener_BlameService());
        }, 1 => 'onKernelRequest'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['stof_doctrine_extensions.event_listener.logger'] ?? $this->getStofDoctrineExtensions_EventListener_LoggerService());
        }, 1 => 'onKernelRequest'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Zikula\\Bundle\\CoreBundle\\EventListener\\BlameListener'] ?? $this->getBlameListenerService());
        }, 1 => 'onKernelRequest'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['Zikula\\Bundle\\CoreBundle\\EventListener\\ClickjackProtectionListener'] ?? ($this->privates['Zikula\\Bundle\\CoreBundle\\EventListener\\ClickjackProtectionListener'] = new \Zikula\Bundle\CoreBundle\EventListener\ClickjackProtectionListener('SAMEORIGIN')));
        }, 1 => 'onKernelResponse'], -99);
        $instance->addListener('core.upgrade.pre.module', [0 => function () {
            return ($this->privates['Zikula\\Bundle\\CoreBundle\\EventListener\\Core3UpgradeListener'] ?? $this->getCore3UpgradeListener2Service());
        }, 1 => 'upgrade'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Zikula\\Bundle\\CoreBundle\\EventListener\\DoctrineListener'] ?? $this->getDoctrineListenerService());
        }, 1 => 'setDefaultDriver'], 100);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['Zikula\\Bundle\\CoreBundle\\EventListener\\ExceptionListener'] ?? $this->getExceptionListenerService());
        }, 1 => 'onKernelException'], 31);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Zikula\\Bundle\\CoreBundle\\EventListener\\OutputCompressionListener'] ?? $this->getOutputCompressionListenerService());
        }, 1 => 'onKernelRequest'], 1023);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Zikula\\Bundle\\CoreBundle\\EventListener\\SessionExpireListener'] ?? ($this->privates['Zikula\\Bundle\\CoreBundle\\EventListener\\SessionExpireListener'] = new \Zikula\Bundle\CoreBundle\EventListener\SessionExpireListener(false)));
        }, 1 => 'onKernelRequestSessionExpire'], 31);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Zikula\\Bundle\\CoreBundle\\EventListener\\SiteOffListener'] ?? $this->getSiteOffListenerService());
        }, 1 => 'onKernelRequestSiteOff'], 110);
        $instance->addListener('user.login.veto', [0 => function () {
            return ($this->privates['Zikula\\Bundle\\CoreBundle\\EventListener\\SiteOffVetoLoginListener'] ?? $this->getSiteOffVetoLoginListenerService());
        }, 1 => 'vetoNonAdminsOnSiteOff'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->services['Zikula\\Bundle\\CoreInstallerBundle\\EventListener\\InstallUpgradeCheckListener'] ?? ($this->services['Zikula\\Bundle\\CoreInstallerBundle\\EventListener\\InstallUpgradeCheckListener'] = new \Zikula\Bundle\CoreInstallerBundle\EventListener\InstallUpgradeCheckListener($this)));
        }, 1 => 'onKernelRequest'], 200);
        $instance->addListener('core.install.pre.module', [0 => function () {
            return ($this->privates['Zikula\\Bundle\\HookBundle\\Listener\\CoreInstallerListener'] ?? $this->getCoreInstallerListenerService());
        }, 1 => 'installHookBundle'], 0);
        $instance->addListener('core.upgrade.pre.module', [0 => function () {
            return ($this->privates['Zikula\\Bundle\\HookBundle\\Listener\\CoreInstallerListener'] ?? $this->getCoreInstallerListenerService());
        }, 1 => 'upgradeHookBundle'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Zikula\\Bundle\\HookBundle\\Listener\\HookListenerBuilderListener'] ?? $this->getHookListenerBuilderListenerService());
        }, 1 => 'addListeners'], 1000);
        $instance->addListener('Zikula\\MenuModule\\ExtensionMenu\\ExtensionMenuEvent', [0 => function () {
            return ($this->privates['Zikula\\Bundle\\HookBundle\\Listener\\HooksListener'] ?? $this->getHooksListenerService());
        }, 1 => 'addHookMenu'], 0);
        $instance->addListener('module.remove', [0 => function () {
            return ($this->privates['Zikula\\Bundle\\HookBundle\\Listener\\ModuleUninstallListener'] ?? $this->getModuleUninstallListenerService());
        }, 1 => 'removeHooks'], 0);
        $instance->addListener('core.upgrade.pre.module', [0 => function () {
            return ($this->privates['Zikula\\AdminModule\\Listener\\Core3UpgradeListener'] ?? $this->getCore3UpgradeListenerService());
        }, 1 => 'upgrade'], 0);
        $instance->addListener('module.install', [0 => function () {
            return ($this->privates['Zikula\\AdminModule\\Listener\\ModuleEventListener'] ?? $this->getModuleEventListenerService());
        }, 1 => 'moduleInstall'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Zikula\\BlocksModule\\Listener\\CollapseableBlockListener'] ?? $this->getCollapseableBlockListenerService());
        }, 1 => 'addCollapseableBehavior'], 202);
        $instance->addListener('form.submit', [0 => function () {
            return ($this->privates['Zikula\\CategoriesModule\\Form\\EventListener\\CategoriesMergeCollectionListener'] ?? ($this->privates['Zikula\\CategoriesModule\\Form\\EventListener\\CategoriesMergeCollectionListener'] = new \Zikula\CategoriesModule\Form\EventListener\CategoriesMergeCollectionListener()));
        }, 1 => 'onBindNormData'], 0);
        $instance->addListener('core.upgrade.pre.module', [0 => function () {
            return ($this->privates['Zikula\\CategoriesModule\\Listener\\Core3UpgradeListener'] ?? $this->getCore3UpgradeListener3Service());
        }, 1 => 'upgrade'], 0);
        $instance->addListener('core.upgrade.pre.module', [0 => function () {
            return ($this->privates['Zikula\\ExtensionsModule\\Listener\\Core3UpgradeListener'] ?? $this->getCore3UpgradeListener4Service());
        }, 1 => 'upgrade'], 0);
        $instance->addListener('zikula.link_collector', [0 => function () {
            return ($this->privates['Zikula\\ExtensionsModule\\Listener\\ExtensionServicesListener'] ?? $this->getExtensionServicesListenerService());
        }, 1 => 'linkCollectorResponder'], 0);
        $instance->addListener('group.application.processed', [0 => function () {
            return ($this->privates['Zikula\\GroupsModule\\Listener\\GroupEventListener'] ?? $this->getGroupEventListenerService());
        }, 1 => 'applicationProcessed'], 0);
        $instance->addListener('group.application.new', [0 => function () {
            return ($this->privates['Zikula\\GroupsModule\\Listener\\GroupEventListener'] ?? $this->getGroupEventListenerService());
        }, 1 => 'newApplication'], 0);
        $instance->addListener('form.pre_set_data', [0 => function () {
            return ($this->privates['Zikula\\MenuModule\\Form\\EventListener\\KeyValueFixerListener'] ?? ($this->privates['Zikula\\MenuModule\\Form\\EventListener\\KeyValueFixerListener'] = new \Zikula\MenuModule\Form\EventListener\KeyValueFixerListener()));
        }, 1 => 'onPreSetData'], 1);
        $instance->addListener('form.post_submit', [0 => function () {
            return ($this->privates['Zikula\\MenuModule\\Form\\EventListener\\OptionValidatorListener'] ?? $this->getOptionValidatorListenerService());
        }, 1 => 'onPostSubmit'], 0);
        $instance->addListener('core.upgrade.pre.module', [0 => function () {
            return ($this->privates['Zikula\\PermissionsModule\\Listener\\Core3UpgradeListener'] ?? $this->getCore3UpgradeListener5Service());
        }, 1 => 'upgrade'], 0);
        $instance->addListener('group.pre_delete', [0 => function () {
            return ($this->privates['Zikula\\PermissionsModule\\Listener\\GroupDeletionListener'] ?? $this->getGroupDeletionListenerService());
        }, 1 => 'preDelete'], 5);
        $instance->addListener('group.create', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\GroupListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\GroupListener'] = new \Zikula\RoutesModule\Listener\GroupListener()));
        }, 1 => 'create'], 5);
        $instance->addListener('group.update', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\GroupListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\GroupListener'] = new \Zikula\RoutesModule\Listener\GroupListener()));
        }, 1 => 'update'], 5);
        $instance->addListener('group.pre_delete', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\GroupListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\GroupListener'] = new \Zikula\RoutesModule\Listener\GroupListener()));
        }, 1 => 'preDelete'], 5);
        $instance->addListener('group.delete', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\GroupListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\GroupListener'] = new \Zikula\RoutesModule\Listener\GroupListener()));
        }, 1 => 'delete'], 5);
        $instance->addListener('group.adduser', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\GroupListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\GroupListener'] = new \Zikula\RoutesModule\Listener\GroupListener()));
        }, 1 => 'addUser'], 5);
        $instance->addListener('group.removeuser', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\GroupListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\GroupListener'] = new \Zikula\RoutesModule\Listener\GroupListener()));
        }, 1 => 'removeUser'], 5);
        $instance->addListener('group.application.processed', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\GroupListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\GroupListener'] = new \Zikula\RoutesModule\Listener\GroupListener()));
        }, 1 => 'applicationProcessed'], 5);
        $instance->addListener('group.application.new', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\GroupListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\GroupListener'] = new \Zikula\RoutesModule\Listener\GroupListener()));
        }, 1 => 'newApplication'], 5);
        $instance->addListener('module.postinstall', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\InstallerListener'] ?? $this->getInstallerListenerService());
        }, 1 => 'modulePostInstalled'], 5);
        $instance->addListener('module.upgrade', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\InstallerListener'] ?? $this->getInstallerListenerService());
        }, 1 => 'moduleUpgraded'], 5);
        $instance->addListener('module.remove', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\InstallerListener'] ?? $this->getInstallerListenerService());
        }, 1 => 'moduleRemoved'], 5);
        $instance->addListener('new.routes.avail', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\InstallerListener'] ?? $this->getInstallerListenerService());
        }, 1 => 'newRoutesAvail'], 5);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\KernelListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\KernelListener'] = new \Zikula\RoutesModule\Listener\KernelListener()));
        }, 1 => 'onRequest'], 5);
        $instance->addListener('kernel.controller', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\KernelListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\KernelListener'] = new \Zikula\RoutesModule\Listener\KernelListener()));
        }, 1 => 'onController'], 5);
        $instance->addListener('kernel.view', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\KernelListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\KernelListener'] = new \Zikula\RoutesModule\Listener\KernelListener()));
        }, 1 => 'onView'], 5);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\KernelListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\KernelListener'] = new \Zikula\RoutesModule\Listener\KernelListener()));
        }, 1 => 'onResponse'], 5);
        $instance->addListener('kernel.finish_request', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\KernelListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\KernelListener'] = new \Zikula\RoutesModule\Listener\KernelListener()));
        }, 1 => 'onFinishRequest'], 5);
        $instance->addListener('kernel.terminate', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\KernelListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\KernelListener'] = new \Zikula\RoutesModule\Listener\KernelListener()));
        }, 1 => 'onTerminate'], 5);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\KernelListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\KernelListener'] = new \Zikula\RoutesModule\Listener\KernelListener()));
        }, 1 => 'onException'], 5);
        $instance->addListener('module.mailer.api.sendmessage', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\MailerListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\MailerListener'] = new \Zikula\RoutesModule\Listener\MailerListener()));
        }, 1 => 'sendMessageStart'], 5);
        $instance->addListener('module.mailer.api.perform', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\MailerListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\MailerListener'] = new \Zikula\RoutesModule\Listener\MailerListener()));
        }, 1 => 'sendMessagePerform'], 5);
        $instance->addListener('module.mailer.api.success', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\MailerListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\MailerListener'] = new \Zikula\RoutesModule\Listener\MailerListener()));
        }, 1 => 'sendMessageSuccess'], 5);
        $instance->addListener('module.mailer.api.failure', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\MailerListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\MailerListener'] = new \Zikula\RoutesModule\Listener\MailerListener()));
        }, 1 => 'sendMessageFailure'], 5);
        $instance->addListener('module_dispatch.service_links', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\ModuleDispatchListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\ModuleDispatchListener'] = new \Zikula\RoutesModule\Listener\ModuleDispatchListener()));
        }, 1 => 'serviceLinks'], 5);
        $instance->addListener('theme.pre_render', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\ThemeListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\ThemeListener'] = new \Zikula\RoutesModule\Listener\ThemeListener()));
        }, 1 => 'preRender'], 5);
        $instance->addListener('theme.post_render', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\ThemeListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\ThemeListener'] = new \Zikula\RoutesModule\Listener\ThemeListener()));
        }, 1 => 'postRender'], 5);
        $instance->addListener('user.account.create', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\UserListener'] ?? $this->getUserListenerService());
        }, 1 => 'create'], 5);
        $instance->addListener('user.account.update', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\UserListener'] ?? $this->getUserListenerService());
        }, 1 => 'update'], 5);
        $instance->addListener('user.account.delete', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\UserListener'] ?? $this->getUserListenerService());
        }, 1 => 'delete'], 5);
        $instance->addListener('module.users.ui.login.started', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\UserLoginListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\UserLoginListener'] = new \Zikula\RoutesModule\Listener\UserLoginListener()));
        }, 1 => 'started'], 5);
        $instance->addListener('user.login.veto', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\UserLoginListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\UserLoginListener'] = new \Zikula\RoutesModule\Listener\UserLoginListener()));
        }, 1 => 'veto'], 5);
        $instance->addListener('module.users.ui.login.succeeded', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\UserLoginListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\UserLoginListener'] = new \Zikula\RoutesModule\Listener\UserLoginListener()));
        }, 1 => 'succeeded'], 5);
        $instance->addListener('module.users.ui.login.failed', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\UserLoginListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\UserLoginListener'] = new \Zikula\RoutesModule\Listener\UserLoginListener()));
        }, 1 => 'failed'], 5);
        $instance->addListener('module.users.ui.logout.succeeded', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\UserLogoutListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\UserLogoutListener'] = new \Zikula\RoutesModule\Listener\UserLogoutListener()));
        }, 1 => 'succeeded'], 5);
        $instance->addListener('module.users.ui.registration.started', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\UserRegistrationListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\UserRegistrationListener'] = new \Zikula\RoutesModule\Listener\UserRegistrationListener()));
        }, 1 => 'started'], 5);
        $instance->addListener('full.user.create.veto', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\UserRegistrationListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\UserRegistrationListener'] = new \Zikula\RoutesModule\Listener\UserRegistrationListener()));
        }, 1 => 'createVeto'], 5);
        $instance->addListener('module.users.ui.registration.succeeded', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\UserRegistrationListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\UserRegistrationListener'] = new \Zikula\RoutesModule\Listener\UserRegistrationListener()));
        }, 1 => 'succeeded'], 5);
        $instance->addListener('module.users.ui.registration.failed', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\UserRegistrationListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\UserRegistrationListener'] = new \Zikula\RoutesModule\Listener\UserRegistrationListener()));
        }, 1 => 'failed'], 5);
        $instance->addListener('user.registration.create', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\UserRegistrationListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\UserRegistrationListener'] = new \Zikula\RoutesModule\Listener\UserRegistrationListener()));
        }, 1 => 'create'], 5);
        $instance->addListener('user.registration.update', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\UserRegistrationListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\UserRegistrationListener'] = new \Zikula\RoutesModule\Listener\UserRegistrationListener()));
        }, 1 => 'update'], 5);
        $instance->addListener('user.registration.delete', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\UserRegistrationListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\UserRegistrationListener'] = new \Zikula\RoutesModule\Listener\UserRegistrationListener()));
        }, 1 => 'delete'], 5);
        $instance->addListener('force.registration.approval', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\UserRegistrationListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\UserRegistrationListener'] = new \Zikula\RoutesModule\Listener\UserRegistrationListener()));
        }, 1 => 'forceApproval'], 5);
        $instance->addListener('module.users.config.updated', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\UsersListener'] ?? ($this->privates['Zikula\\RoutesModule\\Listener\\UsersListener'] = new \Zikula\RoutesModule\Listener\UsersListener()));
        }, 1 => 'configUpdated'], 5);
        $instance->addListener('workflow.guard', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\WorkflowEventsListener'] ?? $this->getWorkflowEventsListenerService());
        }, 1 => 'onGuard'], 5);
        $instance->addListener('workflow.leave', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\WorkflowEventsListener'] ?? $this->getWorkflowEventsListenerService());
        }, 1 => 'onLeave'], 5);
        $instance->addListener('workflow.transition', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\WorkflowEventsListener'] ?? $this->getWorkflowEventsListenerService());
        }, 1 => 'onTransition'], 5);
        $instance->addListener('workflow.enter', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\WorkflowEventsListener'] ?? $this->getWorkflowEventsListenerService());
        }, 1 => 'onEnter'], 5);
        $instance->addListener('workflow.entered', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\WorkflowEventsListener'] ?? $this->getWorkflowEventsListenerService());
        }, 1 => 'onEntered'], 5);
        $instance->addListener('workflow.completed', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\WorkflowEventsListener'] ?? $this->getWorkflowEventsListenerService());
        }, 1 => 'onCompleted'], 5);
        $instance->addListener('workflow.announce', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Listener\\WorkflowEventsListener'] ?? $this->getWorkflowEventsListenerService());
        }, 1 => 'onAnnounce'], 5);
        $instance->addListener('console.command', [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Translation\\ConsoleCommandListener'] ?? $this->getConsoleCommandListenerService());
        }, 1 => 'checkBundleForTranslatingRoutes'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Zikula\\SearchModule\\Listener\\FrontControllerListener'] ?? $this->getFrontControllerListenerService());
        }, 1 => 'pageLoad'], 40);
        $instance->addListener('module.install', [0 => function () {
            return ($this->privates['Zikula\\SearchModule\\Listener\\ModuleEventListener'] ?? $this->getModuleEventListener2Service());
        }, 1 => 'moduleEnable'], 0);
        $instance->addListener('module.enable', [0 => function () {
            return ($this->privates['Zikula\\SearchModule\\Listener\\ModuleEventListener'] ?? $this->getModuleEventListener2Service());
        }, 1 => 'moduleEnable'], 0);
        $instance->addListener('module.disable', [0 => function () {
            return ($this->privates['Zikula\\SearchModule\\Listener\\ModuleEventListener'] ?? $this->getModuleEventListener2Service());
        }, 1 => 'moduleDisable'], 0);
        $instance->addListener('module.remove', [0 => function () {
            return ($this->privates['Zikula\\SearchModule\\Listener\\ModuleEventListener'] ?? $this->getModuleEventListener2Service());
        }, 1 => 'moduleRemove'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Zikula\\SecurityCenterModule\\Listener\\FilterListener'] ?? $this->getFilterListenerService());
        }, 1 => 'idsInputFilter'], 100);
        $instance->addListener('htmlfilter.outputfilter', [0 => function () {
            return ($this->privates['Zikula\\SecurityCenterModule\\Listener\\PurifierListener'] ?? $this->getPurifierListenerService());
        }, 1 => 'purify'], 0);
        $instance->addListener('module.postinstall', [0 => function () {
            return ($this->privates['Zikula\\SettingsModule\\Listener\\ExtensionInstallerListener'] ?? $this->getExtensionInstallerListenerService());
        }, 1 => 'updateTranslationConfig'], 5);
        $instance->addListener('module.upgrade', [0 => function () {
            return ($this->privates['Zikula\\SettingsModule\\Listener\\ExtensionInstallerListener'] ?? $this->getExtensionInstallerListenerService());
        }, 1 => 'updateTranslationConfig'], 5);
        $instance->addListener('module.enable', [0 => function () {
            return ($this->privates['Zikula\\SettingsModule\\Listener\\ExtensionInstallerListener'] ?? $this->getExtensionInstallerListenerService());
        }, 1 => 'updateTranslationConfig'], 5);
        $instance->addListener('module.disable', [0 => function () {
            return ($this->privates['Zikula\\SettingsModule\\Listener\\ExtensionInstallerListener'] ?? $this->getExtensionInstallerListenerService());
        }, 1 => 'updateTranslationConfig'], 5);
        $instance->addListener('module.remove', [0 => function () {
            return ($this->privates['Zikula\\SettingsModule\\Listener\\ExtensionInstallerListener'] ?? $this->getExtensionInstallerListenerService());
        }, 1 => 'updateTranslationConfig'], 5);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Zikula\\SettingsModule\\Listener\\LocaleListener'] ?? $this->getLocaleListenerService());
        }, 1 => 'onKernelRequest'], 15);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Zikula\\SettingsModule\\Listener\\LocalizedVariableListener'] ?? $this->getLocalizedVariableListenerService());
        }, 1 => 'onKernelRequest'], 14);
        $instance->addListener('module.disable', [0 => function () {
            return ($this->privates['Zikula\\SettingsModule\\Listener\\ModuleListener'] ?? $this->getModuleListenerService());
        }, 1 => 'moduleDeactivated'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Zikula\\SettingsModule\\Listener\\TranslationUiListener'] ?? $this->getTranslationUiListenerService());
        }, 1 => 'onKernelRequest'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['Zikula\\SettingsModule\\Listener\\TranslationUiListener'] ?? $this->getTranslationUiListenerService());
        }, 1 => 'addDummyClosingBody'], 5);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['Zikula\\SettingsModule\\Listener\\TranslationUiListener'] ?? $this->getTranslationUiListenerService());
        }, 1 => 'removeDummyClosingBody'], -1);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['Zikula\\ThemeModule\\EventListener\\AddJSConfigListener'] ?? $this->getAddJSConfigListenerService());
        }, 1 => 'addJSConfig'], -1);
        $instance->addListener('kernel.controller', [0 => function () {
            return ($this->privates['Zikula\\ThemeModule\\EventListener\\ControllerAnnotationReaderListener'] ?? $this->getControllerAnnotationReaderListenerService());
        }, 1 => 'readControllerAnnotations'], 0);
        $instance->addListener('core.upgrade.pre.module', [0 => function () {
            return ($this->privates['Zikula\\ThemeModule\\EventListener\\Core3UpgradeListener'] ?? $this->getCore3UpgradeListener6Service());
        }, 1 => 'upgrade'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['Zikula\\ThemeModule\\EventListener\\CreateThemedResponseListener'] ?? $this->getCreateThemedResponseListenerService());
        }, 1 => 'createThemedResponse'], -2);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Zikula\\ThemeModule\\EventListener\\DefaultPageAssetSetterListener'] ?? $this->getDefaultPageAssetSetterListenerService());
        }, 1 => 'setDefaultPageAssets'], 1);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Zikula\\ThemeModule\\EventListener\\DefaultPageVarSetterListener'] ?? $this->getDefaultPageVarSetterListenerService());
        }, 1 => 'setDefaultPageVars'], 1);
        $instance->addListener('module.install', [0 => function () {
            return ($this->privates['Zikula\\ThemeModule\\EventListener\\ExtensionInstallationListener'] ?? $this->getExtensionInstallationListenerService());
        }, 1 => 'clearCombinedAssetCache'], 0);
        $instance->addListener('module.upgrade', [0 => function () {
            return ($this->privates['Zikula\\ThemeModule\\EventListener\\ExtensionInstallationListener'] ?? $this->getExtensionInstallationListenerService());
        }, 1 => 'clearPublishedAssets'], 0);
        $instance->addListener('module.enable', [0 => function () {
            return ($this->privates['Zikula\\ThemeModule\\EventListener\\ExtensionInstallationListener'] ?? $this->getExtensionInstallationListenerService());
        }, 1 => 'clearCombinedAssetCache'], 0);
        $instance->addListener('module.disable', [0 => function () {
            return ($this->privates['Zikula\\ThemeModule\\EventListener\\ExtensionInstallationListener'] ?? $this->getExtensionInstallationListenerService());
        }, 1 => 'clearCombinedAssetCache'], 0);
        $instance->addListener('module.remove', [0 => function () {
            return ($this->privates['Zikula\\ThemeModule\\EventListener\\ExtensionInstallationListener'] ?? $this->getExtensionInstallationListenerService());
        }, 1 => 'clearPublishedAssets'], 0);
        $instance->addListener('kernel.controller', [0 => function () {
            return ($this->privates['Zikula\\ThemeModule\\EventListener\\ModuleStylesheetInsertListener'] ?? ($this->privates['Zikula\\ThemeModule\\EventListener\\ModuleStylesheetInsertListener'] = new \Zikula\ThemeModule\EventListener\ModuleStylesheetInsertListener(($this->services['kernel'] ?? $this->get('kernel', 1)))));
        }, 1 => 'insertModuleStylesheet'], 0);
        $instance->addListener('theme.post_render', [0 => function () {
            return ($this->privates['Zikula\\ThemeModule\\EventListener\\TemplateNameExposeListener'] ?? ($this->privates['Zikula\\ThemeModule\\EventListener\\TemplateNameExposeListener'] = new \Zikula\ThemeModule\EventListener\TemplateNameExposeListener('prod')));
        }, 1 => 'exposeTemplateNames'], 0);
        $instance->addListener('kernel.controller', [0 => function () {
            return ($this->privates['Zikula\\ThemeModule\\EventListener\\TemplatePathOverrideListener'] ?? $this->getTemplatePathOverrideListenerService());
        }, 1 => 'setUpThemePathOverrides'], 0);
        $instance->addListener('get.pending_content', [0 => function () {
            return ($this->privates['Zikula\\UsersModule\\Listener\\PendingContentListener'] ?? $this->getPendingContentListenerService());
        }, 1 => 'pendingContent'], 0);
        $instance->addListener('module.users.ui.registration.succeeded', [0 => function () {
            return ($this->privates['Zikula\\UsersModule\\Listener\\RegistrationEventsListener'] ?? $this->getRegistrationEventsListenerService());
        }, 1 => 'sendRegistrationEmail'], 0);
        $instance->addListener('module.users.ui.logout.succeeded', [0 => function () {
            return ($this->privates['Zikula\\UsersModule\\Listener\\UserEventListener'] ?? $this->getUserEventListenerService());
        }, 1 => 'clearUsersNamespace'], 0);
        $instance->addListener('module.users.ui.login.succeeded', [0 => function () {
            return ($this->privates['Zikula\\UsersModule\\Listener\\UserEventListener'] ?? $this->getUserEventListenerService());
        }, 1 => 'setLocale'], 0);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['Zikula\\UsersModule\\Listener\\UserEventListener'] ?? $this->getUserEventListenerService());
        }, 1 => 'clearUsersNamespace'], 0);
        $instance->addListener('full.user.create.veto', [0 => function () {
            return ($this->privates['Zikula\\ZAuthModule\\Listener\\RegistrationListener'] ?? $this->getRegistrationListenerService());
        }, 1 => 'vetoFullUserCreate'], 0);
        $instance->addListener('module.users.ui.registration.succeeded', [0 => function () {
            return ($this->privates['Zikula\\ZAuthModule\\Listener\\RegistrationListener'] ?? $this->getRegistrationListenerService());
        }, 1 => 'sendEmailVerificationEmail'], 0);
        $instance->addListener('force.registration.approval', [0 => function () {
            return ($this->privates['Zikula\\ZAuthModule\\Listener\\RegistrationListener'] ?? $this->getRegistrationListenerService());
        }, 1 => 'forceRegistrationApproval'], 0);
        $instance->addListener('user.account.delete', [0 => function () {
            return ($this->privates['Zikula\\ZAuthModule\\Listener\\UserDeleteListener'] ?? $this->getUserDeleteListenerService());
        }, 1 => 'deleteUsers'], 0);
        $instance->addListener('user.registration.delete', [0 => function () {
            return ($this->privates['Zikula\\ZAuthModule\\Listener\\UserDeleteListener'] ?? $this->getUserDeleteListenerService());
        }, 1 => 'deleteUsers'], 0);
        $instance->addListener('user.login.veto', [0 => function () {
            return ($this->privates['Zikula\\ZAuthModule\\Listener\\UserEventListener'] ?? $this->getUserEventListener2Service());
        }, 1 => 'forcedPasswordChange'], 0);

        return $instance;
    }

    /**
     * Gets the public 'filesystem' shared service.
     *
     * @return \Symfony\Component\Filesystem\Filesystem
     */
    protected function getFilesystemService()
    {
        return $this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem();
    }

    /**
     * Gets the public 'form.factory' shared service.
     *
     * @return \Symfony\Component\Form\FormFactory
     */
    protected function getForm_FactoryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormFactory.php';

        return $this->services['form.factory'] = new \Symfony\Component\Form\FormFactory(($this->privates['form.registry'] ?? $this->getForm_RegistryService()));
    }

    /**
     * Gets the public 'form.type.file' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\FileType
     */
    protected function getForm_Type_FileService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/FileType.php';

        return $this->services['form.type.file'] = new \Symfony\Component\Form\Extension\Core\Type\FileType(($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the public 'fos_js_routing.controller' shared service.
     *
     * @return \FOS\JsRoutingBundle\Controller\Controller
     */
    protected function getFosJsRouting_ControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/friendsofsymfony/jsrouting-bundle/Controller/Controller.php';

        return $this->services['fos_js_routing.controller'] = new \FOS\JsRoutingBundle\Controller\Controller(($this->services['fos_js_routing.serializer'] ?? $this->getFosJsRouting_SerializerService()), ($this->services['fos_js_routing.extractor'] ?? $this->getFosJsRouting_ExtractorService()), $this->parameters['fos_js_routing.cache_control'], true);
    }

    /**
     * Gets the public 'fos_js_routing.extractor' shared service.
     *
     * @return \FOS\JsRoutingBundle\Extractor\ExposedRoutesExtractor
     */
    protected function getFosJsRouting_ExtractorService()
    {
        return $this->services['fos_js_routing.extractor'] = new \FOS\JsRoutingBundle\Extractor\ExposedRoutesExtractor(($this->services['router'] ?? $this->getRouterService()), [], $this->targetDir.'', $this->parameters['kernel.bundles']);
    }

    /**
     * Gets the public 'fos_js_routing.serializer' shared service.
     *
     * @return \Symfony\Component\Serializer\Serializer
     */
    protected function getFosJsRouting_SerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Serializer/SerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Serializer/Normalizer/NormalizerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Serializer/Normalizer/ContextAwareNormalizerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Serializer/Normalizer/DenormalizerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Serializer/Normalizer/ContextAwareDenormalizerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Serializer/Encoder/EncoderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Serializer/Encoder/ContextAwareEncoderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Serializer/Encoder/DecoderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Serializer/Encoder/ContextAwareDecoderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Serializer/Serializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/friendsofsymfony/jsrouting-bundle/Serializer/Normalizer/RouteCollectionNormalizer.php';
        include_once \dirname(__DIR__, 4).'/vendor/friendsofsymfony/jsrouting-bundle/Serializer/Normalizer/RoutesResponseNormalizer.php';
        include_once \dirname(__DIR__, 4).'/vendor/friendsofsymfony/jsrouting-bundle/Serializer/Denormalizer/RouteCollectionDenormalizer.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Serializer/Encoder/JsonEncoder.php';

        return $this->services['fos_js_routing.serializer'] = new \Symfony\Component\Serializer\Serializer([0 => new \FOS\JsRoutingBundle\Serializer\Normalizer\RouteCollectionNormalizer(), 1 => new \FOS\JsRoutingBundle\Serializer\Normalizer\RoutesResponseNormalizer(), 2 => new \FOS\JsRoutingBundle\Serializer\Denormalizer\RouteCollectionDenormalizer()], ['json' => new \Symfony\Component\Serializer\Encoder\JsonEncoder()]);
    }

    /**
     * Gets the public 'http_kernel' shared service.
     *
     * @return \Symfony\Component\HttpKernel\HttpKernel
     */
    protected function getHttpKernelService()
    {
        $a = ($this->privates['debug.stopwatch'] ?? ($this->privates['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true)));

        return $this->services['http_kernel'] = new \Symfony\Component\HttpKernel\HttpKernel(($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), new \Symfony\Component\HttpKernel\Controller\TraceableControllerResolver(new \Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver($this, ($this->privates['monolog.logger.request'] ?? $this->getMonolog_Logger_RequestService())), $a), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), new \Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver(new \Symfony\Component\HttpKernel\Controller\ArgumentResolver(($this->privates['argument_metadata_factory'] ?? ($this->privates['argument_metadata_factory'] = new \Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory())), new RewindableGenerator(function () {
            yield 0 => ($this->privates['debug.argument_resolver.request_attribute'] ?? $this->getDebug_ArgumentResolver_RequestAttributeService());
            yield 1 => ($this->privates['debug.argument_resolver.request'] ?? $this->getDebug_ArgumentResolver_RequestService());
            yield 2 => ($this->privates['debug.argument_resolver.session'] ?? $this->getDebug_ArgumentResolver_SessionService());
            yield 3 => ($this->privates['debug.security.user_value_resolver'] ?? $this->getDebug_Security_UserValueResolverService());
            yield 4 => ($this->privates['debug.argument_resolver.service'] ?? $this->getDebug_ArgumentResolver_ServiceService());
            yield 5 => ($this->privates['debug.argument_resolver.default'] ?? $this->getDebug_ArgumentResolver_DefaultService());
            yield 6 => ($this->privates['debug.argument_resolver.variadic'] ?? $this->getDebug_ArgumentResolver_VariadicService());
            yield 7 => ($this->privates['debug.argument_resolver.not_tagged_controller'] ?? $this->getDebug_ArgumentResolver_NotTaggedControllerService());
        }, 8)), $a));
    }

    /**
     * Gets the public 'jms_i18n_routing.loader' shared service.
     *
     * @return \JMS\I18nRoutingBundle\Router\I18nLoader
     */
    protected function getJmsI18nRouting_LoaderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/jms/i18n-routing-bundle/JMS/I18nRoutingBundle/Router/I18nLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/jms/i18n-routing-bundle/JMS/I18nRoutingBundle/Router/PatternGenerationStrategyInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Translation/ZikulaPatternGenerationStrategy.php';

        return $this->services['jms_i18n_routing.loader'] = new \JMS\I18nRoutingBundle\Router\I18nLoader(($this->privates['jms_i18n_routing.route_exclusion_strategy'] ?? $this->getJmsI18nRouting_RouteExclusionStrategyService()), new \Zikula\RoutesModule\Translation\ZikulaPatternGenerationStrategy('prefix_except_default', ($this->services['translator'] ?? $this->getTranslatorService()), $this->parameters['jms_i18n_routing.locales'], $this->targetDir.'', 'routes', 'en'));
    }

    /**
     * Gets the public 'knp_menu.factory' shared service.
     *
     * @return \Knp\Menu\MenuFactory
     */
    protected function getKnpMenu_FactoryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/FactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/MenuFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Factory/ExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Integration/Symfony/RoutingExtension.php';

        $this->services['knp_menu.factory'] = $instance = new \Knp\Menu\MenuFactory();

        $instance->addExtension(new \Knp\Menu\Integration\Symfony\RoutingExtension(($this->services['router'] ?? $this->getRouterService())), 0);

        return $instance;
    }

    /**
     * Gets the public 'knp_menu.matcher' shared service.
     *
     * @return \Knp\Menu\Matcher\Matcher
     */
    protected function getKnpMenu_MatcherService()
    {
        return $this->services['knp_menu.matcher'] = new \Knp\Menu\Matcher\Matcher(new RewindableGenerator(function () {
            yield 0 => ($this->privates['knp_menu.voter.router'] ?? $this->getKnpMenu_Voter_RouterService());
            yield 1 => ($this->privates['Zikula\\MenuModule\\Voter\\RequestVoter'] ?? $this->getRequestVoterService());
        }, 2));
    }

    /**
     * Gets the public 'liip_imagine.binary.loader.default' shared service.
     *
     * @return \Liip\ImagineBundle\Binary\Loader\FileSystemLoader
     */
    protected function getLiipImagine_Binary_Loader_DefaultService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Binary/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Binary/Loader/FileSystemLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Mime/MimeTypeGuesserInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Mime/MimeTypesInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Mime/MimeTypes.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Binary/Locator/LocatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Binary/Locator/FileSystemLocator.php';

        $a = \Symfony\Component\Mime\MimeTypes::getDefault();

        return $this->services['liip_imagine.binary.loader.default'] = new \Liip\ImagineBundle\Binary\Loader\FileSystemLoader($a, $a, new \Liip\ImagineBundle\Binary\Locator\FileSystemLocator([0 => (\dirname(__DIR__, 4).'/public')], false));
    }

    /**
     * Gets the public 'liip_imagine.binary.loader.zikula_root' shared service.
     *
     * @return \Liip\ImagineBundle\Binary\Loader\FileSystemLoader
     */
    protected function getLiipImagine_Binary_Loader_ZikulaRootService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Binary/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Binary/Loader/FileSystemLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Mime/MimeTypeGuesserInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Mime/MimeTypesInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Mime/MimeTypes.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Binary/Locator/LocatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Binary/Locator/FileSystemLocator.php';

        $a = \Symfony\Component\Mime\MimeTypes::getDefault();

        return $this->services['liip_imagine.binary.loader.zikula_root'] = new \Liip\ImagineBundle\Binary\Loader\FileSystemLoader($a, $a, new \Liip\ImagineBundle\Binary\Locator\FileSystemLocator([0 => (\dirname(__DIR__, 4).'/public')], false));
    }

    /**
     * Gets the public 'liip_imagine.cache.manager' shared service.
     *
     * @return \Liip\ImagineBundle\Imagine\Cache\CacheManager
     */
    protected function getLiipImagine_Cache_ManagerService()
    {
        $this->services['liip_imagine.cache.manager'] = $instance = new \Liip\ImagineBundle\Imagine\Cache\CacheManager(($this->privates['liip_imagine.filter.configuration'] ?? $this->getLiipImagine_Filter_ConfigurationService()), ($this->services['router'] ?? $this->getRouterService()), ($this->services['liip_imagine.cache.signer'] ?? ($this->services['liip_imagine.cache.signer'] = new \Liip\ImagineBundle\Imagine\Cache\Signer('ThisTokenIsNotSoSecretChangeIt'))), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), 'default');

        $instance->addResolver('default', ($this->services['liip_imagine.cache.resolver.default'] ?? $this->getLiipImagine_Cache_Resolver_DefaultService()));
        $instance->addResolver('no_cache', ($this->services['liip_imagine.cache.resolver.no_cache_web_path'] ?? $this->getLiipImagine_Cache_Resolver_NoCacheWebPathService()));

        return $instance;
    }

    /**
     * Gets the public 'liip_imagine.cache.resolver.default' shared service.
     *
     * @return \Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver
     */
    protected function getLiipImagine_Cache_Resolver_DefaultService()
    {
        return $this->services['liip_imagine.cache.resolver.default'] = new \Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver(($this->services['filesystem'] ?? ($this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem())), ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService()), (\dirname(__DIR__, 4).'/public'), 'media/cache');
    }

    /**
     * Gets the public 'liip_imagine.cache.resolver.no_cache_web_path' shared service.
     *
     * @return \Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheWebPathResolver
     */
    protected function getLiipImagine_Cache_Resolver_NoCacheWebPathService()
    {
        return $this->services['liip_imagine.cache.resolver.no_cache_web_path'] = new \Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheWebPathResolver(($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService()));
    }

    /**
     * Gets the public 'liip_imagine.cache.signer' shared service.
     *
     * @return \Liip\ImagineBundle\Imagine\Cache\Signer
     */
    protected function getLiipImagine_Cache_SignerService()
    {
        return $this->services['liip_imagine.cache.signer'] = new \Liip\ImagineBundle\Imagine\Cache\Signer('ThisTokenIsNotSoSecretChangeIt');
    }

    /**
     * Gets the public 'liip_imagine.config.stack_collection' shared service.
     *
     * @return \Liip\ImagineBundle\Config\StackCollection
     */
    protected function getLiipImagine_Config_StackCollectionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Config/StackCollection.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Config/StackBuilderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Config/StackBuilder.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/StackFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/StackFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Config/FilterFactoryCollection.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/FilterFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/Filter/AutoRotateFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/Filter/BackgroundFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/Filter/Argument/SizeFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/Filter/CropFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/Filter/Argument/PointFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/Filter/DownscaleFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/Filter/FlipFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/Filter/GrayscaleFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/Filter/InterlaceFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/Filter/PasteFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/Filter/RelativeResizeFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/Filter/ResizeFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/Filter/RotateFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/Filter/ScaleFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/Filter/StripFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/Filter/ThumbnailFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/Filter/UpscaleFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Factory/Config/Filter/WatermarkFactory.php';

        $a = new \Liip\ImagineBundle\Factory\Config\Filter\Argument\SizeFactory();
        $b = new \Liip\ImagineBundle\Factory\Config\Filter\Argument\PointFactory();

        return $this->services['liip_imagine.config.stack_collection'] = new \Liip\ImagineBundle\Config\StackCollection(new \Liip\ImagineBundle\Config\StackBuilder(new \Liip\ImagineBundle\Factory\Config\StackFactory(), new \Liip\ImagineBundle\Config\FilterFactoryCollection(new \Liip\ImagineBundle\Factory\Config\Filter\AutoRotateFactory(), new \Liip\ImagineBundle\Factory\Config\Filter\BackgroundFactory($a), new \Liip\ImagineBundle\Factory\Config\Filter\CropFactory($a, $b), new \Liip\ImagineBundle\Factory\Config\Filter\DownscaleFactory($a), new \Liip\ImagineBundle\Factory\Config\Filter\FlipFactory(), new \Liip\ImagineBundle\Factory\Config\Filter\GrayscaleFactory(), new \Liip\ImagineBundle\Factory\Config\Filter\InterlaceFactory(), new \Liip\ImagineBundle\Factory\Config\Filter\PasteFactory($b), new \Liip\ImagineBundle\Factory\Config\Filter\RelativeResizeFactory(), new \Liip\ImagineBundle\Factory\Config\Filter\ResizeFactory($a), new \Liip\ImagineBundle\Factory\Config\Filter\RotateFactory(), new \Liip\ImagineBundle\Factory\Config\Filter\ScaleFactory($a), new \Liip\ImagineBundle\Factory\Config\Filter\StripFactory(), new \Liip\ImagineBundle\Factory\Config\Filter\ThumbnailFactory($a), new \Liip\ImagineBundle\Factory\Config\Filter\UpscaleFactory($a), new \Liip\ImagineBundle\Factory\Config\Filter\WatermarkFactory())), $this->parameters['liip_imagine.filter_sets']);
    }

    /**
     * Gets the public 'liip_imagine.data.manager' shared service.
     *
     * @return \Liip\ImagineBundle\Imagine\Data\DataManager
     */
    protected function getLiipImagine_Data_ManagerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Data/DataManager.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Mime/MimeTypeGuesserInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Mime/MimeTypesInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Mime/MimeTypes.php';

        $this->services['liip_imagine.data.manager'] = $instance = new \Liip\ImagineBundle\Imagine\Data\DataManager(($this->privates['liip_imagine.binary.mime_type_guesser'] ?? $this->getLiipImagine_Binary_MimeTypeGuesserService()), \Symfony\Component\Mime\MimeTypes::getDefault(), ($this->privates['liip_imagine.filter.configuration'] ?? $this->getLiipImagine_Filter_ConfigurationService()), 'default', NULL);

        $instance->addLoader('zikula_root', ($this->services['liip_imagine.binary.loader.zikula_root'] ?? $this->getLiipImagine_Binary_Loader_ZikulaRootService()));
        $instance->addLoader('default', ($this->services['liip_imagine.binary.loader.default'] ?? $this->getLiipImagine_Binary_Loader_DefaultService()));

        return $instance;
    }

    /**
     * Gets the public 'liip_imagine.filter.loader.downscale' shared service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\DownscaleFilterLoader
     */
    protected function getLiipImagine_Filter_Loader_DownscaleService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/ScaleFilterLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/DownscaleFilterLoader.php';

        return $this->services['liip_imagine.filter.loader.downscale'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\DownscaleFilterLoader();
    }

    /**
     * Gets the public 'liip_imagine.filter.loader.fixed' shared service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\FixedFilterLoader
     */
    protected function getLiipImagine_Filter_Loader_FixedService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/FixedFilterLoader.php';

        return $this->services['liip_imagine.filter.loader.fixed'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\FixedFilterLoader();
    }

    /**
     * Gets the public 'liip_imagine.filter.loader.flip' shared service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\FlipFilterLoader
     */
    protected function getLiipImagine_Filter_Loader_FlipService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/FlipFilterLoader.php';

        return $this->services['liip_imagine.filter.loader.flip'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\FlipFilterLoader();
    }

    /**
     * Gets the public 'liip_imagine.filter.loader.grayscale' shared service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\GrayscaleFilterLoader
     */
    protected function getLiipImagine_Filter_Loader_GrayscaleService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/GrayscaleFilterLoader.php';

        return $this->services['liip_imagine.filter.loader.grayscale'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\GrayscaleFilterLoader();
    }

    /**
     * Gets the public 'liip_imagine.filter.loader.interlace' shared service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\InterlaceFilterLoader
     */
    protected function getLiipImagine_Filter_Loader_InterlaceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/InterlaceFilterLoader.php';

        return $this->services['liip_imagine.filter.loader.interlace'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\InterlaceFilterLoader();
    }

    /**
     * Gets the public 'liip_imagine.filter.loader.resample' shared service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\ResampleFilterLoader
     */
    protected function getLiipImagine_Filter_Loader_ResampleService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/ResampleFilterLoader.php';

        return $this->services['liip_imagine.filter.loader.resample'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\ResampleFilterLoader(($this->privates['liip_imagine.gd'] ?? $this->getLiipImagine_GdService()));
    }

    /**
     * Gets the public 'liip_imagine.filter.loader.rotate' shared service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\RotateFilterLoader
     */
    protected function getLiipImagine_Filter_Loader_RotateService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/RotateFilterLoader.php';

        return $this->services['liip_imagine.filter.loader.rotate'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\RotateFilterLoader();
    }

    /**
     * Gets the public 'liip_imagine.filter.manager' shared service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\FilterManager
     */
    protected function getLiipImagine_Filter_ManagerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/FilterManager.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/RelativeResizeFilterLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/ResizeFilterLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/ThumbnailFilterLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/CropFilterLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/PasteFilterLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/WatermarkFilterLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/BackgroundFilterLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/StripFilterLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/ScaleFilterLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/UpscaleFilterLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/AutoRotateFilterLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/PostProcessor/PostProcessorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/PostProcessor/AbstractPostProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/PostProcessor/JpegOptimPostProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/PostProcessor/OptiPngPostProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/PostProcessor/PngquantPostProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/PostProcessor/MozJpegPostProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/GrayscaleFilterLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/DownscaleFilterLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/RotateFilterLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/FlipFilterLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/InterlaceFilterLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Imagine/Filter/Loader/FixedFilterLoader.php';

        $a = ($this->privates['liip_imagine.gd'] ?? $this->getLiipImagine_GdService());

        $this->services['liip_imagine.filter.manager'] = $instance = new \Liip\ImagineBundle\Imagine\Filter\FilterManager(($this->privates['liip_imagine.filter.configuration'] ?? $this->getLiipImagine_Filter_ConfigurationService()), $a, ($this->privates['liip_imagine.binary.mime_type_guesser'] ?? $this->getLiipImagine_Binary_MimeTypeGuesserService()));

        $instance->addLoader('relative_resize', new \Liip\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader());
        $instance->addLoader('resize', new \Liip\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader());
        $instance->addLoader('thumbnail', new \Liip\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader());
        $instance->addLoader('crop', new \Liip\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader());
        $instance->addLoader('grayscale', ($this->services['liip_imagine.filter.loader.grayscale'] ?? ($this->services['liip_imagine.filter.loader.grayscale'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\GrayscaleFilterLoader())));
        $instance->addLoader('paste_image', new \Liip\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader($a, \dirname(__DIR__, 4)));
        $instance->addLoader('watermark_image', new \Liip\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader($a, \dirname(__DIR__, 4)));
        $instance->addLoader('background', new \Liip\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader($a));
        $instance->addLoader('strip', new \Liip\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader());
        $instance->addLoader('scale', new \Liip\ImagineBundle\Imagine\Filter\Loader\ScaleFilterLoader());
        $instance->addLoader('upscale', new \Liip\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader());
        $instance->addLoader('downscale', ($this->services['liip_imagine.filter.loader.downscale'] ?? ($this->services['liip_imagine.filter.loader.downscale'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\DownscaleFilterLoader())));
        $instance->addLoader('auto_rotate', new \Liip\ImagineBundle\Imagine\Filter\Loader\AutoRotateFilterLoader());
        $instance->addLoader('rotate', ($this->services['liip_imagine.filter.loader.rotate'] ?? ($this->services['liip_imagine.filter.loader.rotate'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\RotateFilterLoader())));
        $instance->addLoader('flip', ($this->services['liip_imagine.filter.loader.flip'] ?? ($this->services['liip_imagine.filter.loader.flip'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\FlipFilterLoader())));
        $instance->addLoader('interlace', ($this->services['liip_imagine.filter.loader.interlace'] ?? ($this->services['liip_imagine.filter.loader.interlace'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\InterlaceFilterLoader())));
        $instance->addLoader('resample', ($this->services['liip_imagine.filter.loader.resample'] ?? $this->getLiipImagine_Filter_Loader_ResampleService()));
        $instance->addLoader('fixed', ($this->services['liip_imagine.filter.loader.fixed'] ?? ($this->services['liip_imagine.filter.loader.fixed'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\FixedFilterLoader())));
        $instance->addPostProcessor('jpegoptim', new \Liip\ImagineBundle\Imagine\Filter\PostProcessor\JpegOptimPostProcessor('/usr/bin/jpegoptim', true, NULL, true, NULL));
        $instance->addPostProcessor('optipng', new \Liip\ImagineBundle\Imagine\Filter\PostProcessor\OptiPngPostProcessor('/usr/bin/optipng', 7, true, NULL));
        $instance->addPostProcessor('pngquant', new \Liip\ImagineBundle\Imagine\Filter\PostProcessor\PngquantPostProcessor('/usr/bin/pngquant'));
        $instance->addPostProcessor('mozjpeg', new \Liip\ImagineBundle\Imagine\Filter\PostProcessor\MozJpegPostProcessor('/opt/mozjpeg/bin/cjpeg'));

        return $instance;
    }

    /**
     * Gets the public 'matthias_symfony_console.register_styles_event_listener' shared service.
     *
     * @return \Matthias\SymfonyConsoleForm\Console\EventListener\RegisterOutputFormatterStylesEventListener
     */
    protected function getMatthiasSymfonyConsole_RegisterStylesEventListenerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Console/EventListener/RegisterOutputFormatterStylesEventListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Console/Formatter/StylesCollection.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Formatter/OutputFormatterStyleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Formatter/OutputFormatterStyle.php';

        $a = new \Matthias\SymfonyConsoleForm\Console\Formatter\StylesCollection();
        $a->set('fieldset', new \Symfony\Component\Console\Formatter\OutputFormatterStyle('yellow', NULL, [0 => 'bold']));
        $a->set('default', new \Symfony\Component\Console\Formatter\OutputFormatterStyle('green'));
        $a->set('question', new \Symfony\Component\Console\Formatter\OutputFormatterStyle('black', 'cyan'));

        return $this->services['matthias_symfony_console.register_styles_event_listener'] = new \Matthias\SymfonyConsoleForm\Console\EventListener\RegisterOutputFormatterStylesEventListener($a);
    }

    /**
     * Gets the public 'matthias_symfony_console_form.console_form_type_extension' shared service.
     *
     * @return \Matthias\SymfonyConsoleForm\Form\ConsoleFormTypeExtension
     */
    protected function getMatthiasSymfonyConsoleForm_ConsoleFormTypeExtensionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractTypeExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Form/ConsoleFormTypeExtension.php';

        return $this->services['matthias_symfony_console_form.console_form_type_extension'] = new \Matthias\SymfonyConsoleForm\Form\ConsoleFormTypeExtension();
    }

    /**
     * Gets the public 'matthias_symfony_console_form.handle_form_based_command_event_listener' shared service.
     *
     * @return \Matthias\SymfonyConsoleForm\Console\EventListener\HandleFormBasedCommandEventListener
     */
    protected function getMatthiasSymfonyConsoleForm_HandleFormBasedCommandEventListenerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Console/EventListener/HandleFormBasedCommandEventListener.php';

        return $this->services['matthias_symfony_console_form.handle_form_based_command_event_listener'] = new \Matthias\SymfonyConsoleForm\Console\EventListener\HandleFormBasedCommandEventListener(($this->privates['matthias_symfony_console_form.form_helper'] ?? $this->getMatthiasSymfonyConsoleForm_FormHelperService()));
    }

    /**
     * Gets the public 'matthias_symfony_console_form.register_helpers_event_listener' shared service.
     *
     * @return \Matthias\SymfonyConsoleForm\Console\EventListener\RegisterHelpersEventListener
     */
    protected function getMatthiasSymfonyConsoleForm_RegisterHelpersEventListenerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Console/EventListener/RegisterHelpersEventListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Console/Helper/HelperCollection.php';

        $a = new \Matthias\SymfonyConsoleForm\Console\Helper\HelperCollection();
        $a->set(($this->privates['matthias_symfony_console_form.form_helper'] ?? $this->getMatthiasSymfonyConsoleForm_FormHelperService()));

        return $this->services['matthias_symfony_console_form.register_helpers_event_listener'] = new \Matthias\SymfonyConsoleForm\Console\EventListener\RegisterHelpersEventListener($a);
    }

    /**
     * Gets the public 'matthias_symfony_console_form.set_input_definition_of_form_based_command_event_listener' shared service.
     *
     * @return \Matthias\SymfonyConsoleForm\Console\EventListener\SetInputDefinitionOfFormBasedCommandEventListener
     */
    protected function getMatthiasSymfonyConsoleForm_SetInputDefinitionOfFormBasedCommandEventListenerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Console/EventListener/SetInputDefinitionOfFormBasedCommandEventListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Console/Input/InputDefinitionFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Console/Input/CachedInputDefinitionFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Console/Input/FormBasedInputDefinitionFactory.php';

        return $this->services['matthias_symfony_console_form.set_input_definition_of_form_based_command_event_listener'] = new \Matthias\SymfonyConsoleForm\Console\EventListener\SetInputDefinitionOfFormBasedCommandEventListener(new \Matthias\SymfonyConsoleForm\Console\Input\CachedInputDefinitionFactory(new \Matthias\SymfonyConsoleForm\Console\Input\FormBasedInputDefinitionFactory(($this->services['form.factory'] ?? $this->getForm_FactoryService())), ($this->targetDir.''.'/matthias_symfony_console_form'), true));
    }

    /**
     * Gets the public 'php_translation.cache_clearer' shared service.
     *
     * @return \Translation\Bundle\Service\CacheClearer
     *
     * @deprecated The "php_translation.cache_clearer" service is deprecated. You should stop using it, as it will be removed in the future.
     */
    protected function getPhpTranslation_CacheClearerService()
    {
        @trigger_error('The "php_translation.cache_clearer" service is deprecated. You should stop using it, as it will be removed in the future.', E_USER_DEPRECATED);

        return $this->services['php_translation.cache_clearer'] = new \Translation\Bundle\Service\CacheClearer($this->targetDir.'', ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['filesystem'] ?? ($this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem())));
    }

    /**
     * Gets the public 'php_translation.catalogue_counter' shared service.
     *
     * @return \Translation\Bundle\Catalogue\CatalogueCounter
     *
     * @deprecated The "php_translation.catalogue_counter" service is deprecated. You should stop using it, as it will be removed in the future.
     */
    protected function getPhpTranslation_CatalogueCounterService()
    {
        @trigger_error('The "php_translation.catalogue_counter" service is deprecated. You should stop using it, as it will be removed in the future.', E_USER_DEPRECATED);

        return $this->services['php_translation.catalogue_counter'] = new \Translation\Bundle\Catalogue\CatalogueCounter();
    }

    /**
     * Gets the public 'php_translation.catalogue_fetcher' shared service.
     *
     * @return \Translation\Bundle\Catalogue\CatalogueFetcher
     *
     * @deprecated The "php_translation.catalogue_fetcher" service is deprecated. You should stop using it, as it will be removed in the future.
     */
    protected function getPhpTranslation_CatalogueFetcherService()
    {
        @trigger_error('The "php_translation.catalogue_fetcher" service is deprecated. You should stop using it, as it will be removed in the future.', E_USER_DEPRECATED);

        return $this->services['php_translation.catalogue_fetcher'] = new \Translation\Bundle\Catalogue\CatalogueFetcher(($this->privates['translation.reader'] ?? $this->getTranslation_ReaderService()));
    }

    /**
     * Gets the public 'php_translation.catalogue_manager' shared service.
     *
     * @return \Translation\Bundle\Catalogue\CatalogueManager
     *
     * @deprecated The "php_translation.catalogue_manager" service is deprecated. You should stop using it, as it will be removed in the future.
     */
    protected function getPhpTranslation_CatalogueManagerService()
    {
        @trigger_error('The "php_translation.catalogue_manager" service is deprecated. You should stop using it, as it will be removed in the future.', E_USER_DEPRECATED);

        return $this->services['php_translation.catalogue_manager'] = new \Translation\Bundle\Catalogue\CatalogueManager();
    }

    /**
     * Gets the public 'php_translation.catalogue_writer' shared service.
     *
     * @return \Translation\Bundle\Catalogue\CatalogueWriter
     *
     * @deprecated The "php_translation.catalogue_writer" service is deprecated. You should stop using it, as it will be removed in the future.
     */
    protected function getPhpTranslation_CatalogueWriterService()
    {
        @trigger_error('The "php_translation.catalogue_writer" service is deprecated. You should stop using it, as it will be removed in the future.', E_USER_DEPRECATED);

        return $this->services['php_translation.catalogue_writer'] = new \Translation\Bundle\Catalogue\CatalogueWriter(($this->privates['translation.writer'] ?? $this->getTranslation_WriterService()), 'en');
    }

    /**
     * Gets the public 'php_translation.configuration_manager' shared service.
     *
     * @return \Translation\Bundle\Service\ConfigurationManager
     *
     * @deprecated The "php_translation.configuration_manager" service is deprecated. You should stop using it, as it will be removed in the future.
     */
    protected function getPhpTranslation_ConfigurationManagerService()
    {
        @trigger_error('The "php_translation.configuration_manager" service is deprecated. You should stop using it, as it will be removed in the future.', E_USER_DEPRECATED);

        $this->services['php_translation.configuration_manager'] = $instance = new \Translation\Bundle\Service\ConfigurationManager();

        $instance->addConfiguration('zikula', ($this->privates['php_translation.configuration.zikula'] ?? $this->getPhpTranslation_Configuration_ZikulaService()));
        $instance->addConfiguration('extension', ($this->privates['php_translation.configuration.extension'] ?? $this->getPhpTranslation_Configuration_ExtensionService()));

        return $instance;
    }

    /**
     * Gets the public 'php_translation.importer' shared service.
     *
     * @return \Translation\Bundle\Service\Importer
     *
     * @deprecated The "php_translation.importer" service is deprecated. You should stop using it, as it will be removed in the future.
     */
    protected function getPhpTranslation_ImporterService()
    {
        @trigger_error('The "php_translation.importer" service is deprecated. You should stop using it, as it will be removed in the future.', E_USER_DEPRECATED);

        return $this->services['php_translation.importer'] = new \Translation\Bundle\Service\Importer(($this->privates['Translation\\Extractor\\Extractor'] ?? $this->getExtractorService()), ($this->services['twig'] ?? $this->getTwigService()), 'en');
    }

    /**
     * Gets the public 'php_translation.storage.extension' shared service.
     *
     * @return \Translation\Bundle\Service\StorageService
     */
    protected function getPhpTranslation_Storage_ExtensionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/common/src/Storage.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Service/StorageService.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/common/src/TransferableStorage.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-storage/src/FileStorage.php';

        $this->services['php_translation.storage.extension'] = $instance = new \Translation\Bundle\Service\StorageService(($this->services['Translation\\Bundle\\Catalogue\\CatalogueFetcher'] ?? $this->getCatalogueFetcherService()), ($this->privates['php_translation.configuration.extension'] ?? $this->getPhpTranslation_Configuration_ExtensionService()));

        $instance->addLocalStorage(new \Translation\SymfonyStorage\FileStorage(($this->privates['translation.writer'] ?? $this->getTranslation_WriterService()), ($this->privates['translation.reader'] ?? $this->getTranslation_ReaderService()), [0 => (\dirname(__DIR__, 4).'/Resources/translations')], ['default_output_format' => 'yaml']));

        return $instance;
    }

    /**
     * Gets the public 'php_translation.storage.zikula' shared service.
     *
     * @return \Translation\Bundle\Service\StorageService
     */
    protected function getPhpTranslation_Storage_ZikulaService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/common/src/Storage.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Service/StorageService.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/common/src/TransferableStorage.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-storage/src/FileStorage.php';

        $this->services['php_translation.storage.zikula'] = $instance = new \Translation\Bundle\Service\StorageService(($this->services['Translation\\Bundle\\Catalogue\\CatalogueFetcher'] ?? $this->getCatalogueFetcherService()), ($this->privates['php_translation.configuration.zikula'] ?? $this->getPhpTranslation_Configuration_ZikulaService()));

        $instance->addLocalStorage(new \Translation\SymfonyStorage\FileStorage(($this->privates['translation.writer'] ?? $this->getTranslation_WriterService()), ($this->privates['translation.reader'] ?? $this->getTranslation_ReaderService()), [0 => (\dirname(__DIR__, 4).'/translations')], ['default_output_format' => 'yaml']));

        return $instance;
    }

    /**
     * Gets the public 'php_translation.storage_manager' shared service.
     *
     * @return \Translation\Bundle\Service\StorageManager
     *
     * @deprecated The "php_translation.storage_manager" service is deprecated. You should stop using it, as it will be removed in the future.
     */
    protected function getPhpTranslation_StorageManagerService()
    {
        @trigger_error('The "php_translation.storage_manager" service is deprecated. You should stop using it, as it will be removed in the future.', E_USER_DEPRECATED);

        $this->services['php_translation.storage_manager'] = $instance = new \Translation\Bundle\Service\StorageManager();

        $instance->addStorage('zikula', ($this->services['php_translation.storage.zikula'] ?? $this->getPhpTranslation_Storage_ZikulaService()));
        $instance->addStorage('extension', ($this->services['php_translation.storage.extension'] ?? $this->getPhpTranslation_Storage_ExtensionService()));

        return $instance;
    }

    /**
     * Gets the public 'php_translator.console.delete_obsolete' shared service.
     *
     * @return \Translation\Bundle\Command\DeleteObsoleteCommand
     *
     * @deprecated The "php_translator.console.delete_obsolete" service is deprecated. You should stop using it, as it will be removed in the future.
     */
    protected function getPhpTranslator_Console_DeleteObsoleteService()
    {
        @trigger_error('The "php_translator.console.delete_obsolete" service is deprecated. You should stop using it, as it will be removed in the future.', E_USER_DEPRECATED);

        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Catalogue/CatalogueManager.php';

        return $this->services['php_translator.console.delete_obsolete'] = new \Translation\Bundle\Command\DeleteObsoleteCommand(($this->services['Translation\\Bundle\\Service\\StorageManager'] ?? $this->getStorageManagerService()), ($this->services['Translation\\Bundle\\Service\\ConfigurationManager'] ?? $this->getConfigurationManagerService()), ($this->services['Translation\\Bundle\\Catalogue\\CatalogueManager'] ?? ($this->services['Translation\\Bundle\\Catalogue\\CatalogueManager'] = new \Translation\Bundle\Catalogue\CatalogueManager())), ($this->services['Translation\\Bundle\\Catalogue\\CatalogueFetcher'] ?? $this->getCatalogueFetcherService()));
    }

    /**
     * Gets the public 'php_translator.console.download' shared service.
     *
     * @return \Translation\Bundle\Command\DownloadCommand
     *
     * @deprecated The "php_translator.console.download" service is deprecated. You should stop using it, as it will be removed in the future.
     */
    protected function getPhpTranslator_Console_DownloadService()
    {
        @trigger_error('The "php_translator.console.download" service is deprecated. You should stop using it, as it will be removed in the future.', E_USER_DEPRECATED);

        return $this->services['php_translator.console.download'] = new \Translation\Bundle\Command\DownloadCommand(($this->services['Translation\\Bundle\\Service\\StorageManager'] ?? $this->getStorageManagerService()), ($this->services['Translation\\Bundle\\Service\\ConfigurationManager'] ?? $this->getConfigurationManagerService()), ($this->services['Translation\\Bundle\\Service\\CacheClearer'] ?? $this->getCacheClearerService()), ($this->services['Translation\\Bundle\\Catalogue\\CatalogueWriter'] ?? $this->getCatalogueWriterService()));
    }

    /**
     * Gets the public 'php_translator.console.extract' shared service.
     *
     * @return \Translation\Bundle\Command\ExtractCommand
     *
     * @deprecated The "php_translator.console.extract" service is deprecated. You should stop using it, as it will be removed in the future.
     */
    protected function getPhpTranslator_Console_ExtractService()
    {
        @trigger_error('The "php_translator.console.extract" service is deprecated. You should stop using it, as it will be removed in the future.', E_USER_DEPRECATED);

        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Catalogue/CatalogueCounter.php';

        return $this->services['php_translator.console.extract'] = new \Translation\Bundle\Command\ExtractCommand(($this->services['Translation\\Bundle\\Catalogue\\CatalogueFetcher'] ?? $this->getCatalogueFetcherService()), ($this->services['Translation\\Bundle\\Catalogue\\CatalogueWriter'] ?? $this->getCatalogueWriterService()), ($this->services['Translation\\Bundle\\Catalogue\\CatalogueCounter'] ?? ($this->services['Translation\\Bundle\\Catalogue\\CatalogueCounter'] = new \Translation\Bundle\Catalogue\CatalogueCounter())), ($this->services['Translation\\Bundle\\Service\\Importer'] ?? $this->getImporterService()), ($this->services['Translation\\Bundle\\Service\\ConfigurationManager'] ?? $this->getConfigurationManagerService()));
    }

    /**
     * Gets the public 'php_translator.console.status' shared service.
     *
     * @return \Translation\Bundle\Command\StatusCommand
     *
     * @deprecated The "php_translator.console.status" service is deprecated. You should stop using it, as it will be removed in the future.
     */
    protected function getPhpTranslator_Console_StatusService()
    {
        @trigger_error('The "php_translator.console.status" service is deprecated. You should stop using it, as it will be removed in the future.', E_USER_DEPRECATED);

        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Catalogue/CatalogueCounter.php';

        return $this->services['php_translator.console.status'] = new \Translation\Bundle\Command\StatusCommand(($this->services['Translation\\Bundle\\Catalogue\\CatalogueCounter'] ?? ($this->services['Translation\\Bundle\\Catalogue\\CatalogueCounter'] = new \Translation\Bundle\Catalogue\CatalogueCounter())), ($this->services['Translation\\Bundle\\Service\\ConfigurationManager'] ?? $this->getConfigurationManagerService()), ($this->services['Translation\\Bundle\\Catalogue\\CatalogueFetcher'] ?? $this->getCatalogueFetcherService()));
    }

    /**
     * Gets the public 'php_translator.console.sync' shared service.
     *
     * @return \Translation\Bundle\Command\SyncCommand
     *
     * @deprecated The "php_translator.console.sync" service is deprecated. You should stop using it, as it will be removed in the future.
     */
    protected function getPhpTranslator_Console_SyncService()
    {
        @trigger_error('The "php_translator.console.sync" service is deprecated. You should stop using it, as it will be removed in the future.', E_USER_DEPRECATED);

        return $this->services['php_translator.console.sync'] = new \Translation\Bundle\Command\SyncCommand(($this->services['Translation\\Bundle\\Service\\StorageManager'] ?? $this->getStorageManagerService()));
    }

    /**
     * Gets the public 'request_stack' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\RequestStack
     */
    protected function getRequestStackService()
    {
        return $this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack();
    }

    /**
     * Gets the public 'router' shared service.
     *
     * @return \JMS\I18nRoutingBundle\Router\I18nRouter
     */
    protected function getRouterService()
    {
        $a = new \Symfony\Bridge\Monolog\Logger('router');
        $a->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
        $a->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        $this->services['router'] = $instance = new \JMS\I18nRoutingBundle\Router\I18nRouter($this, 'kernel::loadRoutes', ['cache_dir' => $this->targetDir.'', 'debug' => true, 'generator_class' => 'Symfony\\Component\\Routing\\Generator\\CompiledUrlGenerator', 'generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\CompiledUrlGeneratorDumper', 'matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableCompiledUrlMatcher', 'matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\CompiledUrlMatcherDumper', 'strict_requirements' => NULL, 'resource_type' => 'service'], ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService()), ($this->privates['parameter_bag'] ?? ($this->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($this))), $a, 'en');

        $instance->setConfigCacheFactory(($this->privates['config_cache_factory'] ?? $this->getConfigCacheFactoryService()));
        $instance->setLocaleResolver(new \JMS\I18nRoutingBundle\Router\DefaultLocaleResolver('hl'));
        $instance->setI18nLoaderId('jms_i18n_routing.loader');
        $instance->setDefaultLocale('en');
        $instance->setRedirectToHost(true);

        return $instance;
    }

    /**
     * Gets the public 'routing.loader' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader
     */
    protected function getRouting_LoaderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Config/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Config/Loader/Loader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Config/Loader/DelegatingLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Routing/DelegatingLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Config/Loader/LoaderResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Config/Loader/LoaderResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Config/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Routing/Loader/XmlFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Routing/Loader/YamlFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Routing/Loader/PhpFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Routing/Loader/GlobFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Routing/Loader/DirectoryLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Routing/Loader/ObjectLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Routing/Loader/ContainerLoader.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Routing/RouteLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Routing/Loader/AnnotationClassLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Routing/AnnotatedRouteControllerLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Routing/Loader/AnnotationFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Routing/Loader/AnnotationDirectoryLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Config/FileLocatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Config/FileLocator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Config/FileLocator.php';

        $a = new \Symfony\Component\Config\Loader\LoaderResolver();

        $b = ($this->privates['file_locator'] ?? ($this->privates['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator(($this->services['kernel'] ?? $this->get('kernel', 1)))));
        $c = new \Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()));

        $a->addLoader(new \Symfony\Component\Routing\Loader\XmlFileLoader($b));
        $a->addLoader(new \Symfony\Component\Routing\Loader\YamlFileLoader($b));
        $a->addLoader(new \Symfony\Component\Routing\Loader\PhpFileLoader($b));
        $a->addLoader(new \Symfony\Component\Routing\Loader\GlobFileLoader($b));
        $a->addLoader(new \Symfony\Component\Routing\Loader\DirectoryLoader($b));
        $a->addLoader(new \Symfony\Component\Routing\Loader\ContainerLoader(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'kernel' => ['services', 'kernel', 'getKernelService', false],
        ], [
            'kernel' => 'Kernel',
        ])));
        $a->addLoader(($this->privates['sensio_framework_extra.routing.loader.annot_class'] ?? $this->getSensioFrameworkExtra_Routing_Loader_AnnotClassService()));
        $a->addLoader($this->getSensioFrameworkExtra_Routing_Loader_AnnotDirService());
        $a->addLoader($this->getSensioFrameworkExtra_Routing_Loader_AnnotFileService());
        $a->addLoader(new \Zikula\RoutesModule\Routing\RouteLoader(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\RoutesModule\\Entity\\Factory\\EntityFactory'] ?? $this->getEntityFactoryService()), ($this->privates['Zikula\\RoutesModule\\Helper\\ExtractTranslationHelper'] ?? $this->getExtractTranslationHelperService()), ($this->privates['Zikula\\RoutesModule\\Helper\\PathBuilderHelper'] ?? $this->getPathBuilderHelperService()), ($this->privates['Zikula\\RoutesModule\\Helper\\SanitizeHelper'] ?? $this->getSanitizeHelperService()), 'en'));
        $a->addLoader($c);
        $a->addLoader(new \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader($b, $c));
        $a->addLoader(new \Symfony\Component\Routing\Loader\AnnotationFileLoader($b, $c));

        return $this->services['routing.loader'] = new \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader($a, ['utf8' => true]);
    }

    /**
     * Gets the public 'security.authentication_utils' shared service.
     *
     * @return \Symfony\Component\Security\Http\Authentication\AuthenticationUtils
     */
    protected function getSecurity_AuthenticationUtilsService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Authentication/AuthenticationUtils.php';

        return $this->services['security.authentication_utils'] = new \Symfony\Component\Security\Http\Authentication\AuthenticationUtils(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }

    /**
     * Gets the public 'security.authorization_checker' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\AuthorizationChecker
     */
    protected function getSecurity_AuthorizationCheckerService()
    {
        return $this->services['security.authorization_checker'] = new \Symfony\Component\Security\Core\Authorization\AuthorizationChecker(($this->services['security.token_storage'] ?? $this->getSecurity_TokenStorageService()), ($this->privates['security.authentication.manager'] ?? $this->getSecurity_Authentication_ManagerService()), ($this->privates['debug.security.access.decision_manager'] ?? $this->getDebug_Security_Access_DecisionManagerService()), false);
    }

    /**
     * Gets the public 'security.csrf.token_manager' shared service.
     *
     * @return \Symfony\Component\Security\Csrf\CsrfTokenManager
     */
    protected function getSecurity_Csrf_TokenManagerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Csrf/CsrfTokenManagerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Csrf/CsrfTokenManager.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Csrf/TokenGenerator/TokenGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Csrf/TokenGenerator/UriSafeTokenGenerator.php';

        return $this->services['security.csrf.token_manager'] = new \Symfony\Component\Security\Csrf\CsrfTokenManager(new \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator(), ($this->privates['security.csrf.token_storage'] ?? $this->getSecurity_Csrf_TokenStorageService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }

    /**
     * Gets the public 'security.password_encoder' shared service.
     *
     * @return \Symfony\Component\Security\Core\Encoder\UserPasswordEncoder
     */
    protected function getSecurity_PasswordEncoderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Encoder/UserPasswordEncoderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Encoder/UserPasswordEncoder.php';

        return $this->services['security.password_encoder'] = new \Symfony\Component\Security\Core\Encoder\UserPasswordEncoder(($this->privates['security.encoder_factory.generic'] ?? $this->getSecurity_EncoderFactory_GenericService()));
    }

    /**
     * Gets the public 'security.token_storage' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage
     */
    protected function getSecurity_TokenStorageService()
    {
        return $this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage(($this->privates['security.untracked_token_storage'] ?? ($this->privates['security.untracked_token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage())), new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'session' => ['services', 'session', 'getSessionService', false],
        ], [
            'session' => '?',
        ]));
    }

    /**
     * Gets the public 'services_resetter' shared service.
     *
     * @return \Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter
     */
    protected function getServicesResetterService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/DependencyInjection/ServicesResetter.php';

        return $this->services['services_resetter'] = new \Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter(new RewindableGenerator(function () {
            if (isset($this->services['cache.app'])) {
                yield 'cache.app' => ($this->services['cache.app'] ?? null);
            }
            if (isset($this->services['cache.system'])) {
                yield 'cache.system' => ($this->services['cache.system'] ?? null);
            }
            if (false) {
                yield 'cache.validator' => null;
            }
            if (false) {
                yield 'cache.serializer' => null;
            }
            if (isset($this->privates['cache.annotations'])) {
                yield 'cache.annotations' => ($this->privates['cache.annotations'] ?? null);
            }
            if (false) {
                yield 'cache.property_info' => null;
            }
            if (isset($this->privates['doctrine.result_cache_pool'])) {
                yield 'doctrine.result_cache_pool' => ($this->privates['doctrine.result_cache_pool'] ?? null);
            }
            if (isset($this->privates['doctrine.system_cache_pool'])) {
                yield 'doctrine.system_cache_pool' => ($this->privates['doctrine.system_cache_pool'] ?? null);
            }
            if (isset($this->privates['form.choice_list_factory.cached'])) {
                yield 'form.choice_list_factory.cached' => ($this->privates['form.choice_list_factory.cached'] ?? null);
            }
            if (isset($this->privates['debug.stopwatch'])) {
                yield 'debug.stopwatch' => ($this->privates['debug.stopwatch'] ?? null);
            }
            if (isset($this->services['event_dispatcher'])) {
                yield 'debug.event_dispatcher' => ($this->services['event_dispatcher'] ?? null);
            }
            if (isset($this->services['security.token_storage'])) {
                yield 'security.token_storage' => ($this->services['security.token_storage'] ?? null);
            }
            if (isset($this->privates['cache.security_expression_language'])) {
                yield 'cache.security_expression_language' => ($this->privates['cache.security_expression_language'] ?? null);
            }
            if (isset($this->privates['monolog.handler.main'])) {
                yield 'monolog.handler.main' => ($this->privates['monolog.handler.main'] ?? null);
            }
            if (isset($this->privates['monolog.handler.console'])) {
                yield 'monolog.handler.console' => ($this->privates['monolog.handler.console'] ?? null);
            }
            if (isset($this->privates['monolog.handler.deprecation'])) {
                yield 'monolog.handler.deprecation' => ($this->privates['monolog.handler.deprecation'] ?? null);
            }
            if (isset($this->privates['monolog.handler.deprecation_filter'])) {
                yield 'monolog.handler.deprecation_filter' => ($this->privates['monolog.handler.deprecation_filter'] ?? null);
            }
            if (isset($this->privates['swiftmailer.email_sender.listener'])) {
                yield 'swiftmailer.email_sender.listener' => ($this->privates['swiftmailer.email_sender.listener'] ?? null);
            }
            if (isset($this->services['doctrine'])) {
                yield 'doctrine' => ($this->services['doctrine'] ?? null);
            }
            if (isset($this->privates['form.type.entity'])) {
                yield 'form.type.entity' => ($this->privates['form.type.entity'] ?? null);
            }
            if (false) {
                yield 'Zikula\\Bundle\\CoreBundle\\DataCollector\\ZikulaVersionDataCollector' => null;
            }
        }, function () {
            return 0 + (int) (isset($this->services['cache.app'])) + (int) (isset($this->services['cache.system'])) + (int) (false) + (int) (false) + (int) (isset($this->privates['cache.annotations'])) + (int) (false) + (int) (isset($this->privates['doctrine.result_cache_pool'])) + (int) (isset($this->privates['doctrine.system_cache_pool'])) + (int) (isset($this->privates['form.choice_list_factory.cached'])) + (int) (isset($this->privates['debug.stopwatch'])) + (int) (isset($this->services['event_dispatcher'])) + (int) (isset($this->services['security.token_storage'])) + (int) (isset($this->privates['cache.security_expression_language'])) + (int) (isset($this->privates['monolog.handler.main'])) + (int) (isset($this->privates['monolog.handler.console'])) + (int) (isset($this->privates['monolog.handler.deprecation'])) + (int) (isset($this->privates['monolog.handler.deprecation_filter'])) + (int) (isset($this->privates['swiftmailer.email_sender.listener'])) + (int) (isset($this->services['doctrine'])) + (int) (isset($this->privates['form.type.entity'])) + (int) (false);
        }), ['cache.app' => [0 => 'reset'], 'cache.system' => [0 => 'reset'], 'cache.validator' => [0 => 'reset'], 'cache.serializer' => [0 => 'reset'], 'cache.annotations' => [0 => 'reset'], 'cache.property_info' => [0 => 'reset'], 'doctrine.result_cache_pool' => [0 => 'reset'], 'doctrine.system_cache_pool' => [0 => 'reset'], 'form.choice_list_factory.cached' => [0 => 'reset'], 'debug.stopwatch' => [0 => 'reset'], 'debug.event_dispatcher' => [0 => 'reset'], 'security.token_storage' => [0 => 'disableUsageTracking', 1 => 'setToken'], 'cache.security_expression_language' => [0 => 'reset'], 'monolog.handler.main' => [0 => 'reset'], 'monolog.handler.console' => [0 => 'reset'], 'monolog.handler.deprecation' => [0 => 'reset'], 'monolog.handler.deprecation_filter' => [0 => 'reset'], 'swiftmailer.email_sender.listener' => [0 => 'reset'], 'doctrine' => [0 => 'reset'], 'form.type.entity' => [0 => 'reset'], 'Zikula\\Bundle\\CoreBundle\\DataCollector\\ZikulaVersionDataCollector' => [0 => 'reset']]);
    }

    /**
     * Gets the public 'session' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Session
     */
    protected function getSessionService()
    {
        return $this->services['session'] = new \Symfony\Component\HttpFoundation\Session\Session(($this->privates['zikula_core.bridge.http_foundation.zikula_session_storage_file'] ?? $this->getZikulaCore_Bridge_HttpFoundation_ZikulaSessionStorageFileService()), new \Symfony\Component\HttpFoundation\Session\Attribute\NamespacedAttributeBag(), new \Symfony\Component\HttpFoundation\Session\Flash\FlashBag());
    }

    /**
     * Gets the public 'state_machine.zikularoutesmodule_none' shared service.
     *
     * @return \Symfony\Component\Workflow\StateMachine
     */
    protected function getStateMachine_ZikularoutesmoduleNoneService()
    {
        return $this->services['state_machine.zikularoutesmodule_none'] = new \Symfony\Component\Workflow\StateMachine(new \Symfony\Component\Workflow\Definition([0 => 'initial', 1 => 'approved', 2 => 'deleted'], [0 => new \Symfony\Component\Workflow\Transition('submit', 'initial', 'approved'), 1 => new \Symfony\Component\Workflow\Transition('updateapproved', 'approved', 'approved'), 2 => new \Symfony\Component\Workflow\Transition('delete', 'approved', 'deleted')], [], new \Symfony\Component\Workflow\Metadata\InMemoryMetadataStore([], [], new \SplObjectStorage())), new \Symfony\Component\Workflow\MarkingStore\MethodMarkingStore(true, 'workflowState'), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), 'zikularoutesmodule_none');
    }

    /**
     * Gets the public 'stof_doctrine_extensions.uploadable.manager' shared service.
     *
     * @return \Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager
     */
    protected function getStofDoctrineExtensions_Uploadable_ManagerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/antishov/doctrine-extensions-bundle/Uploadable/UploadableManager.php';

        return $this->services['stof_doctrine_extensions.uploadable.manager'] = new \Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager(($this->privates['stof_doctrine_extensions.listener.uploadable'] ?? $this->getStofDoctrineExtensions_Listener_UploadableService()), 'Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadedFileInfo');
    }

    /**
     * Gets the public 'swiftmailer.mailer.default' shared service.
     *
     * @return \Swift_Mailer
     */
    protected function getSwiftmailer_Mailer_DefaultService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Mailer.php';

        return $this->services['swiftmailer.mailer.default'] = new \Swift_Mailer(($this->services['swiftmailer.mailer.default.transport'] ?? $this->getSwiftmailer_Mailer_Default_TransportService()));
    }

    /**
     * Gets the public 'swiftmailer.mailer.default.plugin.messagelogger' shared service.
     *
     * @return \Swift_Plugins_MessageLogger
     */
    protected function getSwiftmailer_Mailer_Default_Plugin_MessageloggerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Events/EventListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Events/SendListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Plugins/MessageLogger.php';

        return $this->services['swiftmailer.mailer.default.plugin.messagelogger'] = new \Swift_Plugins_MessageLogger();
    }

    /**
     * Gets the public 'swiftmailer.mailer.default.transport' shared service.
     *
     * @return \Swift_Transport_EsmtpTransport
     */
    protected function getSwiftmailer_Mailer_Default_TransportService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Transport.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Transport/AbstractSmtpTransport.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Transport/SmtpAgent.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Transport/EsmtpTransport.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/InputByteStream.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Filterable.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/ByteStream/AbstractFilterableInputStream.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/OutputByteStream.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Transport/IoBuffer.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Transport/StreamBuffer.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/ReplacementFilterFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/StreamFilters/StringReplacementFilterFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Transport/EsmtpHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Transport/Esmtp/AuthHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Transport/Esmtp/Authenticator.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Transport/Esmtp/Auth/CramMd5Authenticator.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Transport/Esmtp/Auth/LoginAuthenticator.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Transport/Esmtp/Auth/PlainAuthenticator.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Transport/Esmtp/Auth/NTLMAuthenticator.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Events/EventDispatcher.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Events/SimpleEventDispatcher.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/DependencyInjection/SmtpTransportConfigurator.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Events/EventListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Events/SendListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Plugins/MessageLogger.php';

        $a = new \Swift_Transport_Esmtp_AuthHandler([0 => new \Swift_Transport_Esmtp_Auth_CramMd5Authenticator(), 1 => new \Swift_Transport_Esmtp_Auth_LoginAuthenticator(), 2 => new \Swift_Transport_Esmtp_Auth_PlainAuthenticator(), 3 => new \Swift_Transport_Esmtp_Auth_NTLMAuthenticator()]);
        $a->setUsername('');
        $a->setPassword('');
        $a->setAuthMode(NULL);

        $this->services['swiftmailer.mailer.default.transport'] = $instance = new \Swift_Transport_EsmtpTransport(new \Swift_Transport_StreamBuffer(new \Swift_StreamFilters_StringReplacementFilterFactory()), [0 => $a], new \Swift_Events_SimpleEventDispatcher());

        $instance->setHost('localhost');
        $instance->setPort(25);
        $instance->setEncryption(NULL);
        $instance->setTimeout(30);
        $instance->setSourceIp(NULL);
        $instance->registerPlugin(($this->services['swiftmailer.mailer.default.plugin.messagelogger'] ?? ($this->services['swiftmailer.mailer.default.plugin.messagelogger'] = new \Swift_Plugins_MessageLogger())));
        (new \Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator(NULL, ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService())))->configure($instance);

        return $instance;
    }

    /**
     * Gets the public 'translator' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Translation\Translator
     */
    protected function getTranslatorService()
    {
        $this->services['translator'] = $instance = new \Symfony\Bundle\FrameworkBundle\Translation\Translator(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'translation.loader.csv' => ['privates', 'translation.loader.csv', 'getTranslation_Loader_CsvService', false],
            'translation.loader.dat' => ['privates', 'translation.loader.dat', 'getTranslation_Loader_DatService', false],
            'translation.loader.ini' => ['privates', 'translation.loader.ini', 'getTranslation_Loader_IniService', false],
            'translation.loader.json' => ['privates', 'translation.loader.json', 'getTranslation_Loader_JsonService', false],
            'translation.loader.mo' => ['privates', 'translation.loader.mo', 'getTranslation_Loader_MoService', false],
            'translation.loader.php' => ['privates', 'translation.loader.php', 'getTranslation_Loader_PhpService', false],
            'translation.loader.po' => ['privates', 'translation.loader.po', 'getTranslation_Loader_PoService', false],
            'translation.loader.qt' => ['privates', 'translation.loader.qt', 'getTranslation_Loader_QtService', false],
            'translation.loader.res' => ['privates', 'translation.loader.res', 'getTranslation_Loader_ResService', false],
            'translation.loader.xliff' => ['privates', 'translation.loader.xliff', 'getTranslation_Loader_XliffService', false],
            'translation.loader.yml' => ['privates', 'translation.loader.yml', 'getTranslation_Loader_YmlService', false],
        ], [
            'translation.loader.csv' => '?',
            'translation.loader.dat' => '?',
            'translation.loader.ini' => '?',
            'translation.loader.json' => '?',
            'translation.loader.mo' => '?',
            'translation.loader.php' => '?',
            'translation.loader.po' => '?',
            'translation.loader.qt' => '?',
            'translation.loader.res' => '?',
            'translation.loader.xliff' => '?',
            'translation.loader.yml' => '?',
        ]), new \Symfony\Component\Translation\Formatter\MessageFormatter(new \Symfony\Component\Translation\IdentityTranslator()), 'en', ['translation.loader.php' => [0 => 'php'], 'translation.loader.yml' => [0 => 'yaml', 1 => 'yml'], 'translation.loader.xliff' => [0 => 'xlf', 1 => 'xliff'], 'translation.loader.po' => [0 => 'po'], 'translation.loader.mo' => [0 => 'mo'], 'translation.loader.qt' => [0 => 'ts'], 'translation.loader.csv' => [0 => 'csv'], 'translation.loader.res' => [0 => 'res'], 'translation.loader.dat' => [0 => 'dat'], 'translation.loader.ini' => [0 => 'ini'], 'translation.loader.json' => [0 => 'json']], ['cache_dir' => ($this->targetDir.''.'/translations'), 'debug' => true, 'resource_files' => ['af' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.af.xlf')], 'ar' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ar.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ar.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ar.xlf')], 'az' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.az.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.az.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.az.xlf')], 'be' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.be.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.be.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.be.xlf')], 'bg' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.bg.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.bg.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.bg.xlf')], 'ca' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ca.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ca.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ca.xlf')], 'cs' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cs.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.cs.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.cs.xlf')], 'cy' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cy.xlf')], 'da' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.da.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.da.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.da.xlf')], 'de' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.de.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.de.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.de.xlf')], 'el' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.el.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.el.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.el.xlf')], 'en' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.en.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.en.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.en.xlf'), 3 => (\dirname(__DIR__, 4).'/translations/mail.en.yaml'), 4 => (\dirname(__DIR__, 4).'/translations/messages.en.yaml'), 5 => (\dirname(__DIR__, 4).'/translations/routes.en.yaml'), 6 => (\dirname(__DIR__, 4).'/translations/security.en.yaml'), 7 => (\dirname(__DIR__, 4).'/translations/validators.en.yaml')], 'es' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.es.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.es.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.es.xlf')], 'et' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.et.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.et.xlf')], 'eu' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.eu.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.eu.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.eu.xlf')], 'fa' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fa.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fa.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fa.xlf')], 'fi' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fi.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fi.xlf')], 'fr' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fr.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fr.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fr.xlf')], 'gl' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.gl.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.gl.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.gl.xlf')], 'he' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.he.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.he.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.he.xlf')], 'hr' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hr.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hr.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hr.xlf')], 'hu' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hu.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hu.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hu.xlf')], 'hy' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hy.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hy.xlf')], 'id' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.id.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.id.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.id.xlf')], 'it' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.it.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.it.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.it.xlf')], 'ja' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ja.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ja.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ja.xlf')], 'lb' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lb.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lb.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lb.xlf')], 'lt' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lt.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lt.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lt.xlf')], 'lv' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lv.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lv.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lv.xlf')], 'mn' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.mn.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.mn.xlf')], 'nb' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nb.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nb.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nb.xlf')], 'nl' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nl.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nl.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nl.xlf')], 'nn' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nn.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nn.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nn.xlf')], 'no' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.no.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.no.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.no.xlf')], 'pl' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pl.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pl.xlf')], 'pt' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt.xlf')], 'pt_BR' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt_BR.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt_BR.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_BR.xlf')], 'ro' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ro.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ro.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ro.xlf')], 'ru' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ru.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ru.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ru.xlf')], 'sk' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sk.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sk.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sk.xlf')], 'sl' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sl.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sl.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sl.xlf')], 'sq' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sq.xlf')], 'sr_Cyrl' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Cyrl.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Cyrl.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Cyrl.xlf')], 'sr_Latn' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Latn.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Latn.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Latn.xlf')], 'sv' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sv.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sv.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sv.xlf')], 'th' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.th.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.th.xlf')], 'tl' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tl.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.tl.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.tl.xlf')], 'tr' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tr.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.tr.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.tr.xlf')], 'uk' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.uk.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.uk.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.uk.xlf')], 'vi' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.vi.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.vi.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.vi.xlf')], 'zh_CN' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_CN.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.zh_CN.xlf'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.zh_CN.xlf')], 'zh_TW' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_TW.xlf')], 'pt_PT' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_PT.xlf')]], 'scanned_directories' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations'), 3 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Resources/translations'), 4 => (\dirname(__DIR__, 4).'/translations'), 5 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/translations'), 6 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/translations'), 7 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/translations'), 8 => (\dirname(__DIR__, 4).'/vendor/symfony/monolog-bundle/translations'), 9 => (\dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/translations'), 10 => (\dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/translations'), 11 => (\dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/translations'), 12 => (\dirname(__DIR__, 4).'/vendor/antishov/doctrine-extensions-bundle/translations'), 13 => (\dirname(__DIR__, 4).'/vendor/twig/extra-bundle/src/translations'), 14 => (\dirname(__DIR__, 4).'/src/Zikula/CoreBundle/translations'), 15 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/translations'), 16 => (\dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/translations'), 17 => (\dirname(__DIR__, 4).'/src/Zikula/HookBundle/translations'), 18 => (\dirname(__DIR__, 4).'/vendor/jms/i18n-routing-bundle/JMS/I18nRoutingBundle/translations'), 19 => (\dirname(__DIR__, 4).'/vendor/friendsofsymfony/jsrouting-bundle/translations'), 20 => (\dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bundle/translations'), 21 => (\dirname(__DIR__, 4).'/vendor/knplabs/knp-menu-bundle/src/translations'), 22 => (\dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/translations'), 23 => (\dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/translations'), 24 => (\dirname(__DIR__, 4).'/vendor/willdurand/js-translation-bundle/translations'), 25 => (\dirname(__DIR__, 4).'/src/Zikula/WorkflowBundle/translations'), 26 => (\dirname(__DIR__, 4).'/src/system/AdminModule/translations'), 27 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/translations'), 28 => (\dirname(__DIR__, 4).'/src/system/CategoriesModule/translations'), 29 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/translations'), 30 => (\dirname(__DIR__, 4).'/src/system/GroupsModule/translations'), 31 => (\dirname(__DIR__, 4).'/src/system/MailerModule/translations'), 32 => (\dirname(__DIR__, 4).'/src/system/MenuModule/translations'), 33 => (\dirname(__DIR__, 4).'/src/system/PermissionsModule/translations'), 34 => (\dirname(__DIR__, 4).'/src/system/SearchModule/translations'), 35 => (\dirname(__DIR__, 4).'/src/system/SecurityCenterModule/translations'), 36 => (\dirname(__DIR__, 4).'/src/system/SettingsModule/translations'), 37 => (\dirname(__DIR__, 4).'/src/system/ThemeModule/translations'), 38 => (\dirname(__DIR__, 4).'/src/system/UsersModule/translations'), 39 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/translations')], 'cache_vary' => ['scanned_directories' => [0 => 'vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations', 1 => 'vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations', 2 => 'vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations', 3 => 'src/system/RoutesModule/Resources/translations', 4 => 'translations', 5 => 'vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/translations', 6 => 'vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/translations', 7 => 'vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/translations', 8 => 'vendor/symfony/monolog-bundle/translations', 9 => 'vendor/symfony/swiftmailer-bundle/translations', 10 => 'vendor/doctrine/doctrine-bundle/translations', 11 => 'vendor/sensio/framework-extra-bundle/src/translations', 12 => 'vendor/antishov/doctrine-extensions-bundle/translations', 13 => 'vendor/twig/extra-bundle/src/translations', 14 => 'src/Zikula/CoreBundle/translations', 15 => 'src/Zikula/CoreInstallerBundle/translations', 16 => 'src/Zikula/FormExtensionBundle/translations', 17 => 'src/Zikula/HookBundle/translations', 18 => 'vendor/jms/i18n-routing-bundle/JMS/I18nRoutingBundle/translations', 19 => 'vendor/friendsofsymfony/jsrouting-bundle/translations', 20 => 'vendor/matthiasnoback/symfony-console-form/src/Bundle/translations', 21 => 'vendor/knplabs/knp-menu-bundle/src/translations', 22 => 'vendor/liip/imagine-bundle/translations', 23 => 'vendor/php-translation/symfony-bundle/translations', 24 => 'vendor/willdurand/js-translation-bundle/translations', 25 => 'src/Zikula/WorkflowBundle/translations', 26 => 'src/system/AdminModule/translations', 27 => 'src/system/BlocksModule/translations', 28 => 'src/system/CategoriesModule/translations', 29 => 'src/system/ExtensionsModule/translations', 30 => 'src/system/GroupsModule/translations', 31 => 'src/system/MailerModule/translations', 32 => 'src/system/MenuModule/translations', 33 => 'src/system/PermissionsModule/translations', 34 => 'src/system/SearchModule/translations', 35 => 'src/system/SecurityCenterModule/translations', 36 => 'src/system/SettingsModule/translations', 37 => 'src/system/ThemeModule/translations', 38 => 'src/system/UsersModule/translations', 39 => 'src/system/ZAuthModule/translations']]]);

        $instance->setConfigCacheFactory(($this->privates['config_cache_factory'] ?? $this->getConfigCacheFactoryService()));
        $instance->setFallbackLocales($this->parameters['localisation.locales']);

        return $instance;
    }

    /**
     * Gets the public 'twig' shared autowired service.
     *
     * @return \Zikula\ThemeModule\Bridge\Twig\EventEnabledTwigEngine
     */
    protected function getTwigService()
    {
        $a = ($this->privates['twig.loader.native_filesystem'] ?? $this->getTwig_Loader_NativeFilesystemService());

        $this->services['twig'] = $instance = new \Zikula\ThemeModule\Bridge\Twig\EventEnabledTwigEngine($a);

        $b = ($this->privates['debug.stopwatch'] ?? ($this->privates['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true)));
        $c = ($this->services['translator'] ?? $this->getTranslatorService());
        $d = ($this->services['router'] ?? $this->getRouterService());
        $e = ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack()));
        $f = ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService());
        $g = ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService());
        $h = new \Knp\Menu\Util\MenuManipulator();
        $i = ($this->services['knp_menu.matcher'] ?? $this->getKnpMenu_MatcherService());
        $j = ($this->privates['fragment.handler'] ?? $this->getFragment_HandlerService());
        $k = ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService());
        $l = new \Zikula\RoutesModule\Twig\TwigExtension($c, $g, ($this->privates['Zikula\\RoutesModule\\Helper\\EntityDisplayHelper'] ?? $this->getEntityDisplayHelperService()), ($this->privates['Zikula\\RoutesModule\\Helper\\WorkflowHelper'] ?? $this->getWorkflowHelperService()), ($this->privates['Zikula\\RoutesModule\\Helper\\ListEntriesHelper'] ?? $this->getListEntriesHelperService()));
        $l->setContainer($this);
        $m = ($this->privates['zikula_core.common.theme.pagevars'] ?? $this->getZikulaCore_Common_Theme_PagevarsService());
        $n = ($this->services['Zikula\\UsersModule\\Entity\\Repository\\UserRepository'] ?? $this->getUserRepositoryService());
        $o = new \Symfony\Bridge\Twig\AppVariable();
        $o->setEnvironment('prod');
        $o->setDebug(true);
        if ($this->has('security.token_storage')) {
            $o->setTokenStorage(($this->services['security.token_storage'] ?? $this->getSecurity_TokenStorageService()));
        }
        if ($this->has('request_stack')) {
            $o->setRequestStack($e);
        }
        $p = new \Twig\Extra\TwigExtraBundle\MissingExtensionSuggestor();

        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\CsrfExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\LogoutUrlExtension(($this->privates['security.logout_url_generator'] ?? $this->getSecurity_LogoutUrlGeneratorService())));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\SecurityExtension(($this->services['security.authorization_checker'] ?? $this->getSecurity_AuthorizationCheckerService())));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\ProfilerExtension(new \Twig\Profiler\Profile(), $b));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\TranslationExtension($c));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\AssetExtension(($this->privates['assets.packages'] ?? $this->getAssets_PackagesService())));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\CodeExtension(($this->privates['debug.file_link_formatter'] ?? ($this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL))), \dirname(__DIR__, 4), 'UTF-8'));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\RoutingExtension($d));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\YamlExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\StopwatchExtension($b, true));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\ExpressionExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\HttpKernelExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\HttpFoundationExtension(new \Symfony\Component\HttpFoundation\UrlHelper($e, ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService()))));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\WorkflowExtension(($this->privates['workflow.registry'] ?? $this->getWorkflow_RegistryService())));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\FormExtension([0 => $this, 1 => 'twig.form.renderer']));
        $instance->addExtension(new \Twig\Extension\DebugExtension());
        $instance->addExtension(new \Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension());
        $instance->addExtension(new \Twig\Extra\Html\HtmlExtension());
        $instance->addExtension(new \Twig\Extra\Markdown\MarkdownExtension());
        $instance->addExtension(new \Twig\Extra\Intl\IntlExtension());
        $instance->addExtension(new \Twig\Extra\CssInliner\CssInlinerExtension());
        $instance->addExtension(new \Twig\Extra\Inky\InkyExtension());
        $instance->addExtension(new \Twig\Extra\String\StringExtension());
        $instance->addExtension(new \Zikula\Bundle\CoreBundle\Twig\Extension\CoreExtension($c));
        $instance->addExtension(new \Zikula\Bundle\CoreBundle\Twig\Extension\EventDispatcherExtension($f));
        $instance->addExtension(new \Zikula\Bundle\CoreBundle\Twig\Extension\PagerExtension($e, $d, $g, $instance));
        $instance->addExtension(new \Zikula\Bundle\CoreBundle\Twig\Extension\SessionExtension(($this->services['session'] ?? $this->getSessionService()), $c));
        $instance->addExtension(new \Zikula\Bundle\HookBundle\Twig\Extension\HookExtension($e, ($this->privates['Zikula\\Bundle\\HookBundle\\Dispatcher\\HookDispatcher'] ?? $this->getHookDispatcherService())));
        $instance->addExtension(new \Knp\Menu\Twig\MenuExtension(new \Knp\Menu\Twig\Helper(new \Knp\Menu\Renderer\PsrProvider(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'list' => ['privates', 'knp_menu.renderer.list', 'getKnpMenu_Renderer_ListService', false],
            'twig' => ['privates', 'knp_menu.renderer.twig', 'getKnpMenu_Renderer_TwigService', false],
        ], [
            'list' => '?',
            'twig' => '?',
        ]), 'twig', [], false), new \Knp\Menu\Provider\ChainProvider(new RewindableGenerator(function () {
            yield 0 => ($this->privates['knp_menu.menu_provider.lazy'] ?? $this->getKnpMenu_MenuProvider_LazyService());
            yield 1 => ($this->privates['knp_menu.menu_provider.builder_alias'] ?? $this->getKnpMenu_MenuProvider_BuilderAliasService());
            yield 2 => ($this->privates['Zikula\\MenuModule\\Provider\\DoctrineTreeProvider'] ?? $this->getDoctrineTreeProviderService());
        }, 3)), $h, $i), $i, $h));
        $instance->addExtension(new \Liip\ImagineBundle\Templating\FilterExtension(($this->services['liip_imagine.cache.manager'] ?? $this->getLiipImagine_Cache_ManagerService())));
        $instance->addExtension(new \Translation\Bundle\Twig\TranslationExtension($c, true));
        $instance->addExtension(new \Zikula\AdminModule\Twig\Extension\AdminExtension($j, $k));
        $instance->addExtension(new \Zikula\BlocksModule\Twig\Extension\BlocksExtension(($this->privates['Zikula\\BlocksModule\\Api\\BlockApi'] ?? $this->getBlockApiService()), ($this->privates['Zikula\\BlocksModule\\Api\\BlockFilterApi'] ?? $this->getBlockFilterApiService()), ($this->services['Zikula\\ThemeModule\\Engine\\Engine'] ?? $this->getEngineService()), ($this->services['kernel'] ?? $this->get('kernel', 1)), $a));
        $instance->addExtension(new \Zikula\ExtensionsModule\Twig\Extension\DefaultPathExtension(($this->privates['Zikula\\ExtensionsModule\\Api\\CapabilityApi'] ?? $this->getCapabilityApiService()), $d));
        $instance->addExtension(new \Zikula\ExtensionsModule\Twig\Extension\ExtensionsExtension($c));
        $instance->addExtension(new \Zikula\ExtensionsModule\Twig\Extension\ModVarExtension($c, $g));
        $instance->addExtension(new \Zikula\ExtensionsModule\Twig\Extension\UserInterfaceExtension($j));
        $instance->addExtension(new \Zikula\PermissionsModule\Twig\Extension\PermissionsExtension($c, $k));
        $instance->addExtension($l);
        $instance->addExtension(new \Zikula\SearchModule\Twig\TwigExtension($g, $d));
        $instance->addExtension(new \Zikula\SecurityCenterModule\Twig\TwigExtension(new \Zikula\SecurityCenterModule\Api\HtmlFilterApi($g, false, $f)));
        $instance->addExtension(new \Zikula\ThemeModule\Twig\Extension\PageVarExtension($c, $m));
        $instance->addExtension(new \Zikula\ThemeModule\Twig\Extension\ThemeExtension(($this->privates['Zikula\\ThemeModule\\Api\\PageAssetApi'] ?? $this->getPageAssetApiService()), ($this->services['Zikula\\ThemeModule\\Engine\\Asset'] ?? $this->getAssetService())));
        $instance->addExtension(new \Zikula\UsersModule\Twig\Extension\MessageExtension($n, ($this->privates['Zikula\\UsersModule\\Collector\\MessageModuleCollector'] ?? $this->getMessageModuleCollectorService()), $c));
        $instance->addExtension(new \Zikula\UsersModule\Twig\Extension\OnlineExtension(($this->privates['Zikula\\UsersModule\\Entity\\Repository\\UserSessionRepository'] ?? $this->getUserSessionRepositoryService()), $g));
        $instance->addExtension(new \Zikula\UsersModule\Twig\Extension\ProfileExtension($n, ($this->privates['Zikula\\UsersModule\\Collector\\ProfileModuleCollector'] ?? $this->getProfileModuleCollectorService()), $c));
        $instance->setEventDispatcher($f);
        $instance->addGlobal('app', $o);
        $instance->addGlobal('pagevars', $m);
        $instance->addGlobal('themevars', ($this->services['zikula_core.common.theme.themevars'] ?? $this->getZikulaCore_Common_Theme_ThemevarsService()));
        $instance->addGlobal('currentUser', ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()));
        $instance->addRuntimeLoader(new \Twig\RuntimeLoader\ContainerRuntimeLoader(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'Symfony\\Bridge\\Twig\\Extension\\CsrfRuntime' => ['privates', 'twig.runtime.security_csrf', 'getTwig_Runtime_SecurityCsrfService', false],
            'Symfony\\Bridge\\Twig\\Extension\\HttpKernelRuntime' => ['privates', 'twig.runtime.httpkernel', 'getTwig_Runtime_HttpkernelService', false],
            'Symfony\\Component\\Form\\FormRenderer' => ['privates', 'twig.form.renderer', 'getTwig_Form_RendererService', false],
            'Twig\\Extra\\Markdown\\MarkdownRuntime' => ['privates', 'twig.runtime.markdown', 'getTwig_Runtime_MarkdownService', false],
        ], [
            'Symfony\\Bridge\\Twig\\Extension\\CsrfRuntime' => '?',
            'Symfony\\Bridge\\Twig\\Extension\\HttpKernelRuntime' => '?',
            'Symfony\\Component\\Form\\FormRenderer' => '?',
            'Twig\\Extra\\Markdown\\MarkdownRuntime' => '?',
        ])));
        $instance->registerUndefinedFilterCallback([0 => $p, 1 => 'suggestFilter']);
        $instance->registerUndefinedFunctionCallback([0 => $p, 1 => 'suggestFunction']);
        (new \Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator('F j, Y H:i', '%d days', NULL, 0, '.', ','))->configure($instance);

        return $instance;
    }

    /**
     * Gets the public 'validator' shared service.
     *
     * @return \Symfony\Component\Validator\Validator\ValidatorInterface
     */
    protected function getValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Mapping/Factory/MetadataFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Validator/ValidatorInterface.php';

        return $this->services['validator'] = ($this->privates['validator.builder'] ?? $this->getValidator_BuilderService())->getValidator();
    }

    /**
     * Gets the public 'zikula_core.common.theme.assets_css' shared autowired service.
     *
     * @return \Zikula\ThemeModule\Engine\AssetBag
     */
    protected function getZikulaCore_Common_Theme_AssetsCssService()
    {
        return $this->services['zikula_core.common.theme.assets_css'] = new \Zikula\ThemeModule\Engine\AssetBag();
    }

    /**
     * Gets the public 'zikula_core.common.theme.themevars' shared autowired service.
     *
     * @return \Zikula\ThemeModule\Engine\ParameterBag
     */
    protected function getZikulaCore_Common_Theme_ThemevarsService()
    {
        return $this->services['zikula_core.common.theme.themevars'] = new \Zikula\ThemeModule\Engine\ParameterBag(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository'] ?? $this->getExtensionRepositoryService()));
    }

    /**
     * Gets the private '.errored..service_locator.QbjOsEa.Translation\Bundle\EditInPlace\Activator' shared service.
     *
     * @return \Translation\Bundle\EditInPlace\Activator
     */
    protected function getActivatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/EditInPlace/ActivatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/EditInPlace/Activator.php';

        return $this->privates['.errored..service_locator.QbjOsEa.Translation\\Bundle\\EditInPlace\\Activator'] = new \Translation\Bundle\EditInPlace\Activator();
    }

    /**
     * Gets the private '.service_locator.0DbeZ.F' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_0DbeZ_FService()
    {
        return $this->privates['.service_locator.0DbeZ.F'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'blockEntity' => ['privates', 'Zikula\\BlocksModule\\Entity\\BlockEntity', 'getBlockEntityService', false],
        ], [
            'blockEntity' => 'Zikula\\BlocksModule\\Entity\\BlockEntity',
        ]);
    }

    /**
     * Gets the private '.service_locator.0tHmwTc' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_0tHmwTcService()
    {
        return $this->privates['.service_locator.0tHmwTc'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'groupsRepository' => ['services', 'Zikula\\GroupsModule\\Entity\\Repository\\GroupRepository', 'getGroupRepositoryService', false],
            'permissionApi' => ['privates', 'Zikula\\PermissionsModule\\Api\\PermissionApi', 'getPermissionApiService', false],
            'permissionEntity' => ['privates', 'Zikula\\PermissionsModule\\Entity\\PermissionEntity', 'getPermissionEntityService', false],
            'permissionRepository' => ['privates', 'Zikula\\PermissionsModule\\Entity\\Repository\\PermissionRepository', 'getPermissionRepositoryService', false],
        ], [
            'groupsRepository' => '?',
            'permissionApi' => '?',
            'permissionEntity' => 'Zikula\\PermissionsModule\\Entity\\PermissionEntity',
            'permissionRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.1HH3vz4' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_1HH3vz4Service()
    {
        return $this->privates['.service_locator.1HH3vz4'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'accessHelper' => ['privates', 'Zikula\\UsersModule\\Helper\\AccessHelper', 'getAccessHelperService', false],
            'authenticationMethodCollector' => ['privates', 'Zikula\\UsersModule\\Collector\\AuthenticationMethodCollector', 'getAuthenticationMethodCollectorService', false],
            'currentUserApi' => ['services', 'Zikula\\UsersModule\\Api\\CurrentUserApi', 'getCurrentUserApiService', false],
            'eventDispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'hookDispatcher' => ['privates', 'Zikula\\Bundle\\HookBundle\\Dispatcher\\HookDispatcher', 'getHookDispatcherService', false],
            'registrationHelper' => ['privates', 'Zikula\\UsersModule\\Helper\\RegistrationHelper', 'getRegistrationHelperService', false],
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
            'validator' => ['services', 'validator', 'getValidatorService', false],
        ], [
            'accessHelper' => 'Zikula\\UsersModule\\Helper\\AccessHelper',
            'authenticationMethodCollector' => 'Zikula\\UsersModule\\Collector\\AuthenticationMethodCollector',
            'currentUserApi' => '?',
            'eventDispatcher' => '?',
            'hookDispatcher' => '?',
            'registrationHelper' => 'Zikula\\UsersModule\\Helper\\RegistrationHelper',
            'userRepository' => '?',
            'validator' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.2iIdcUP' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_2iIdcUPService()
    {
        return $this->privates['.service_locator.2iIdcUP'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'lostPasswordVerificationHelper' => ['privates', 'Zikula\\ZAuthModule\\Helper\\LostPasswordVerificationHelper', 'getLostPasswordVerificationHelperService', false],
            'mailHelper' => ['privates', 'Zikula\\ZAuthModule\\Helper\\MailHelper', 'getMailHelperService', false],
            'mapping' => ['privates', 'Zikula\\ZAuthModule\\Entity\\AuthenticationMappingEntity', 'getAuthenticationMappingEntityService', false],
        ], [
            'lostPasswordVerificationHelper' => 'Zikula\\ZAuthModule\\Helper\\LostPasswordVerificationHelper',
            'mailHelper' => 'Zikula\\ZAuthModule\\Helper\\MailHelper',
            'mapping' => 'Zikula\\ZAuthModule\\Entity\\AuthenticationMappingEntity',
        ]);
    }

    /**
     * Gets the private '.service_locator.2zylTpH' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_2zylTpHService()
    {
        return $this->privates['.service_locator.2zylTpH'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'entityManager' => ['services', 'doctrine.orm.default_entity_manager', 'getDoctrine_Orm_DefaultEntityManagerService', false],
            'registry' => ['privates', 'Zikula\\CategoriesModule\\Entity\\CategoryRegistryEntity', 'getCategoryRegistryEntityService', false],
        ], [
            'entityManager' => '?',
            'registry' => 'Zikula\\CategoriesModule\\Entity\\CategoryRegistryEntity',
        ]);
    }

    /**
     * Gets the private '.service_locator.3ir3T5X' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_3ir3T5XService()
    {
        return $this->privates['.service_locator.3ir3T5X'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'collector' => ['privates', 'Zikula\\Bundle\\HookBundle\\Collector\\HookCollector', 'getHookCollectorService', false],
            'dispatcher' => ['privates', 'Zikula\\Bundle\\HookBundle\\Dispatcher\\HookDispatcher', 'getHookDispatcherService', false],
            'kernel' => ['services', 'kernel', 'getKernelService', false],
            'permissionApi' => ['privates', 'Zikula\\PermissionsModule\\Api\\PermissionApi', 'getPermissionApiService', false],
            'translator' => ['services', 'translator', 'getTranslatorService', false],
        ], [
            'collector' => '?',
            'dispatcher' => '?',
            'kernel' => '?',
            'permissionApi' => '?',
            'translator' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.3vQOZkO' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_3vQOZkOService()
    {
        return $this->privates['.service_locator.3vQOZkO'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'assetHelper' => ['services', 'Zikula\\ThemeModule\\Engine\\Asset', 'getAssetService', false],
            'extensionRepository' => ['services', 'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository', 'getExtensionRepositoryService', false],
            'requestStack' => ['services', 'request_stack', 'getRequestStackService', false],
        ], [
            'assetHelper' => 'Zikula\\ThemeModule\\Engine\\Asset',
            'extensionRepository' => '?',
            'requestStack' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.45wSGGP' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_45wSGGPService()
    {
        return $this->privates['.service_locator.45wSGGP'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'currentUserApi' => ['services', 'Zikula\\UsersModule\\Api\\CurrentUserApi', 'getCurrentUserApiService', false],
            'eventDispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'hookDispatcher' => ['privates', 'Zikula\\Bundle\\HookBundle\\Dispatcher\\HookDispatcher', 'getHookDispatcherService', false],
            'user' => ['privates', 'Zikula\\UsersModule\\Entity\\UserEntity', 'getUserEntityService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'currentUserApi' => '?',
            'eventDispatcher' => '?',
            'hookDispatcher' => '?',
            'user' => 'Zikula\\UsersModule\\Entity\\UserEntity',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.6oiuNod' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_6oiuNodService()
    {
        return $this->privates['.service_locator.6oiuNod'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'adminCategoryRepository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminCategoryRepository', 'getAdminCategoryRepositoryService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'adminCategoryRepository' => '?',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.7vj43mn' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_7vj43mnService()
    {
        return $this->privates['.service_locator.7vj43mn'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'doctrine' => ['services', 'doctrine', 'getDoctrineService', false],
            'form.factory' => ['services', 'form.factory', 'getForm_FactoryService', false],
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'security.authorization_checker' => ['services', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'security.csrf.token_manager' => ['services', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', false],
            'security.token_storage' => ['services', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'session' => ['services', 'session', 'getSessionService', false],
            'twig' => ['services', 'twig', 'getTwigService', false],
        ], [
            'doctrine' => '?',
            'form.factory' => '?',
            'http_kernel' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
            'security.authorization_checker' => '?',
            'security.csrf.token_manager' => '?',
            'security.token_storage' => '?',
            'session' => '?',
            'twig' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.8493evj' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_8493evjService()
    {
        return $this->privates['.service_locator.8493evj'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'adminCategoryRepository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminCategoryRepository', 'getAdminCategoryRepositoryService', false],
            'adminModuleRepository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminModuleRepository', 'getAdminModuleRepositoryService', false],
            'extensionRepository' => ['services', 'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository', 'getExtensionRepositoryService', false],
            'router' => ['services', 'router', 'getRouterService', false],
        ], [
            'adminCategoryRepository' => '?',
            'adminModuleRepository' => '?',
            'extensionRepository' => '?',
            'router' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.9Ua32ha' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_9Ua32haService()
    {
        return $this->privates['.service_locator.9Ua32ha'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'collector' => ['privates', 'Zikula\\Bundle\\HookBundle\\Collector\\HookCollector', 'getHookCollectorService', false],
            'dispatcher' => ['privates', 'Zikula\\Bundle\\HookBundle\\Dispatcher\\HookDispatcher', 'getHookDispatcherService', false],
            'extensionRepository' => ['services', 'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository', 'getExtensionRepositoryService', false],
            'permissionApi' => ['privates', 'Zikula\\PermissionsModule\\Api\\PermissionApi', 'getPermissionApiService', false],
            'requestStack' => ['services', 'request_stack', 'getRequestStackService', false],
        ], [
            'collector' => '?',
            'dispatcher' => '?',
            'extensionRepository' => '?',
            'permissionApi' => '?',
            'requestStack' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.AO0lF5Z' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_AO0lF5ZService()
    {
        return $this->privates['.service_locator.AO0lF5Z'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'extension' => ['privates', 'Zikula\\ExtensionsModule\\Entity\\ExtensionEntity', 'getExtensionEntityService', false],
        ], [
            'extension' => 'Zikula\\ExtensionsModule\\Entity\\ExtensionEntity',
        ]);
    }

    /**
     * Gets the private '.service_locator.ARmHTLY' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_ARmHTLYService()
    {
        return $this->privates['.service_locator.ARmHTLY'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'kernel' => ['services', 'kernel', 'getKernelService', false],
            'requestStack' => ['services', 'request_stack', 'getRequestStackService', false],
            'updateCheckHelper' => ['privates', 'Zikula\\AdminModule\\Helper\\UpdateCheckHelper', 'getUpdateCheckHelperService', false],
        ], [
            'kernel' => '?',
            'requestStack' => '?',
            'updateCheckHelper' => 'Zikula\\AdminModule\\Helper\\UpdateCheckHelper',
        ]);
    }

    /**
     * Gets the private '.service_locator.AX19wVn' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_AX19wVnService()
    {
        return $this->privates['.service_locator.AX19wVn'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'eventDispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'groupEntity' => ['privates', 'Zikula\\GroupsModule\\Entity\\GroupEntity', 'getGroupEntityService', false],
        ], [
            'eventDispatcher' => '?',
            'groupEntity' => 'Zikula\\GroupsModule\\Entity\\GroupEntity',
        ]);
    }

    /**
     * Gets the private '.service_locator.Ay.NhXZ' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_Ay_NhXZService()
    {
        return $this->privates['.service_locator.Ay.NhXZ'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'userRepository' => '?',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.B5P8uRf' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_B5P8uRfService()
    {
        return $this->privates['.service_locator.B5P8uRf'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'controllerHelper' => ['privates', 'Zikula\\RoutesModule\\Helper\\ControllerHelper', 'getControllerHelper2Service', false],
            'permissionHelper' => ['privates', 'Zikula\\RoutesModule\\Helper\\PermissionHelper', 'getPermissionHelperService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'viewHelper' => ['privates', 'Zikula\\RoutesModule\\Helper\\ViewHelper', 'getViewHelperService', false],
        ], [
            'controllerHelper' => 'Zikula\\RoutesModule\\Helper\\ControllerHelper',
            'permissionHelper' => 'Zikula\\RoutesModule\\Helper\\PermissionHelper',
            'router' => '?',
            'viewHelper' => 'Zikula\\RoutesModule\\Helper\\ViewHelper',
        ]);
    }

    /**
     * Gets the private '.service_locator.B60LH_3' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_B60LH3Service()
    {
        return $this->privates['.service_locator.B60LH_3'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'cacheClearer' => ['services', 'Zikula\\Bundle\\CoreBundle\\CacheClearer', 'getCacheClearer2Service', false],
            'extensionRepository' => ['services', 'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository', 'getExtensionRepositoryService', false],
            'extensionStateHelper' => ['privates', 'Zikula\\ExtensionsModule\\Helper\\ExtensionStateHelper', 'getExtensionStateHelperService', false],
        ], [
            'cacheClearer' => 'Zikula\\Bundle\\CoreBundle\\CacheClearer',
            'extensionRepository' => '?',
            'extensionStateHelper' => 'Zikula\\ExtensionsModule\\Helper\\ExtensionStateHelper',
        ]);
    }

    /**
     * Gets the private '.service_locator.CNpdA_S' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_CNpdASService()
    {
        return $this->privates['.service_locator.CNpdA_S'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'extensionRepository' => ['services', 'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository', 'getExtensionRepositoryService', false],
            'requestStack' => ['services', 'request_stack', 'getRequestStackService', false],
        ], [
            'extensionRepository' => '?',
            'requestStack' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.DJ.IY53' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_DJ_IY53Service()
    {
        return $this->privates['.service_locator.DJ.IY53'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'permissionRepository' => ['privates', 'Zikula\\PermissionsModule\\Entity\\Repository\\PermissionRepository', 'getPermissionRepositoryService', false],
        ], [
            'permissionRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.DJ6_IjB' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_DJ6IjBService()
    {
        return $this->privates['.service_locator.DJ6_IjB'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.DVCX.KX' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_DVCX_KXService()
    {
        return $this->privates['.service_locator.DVCX.KX'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'adminModuleRepository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminModuleRepository', 'getAdminModuleRepositoryService', false],
        ], [
            'adminModuleRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.DxQr8Um' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_DxQr8UmService()
    {
        return $this->privates['.service_locator.DxQr8Um'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'requestStack' => ['services', 'request_stack', 'getRequestStackService', false],
        ], [
            'requestStack' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.E8jKebo' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_E8jKeboService()
    {
        return $this->privates['.service_locator.E8jKebo'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'adminCategoryRepository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminCategoryRepository', 'getAdminCategoryRepositoryService', false],
            'router' => ['services', 'router', 'getRouterService', false],
        ], [
            'adminCategoryRepository' => '?',
            'router' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.EgMOG4q' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_EgMOG4qService()
    {
        return $this->privates['.service_locator.EgMOG4q'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'multilingualRoutingHelper' => ['services', 'Zikula\\RoutesModule\\Helper\\MultilingualRoutingHelper', 'getMultilingualRoutingHelperService', false],
            'permissionHelper' => ['privates', 'Zikula\\RoutesModule\\Helper\\PermissionHelper', 'getPermissionHelperService', false],
        ], [
            'multilingualRoutingHelper' => 'Zikula\\RoutesModule\\Helper\\MultilingualRoutingHelper',
            'permissionHelper' => 'Zikula\\RoutesModule\\Helper\\PermissionHelper',
        ]);
    }

    /**
     * Gets the private '.service_locator.EoJL95I' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_EoJL95IService()
    {
        return $this->privates['.service_locator.EoJL95I'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'group' => ['privates', 'Zikula\\GroupsModule\\Entity\\GroupEntity', 'getGroupEntityService', false],
            'userSessionRepository' => ['privates', 'Zikula\\UsersModule\\Entity\\Repository\\UserSessionRepository', 'getUserSessionRepositoryService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'group' => 'Zikula\\GroupsModule\\Entity\\GroupEntity',
            'userSessionRepository' => '?',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.EyHY1Lm' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_EyHY1LmService()
    {
        return $this->privates['.service_locator.EyHY1Lm'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'menuItemEntity' => ['privates', 'Zikula\\MenuModule\\Entity\\MenuItemEntity', 'getMenuItemEntityService', false],
            'menuItemRepository' => ['privates', 'Zikula\\MenuModule\\Entity\\Repository\\MenuItemRepository', 'getMenuItemRepositoryService', false],
        ], [
            'menuItemEntity' => 'Zikula\\MenuModule\\Entity\\MenuItemEntity',
            'menuItemRepository' => 'Zikula\\MenuModule\\Entity\\Repository\\MenuItemRepository',
        ]);
    }

    /**
     * Gets the private '.service_locator.F7mvmfb' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_F7mvmfbService()
    {
        return $this->privates['.service_locator.F7mvmfb'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'categoryRepository' => ['services', 'Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRepository', 'getCategoryRepositoryService', false],
            'processingHelper' => ['privates', 'Zikula\\CategoriesModule\\Helper\\CategoryProcessingHelper', 'getCategoryProcessingHelperService', false],
        ], [
            'categoryRepository' => 'Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRepository',
            'processingHelper' => 'Zikula\\CategoriesModule\\Helper\\CategoryProcessingHelper',
        ]);
    }

    /**
     * Gets the private '.service_locator.FxrlP9R' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_FxrlP9RService()
    {
        return $this->privates['.service_locator.FxrlP9R'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'cacheClearer' => ['services', 'Zikula\\Bundle\\CoreBundle\\CacheClearer', 'getCacheClearer2Service', false],
            'permissionHelper' => ['privates', 'Zikula\\RoutesModule\\Helper\\PermissionHelper', 'getPermissionHelperService', false],
            'routeDumperHelper' => ['privates', 'Zikula\\RoutesModule\\Helper\\RouteDumperHelper', 'getRouteDumperHelperService', false],
        ], [
            'cacheClearer' => 'Zikula\\Bundle\\CoreBundle\\CacheClearer',
            'permissionHelper' => 'Zikula\\RoutesModule\\Helper\\PermissionHelper',
            'routeDumperHelper' => 'Zikula\\RoutesModule\\Helper\\RouteDumperHelper',
        ]);
    }

    /**
     * Gets the private '.service_locator.GNc7rhp' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_GNc7rhpService()
    {
        return $this->privates['.service_locator.GNc7rhp'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'doctrine' => ['services', 'doctrine', 'getDoctrineService', false],
            'form.factory' => ['services', 'form.factory', 'getForm_FactoryService', false],
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'security.authorization_checker' => ['services', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'security.csrf.token_manager' => ['services', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', false],
            'security.token_storage' => ['services', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'session' => ['services', 'session', 'getSessionService', false],
            'twig' => ['services', 'twig', 'getTwigService', false],
        ], [
            'doctrine' => '?',
            'form.factory' => '?',
            'http_kernel' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
            'security.authorization_checker' => '?',
            'security.csrf.token_manager' => '?',
            'security.token_storage' => '?',
            'session' => '?',
            'twig' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.GT5Kcf8' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_GT5Kcf8Service()
    {
        return $this->privates['.service_locator.GT5Kcf8'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'doctrine' => ['services', 'doctrine', 'getDoctrineService', false],
            'form.factory' => ['services', 'form.factory', 'getForm_FactoryService', false],
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'security.authorization_checker' => ['services', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'security.csrf.token_manager' => ['services', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', false],
            'security.token_storage' => ['services', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'session' => ['services', 'session', 'getSessionService', false],
            'twig' => ['services', 'twig', 'getTwigService', false],
        ], [
            'doctrine' => '?',
            'form.factory' => '?',
            'http_kernel' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
            'security.authorization_checker' => '?',
            'security.csrf.token_manager' => '?',
            'security.token_storage' => '?',
            'session' => '?',
            'twig' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.GXTYbGg' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_GXTYbGgService()
    {
        return $this->privates['.service_locator.GXTYbGg'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'themeRepository' => ['services', 'Zikula\\ThemeModule\\Entity\\Repository\\ThemeEntityRepository', 'getThemeEntityRepositoryService', false],
        ], [
            'themeRepository' => 'Zikula\\ThemeModule\\Entity\\Repository\\ThemeEntityRepository',
        ]);
    }

    /**
     * Gets the private '.service_locator.HogTcZF' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_HogTcZFService()
    {
        return $this->privates['.service_locator.HogTcZF'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'accessHelper' => ['privates', 'Zikula\\UsersModule\\Helper\\AccessHelper', 'getAccessHelperService', false],
            'authenticationMappingRepository' => ['privates', 'Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository', 'getAuthenticationMappingRepositoryService', false],
            'currentUserApi' => ['services', 'Zikula\\UsersModule\\Api\\CurrentUserApi', 'getCurrentUserApiService', false],
            'passwordApi' => ['services', 'Zikula\\ZAuthModule\\Api\\PasswordApi', 'getPasswordApiService', false],
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'accessHelper' => 'Zikula\\UsersModule\\Helper\\AccessHelper',
            'authenticationMappingRepository' => '?',
            'currentUserApi' => '?',
            'passwordApi' => '?',
            'userRepository' => '?',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.IK_AoaO' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_IKAoaOService()
    {
        return $this->privates['.service_locator.IK_AoaO'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'profileModuleCollector' => ['privates', 'Zikula\\UsersModule\\Collector\\ProfileModuleCollector', 'getProfileModuleCollectorService', false],
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
        ], [
            'profileModuleCollector' => 'Zikula\\UsersModule\\Collector\\ProfileModuleCollector',
            'userRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.IQcf4l5' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_IQcf4l5Service()
    {
        return $this->privates['.service_locator.IQcf4l5'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'doctrine' => ['services', 'doctrine', 'getDoctrineService', false],
            'form.factory' => ['services', 'form.factory', 'getForm_FactoryService', false],
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'security.authorization_checker' => ['services', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'security.csrf.token_manager' => ['services', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', false],
            'security.token_storage' => ['services', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'session' => ['services', 'session', 'getSessionService', false],
            'twig' => ['services', 'twig', 'getTwigService', false],
        ], [
            'doctrine' => '?',
            'form.factory' => '?',
            'http_kernel' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
            'security.authorization_checker' => '?',
            'security.csrf.token_manager' => '?',
            'security.token_storage' => '?',
            'session' => '?',
            'twig' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.J36JJqg' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_J36JJqgService()
    {
        return $this->privates['.service_locator.J36JJqg'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'configDumper' => ['services', 'Zikula\\Bundle\\CoreBundle\\DynamicConfigDumper', 'getDynamicConfigDumperService', false],
            'mailerApi' => ['privates', 'Zikula\\MailerModule\\Api\\MailerApi', 'getMailerApiService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'configDumper' => 'Zikula\\Bundle\\CoreBundle\\DynamicConfigDumper',
            'mailerApi' => '?',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.JHsD_cg' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_JHsDCgService()
    {
        return $this->privates['.service_locator.JHsD_cg'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'Zikula\\AdminModule\\Controller\\AdminController::adminpanelAction' => ['privates', '.service_locator.ddxR4fK', 'get_ServiceLocator_DdxR4fKService', false],
            'Zikula\\AdminModule\\Controller\\AdminController::categorymenuAction' => ['privates', '.service_locator.gxU0C5u', 'get_ServiceLocator_GxU0C5uService', false],
            'Zikula\\AdminModule\\Controller\\AdminController::deleteAction' => ['privates', '.service_locator.qi_rkSP', 'get_ServiceLocator_QiRkSPService', false],
            'Zikula\\AdminModule\\Controller\\AdminController::modifyAction' => ['privates', '.service_locator.qi_rkSP', 'get_ServiceLocator_QiRkSPService', false],
            'Zikula\\AdminModule\\Controller\\AdminController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\AdminModule\\Controller\\AdminController::viewAction' => ['privates', '.service_locator.Q6Excfe', 'get_ServiceLocator_Q6ExcfeService', false],
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController::breadcrumbsAction' => ['privates', '.service_locator.wTOCTmi', 'get_ServiceLocator_WTOCTmiService', false],
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController::footerAction' => ['privates', '.service_locator.CNpdA_S', 'get_ServiceLocator_CNpdASService', false],
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController::headerAction' => ['privates', '.service_locator.DxQr8Um', 'get_ServiceLocator_DxQr8UmService', false],
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController::menuAction' => ['privates', '.service_locator.Qd2v43d', 'get_ServiceLocator_Qd2v43dService', false],
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController::securityanalyzerAction' => ['privates', '.service_locator.ZYCs5qz', 'get_ServiceLocator_ZYCs5qzService', false],
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController::updatecheckAction' => ['privates', '.service_locator.ARmHTLY', 'get_ServiceLocator_ARmHTLYService', false],
            'Zikula\\AdminModule\\Controller\\AjaxController::addCategoryAction' => ['privates', '.service_locator.E8jKebo', 'get_ServiceLocator_E8jKeboService', false],
            'Zikula\\AdminModule\\Controller\\AjaxController::changeModuleCategoryAction' => ['privates', '.service_locator.8493evj', 'get_ServiceLocator_8493evjService', false],
            'Zikula\\AdminModule\\Controller\\AjaxController::defaultCategoryAction' => ['privates', '.service_locator.6oiuNod', 'get_ServiceLocator_6oiuNodService', false],
            'Zikula\\AdminModule\\Controller\\AjaxController::deleteCategoryAction' => ['privates', '.service_locator.zkRr5GG', 'get_ServiceLocator_ZkRr5GGService', false],
            'Zikula\\AdminModule\\Controller\\AjaxController::editCategoryAction' => ['privates', '.service_locator.UYLqkkP', 'get_ServiceLocator_UYLqkkPService', false],
            'Zikula\\AdminModule\\Controller\\AjaxController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\AdminModule\\Controller\\AjaxController::sortCategoriesAction' => ['privates', '.service_locator.UYLqkkP', 'get_ServiceLocator_UYLqkkPService', false],
            'Zikula\\AdminModule\\Controller\\AjaxController::sortModulesAction' => ['privates', '.service_locator.DVCX.KX', 'get_ServiceLocator_DVCX_KXService', false],
            'Zikula\\AdminModule\\Controller\\ConfigController::configAction' => ['privates', '.service_locator.o2lcBnc', 'get_ServiceLocator_O2lcBncService', false],
            'Zikula\\AdminModule\\Controller\\ConfigController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\BlocksModule\\Controller\\AdminController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\BlocksModule\\Controller\\AdminController::viewAction' => ['privates', '.service_locator.lLVQ1cm', 'get_ServiceLocator_LLVQ1cmService', false],
            'Zikula\\BlocksModule\\Controller\\BlockController::deleteAction' => ['privates', '.service_locator.0DbeZ.F', 'get_ServiceLocator_0DbeZ_FService', false],
            'Zikula\\BlocksModule\\Controller\\BlockController::editAction' => ['privates', '.service_locator.rjioojn', 'get_ServiceLocator_RjioojnService', false],
            'Zikula\\BlocksModule\\Controller\\BlockController::newAction' => ['privates', '.service_locator.j_lmtN.', 'get_ServiceLocator_JLmtN_Service', false],
            'Zikula\\BlocksModule\\Controller\\BlockController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\BlocksModule\\Controller\\BlockController::viewAction' => ['privates', '.service_locator.uv0Gloe', 'get_ServiceLocator_Uv0GloeService', false],
            'Zikula\\BlocksModule\\Controller\\ConfigController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\BlocksModule\\Controller\\PlacementController::editAction' => ['privates', '.service_locator.nwBlUkS', 'get_ServiceLocator_NwBlUkSService', false],
            'Zikula\\BlocksModule\\Controller\\PlacementController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\BlocksModule\\Controller\\PositionController::deleteAction' => ['privates', '.service_locator.LJO0t4C', 'get_ServiceLocator_LJO0t4CService', false],
            'Zikula\\BlocksModule\\Controller\\PositionController::editAction' => ['privates', '.service_locator.Y6FYYyz', 'get_ServiceLocator_Y6FYYyzService', false],
            'Zikula\\BlocksModule\\Controller\\PositionController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\Bundle\\HookBundle\\Controller\\HookController::changeProviderAreaOrderAction' => ['privates', '.service_locator.T5htiMj', 'get_ServiceLocator_T5htiMjService', false],
            'Zikula\\Bundle\\HookBundle\\Controller\\HookController::editAction' => ['privates', '.service_locator.9Ua32ha', 'get_ServiceLocator_9Ua32haService', false],
            'Zikula\\Bundle\\HookBundle\\Controller\\HookController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\Bundle\\HookBundle\\Controller\\HookController::toggleSubscribeAreaStatusAction' => ['privates', '.service_locator.3ir3T5X', 'get_ServiceLocator_3ir3T5XService', false],
            'Zikula\\Bundle\\WorkflowBundle\\Controller\\EditorController::indexAction' => ['privates', '.service_locator.woEf4Un', 'get_ServiceLocator_WoEf4UnService', false],
            'Zikula\\CategoriesModule\\Controller\\CategoryController::listAction' => ['privates', '.service_locator.Yt68Lxm', 'get_ServiceLocator_Yt68LxmService', false],
            'Zikula\\CategoriesModule\\Controller\\CategoryController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\CategoriesModule\\Controller\\NodeController::contextMenuAction' => ['privates', '.service_locator._BDNuWv', 'get_ServiceLocator_BDNuWvService', false],
            'Zikula\\CategoriesModule\\Controller\\NodeController::moveAction' => ['privates', '.service_locator.F7mvmfb', 'get_ServiceLocator_F7mvmfbService', false],
            'Zikula\\CategoriesModule\\Controller\\NodeController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\CategoriesModule\\Controller\\RegistryController::deleteAction' => ['privates', '.service_locator.2zylTpH', 'get_ServiceLocator_2zylTpHService', false],
            'Zikula\\CategoriesModule\\Controller\\RegistryController::editAction' => ['privates', '.service_locator.fWyCulK', 'get_ServiceLocator_FWyCulKService', false],
            'Zikula\\CategoriesModule\\Controller\\RegistryController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ExtensionsModule\\Controller\\ConfigController::configAction' => ['privates', '.service_locator.RehufEE', 'get_ServiceLocator_RehufEEService', false],
            'Zikula\\ExtensionsModule\\Controller\\ConfigController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController::breadcrumbsAction' => ['privates', '.service_locator.CNpdA_S', 'get_ServiceLocator_CNpdASService', false],
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController::footerAction' => ['privates', '.service_locator.DxQr8Um', 'get_ServiceLocator_DxQr8UmService', false],
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController::headerAction' => ['privates', '.service_locator.3vQOZkO', 'get_ServiceLocator_3vQOZkOService', false],
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController::linksAction' => ['privates', '.service_locator.YMGaOSJ', 'get_ServiceLocator_YMGaOSJService', false],
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ExtensionsModule\\Controller\\ModuleController::activateAction' => ['privates', '.service_locator.B60LH_3', 'get_ServiceLocator_B60LH3Service', false],
            'Zikula\\ExtensionsModule\\Controller\\ModuleController::compatibilityAction' => ['privates', '.service_locator.AO0lF5Z', 'get_ServiceLocator_AO0lF5ZService', false],
            'Zikula\\ExtensionsModule\\Controller\\ModuleController::deactivateAction' => ['privates', '.service_locator.B60LH_3', 'get_ServiceLocator_B60LH3Service', false],
            'Zikula\\ExtensionsModule\\Controller\\ModuleController::installAction' => ['privates', '.service_locator.bxPsQVH', 'get_ServiceLocator_BxPsQVHService', false],
            'Zikula\\ExtensionsModule\\Controller\\ModuleController::modifyAction' => ['privates', '.service_locator.x2mM6.W', 'get_ServiceLocator_X2mM6_WService', false],
            'Zikula\\ExtensionsModule\\Controller\\ModuleController::postInstallAction' => ['privates', '.service_locator.v2pqszd', 'get_ServiceLocator_V2pqszdService', false],
            'Zikula\\ExtensionsModule\\Controller\\ModuleController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ExtensionsModule\\Controller\\ModuleController::uninstallAction' => ['privates', '.service_locator.PyFwzGk', 'get_ServiceLocator_PyFwzGkService', false],
            'Zikula\\ExtensionsModule\\Controller\\ModuleController::upgradeAction' => ['privates', '.service_locator.ZnkMVkQ', 'get_ServiceLocator_ZnkMVkQService', false],
            'Zikula\\ExtensionsModule\\Controller\\ModuleController::viewModuleListAction' => ['privates', '.service_locator.Mjns3VX', 'get_ServiceLocator_Mjns3VXService', false],
            'Zikula\\ExtensionsModule\\Controller\\ServicesController::moduleServicesAction' => ['privates', '.service_locator.XdDM4ci', 'get_ServiceLocator_XdDM4ciService', false],
            'Zikula\\ExtensionsModule\\Controller\\ServicesController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\GroupsModule\\Controller\\ApplicationController::adminAction' => ['privates', '.service_locator.ymo5u1_', 'get_ServiceLocator_Ymo5u1Service', false],
            'Zikula\\GroupsModule\\Controller\\ApplicationController::createAction' => ['privates', '.service_locator.uGcwr.9', 'get_ServiceLocator_UGcwr_9Service', false],
            'Zikula\\GroupsModule\\Controller\\ApplicationController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\GroupsModule\\Controller\\ConfigController::configAction' => ['privates', '.service_locator.MP6F85r', 'get_ServiceLocator_MP6F85rService', false],
            'Zikula\\GroupsModule\\Controller\\ConfigController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\GroupsModule\\Controller\\GroupController::adminListAction' => ['privates', '.service_locator.y2AvubJ', 'get_ServiceLocator_Y2AvubJService', false],
            'Zikula\\GroupsModule\\Controller\\GroupController::createAction' => ['privates', '.service_locator.XdDM4ci', 'get_ServiceLocator_XdDM4ciService', false],
            'Zikula\\GroupsModule\\Controller\\GroupController::editAction' => ['privates', '.service_locator.AX19wVn', 'get_ServiceLocator_AX19wVnService', false],
            'Zikula\\GroupsModule\\Controller\\GroupController::listAction' => ['privates', '.service_locator.MP6F85r', 'get_ServiceLocator_MP6F85rService', false],
            'Zikula\\GroupsModule\\Controller\\GroupController::removeAction' => ['privates', '.service_locator.AX19wVn', 'get_ServiceLocator_AX19wVnService', false],
            'Zikula\\GroupsModule\\Controller\\GroupController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\GroupsModule\\Controller\\MembershipController::addAction' => ['privates', '.service_locator.NPQiHiN', 'get_ServiceLocator_NPQiHiNService', false],
            'Zikula\\GroupsModule\\Controller\\MembershipController::adminListAction' => ['privates', '.service_locator.jx7C1V3', 'get_ServiceLocator_Jx7C1V3Service', false],
            'Zikula\\GroupsModule\\Controller\\MembershipController::getUsersByFragmentAsTableAction' => ['privates', '.service_locator.S3oQfnr', 'get_ServiceLocator_S3oQfnrService', false],
            'Zikula\\GroupsModule\\Controller\\MembershipController::joinAction' => ['privates', '.service_locator.hg8Nqz8', 'get_ServiceLocator_Hg8Nqz8Service', false],
            'Zikula\\GroupsModule\\Controller\\MembershipController::leaveAction' => ['privates', '.service_locator.hg8Nqz8', 'get_ServiceLocator_Hg8Nqz8Service', false],
            'Zikula\\GroupsModule\\Controller\\MembershipController::listAction' => ['privates', '.service_locator.EoJL95I', 'get_ServiceLocator_EoJL95IService', false],
            'Zikula\\GroupsModule\\Controller\\MembershipController::removeAction' => ['privates', '.service_locator.gSvt8Pq', 'get_ServiceLocator_GSvt8PqService', false],
            'Zikula\\GroupsModule\\Controller\\MembershipController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\MailerModule\\Controller\\ConfigController::configAction' => ['privates', '.service_locator.trGWsqD', 'get_ServiceLocator_TrGWsqDService', false],
            'Zikula\\MailerModule\\Controller\\ConfigController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\MailerModule\\Controller\\ConfigController::testAction' => ['privates', '.service_locator.J36JJqg', 'get_ServiceLocator_J36JJqgService', false],
            'Zikula\\MenuModule\\Controller\\ConfigController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\MenuModule\\Controller\\MenuController::deleteAction' => ['privates', '.service_locator.UXQzp0z', 'get_ServiceLocator_UXQzp0zService', false],
            'Zikula\\MenuModule\\Controller\\MenuController::editAction' => ['privates', '.service_locator.jM8x..f', 'get_ServiceLocator_JM8x__FService', false],
            'Zikula\\MenuModule\\Controller\\MenuController::listAction' => ['privates', '.service_locator.u8DyEi_', 'get_ServiceLocator_U8DyEiService', false],
            'Zikula\\MenuModule\\Controller\\MenuController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\MenuModule\\Controller\\MenuController::viewAction' => ['privates', '.service_locator.EyHY1Lm', 'get_ServiceLocator_EyHY1LmService', false],
            'Zikula\\MenuModule\\Controller\\NodeController::contextMenuAction' => ['privates', '.service_locator.jM8x..f', 'get_ServiceLocator_JM8x__FService', false],
            'Zikula\\MenuModule\\Controller\\NodeController::moveAction' => ['privates', '.service_locator.u8DyEi_', 'get_ServiceLocator_U8DyEiService', false],
            'Zikula\\MenuModule\\Controller\\NodeController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\PermissionsModule\\Controller\\ConfigController::configAction' => ['privates', '.service_locator.x.KNJyk', 'get_ServiceLocator_X_KNJykService', false],
            'Zikula\\PermissionsModule\\Controller\\ConfigController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\PermissionsModule\\Controller\\PermissionController::changeOrderAction' => ['privates', '.service_locator.DJ.IY53', 'get_ServiceLocator_DJ_IY53Service', false],
            'Zikula\\PermissionsModule\\Controller\\PermissionController::deleteAction' => ['privates', '.service_locator.kl87m7D', 'get_ServiceLocator_Kl87m7DService', false],
            'Zikula\\PermissionsModule\\Controller\\PermissionController::editAction' => ['privates', '.service_locator.0tHmwTc', 'get_ServiceLocator_0tHmwTcService', false],
            'Zikula\\PermissionsModule\\Controller\\PermissionController::listAction' => ['privates', '.service_locator.c4QGT1L', 'get_ServiceLocator_C4QGT1LService', false],
            'Zikula\\PermissionsModule\\Controller\\PermissionController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\PermissionsModule\\Controller\\PermissionController::testAction' => ['privates', '.service_locator.bhmUFxm', 'get_ServiceLocator_BhmUFxmService', false],
            'Zikula\\RoutesModule\\Controller\\AjaxController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\RoutesModule\\Controller\\AjaxController::updateSortPositionsAction' => ['privates', '.service_locator.RAt1Xco', 'get_ServiceLocator_RAt1XcoService', false],
            'Zikula\\RoutesModule\\Controller\\ConfigController::configAction' => ['privates', '.service_locator.PxQboCn', 'get_ServiceLocator_PxQboCnService', false],
            'Zikula\\RoutesModule\\Controller\\ConfigController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\RoutesModule\\Controller\\RouteController::adminDisplayAction' => ['privates', '.service_locator.SZXLtQR', 'get_ServiceLocator_SZXLtQRService', false],
            'Zikula\\RoutesModule\\Controller\\RouteController::adminEditAction' => ['privates', '.service_locator.qUTQ8Yv', 'get_ServiceLocator_QUTQ8YvService', false],
            'Zikula\\RoutesModule\\Controller\\RouteController::adminHandleSelectedEntriesAction' => ['privates', '.service_locator.r4oPMH7', 'get_ServiceLocator_R4oPMH7Service', false],
            'Zikula\\RoutesModule\\Controller\\RouteController::adminIndexAction' => ['privates', '.service_locator.hohOVVO', 'get_ServiceLocator_HohOVVOService', false],
            'Zikula\\RoutesModule\\Controller\\RouteController::adminViewAction' => ['privates', '.service_locator.B5P8uRf', 'get_ServiceLocator_B5P8uRfService', false],
            'Zikula\\RoutesModule\\Controller\\RouteController::displayAction' => ['privates', '.service_locator.SZXLtQR', 'get_ServiceLocator_SZXLtQRService', false],
            'Zikula\\RoutesModule\\Controller\\RouteController::editAction' => ['privates', '.service_locator.qUTQ8Yv', 'get_ServiceLocator_QUTQ8YvService', false],
            'Zikula\\RoutesModule\\Controller\\RouteController::handleSelectedEntriesAction' => ['privates', '.service_locator.r4oPMH7', 'get_ServiceLocator_R4oPMH7Service', false],
            'Zikula\\RoutesModule\\Controller\\RouteController::indexAction' => ['privates', '.service_locator.hohOVVO', 'get_ServiceLocator_HohOVVOService', false],
            'Zikula\\RoutesModule\\Controller\\RouteController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\RoutesModule\\Controller\\RouteController::viewAction' => ['privates', '.service_locator.B5P8uRf', 'get_ServiceLocator_B5P8uRfService', false],
            'Zikula\\RoutesModule\\Controller\\UpdateController::dumpJsRoutesAction' => ['privates', '.service_locator.NX_lu0O', 'get_ServiceLocator_NXLu0OService', false],
            'Zikula\\RoutesModule\\Controller\\UpdateController::reloadAction' => ['privates', '.service_locator.FxrlP9R', 'get_ServiceLocator_FxrlP9RService', false],
            'Zikula\\RoutesModule\\Controller\\UpdateController::renewAction' => ['privates', '.service_locator.EgMOG4q', 'get_ServiceLocator_EgMOG4qService', false],
            'Zikula\\RoutesModule\\Controller\\UpdateController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\SearchModule\\Controller\\ConfigController::configAction' => ['privates', '.service_locator.gDZjEEP', 'get_ServiceLocator_GDZjEEPService', false],
            'Zikula\\SearchModule\\Controller\\ConfigController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\SearchModule\\Controller\\SearchController::executeAction' => ['privates', '.service_locator.z8jU37N', 'get_ServiceLocator_Z8jU37NService', false],
            'Zikula\\SearchModule\\Controller\\SearchController::opensearchAction' => ['privates', '.service_locator.DJ6_IjB', 'get_ServiceLocator_DJ6IjBService', false],
            'Zikula\\SearchModule\\Controller\\SearchController::recentAction' => ['privates', '.service_locator.z1ANE._', 'get_ServiceLocator_Z1ANE_Service', false],
            'Zikula\\SearchModule\\Controller\\SearchController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\SecurityCenterModule\\Controller\\ConfigController::allowedhtmlAction' => ['privates', '.service_locator.LFdkE7T', 'get_ServiceLocator_LFdkE7TService', false],
            'Zikula\\SecurityCenterModule\\Controller\\ConfigController::configAction' => ['privates', '.service_locator.nzfZYg.', 'get_ServiceLocator_NzfZYg_Service', false],
            'Zikula\\SecurityCenterModule\\Controller\\ConfigController::purifierconfigAction' => ['privates', '.service_locator.Rn.c2h9', 'get_ServiceLocator_Rn_C2h9Service', false],
            'Zikula\\SecurityCenterModule\\Controller\\ConfigController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController::deleteentryAction' => ['privates', '.service_locator.S9SudG.', 'get_ServiceLocator_S9SudG_Service', false],
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController::exportAction' => ['privates', '.service_locator.S9SudG.', 'get_ServiceLocator_S9SudG_Service', false],
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController::purgeAction' => ['privates', '.service_locator.S9SudG.', 'get_ServiceLocator_S9SudG_Service', false],
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController::viewAction' => ['privates', '.service_locator.ghFHQf1', 'get_ServiceLocator_GhFHQf1Service', false],
            'Zikula\\SettingsModule\\Controller\\SettingsController::localeAction' => ['privates', '.service_locator.g77nwt4', 'get_ServiceLocator_G77nwt4Service', false],
            'Zikula\\SettingsModule\\Controller\\SettingsController::mainAction' => ['privates', '.service_locator.P7qdpMw', 'get_ServiceLocator_P7qdpMwService', false],
            'Zikula\\SettingsModule\\Controller\\SettingsController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\SettingsModule\\Controller\\SettingsController::toggleEditInPlaceAction' => ['privates', '.service_locator.QbjOsEa', 'get_ServiceLocator_QbjOsEaService', false],
            'Zikula\\ThemeModule\\Controller\\CombinedAssetController::assetAction' => ['privates', '.service_locator.VC15VB8', 'get_ServiceLocator_VC15VB8Service', false],
            'Zikula\\ThemeModule\\Controller\\CombinedAssetController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ThemeModule\\Controller\\ThemeController::activateAction' => ['privates', '.service_locator.vvjD5fm', 'get_ServiceLocator_VvjD5fmService', false],
            'Zikula\\ThemeModule\\Controller\\ThemeController::creditsAction' => ['privates', '.service_locator.GXTYbGg', 'get_ServiceLocator_GXTYbGgService', false],
            'Zikula\\ThemeModule\\Controller\\ThemeController::deleteAction' => ['privates', '.service_locator._9jopT8', 'get_ServiceLocator_9jopT8Service', false],
            'Zikula\\ThemeModule\\Controller\\ThemeController::previewAction' => ['privates', '.service_locator.aukUB8P', 'get_ServiceLocator_AukUB8PService', false],
            'Zikula\\ThemeModule\\Controller\\ThemeController::setAsDefaultAction' => ['privates', '.service_locator.wT30FSu', 'get_ServiceLocator_WT30FSuService', false],
            'Zikula\\ThemeModule\\Controller\\ThemeController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ThemeModule\\Controller\\ThemeController::viewAction' => ['privates', '.service_locator.xkQyMNr', 'get_ServiceLocator_XkQyMNrService', false],
            'Zikula\\ThemeModule\\Controller\\VarController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ThemeModule\\Controller\\VarController::varAction' => ['privates', '.service_locator.ZYCs5qz', 'get_ServiceLocator_ZYCs5qzService', false],
            'Zikula\\UsersModule\\Controller\\AccessController::loginAction' => ['privates', '.service_locator.ktNcpdk', 'get_ServiceLocator_KtNcpdkService', false],
            'Zikula\\UsersModule\\Controller\\AccessController::logoutAction' => ['privates', '.service_locator.VCOH3Fw', 'get_ServiceLocator_VCOH3FwService', false],
            'Zikula\\UsersModule\\Controller\\AccessController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\UsersModule\\Controller\\AccountController::changeLanguageAction' => ['privates', '.service_locator.yeFq60B', 'get_ServiceLocator_YeFq60BService', false],
            'Zikula\\UsersModule\\Controller\\AccountController::menuAction' => ['privates', '.service_locator.msOSgbQ', 'get_ServiceLocator_MsOSgbQService', false],
            'Zikula\\UsersModule\\Controller\\AccountController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\UsersModule\\Controller\\ConfigController::authenticationMethodsAction' => ['privates', '.service_locator.yMnaMnu', 'get_ServiceLocator_YMnaMnuService', false],
            'Zikula\\UsersModule\\Controller\\ConfigController::configAction' => ['privates', '.service_locator.XdDM4ci', 'get_ServiceLocator_XdDM4ciService', false],
            'Zikula\\UsersModule\\Controller\\ConfigController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\UsersModule\\Controller\\FileIOController::exportAction' => ['privates', '.service_locator.S3oQfnr', 'get_ServiceLocator_S3oQfnrService', false],
            'Zikula\\UsersModule\\Controller\\FileIOController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\UsersModule\\Controller\\LiveSearchController::getUsersAction' => ['privates', '.service_locator.IK_AoaO', 'get_ServiceLocator_IKAoaOService', false],
            'Zikula\\UsersModule\\Controller\\LiveSearchController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\UsersModule\\Controller\\RegistrationController::registerAction' => ['privates', '.service_locator.1HH3vz4', 'get_ServiceLocator_1HH3vz4Service', false],
            'Zikula\\UsersModule\\Controller\\RegistrationController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\UsersModule\\Controller\\UserAdministrationController::approveAction' => ['privates', '.service_locator.p6UcmdX', 'get_ServiceLocator_P6UcmdXService', false],
            'Zikula\\UsersModule\\Controller\\UserAdministrationController::deleteAction' => ['privates', '.service_locator.kgFMb_g', 'get_ServiceLocator_KgFMbGService', false],
            'Zikula\\UsersModule\\Controller\\UserAdministrationController::getUsersByFragmentAsTableAction' => ['privates', '.service_locator.olqsteU', 'get_ServiceLocator_OlqsteUService', false],
            'Zikula\\UsersModule\\Controller\\UserAdministrationController::listAction' => ['privates', '.service_locator.cNZ2NkP', 'get_ServiceLocator_CNZ2NkPService', false],
            'Zikula\\UsersModule\\Controller\\UserAdministrationController::mailUsersAction' => ['privates', '.service_locator.MFwmbgB', 'get_ServiceLocator_MFwmbgBService', false],
            'Zikula\\UsersModule\\Controller\\UserAdministrationController::modifyAction' => ['privates', '.service_locator.45wSGGP', 'get_ServiceLocator_45wSGGPService', false],
            'Zikula\\UsersModule\\Controller\\UserAdministrationController::searchAction' => ['privates', '.service_locator.Ay.NhXZ', 'get_ServiceLocator_Ay_NhXZService', false],
            'Zikula\\UsersModule\\Controller\\UserAdministrationController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ZAuthModule\\Controller\\AccountController::changeEmailAction' => ['privates', '.service_locator.W5exam.', 'get_ServiceLocator_W5exam_Service', false],
            'Zikula\\ZAuthModule\\Controller\\AccountController::changePasswordAction' => ['privates', '.service_locator.HogTcZF', 'get_ServiceLocator_HogTcZFService', false],
            'Zikula\\ZAuthModule\\Controller\\AccountController::confirmChangedEmailAction' => ['privates', '.service_locator.sVSDQFF', 'get_ServiceLocator_SVSDQFFService', false],
            'Zikula\\ZAuthModule\\Controller\\AccountController::lostPasswordAction' => ['privates', '.service_locator.pdFAuYB', 'get_ServiceLocator_PdFAuYBService', false],
            'Zikula\\ZAuthModule\\Controller\\AccountController::lostPasswordResetAction' => ['privates', '.service_locator.ZEEmRh5', 'get_ServiceLocator_ZEEmRh5Service', false],
            'Zikula\\ZAuthModule\\Controller\\AccountController::lostUserNameAction' => ['privates', '.service_locator._HVhBvb', 'get_ServiceLocator_HVhBvbService', false],
            'Zikula\\ZAuthModule\\Controller\\AccountController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ZAuthModule\\Controller\\ConfigController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ZAuthModule\\Controller\\FileIOController::importAction' => ['privates', '.service_locator.cqSHDFJ', 'get_ServiceLocator_CqSHDFJService', false],
            'Zikula\\ZAuthModule\\Controller\\FileIOController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ZAuthModule\\Controller\\RegistrationController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ZAuthModule\\Controller\\RegistrationController::verifyAction' => ['privates', '.service_locator.etNUnIn', 'get_ServiceLocator_EtNUnInService', false],
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController::createAction' => ['privates', '.service_locator.nHwaLpR', 'get_ServiceLocator_NHwaLpRService', false],
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController::getUsersByFragmentAsTableAction' => ['privates', '.service_locator.XNSlN14', 'get_ServiceLocator_XNSlN14Service', false],
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController::listAction' => ['privates', '.service_locator.kHEP6vB', 'get_ServiceLocator_KHEP6vBService', false],
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController::modifyAction' => ['privates', '.service_locator.KmZNtaq', 'get_ServiceLocator_KmZNtaqService', false],
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController::sendConfirmationAction' => ['privates', '.service_locator.2iIdcUP', 'get_ServiceLocator_2iIdcUPService', false],
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController::sendUserNameAction' => ['privates', '.service_locator.uc8W4ZT', 'get_ServiceLocator_Uc8W4ZTService', false],
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController::setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController::togglePasswordChangeAction' => ['privates', '.service_locator.uGiYVVQ', 'get_ServiceLocator_UGiYVVQService', false],
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController::verifyAction' => ['privates', '.service_locator.xw2rwYO', 'get_ServiceLocator_Xw2rwYOService', false],
            'Zikula\\AdminModule\\Controller\\AdminController:adminpanelAction' => ['privates', '.service_locator.ddxR4fK', 'get_ServiceLocator_DdxR4fKService', false],
            'Zikula\\AdminModule\\Controller\\AdminController:categorymenuAction' => ['privates', '.service_locator.gxU0C5u', 'get_ServiceLocator_GxU0C5uService', false],
            'Zikula\\AdminModule\\Controller\\AdminController:deleteAction' => ['privates', '.service_locator.qi_rkSP', 'get_ServiceLocator_QiRkSPService', false],
            'Zikula\\AdminModule\\Controller\\AdminController:modifyAction' => ['privates', '.service_locator.qi_rkSP', 'get_ServiceLocator_QiRkSPService', false],
            'Zikula\\AdminModule\\Controller\\AdminController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\AdminModule\\Controller\\AdminController:viewAction' => ['privates', '.service_locator.Q6Excfe', 'get_ServiceLocator_Q6ExcfeService', false],
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController:breadcrumbsAction' => ['privates', '.service_locator.wTOCTmi', 'get_ServiceLocator_WTOCTmiService', false],
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController:footerAction' => ['privates', '.service_locator.CNpdA_S', 'get_ServiceLocator_CNpdASService', false],
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController:headerAction' => ['privates', '.service_locator.DxQr8Um', 'get_ServiceLocator_DxQr8UmService', false],
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController:menuAction' => ['privates', '.service_locator.Qd2v43d', 'get_ServiceLocator_Qd2v43dService', false],
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController:securityanalyzerAction' => ['privates', '.service_locator.ZYCs5qz', 'get_ServiceLocator_ZYCs5qzService', false],
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController:updatecheckAction' => ['privates', '.service_locator.ARmHTLY', 'get_ServiceLocator_ARmHTLYService', false],
            'Zikula\\AdminModule\\Controller\\AjaxController:addCategoryAction' => ['privates', '.service_locator.E8jKebo', 'get_ServiceLocator_E8jKeboService', false],
            'Zikula\\AdminModule\\Controller\\AjaxController:changeModuleCategoryAction' => ['privates', '.service_locator.8493evj', 'get_ServiceLocator_8493evjService', false],
            'Zikula\\AdminModule\\Controller\\AjaxController:defaultCategoryAction' => ['privates', '.service_locator.6oiuNod', 'get_ServiceLocator_6oiuNodService', false],
            'Zikula\\AdminModule\\Controller\\AjaxController:deleteCategoryAction' => ['privates', '.service_locator.zkRr5GG', 'get_ServiceLocator_ZkRr5GGService', false],
            'Zikula\\AdminModule\\Controller\\AjaxController:editCategoryAction' => ['privates', '.service_locator.UYLqkkP', 'get_ServiceLocator_UYLqkkPService', false],
            'Zikula\\AdminModule\\Controller\\AjaxController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\AdminModule\\Controller\\AjaxController:sortCategoriesAction' => ['privates', '.service_locator.UYLqkkP', 'get_ServiceLocator_UYLqkkPService', false],
            'Zikula\\AdminModule\\Controller\\AjaxController:sortModulesAction' => ['privates', '.service_locator.DVCX.KX', 'get_ServiceLocator_DVCX_KXService', false],
            'Zikula\\AdminModule\\Controller\\ConfigController:configAction' => ['privates', '.service_locator.o2lcBnc', 'get_ServiceLocator_O2lcBncService', false],
            'Zikula\\AdminModule\\Controller\\ConfigController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\BlocksModule\\Controller\\AdminController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\BlocksModule\\Controller\\AdminController:viewAction' => ['privates', '.service_locator.lLVQ1cm', 'get_ServiceLocator_LLVQ1cmService', false],
            'Zikula\\BlocksModule\\Controller\\BlockController:deleteAction' => ['privates', '.service_locator.0DbeZ.F', 'get_ServiceLocator_0DbeZ_FService', false],
            'Zikula\\BlocksModule\\Controller\\BlockController:editAction' => ['privates', '.service_locator.rjioojn', 'get_ServiceLocator_RjioojnService', false],
            'Zikula\\BlocksModule\\Controller\\BlockController:newAction' => ['privates', '.service_locator.j_lmtN.', 'get_ServiceLocator_JLmtN_Service', false],
            'Zikula\\BlocksModule\\Controller\\BlockController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\BlocksModule\\Controller\\BlockController:viewAction' => ['privates', '.service_locator.uv0Gloe', 'get_ServiceLocator_Uv0GloeService', false],
            'Zikula\\BlocksModule\\Controller\\ConfigController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\BlocksModule\\Controller\\PlacementController:editAction' => ['privates', '.service_locator.nwBlUkS', 'get_ServiceLocator_NwBlUkSService', false],
            'Zikula\\BlocksModule\\Controller\\PlacementController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\BlocksModule\\Controller\\PositionController:deleteAction' => ['privates', '.service_locator.LJO0t4C', 'get_ServiceLocator_LJO0t4CService', false],
            'Zikula\\BlocksModule\\Controller\\PositionController:editAction' => ['privates', '.service_locator.Y6FYYyz', 'get_ServiceLocator_Y6FYYyzService', false],
            'Zikula\\BlocksModule\\Controller\\PositionController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\Bundle\\HookBundle\\Controller\\HookController:changeProviderAreaOrderAction' => ['privates', '.service_locator.T5htiMj', 'get_ServiceLocator_T5htiMjService', false],
            'Zikula\\Bundle\\HookBundle\\Controller\\HookController:editAction' => ['privates', '.service_locator.9Ua32ha', 'get_ServiceLocator_9Ua32haService', false],
            'Zikula\\Bundle\\HookBundle\\Controller\\HookController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\Bundle\\HookBundle\\Controller\\HookController:toggleSubscribeAreaStatusAction' => ['privates', '.service_locator.3ir3T5X', 'get_ServiceLocator_3ir3T5XService', false],
            'Zikula\\Bundle\\WorkflowBundle\\Controller\\EditorController:indexAction' => ['privates', '.service_locator.woEf4Un', 'get_ServiceLocator_WoEf4UnService', false],
            'Zikula\\CategoriesModule\\Controller\\CategoryController:listAction' => ['privates', '.service_locator.Yt68Lxm', 'get_ServiceLocator_Yt68LxmService', false],
            'Zikula\\CategoriesModule\\Controller\\CategoryController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\CategoriesModule\\Controller\\NodeController:contextMenuAction' => ['privates', '.service_locator._BDNuWv', 'get_ServiceLocator_BDNuWvService', false],
            'Zikula\\CategoriesModule\\Controller\\NodeController:moveAction' => ['privates', '.service_locator.F7mvmfb', 'get_ServiceLocator_F7mvmfbService', false],
            'Zikula\\CategoriesModule\\Controller\\NodeController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\CategoriesModule\\Controller\\RegistryController:deleteAction' => ['privates', '.service_locator.2zylTpH', 'get_ServiceLocator_2zylTpHService', false],
            'Zikula\\CategoriesModule\\Controller\\RegistryController:editAction' => ['privates', '.service_locator.fWyCulK', 'get_ServiceLocator_FWyCulKService', false],
            'Zikula\\CategoriesModule\\Controller\\RegistryController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ExtensionsModule\\Controller\\ConfigController:configAction' => ['privates', '.service_locator.RehufEE', 'get_ServiceLocator_RehufEEService', false],
            'Zikula\\ExtensionsModule\\Controller\\ConfigController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController:breadcrumbsAction' => ['privates', '.service_locator.CNpdA_S', 'get_ServiceLocator_CNpdASService', false],
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController:footerAction' => ['privates', '.service_locator.DxQr8Um', 'get_ServiceLocator_DxQr8UmService', false],
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController:headerAction' => ['privates', '.service_locator.3vQOZkO', 'get_ServiceLocator_3vQOZkOService', false],
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController:linksAction' => ['privates', '.service_locator.YMGaOSJ', 'get_ServiceLocator_YMGaOSJService', false],
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ExtensionsModule\\Controller\\ModuleController:activateAction' => ['privates', '.service_locator.B60LH_3', 'get_ServiceLocator_B60LH3Service', false],
            'Zikula\\ExtensionsModule\\Controller\\ModuleController:compatibilityAction' => ['privates', '.service_locator.AO0lF5Z', 'get_ServiceLocator_AO0lF5ZService', false],
            'Zikula\\ExtensionsModule\\Controller\\ModuleController:deactivateAction' => ['privates', '.service_locator.B60LH_3', 'get_ServiceLocator_B60LH3Service', false],
            'Zikula\\ExtensionsModule\\Controller\\ModuleController:installAction' => ['privates', '.service_locator.bxPsQVH', 'get_ServiceLocator_BxPsQVHService', false],
            'Zikula\\ExtensionsModule\\Controller\\ModuleController:modifyAction' => ['privates', '.service_locator.x2mM6.W', 'get_ServiceLocator_X2mM6_WService', false],
            'Zikula\\ExtensionsModule\\Controller\\ModuleController:postInstallAction' => ['privates', '.service_locator.v2pqszd', 'get_ServiceLocator_V2pqszdService', false],
            'Zikula\\ExtensionsModule\\Controller\\ModuleController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ExtensionsModule\\Controller\\ModuleController:uninstallAction' => ['privates', '.service_locator.PyFwzGk', 'get_ServiceLocator_PyFwzGkService', false],
            'Zikula\\ExtensionsModule\\Controller\\ModuleController:upgradeAction' => ['privates', '.service_locator.ZnkMVkQ', 'get_ServiceLocator_ZnkMVkQService', false],
            'Zikula\\ExtensionsModule\\Controller\\ModuleController:viewModuleListAction' => ['privates', '.service_locator.Mjns3VX', 'get_ServiceLocator_Mjns3VXService', false],
            'Zikula\\ExtensionsModule\\Controller\\ServicesController:moduleServicesAction' => ['privates', '.service_locator.XdDM4ci', 'get_ServiceLocator_XdDM4ciService', false],
            'Zikula\\ExtensionsModule\\Controller\\ServicesController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\GroupsModule\\Controller\\ApplicationController:adminAction' => ['privates', '.service_locator.ymo5u1_', 'get_ServiceLocator_Ymo5u1Service', false],
            'Zikula\\GroupsModule\\Controller\\ApplicationController:createAction' => ['privates', '.service_locator.uGcwr.9', 'get_ServiceLocator_UGcwr_9Service', false],
            'Zikula\\GroupsModule\\Controller\\ApplicationController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\GroupsModule\\Controller\\ConfigController:configAction' => ['privates', '.service_locator.MP6F85r', 'get_ServiceLocator_MP6F85rService', false],
            'Zikula\\GroupsModule\\Controller\\ConfigController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\GroupsModule\\Controller\\GroupController:adminListAction' => ['privates', '.service_locator.y2AvubJ', 'get_ServiceLocator_Y2AvubJService', false],
            'Zikula\\GroupsModule\\Controller\\GroupController:createAction' => ['privates', '.service_locator.XdDM4ci', 'get_ServiceLocator_XdDM4ciService', false],
            'Zikula\\GroupsModule\\Controller\\GroupController:editAction' => ['privates', '.service_locator.AX19wVn', 'get_ServiceLocator_AX19wVnService', false],
            'Zikula\\GroupsModule\\Controller\\GroupController:listAction' => ['privates', '.service_locator.MP6F85r', 'get_ServiceLocator_MP6F85rService', false],
            'Zikula\\GroupsModule\\Controller\\GroupController:removeAction' => ['privates', '.service_locator.AX19wVn', 'get_ServiceLocator_AX19wVnService', false],
            'Zikula\\GroupsModule\\Controller\\GroupController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\GroupsModule\\Controller\\MembershipController:addAction' => ['privates', '.service_locator.NPQiHiN', 'get_ServiceLocator_NPQiHiNService', false],
            'Zikula\\GroupsModule\\Controller\\MembershipController:adminListAction' => ['privates', '.service_locator.jx7C1V3', 'get_ServiceLocator_Jx7C1V3Service', false],
            'Zikula\\GroupsModule\\Controller\\MembershipController:getUsersByFragmentAsTableAction' => ['privates', '.service_locator.S3oQfnr', 'get_ServiceLocator_S3oQfnrService', false],
            'Zikula\\GroupsModule\\Controller\\MembershipController:joinAction' => ['privates', '.service_locator.hg8Nqz8', 'get_ServiceLocator_Hg8Nqz8Service', false],
            'Zikula\\GroupsModule\\Controller\\MembershipController:leaveAction' => ['privates', '.service_locator.hg8Nqz8', 'get_ServiceLocator_Hg8Nqz8Service', false],
            'Zikula\\GroupsModule\\Controller\\MembershipController:listAction' => ['privates', '.service_locator.EoJL95I', 'get_ServiceLocator_EoJL95IService', false],
            'Zikula\\GroupsModule\\Controller\\MembershipController:removeAction' => ['privates', '.service_locator.gSvt8Pq', 'get_ServiceLocator_GSvt8PqService', false],
            'Zikula\\GroupsModule\\Controller\\MembershipController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\MailerModule\\Controller\\ConfigController:configAction' => ['privates', '.service_locator.trGWsqD', 'get_ServiceLocator_TrGWsqDService', false],
            'Zikula\\MailerModule\\Controller\\ConfigController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\MailerModule\\Controller\\ConfigController:testAction' => ['privates', '.service_locator.J36JJqg', 'get_ServiceLocator_J36JJqgService', false],
            'Zikula\\MenuModule\\Controller\\ConfigController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\MenuModule\\Controller\\MenuController:deleteAction' => ['privates', '.service_locator.UXQzp0z', 'get_ServiceLocator_UXQzp0zService', false],
            'Zikula\\MenuModule\\Controller\\MenuController:editAction' => ['privates', '.service_locator.jM8x..f', 'get_ServiceLocator_JM8x__FService', false],
            'Zikula\\MenuModule\\Controller\\MenuController:listAction' => ['privates', '.service_locator.u8DyEi_', 'get_ServiceLocator_U8DyEiService', false],
            'Zikula\\MenuModule\\Controller\\MenuController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\MenuModule\\Controller\\MenuController:viewAction' => ['privates', '.service_locator.EyHY1Lm', 'get_ServiceLocator_EyHY1LmService', false],
            'Zikula\\MenuModule\\Controller\\NodeController:contextMenuAction' => ['privates', '.service_locator.jM8x..f', 'get_ServiceLocator_JM8x__FService', false],
            'Zikula\\MenuModule\\Controller\\NodeController:moveAction' => ['privates', '.service_locator.u8DyEi_', 'get_ServiceLocator_U8DyEiService', false],
            'Zikula\\MenuModule\\Controller\\NodeController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\PermissionsModule\\Controller\\ConfigController:configAction' => ['privates', '.service_locator.x.KNJyk', 'get_ServiceLocator_X_KNJykService', false],
            'Zikula\\PermissionsModule\\Controller\\ConfigController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\PermissionsModule\\Controller\\PermissionController:changeOrderAction' => ['privates', '.service_locator.DJ.IY53', 'get_ServiceLocator_DJ_IY53Service', false],
            'Zikula\\PermissionsModule\\Controller\\PermissionController:deleteAction' => ['privates', '.service_locator.kl87m7D', 'get_ServiceLocator_Kl87m7DService', false],
            'Zikula\\PermissionsModule\\Controller\\PermissionController:editAction' => ['privates', '.service_locator.0tHmwTc', 'get_ServiceLocator_0tHmwTcService', false],
            'Zikula\\PermissionsModule\\Controller\\PermissionController:listAction' => ['privates', '.service_locator.c4QGT1L', 'get_ServiceLocator_C4QGT1LService', false],
            'Zikula\\PermissionsModule\\Controller\\PermissionController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\PermissionsModule\\Controller\\PermissionController:testAction' => ['privates', '.service_locator.bhmUFxm', 'get_ServiceLocator_BhmUFxmService', false],
            'Zikula\\RoutesModule\\Controller\\AjaxController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\RoutesModule\\Controller\\AjaxController:updateSortPositionsAction' => ['privates', '.service_locator.RAt1Xco', 'get_ServiceLocator_RAt1XcoService', false],
            'Zikula\\RoutesModule\\Controller\\ConfigController:configAction' => ['privates', '.service_locator.PxQboCn', 'get_ServiceLocator_PxQboCnService', false],
            'Zikula\\RoutesModule\\Controller\\ConfigController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\RoutesModule\\Controller\\RouteController:adminDisplayAction' => ['privates', '.service_locator.SZXLtQR', 'get_ServiceLocator_SZXLtQRService', false],
            'Zikula\\RoutesModule\\Controller\\RouteController:adminEditAction' => ['privates', '.service_locator.qUTQ8Yv', 'get_ServiceLocator_QUTQ8YvService', false],
            'Zikula\\RoutesModule\\Controller\\RouteController:adminHandleSelectedEntriesAction' => ['privates', '.service_locator.r4oPMH7', 'get_ServiceLocator_R4oPMH7Service', false],
            'Zikula\\RoutesModule\\Controller\\RouteController:adminIndexAction' => ['privates', '.service_locator.hohOVVO', 'get_ServiceLocator_HohOVVOService', false],
            'Zikula\\RoutesModule\\Controller\\RouteController:adminViewAction' => ['privates', '.service_locator.B5P8uRf', 'get_ServiceLocator_B5P8uRfService', false],
            'Zikula\\RoutesModule\\Controller\\RouteController:displayAction' => ['privates', '.service_locator.SZXLtQR', 'get_ServiceLocator_SZXLtQRService', false],
            'Zikula\\RoutesModule\\Controller\\RouteController:editAction' => ['privates', '.service_locator.qUTQ8Yv', 'get_ServiceLocator_QUTQ8YvService', false],
            'Zikula\\RoutesModule\\Controller\\RouteController:handleSelectedEntriesAction' => ['privates', '.service_locator.r4oPMH7', 'get_ServiceLocator_R4oPMH7Service', false],
            'Zikula\\RoutesModule\\Controller\\RouteController:indexAction' => ['privates', '.service_locator.hohOVVO', 'get_ServiceLocator_HohOVVOService', false],
            'Zikula\\RoutesModule\\Controller\\RouteController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\RoutesModule\\Controller\\RouteController:viewAction' => ['privates', '.service_locator.B5P8uRf', 'get_ServiceLocator_B5P8uRfService', false],
            'Zikula\\RoutesModule\\Controller\\UpdateController:dumpJsRoutesAction' => ['privates', '.service_locator.NX_lu0O', 'get_ServiceLocator_NXLu0OService', false],
            'Zikula\\RoutesModule\\Controller\\UpdateController:reloadAction' => ['privates', '.service_locator.FxrlP9R', 'get_ServiceLocator_FxrlP9RService', false],
            'Zikula\\RoutesModule\\Controller\\UpdateController:renewAction' => ['privates', '.service_locator.EgMOG4q', 'get_ServiceLocator_EgMOG4qService', false],
            'Zikula\\RoutesModule\\Controller\\UpdateController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\SearchModule\\Controller\\ConfigController:configAction' => ['privates', '.service_locator.gDZjEEP', 'get_ServiceLocator_GDZjEEPService', false],
            'Zikula\\SearchModule\\Controller\\ConfigController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\SearchModule\\Controller\\SearchController:executeAction' => ['privates', '.service_locator.z8jU37N', 'get_ServiceLocator_Z8jU37NService', false],
            'Zikula\\SearchModule\\Controller\\SearchController:opensearchAction' => ['privates', '.service_locator.DJ6_IjB', 'get_ServiceLocator_DJ6IjBService', false],
            'Zikula\\SearchModule\\Controller\\SearchController:recentAction' => ['privates', '.service_locator.z1ANE._', 'get_ServiceLocator_Z1ANE_Service', false],
            'Zikula\\SearchModule\\Controller\\SearchController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\SecurityCenterModule\\Controller\\ConfigController:allowedhtmlAction' => ['privates', '.service_locator.LFdkE7T', 'get_ServiceLocator_LFdkE7TService', false],
            'Zikula\\SecurityCenterModule\\Controller\\ConfigController:configAction' => ['privates', '.service_locator.nzfZYg.', 'get_ServiceLocator_NzfZYg_Service', false],
            'Zikula\\SecurityCenterModule\\Controller\\ConfigController:purifierconfigAction' => ['privates', '.service_locator.Rn.c2h9', 'get_ServiceLocator_Rn_C2h9Service', false],
            'Zikula\\SecurityCenterModule\\Controller\\ConfigController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController:deleteentryAction' => ['privates', '.service_locator.S9SudG.', 'get_ServiceLocator_S9SudG_Service', false],
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController:exportAction' => ['privates', '.service_locator.S9SudG.', 'get_ServiceLocator_S9SudG_Service', false],
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController:purgeAction' => ['privates', '.service_locator.S9SudG.', 'get_ServiceLocator_S9SudG_Service', false],
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController:viewAction' => ['privates', '.service_locator.ghFHQf1', 'get_ServiceLocator_GhFHQf1Service', false],
            'Zikula\\SettingsModule\\Controller\\SettingsController:localeAction' => ['privates', '.service_locator.g77nwt4', 'get_ServiceLocator_G77nwt4Service', false],
            'Zikula\\SettingsModule\\Controller\\SettingsController:mainAction' => ['privates', '.service_locator.P7qdpMw', 'get_ServiceLocator_P7qdpMwService', false],
            'Zikula\\SettingsModule\\Controller\\SettingsController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\SettingsModule\\Controller\\SettingsController:toggleEditInPlaceAction' => ['privates', '.service_locator.QbjOsEa', 'get_ServiceLocator_QbjOsEaService', false],
            'Zikula\\ThemeModule\\Controller\\CombinedAssetController:assetAction' => ['privates', '.service_locator.VC15VB8', 'get_ServiceLocator_VC15VB8Service', false],
            'Zikula\\ThemeModule\\Controller\\CombinedAssetController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ThemeModule\\Controller\\ThemeController:activateAction' => ['privates', '.service_locator.vvjD5fm', 'get_ServiceLocator_VvjD5fmService', false],
            'Zikula\\ThemeModule\\Controller\\ThemeController:creditsAction' => ['privates', '.service_locator.GXTYbGg', 'get_ServiceLocator_GXTYbGgService', false],
            'Zikula\\ThemeModule\\Controller\\ThemeController:deleteAction' => ['privates', '.service_locator._9jopT8', 'get_ServiceLocator_9jopT8Service', false],
            'Zikula\\ThemeModule\\Controller\\ThemeController:previewAction' => ['privates', '.service_locator.aukUB8P', 'get_ServiceLocator_AukUB8PService', false],
            'Zikula\\ThemeModule\\Controller\\ThemeController:setAsDefaultAction' => ['privates', '.service_locator.wT30FSu', 'get_ServiceLocator_WT30FSuService', false],
            'Zikula\\ThemeModule\\Controller\\ThemeController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ThemeModule\\Controller\\ThemeController:viewAction' => ['privates', '.service_locator.xkQyMNr', 'get_ServiceLocator_XkQyMNrService', false],
            'Zikula\\ThemeModule\\Controller\\VarController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ThemeModule\\Controller\\VarController:varAction' => ['privates', '.service_locator.ZYCs5qz', 'get_ServiceLocator_ZYCs5qzService', false],
            'Zikula\\UsersModule\\Controller\\AccessController:loginAction' => ['privates', '.service_locator.ktNcpdk', 'get_ServiceLocator_KtNcpdkService', false],
            'Zikula\\UsersModule\\Controller\\AccessController:logoutAction' => ['privates', '.service_locator.VCOH3Fw', 'get_ServiceLocator_VCOH3FwService', false],
            'Zikula\\UsersModule\\Controller\\AccessController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\UsersModule\\Controller\\AccountController:changeLanguageAction' => ['privates', '.service_locator.yeFq60B', 'get_ServiceLocator_YeFq60BService', false],
            'Zikula\\UsersModule\\Controller\\AccountController:menuAction' => ['privates', '.service_locator.msOSgbQ', 'get_ServiceLocator_MsOSgbQService', false],
            'Zikula\\UsersModule\\Controller\\AccountController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\UsersModule\\Controller\\ConfigController:authenticationMethodsAction' => ['privates', '.service_locator.yMnaMnu', 'get_ServiceLocator_YMnaMnuService', false],
            'Zikula\\UsersModule\\Controller\\ConfigController:configAction' => ['privates', '.service_locator.XdDM4ci', 'get_ServiceLocator_XdDM4ciService', false],
            'Zikula\\UsersModule\\Controller\\ConfigController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\UsersModule\\Controller\\FileIOController:exportAction' => ['privates', '.service_locator.S3oQfnr', 'get_ServiceLocator_S3oQfnrService', false],
            'Zikula\\UsersModule\\Controller\\FileIOController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\UsersModule\\Controller\\LiveSearchController:getUsersAction' => ['privates', '.service_locator.IK_AoaO', 'get_ServiceLocator_IKAoaOService', false],
            'Zikula\\UsersModule\\Controller\\LiveSearchController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\UsersModule\\Controller\\RegistrationController:registerAction' => ['privates', '.service_locator.1HH3vz4', 'get_ServiceLocator_1HH3vz4Service', false],
            'Zikula\\UsersModule\\Controller\\RegistrationController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\UsersModule\\Controller\\UserAdministrationController:approveAction' => ['privates', '.service_locator.p6UcmdX', 'get_ServiceLocator_P6UcmdXService', false],
            'Zikula\\UsersModule\\Controller\\UserAdministrationController:deleteAction' => ['privates', '.service_locator.kgFMb_g', 'get_ServiceLocator_KgFMbGService', false],
            'Zikula\\UsersModule\\Controller\\UserAdministrationController:getUsersByFragmentAsTableAction' => ['privates', '.service_locator.olqsteU', 'get_ServiceLocator_OlqsteUService', false],
            'Zikula\\UsersModule\\Controller\\UserAdministrationController:listAction' => ['privates', '.service_locator.cNZ2NkP', 'get_ServiceLocator_CNZ2NkPService', false],
            'Zikula\\UsersModule\\Controller\\UserAdministrationController:mailUsersAction' => ['privates', '.service_locator.MFwmbgB', 'get_ServiceLocator_MFwmbgBService', false],
            'Zikula\\UsersModule\\Controller\\UserAdministrationController:modifyAction' => ['privates', '.service_locator.45wSGGP', 'get_ServiceLocator_45wSGGPService', false],
            'Zikula\\UsersModule\\Controller\\UserAdministrationController:searchAction' => ['privates', '.service_locator.Ay.NhXZ', 'get_ServiceLocator_Ay_NhXZService', false],
            'Zikula\\UsersModule\\Controller\\UserAdministrationController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ZAuthModule\\Controller\\AccountController:changeEmailAction' => ['privates', '.service_locator.W5exam.', 'get_ServiceLocator_W5exam_Service', false],
            'Zikula\\ZAuthModule\\Controller\\AccountController:changePasswordAction' => ['privates', '.service_locator.HogTcZF', 'get_ServiceLocator_HogTcZFService', false],
            'Zikula\\ZAuthModule\\Controller\\AccountController:confirmChangedEmailAction' => ['privates', '.service_locator.sVSDQFF', 'get_ServiceLocator_SVSDQFFService', false],
            'Zikula\\ZAuthModule\\Controller\\AccountController:lostPasswordAction' => ['privates', '.service_locator.pdFAuYB', 'get_ServiceLocator_PdFAuYBService', false],
            'Zikula\\ZAuthModule\\Controller\\AccountController:lostPasswordResetAction' => ['privates', '.service_locator.ZEEmRh5', 'get_ServiceLocator_ZEEmRh5Service', false],
            'Zikula\\ZAuthModule\\Controller\\AccountController:lostUserNameAction' => ['privates', '.service_locator._HVhBvb', 'get_ServiceLocator_HVhBvbService', false],
            'Zikula\\ZAuthModule\\Controller\\AccountController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ZAuthModule\\Controller\\ConfigController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ZAuthModule\\Controller\\FileIOController:importAction' => ['privates', '.service_locator.cqSHDFJ', 'get_ServiceLocator_CqSHDFJService', false],
            'Zikula\\ZAuthModule\\Controller\\FileIOController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ZAuthModule\\Controller\\RegistrationController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ZAuthModule\\Controller\\RegistrationController:verifyAction' => ['privates', '.service_locator.etNUnIn', 'get_ServiceLocator_EtNUnInService', false],
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController:createAction' => ['privates', '.service_locator.nHwaLpR', 'get_ServiceLocator_NHwaLpRService', false],
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController:getUsersByFragmentAsTableAction' => ['privates', '.service_locator.XNSlN14', 'get_ServiceLocator_XNSlN14Service', false],
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController:listAction' => ['privates', '.service_locator.kHEP6vB', 'get_ServiceLocator_KHEP6vBService', false],
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController:modifyAction' => ['privates', '.service_locator.KmZNtaq', 'get_ServiceLocator_KmZNtaqService', false],
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController:sendConfirmationAction' => ['privates', '.service_locator.2iIdcUP', 'get_ServiceLocator_2iIdcUPService', false],
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController:sendUserNameAction' => ['privates', '.service_locator.uc8W4ZT', 'get_ServiceLocator_Uc8W4ZTService', false],
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController:setTranslator' => ['privates', '.service_locator.SRnkpTI', 'get_ServiceLocator_SRnkpTIService', false],
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController:togglePasswordChangeAction' => ['privates', '.service_locator.uGiYVVQ', 'get_ServiceLocator_UGiYVVQService', false],
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController:verifyAction' => ['privates', '.service_locator.xw2rwYO', 'get_ServiceLocator_Xw2rwYOService', false],
        ], [
            'Zikula\\AdminModule\\Controller\\AdminController::adminpanelAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminController::categorymenuAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminController::deleteAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminController::modifyAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminController::setTranslator' => '?',
            'Zikula\\AdminModule\\Controller\\AdminController::viewAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController::breadcrumbsAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController::footerAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController::headerAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController::menuAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController::securityanalyzerAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController::setTranslator' => '?',
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController::updatecheckAction' => '?',
            'Zikula\\AdminModule\\Controller\\AjaxController::addCategoryAction' => '?',
            'Zikula\\AdminModule\\Controller\\AjaxController::changeModuleCategoryAction' => '?',
            'Zikula\\AdminModule\\Controller\\AjaxController::defaultCategoryAction' => '?',
            'Zikula\\AdminModule\\Controller\\AjaxController::deleteCategoryAction' => '?',
            'Zikula\\AdminModule\\Controller\\AjaxController::editCategoryAction' => '?',
            'Zikula\\AdminModule\\Controller\\AjaxController::setTranslator' => '?',
            'Zikula\\AdminModule\\Controller\\AjaxController::sortCategoriesAction' => '?',
            'Zikula\\AdminModule\\Controller\\AjaxController::sortModulesAction' => '?',
            'Zikula\\AdminModule\\Controller\\ConfigController::configAction' => '?',
            'Zikula\\AdminModule\\Controller\\ConfigController::setTranslator' => '?',
            'Zikula\\BlocksModule\\Controller\\AdminController::setTranslator' => '?',
            'Zikula\\BlocksModule\\Controller\\AdminController::viewAction' => '?',
            'Zikula\\BlocksModule\\Controller\\BlockController::deleteAction' => '?',
            'Zikula\\BlocksModule\\Controller\\BlockController::editAction' => '?',
            'Zikula\\BlocksModule\\Controller\\BlockController::newAction' => '?',
            'Zikula\\BlocksModule\\Controller\\BlockController::setTranslator' => '?',
            'Zikula\\BlocksModule\\Controller\\BlockController::viewAction' => '?',
            'Zikula\\BlocksModule\\Controller\\ConfigController::setTranslator' => '?',
            'Zikula\\BlocksModule\\Controller\\PlacementController::editAction' => '?',
            'Zikula\\BlocksModule\\Controller\\PlacementController::setTranslator' => '?',
            'Zikula\\BlocksModule\\Controller\\PositionController::deleteAction' => '?',
            'Zikula\\BlocksModule\\Controller\\PositionController::editAction' => '?',
            'Zikula\\BlocksModule\\Controller\\PositionController::setTranslator' => '?',
            'Zikula\\Bundle\\HookBundle\\Controller\\HookController::changeProviderAreaOrderAction' => '?',
            'Zikula\\Bundle\\HookBundle\\Controller\\HookController::editAction' => '?',
            'Zikula\\Bundle\\HookBundle\\Controller\\HookController::setTranslator' => '?',
            'Zikula\\Bundle\\HookBundle\\Controller\\HookController::toggleSubscribeAreaStatusAction' => '?',
            'Zikula\\Bundle\\WorkflowBundle\\Controller\\EditorController::indexAction' => '?',
            'Zikula\\CategoriesModule\\Controller\\CategoryController::listAction' => '?',
            'Zikula\\CategoriesModule\\Controller\\CategoryController::setTranslator' => '?',
            'Zikula\\CategoriesModule\\Controller\\NodeController::contextMenuAction' => '?',
            'Zikula\\CategoriesModule\\Controller\\NodeController::moveAction' => '?',
            'Zikula\\CategoriesModule\\Controller\\NodeController::setTranslator' => '?',
            'Zikula\\CategoriesModule\\Controller\\RegistryController::deleteAction' => '?',
            'Zikula\\CategoriesModule\\Controller\\RegistryController::editAction' => '?',
            'Zikula\\CategoriesModule\\Controller\\RegistryController::setTranslator' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ConfigController::configAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ConfigController::setTranslator' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController::breadcrumbsAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController::footerAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController::headerAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController::linksAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController::setTranslator' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController::activateAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController::compatibilityAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController::deactivateAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController::installAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController::modifyAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController::postInstallAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController::setTranslator' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController::uninstallAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController::upgradeAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController::viewModuleListAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ServicesController::moduleServicesAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ServicesController::setTranslator' => '?',
            'Zikula\\GroupsModule\\Controller\\ApplicationController::adminAction' => '?',
            'Zikula\\GroupsModule\\Controller\\ApplicationController::createAction' => '?',
            'Zikula\\GroupsModule\\Controller\\ApplicationController::setTranslator' => '?',
            'Zikula\\GroupsModule\\Controller\\ConfigController::configAction' => '?',
            'Zikula\\GroupsModule\\Controller\\ConfigController::setTranslator' => '?',
            'Zikula\\GroupsModule\\Controller\\GroupController::adminListAction' => '?',
            'Zikula\\GroupsModule\\Controller\\GroupController::createAction' => '?',
            'Zikula\\GroupsModule\\Controller\\GroupController::editAction' => '?',
            'Zikula\\GroupsModule\\Controller\\GroupController::listAction' => '?',
            'Zikula\\GroupsModule\\Controller\\GroupController::removeAction' => '?',
            'Zikula\\GroupsModule\\Controller\\GroupController::setTranslator' => '?',
            'Zikula\\GroupsModule\\Controller\\MembershipController::addAction' => '?',
            'Zikula\\GroupsModule\\Controller\\MembershipController::adminListAction' => '?',
            'Zikula\\GroupsModule\\Controller\\MembershipController::getUsersByFragmentAsTableAction' => '?',
            'Zikula\\GroupsModule\\Controller\\MembershipController::joinAction' => '?',
            'Zikula\\GroupsModule\\Controller\\MembershipController::leaveAction' => '?',
            'Zikula\\GroupsModule\\Controller\\MembershipController::listAction' => '?',
            'Zikula\\GroupsModule\\Controller\\MembershipController::removeAction' => '?',
            'Zikula\\GroupsModule\\Controller\\MembershipController::setTranslator' => '?',
            'Zikula\\MailerModule\\Controller\\ConfigController::configAction' => '?',
            'Zikula\\MailerModule\\Controller\\ConfigController::setTranslator' => '?',
            'Zikula\\MailerModule\\Controller\\ConfigController::testAction' => '?',
            'Zikula\\MenuModule\\Controller\\ConfigController::setTranslator' => '?',
            'Zikula\\MenuModule\\Controller\\MenuController::deleteAction' => '?',
            'Zikula\\MenuModule\\Controller\\MenuController::editAction' => '?',
            'Zikula\\MenuModule\\Controller\\MenuController::listAction' => '?',
            'Zikula\\MenuModule\\Controller\\MenuController::setTranslator' => '?',
            'Zikula\\MenuModule\\Controller\\MenuController::viewAction' => '?',
            'Zikula\\MenuModule\\Controller\\NodeController::contextMenuAction' => '?',
            'Zikula\\MenuModule\\Controller\\NodeController::moveAction' => '?',
            'Zikula\\MenuModule\\Controller\\NodeController::setTranslator' => '?',
            'Zikula\\PermissionsModule\\Controller\\ConfigController::configAction' => '?',
            'Zikula\\PermissionsModule\\Controller\\ConfigController::setTranslator' => '?',
            'Zikula\\PermissionsModule\\Controller\\PermissionController::changeOrderAction' => '?',
            'Zikula\\PermissionsModule\\Controller\\PermissionController::deleteAction' => '?',
            'Zikula\\PermissionsModule\\Controller\\PermissionController::editAction' => '?',
            'Zikula\\PermissionsModule\\Controller\\PermissionController::listAction' => '?',
            'Zikula\\PermissionsModule\\Controller\\PermissionController::setTranslator' => '?',
            'Zikula\\PermissionsModule\\Controller\\PermissionController::testAction' => '?',
            'Zikula\\RoutesModule\\Controller\\AjaxController::setTranslator' => '?',
            'Zikula\\RoutesModule\\Controller\\AjaxController::updateSortPositionsAction' => '?',
            'Zikula\\RoutesModule\\Controller\\ConfigController::configAction' => '?',
            'Zikula\\RoutesModule\\Controller\\ConfigController::setTranslator' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController::adminDisplayAction' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController::adminEditAction' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController::adminHandleSelectedEntriesAction' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController::adminIndexAction' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController::adminViewAction' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController::displayAction' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController::editAction' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController::handleSelectedEntriesAction' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController::indexAction' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController::setTranslator' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController::viewAction' => '?',
            'Zikula\\RoutesModule\\Controller\\UpdateController::dumpJsRoutesAction' => '?',
            'Zikula\\RoutesModule\\Controller\\UpdateController::reloadAction' => '?',
            'Zikula\\RoutesModule\\Controller\\UpdateController::renewAction' => '?',
            'Zikula\\RoutesModule\\Controller\\UpdateController::setTranslator' => '?',
            'Zikula\\SearchModule\\Controller\\ConfigController::configAction' => '?',
            'Zikula\\SearchModule\\Controller\\ConfigController::setTranslator' => '?',
            'Zikula\\SearchModule\\Controller\\SearchController::executeAction' => '?',
            'Zikula\\SearchModule\\Controller\\SearchController::opensearchAction' => '?',
            'Zikula\\SearchModule\\Controller\\SearchController::recentAction' => '?',
            'Zikula\\SearchModule\\Controller\\SearchController::setTranslator' => '?',
            'Zikula\\SecurityCenterModule\\Controller\\ConfigController::allowedhtmlAction' => '?',
            'Zikula\\SecurityCenterModule\\Controller\\ConfigController::configAction' => '?',
            'Zikula\\SecurityCenterModule\\Controller\\ConfigController::purifierconfigAction' => '?',
            'Zikula\\SecurityCenterModule\\Controller\\ConfigController::setTranslator' => '?',
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController::deleteentryAction' => '?',
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController::exportAction' => '?',
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController::purgeAction' => '?',
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController::setTranslator' => '?',
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController::viewAction' => '?',
            'Zikula\\SettingsModule\\Controller\\SettingsController::localeAction' => '?',
            'Zikula\\SettingsModule\\Controller\\SettingsController::mainAction' => '?',
            'Zikula\\SettingsModule\\Controller\\SettingsController::setTranslator' => '?',
            'Zikula\\SettingsModule\\Controller\\SettingsController::toggleEditInPlaceAction' => '?',
            'Zikula\\ThemeModule\\Controller\\CombinedAssetController::assetAction' => '?',
            'Zikula\\ThemeModule\\Controller\\CombinedAssetController::setTranslator' => '?',
            'Zikula\\ThemeModule\\Controller\\ThemeController::activateAction' => '?',
            'Zikula\\ThemeModule\\Controller\\ThemeController::creditsAction' => '?',
            'Zikula\\ThemeModule\\Controller\\ThemeController::deleteAction' => '?',
            'Zikula\\ThemeModule\\Controller\\ThemeController::previewAction' => '?',
            'Zikula\\ThemeModule\\Controller\\ThemeController::setAsDefaultAction' => '?',
            'Zikula\\ThemeModule\\Controller\\ThemeController::setTranslator' => '?',
            'Zikula\\ThemeModule\\Controller\\ThemeController::viewAction' => '?',
            'Zikula\\ThemeModule\\Controller\\VarController::setTranslator' => '?',
            'Zikula\\ThemeModule\\Controller\\VarController::varAction' => '?',
            'Zikula\\UsersModule\\Controller\\AccessController::loginAction' => '?',
            'Zikula\\UsersModule\\Controller\\AccessController::logoutAction' => '?',
            'Zikula\\UsersModule\\Controller\\AccessController::setTranslator' => '?',
            'Zikula\\UsersModule\\Controller\\AccountController::changeLanguageAction' => '?',
            'Zikula\\UsersModule\\Controller\\AccountController::menuAction' => '?',
            'Zikula\\UsersModule\\Controller\\AccountController::setTranslator' => '?',
            'Zikula\\UsersModule\\Controller\\ConfigController::authenticationMethodsAction' => '?',
            'Zikula\\UsersModule\\Controller\\ConfigController::configAction' => '?',
            'Zikula\\UsersModule\\Controller\\ConfigController::setTranslator' => '?',
            'Zikula\\UsersModule\\Controller\\FileIOController::exportAction' => '?',
            'Zikula\\UsersModule\\Controller\\FileIOController::setTranslator' => '?',
            'Zikula\\UsersModule\\Controller\\LiveSearchController::getUsersAction' => '?',
            'Zikula\\UsersModule\\Controller\\LiveSearchController::setTranslator' => '?',
            'Zikula\\UsersModule\\Controller\\RegistrationController::registerAction' => '?',
            'Zikula\\UsersModule\\Controller\\RegistrationController::setTranslator' => '?',
            'Zikula\\UsersModule\\Controller\\UserAdministrationController::approveAction' => '?',
            'Zikula\\UsersModule\\Controller\\UserAdministrationController::deleteAction' => '?',
            'Zikula\\UsersModule\\Controller\\UserAdministrationController::getUsersByFragmentAsTableAction' => '?',
            'Zikula\\UsersModule\\Controller\\UserAdministrationController::listAction' => '?',
            'Zikula\\UsersModule\\Controller\\UserAdministrationController::mailUsersAction' => '?',
            'Zikula\\UsersModule\\Controller\\UserAdministrationController::modifyAction' => '?',
            'Zikula\\UsersModule\\Controller\\UserAdministrationController::searchAction' => '?',
            'Zikula\\UsersModule\\Controller\\UserAdministrationController::setTranslator' => '?',
            'Zikula\\ZAuthModule\\Controller\\AccountController::changeEmailAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\AccountController::changePasswordAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\AccountController::confirmChangedEmailAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\AccountController::lostPasswordAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\AccountController::lostPasswordResetAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\AccountController::lostUserNameAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\AccountController::setTranslator' => '?',
            'Zikula\\ZAuthModule\\Controller\\ConfigController::setTranslator' => '?',
            'Zikula\\ZAuthModule\\Controller\\FileIOController::importAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\FileIOController::setTranslator' => '?',
            'Zikula\\ZAuthModule\\Controller\\RegistrationController::setTranslator' => '?',
            'Zikula\\ZAuthModule\\Controller\\RegistrationController::verifyAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController::createAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController::getUsersByFragmentAsTableAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController::listAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController::modifyAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController::sendConfirmationAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController::sendUserNameAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController::setTranslator' => '?',
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController::togglePasswordChangeAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController::verifyAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminController:adminpanelAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminController:categorymenuAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminController:deleteAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminController:modifyAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminController:setTranslator' => '?',
            'Zikula\\AdminModule\\Controller\\AdminController:viewAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController:breadcrumbsAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController:footerAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController:headerAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController:menuAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController:securityanalyzerAction' => '?',
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController:setTranslator' => '?',
            'Zikula\\AdminModule\\Controller\\AdminInterfaceController:updatecheckAction' => '?',
            'Zikula\\AdminModule\\Controller\\AjaxController:addCategoryAction' => '?',
            'Zikula\\AdminModule\\Controller\\AjaxController:changeModuleCategoryAction' => '?',
            'Zikula\\AdminModule\\Controller\\AjaxController:defaultCategoryAction' => '?',
            'Zikula\\AdminModule\\Controller\\AjaxController:deleteCategoryAction' => '?',
            'Zikula\\AdminModule\\Controller\\AjaxController:editCategoryAction' => '?',
            'Zikula\\AdminModule\\Controller\\AjaxController:setTranslator' => '?',
            'Zikula\\AdminModule\\Controller\\AjaxController:sortCategoriesAction' => '?',
            'Zikula\\AdminModule\\Controller\\AjaxController:sortModulesAction' => '?',
            'Zikula\\AdminModule\\Controller\\ConfigController:configAction' => '?',
            'Zikula\\AdminModule\\Controller\\ConfigController:setTranslator' => '?',
            'Zikula\\BlocksModule\\Controller\\AdminController:setTranslator' => '?',
            'Zikula\\BlocksModule\\Controller\\AdminController:viewAction' => '?',
            'Zikula\\BlocksModule\\Controller\\BlockController:deleteAction' => '?',
            'Zikula\\BlocksModule\\Controller\\BlockController:editAction' => '?',
            'Zikula\\BlocksModule\\Controller\\BlockController:newAction' => '?',
            'Zikula\\BlocksModule\\Controller\\BlockController:setTranslator' => '?',
            'Zikula\\BlocksModule\\Controller\\BlockController:viewAction' => '?',
            'Zikula\\BlocksModule\\Controller\\ConfigController:setTranslator' => '?',
            'Zikula\\BlocksModule\\Controller\\PlacementController:editAction' => '?',
            'Zikula\\BlocksModule\\Controller\\PlacementController:setTranslator' => '?',
            'Zikula\\BlocksModule\\Controller\\PositionController:deleteAction' => '?',
            'Zikula\\BlocksModule\\Controller\\PositionController:editAction' => '?',
            'Zikula\\BlocksModule\\Controller\\PositionController:setTranslator' => '?',
            'Zikula\\Bundle\\HookBundle\\Controller\\HookController:changeProviderAreaOrderAction' => '?',
            'Zikula\\Bundle\\HookBundle\\Controller\\HookController:editAction' => '?',
            'Zikula\\Bundle\\HookBundle\\Controller\\HookController:setTranslator' => '?',
            'Zikula\\Bundle\\HookBundle\\Controller\\HookController:toggleSubscribeAreaStatusAction' => '?',
            'Zikula\\Bundle\\WorkflowBundle\\Controller\\EditorController:indexAction' => '?',
            'Zikula\\CategoriesModule\\Controller\\CategoryController:listAction' => '?',
            'Zikula\\CategoriesModule\\Controller\\CategoryController:setTranslator' => '?',
            'Zikula\\CategoriesModule\\Controller\\NodeController:contextMenuAction' => '?',
            'Zikula\\CategoriesModule\\Controller\\NodeController:moveAction' => '?',
            'Zikula\\CategoriesModule\\Controller\\NodeController:setTranslator' => '?',
            'Zikula\\CategoriesModule\\Controller\\RegistryController:deleteAction' => '?',
            'Zikula\\CategoriesModule\\Controller\\RegistryController:editAction' => '?',
            'Zikula\\CategoriesModule\\Controller\\RegistryController:setTranslator' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ConfigController:configAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ConfigController:setTranslator' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController:breadcrumbsAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController:footerAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController:headerAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController:linksAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ExtensionsInterfaceController:setTranslator' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController:activateAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController:compatibilityAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController:deactivateAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController:installAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController:modifyAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController:postInstallAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController:setTranslator' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController:uninstallAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController:upgradeAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ModuleController:viewModuleListAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ServicesController:moduleServicesAction' => '?',
            'Zikula\\ExtensionsModule\\Controller\\ServicesController:setTranslator' => '?',
            'Zikula\\GroupsModule\\Controller\\ApplicationController:adminAction' => '?',
            'Zikula\\GroupsModule\\Controller\\ApplicationController:createAction' => '?',
            'Zikula\\GroupsModule\\Controller\\ApplicationController:setTranslator' => '?',
            'Zikula\\GroupsModule\\Controller\\ConfigController:configAction' => '?',
            'Zikula\\GroupsModule\\Controller\\ConfigController:setTranslator' => '?',
            'Zikula\\GroupsModule\\Controller\\GroupController:adminListAction' => '?',
            'Zikula\\GroupsModule\\Controller\\GroupController:createAction' => '?',
            'Zikula\\GroupsModule\\Controller\\GroupController:editAction' => '?',
            'Zikula\\GroupsModule\\Controller\\GroupController:listAction' => '?',
            'Zikula\\GroupsModule\\Controller\\GroupController:removeAction' => '?',
            'Zikula\\GroupsModule\\Controller\\GroupController:setTranslator' => '?',
            'Zikula\\GroupsModule\\Controller\\MembershipController:addAction' => '?',
            'Zikula\\GroupsModule\\Controller\\MembershipController:adminListAction' => '?',
            'Zikula\\GroupsModule\\Controller\\MembershipController:getUsersByFragmentAsTableAction' => '?',
            'Zikula\\GroupsModule\\Controller\\MembershipController:joinAction' => '?',
            'Zikula\\GroupsModule\\Controller\\MembershipController:leaveAction' => '?',
            'Zikula\\GroupsModule\\Controller\\MembershipController:listAction' => '?',
            'Zikula\\GroupsModule\\Controller\\MembershipController:removeAction' => '?',
            'Zikula\\GroupsModule\\Controller\\MembershipController:setTranslator' => '?',
            'Zikula\\MailerModule\\Controller\\ConfigController:configAction' => '?',
            'Zikula\\MailerModule\\Controller\\ConfigController:setTranslator' => '?',
            'Zikula\\MailerModule\\Controller\\ConfigController:testAction' => '?',
            'Zikula\\MenuModule\\Controller\\ConfigController:setTranslator' => '?',
            'Zikula\\MenuModule\\Controller\\MenuController:deleteAction' => '?',
            'Zikula\\MenuModule\\Controller\\MenuController:editAction' => '?',
            'Zikula\\MenuModule\\Controller\\MenuController:listAction' => '?',
            'Zikula\\MenuModule\\Controller\\MenuController:setTranslator' => '?',
            'Zikula\\MenuModule\\Controller\\MenuController:viewAction' => '?',
            'Zikula\\MenuModule\\Controller\\NodeController:contextMenuAction' => '?',
            'Zikula\\MenuModule\\Controller\\NodeController:moveAction' => '?',
            'Zikula\\MenuModule\\Controller\\NodeController:setTranslator' => '?',
            'Zikula\\PermissionsModule\\Controller\\ConfigController:configAction' => '?',
            'Zikula\\PermissionsModule\\Controller\\ConfigController:setTranslator' => '?',
            'Zikula\\PermissionsModule\\Controller\\PermissionController:changeOrderAction' => '?',
            'Zikula\\PermissionsModule\\Controller\\PermissionController:deleteAction' => '?',
            'Zikula\\PermissionsModule\\Controller\\PermissionController:editAction' => '?',
            'Zikula\\PermissionsModule\\Controller\\PermissionController:listAction' => '?',
            'Zikula\\PermissionsModule\\Controller\\PermissionController:setTranslator' => '?',
            'Zikula\\PermissionsModule\\Controller\\PermissionController:testAction' => '?',
            'Zikula\\RoutesModule\\Controller\\AjaxController:setTranslator' => '?',
            'Zikula\\RoutesModule\\Controller\\AjaxController:updateSortPositionsAction' => '?',
            'Zikula\\RoutesModule\\Controller\\ConfigController:configAction' => '?',
            'Zikula\\RoutesModule\\Controller\\ConfigController:setTranslator' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController:adminDisplayAction' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController:adminEditAction' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController:adminHandleSelectedEntriesAction' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController:adminIndexAction' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController:adminViewAction' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController:displayAction' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController:editAction' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController:handleSelectedEntriesAction' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController:indexAction' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController:setTranslator' => '?',
            'Zikula\\RoutesModule\\Controller\\RouteController:viewAction' => '?',
            'Zikula\\RoutesModule\\Controller\\UpdateController:dumpJsRoutesAction' => '?',
            'Zikula\\RoutesModule\\Controller\\UpdateController:reloadAction' => '?',
            'Zikula\\RoutesModule\\Controller\\UpdateController:renewAction' => '?',
            'Zikula\\RoutesModule\\Controller\\UpdateController:setTranslator' => '?',
            'Zikula\\SearchModule\\Controller\\ConfigController:configAction' => '?',
            'Zikula\\SearchModule\\Controller\\ConfigController:setTranslator' => '?',
            'Zikula\\SearchModule\\Controller\\SearchController:executeAction' => '?',
            'Zikula\\SearchModule\\Controller\\SearchController:opensearchAction' => '?',
            'Zikula\\SearchModule\\Controller\\SearchController:recentAction' => '?',
            'Zikula\\SearchModule\\Controller\\SearchController:setTranslator' => '?',
            'Zikula\\SecurityCenterModule\\Controller\\ConfigController:allowedhtmlAction' => '?',
            'Zikula\\SecurityCenterModule\\Controller\\ConfigController:configAction' => '?',
            'Zikula\\SecurityCenterModule\\Controller\\ConfigController:purifierconfigAction' => '?',
            'Zikula\\SecurityCenterModule\\Controller\\ConfigController:setTranslator' => '?',
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController:deleteentryAction' => '?',
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController:exportAction' => '?',
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController:purgeAction' => '?',
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController:setTranslator' => '?',
            'Zikula\\SecurityCenterModule\\Controller\\IdsLogController:viewAction' => '?',
            'Zikula\\SettingsModule\\Controller\\SettingsController:localeAction' => '?',
            'Zikula\\SettingsModule\\Controller\\SettingsController:mainAction' => '?',
            'Zikula\\SettingsModule\\Controller\\SettingsController:setTranslator' => '?',
            'Zikula\\SettingsModule\\Controller\\SettingsController:toggleEditInPlaceAction' => '?',
            'Zikula\\ThemeModule\\Controller\\CombinedAssetController:assetAction' => '?',
            'Zikula\\ThemeModule\\Controller\\CombinedAssetController:setTranslator' => '?',
            'Zikula\\ThemeModule\\Controller\\ThemeController:activateAction' => '?',
            'Zikula\\ThemeModule\\Controller\\ThemeController:creditsAction' => '?',
            'Zikula\\ThemeModule\\Controller\\ThemeController:deleteAction' => '?',
            'Zikula\\ThemeModule\\Controller\\ThemeController:previewAction' => '?',
            'Zikula\\ThemeModule\\Controller\\ThemeController:setAsDefaultAction' => '?',
            'Zikula\\ThemeModule\\Controller\\ThemeController:setTranslator' => '?',
            'Zikula\\ThemeModule\\Controller\\ThemeController:viewAction' => '?',
            'Zikula\\ThemeModule\\Controller\\VarController:setTranslator' => '?',
            'Zikula\\ThemeModule\\Controller\\VarController:varAction' => '?',
            'Zikula\\UsersModule\\Controller\\AccessController:loginAction' => '?',
            'Zikula\\UsersModule\\Controller\\AccessController:logoutAction' => '?',
            'Zikula\\UsersModule\\Controller\\AccessController:setTranslator' => '?',
            'Zikula\\UsersModule\\Controller\\AccountController:changeLanguageAction' => '?',
            'Zikula\\UsersModule\\Controller\\AccountController:menuAction' => '?',
            'Zikula\\UsersModule\\Controller\\AccountController:setTranslator' => '?',
            'Zikula\\UsersModule\\Controller\\ConfigController:authenticationMethodsAction' => '?',
            'Zikula\\UsersModule\\Controller\\ConfigController:configAction' => '?',
            'Zikula\\UsersModule\\Controller\\ConfigController:setTranslator' => '?',
            'Zikula\\UsersModule\\Controller\\FileIOController:exportAction' => '?',
            'Zikula\\UsersModule\\Controller\\FileIOController:setTranslator' => '?',
            'Zikula\\UsersModule\\Controller\\LiveSearchController:getUsersAction' => '?',
            'Zikula\\UsersModule\\Controller\\LiveSearchController:setTranslator' => '?',
            'Zikula\\UsersModule\\Controller\\RegistrationController:registerAction' => '?',
            'Zikula\\UsersModule\\Controller\\RegistrationController:setTranslator' => '?',
            'Zikula\\UsersModule\\Controller\\UserAdministrationController:approveAction' => '?',
            'Zikula\\UsersModule\\Controller\\UserAdministrationController:deleteAction' => '?',
            'Zikula\\UsersModule\\Controller\\UserAdministrationController:getUsersByFragmentAsTableAction' => '?',
            'Zikula\\UsersModule\\Controller\\UserAdministrationController:listAction' => '?',
            'Zikula\\UsersModule\\Controller\\UserAdministrationController:mailUsersAction' => '?',
            'Zikula\\UsersModule\\Controller\\UserAdministrationController:modifyAction' => '?',
            'Zikula\\UsersModule\\Controller\\UserAdministrationController:searchAction' => '?',
            'Zikula\\UsersModule\\Controller\\UserAdministrationController:setTranslator' => '?',
            'Zikula\\ZAuthModule\\Controller\\AccountController:changeEmailAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\AccountController:changePasswordAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\AccountController:confirmChangedEmailAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\AccountController:lostPasswordAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\AccountController:lostPasswordResetAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\AccountController:lostUserNameAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\AccountController:setTranslator' => '?',
            'Zikula\\ZAuthModule\\Controller\\ConfigController:setTranslator' => '?',
            'Zikula\\ZAuthModule\\Controller\\FileIOController:importAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\FileIOController:setTranslator' => '?',
            'Zikula\\ZAuthModule\\Controller\\RegistrationController:setTranslator' => '?',
            'Zikula\\ZAuthModule\\Controller\\RegistrationController:verifyAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController:createAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController:getUsersByFragmentAsTableAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController:listAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController:modifyAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController:sendConfirmationAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController:sendUserNameAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController:setTranslator' => '?',
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController:togglePasswordChangeAction' => '?',
            'Zikula\\ZAuthModule\\Controller\\UserAdministrationController:verifyAction' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.KmZNtaq' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_KmZNtaqService()
    {
        return $this->privates['.service_locator.KmZNtaq'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'authenticationMappingRepository' => ['privates', 'Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository', 'getAuthenticationMappingRepositoryService', false],
            'eventDispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'hookDispatcher' => ['privates', 'Zikula\\Bundle\\HookBundle\\Dispatcher\\HookDispatcher', 'getHookDispatcherService', false],
            'mapping' => ['privates', 'Zikula\\ZAuthModule\\Entity\\AuthenticationMappingEntity', 'getAuthenticationMappingEntityService', false],
            'passwordApi' => ['services', 'Zikula\\ZAuthModule\\Api\\PasswordApi', 'getPasswordApiService', false],
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'authenticationMappingRepository' => '?',
            'eventDispatcher' => '?',
            'hookDispatcher' => '?',
            'mapping' => 'Zikula\\ZAuthModule\\Entity\\AuthenticationMappingEntity',
            'passwordApi' => '?',
            'userRepository' => '?',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.LFdkE7T' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_LFdkE7TService()
    {
        return $this->privates['.service_locator.LFdkE7T'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'cacheClearer' => ['services', 'Zikula\\Bundle\\CoreBundle\\CacheClearer', 'getCacheClearer2Service', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'cacheClearer' => 'Zikula\\Bundle\\CoreBundle\\CacheClearer',
            'router' => '?',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.LJO0t4C' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_LJO0t4CService()
    {
        return $this->privates['.service_locator.LJO0t4C'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'positionEntity' => ['privates', 'Zikula\\BlocksModule\\Entity\\BlockPositionEntity', 'getBlockPositionEntityService', false],
        ], [
            'positionEntity' => 'Zikula\\BlocksModule\\Entity\\BlockPositionEntity',
        ]);
    }

    /**
     * Gets the private '.service_locator.MFwmbgB' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_MFwmbgBService()
    {
        return $this->privates['.service_locator.MFwmbgB'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'mailHelper' => ['privates', 'Zikula\\UsersModule\\Helper\\MailHelper', 'getMailHelper2Service', false],
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'mailHelper' => 'Zikula\\UsersModule\\Helper\\MailHelper',
            'userRepository' => '?',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.MP6F85r' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_MP6F85rService()
    {
        return $this->privates['.service_locator.MP6F85r'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'groupRepository' => ['services', 'Zikula\\GroupsModule\\Entity\\Repository\\GroupRepository', 'getGroupRepositoryService', false],
        ], [
            'groupRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.Mhd.iFW' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_Mhd_IFWService()
    {
        return $this->privates['.service_locator.Mhd.iFW'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'doctrine' => ['services', 'doctrine', 'getDoctrineService', false],
            'form.factory' => ['services', 'form.factory', 'getForm_FactoryService', false],
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'security.authorization_checker' => ['services', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'security.csrf.token_manager' => ['services', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', false],
            'security.token_storage' => ['services', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'session' => ['services', 'session', 'getSessionService', false],
            'twig' => ['services', 'twig', 'getTwigService', false],
        ], [
            'doctrine' => '?',
            'form.factory' => '?',
            'http_kernel' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
            'security.authorization_checker' => '?',
            'security.csrf.token_manager' => '?',
            'security.token_storage' => '?',
            'session' => '?',
            'twig' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.Mjns3VX' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_Mjns3VXService()
    {
        return $this->privates['.service_locator.Mjns3VX'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'bundleSyncHelper' => ['services', 'Zikula\\ExtensionsModule\\Helper\\BundleSyncHelper', 'getBundleSyncHelperService', false],
            'eventDispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'extensionRepository' => ['services', 'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository', 'getExtensionRepositoryService', false],
            'router' => ['services', 'router', 'getRouterService', false],
        ], [
            'bundleSyncHelper' => 'Zikula\\ExtensionsModule\\Helper\\BundleSyncHelper',
            'eventDispatcher' => '?',
            'extensionRepository' => '?',
            'router' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.NPQiHiN' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_NPQiHiNService()
    {
        return $this->privates['.service_locator.NPQiHiN'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'eventDispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'group' => ['privates', 'Zikula\\GroupsModule\\Entity\\GroupEntity', 'getGroupEntityService', false],
            'userEntity' => ['privates', 'Zikula\\UsersModule\\Entity\\UserEntity', 'getUserEntityService', false],
        ], [
            'eventDispatcher' => '?',
            'group' => 'Zikula\\GroupsModule\\Entity\\GroupEntity',
            'userEntity' => 'Zikula\\UsersModule\\Entity\\UserEntity',
        ]);
    }

    /**
     * Gets the private '.service_locator.NTCZSds' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_NTCZSdsService()
    {
        return $this->privates['.service_locator.NTCZSds'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'doctrine' => ['services', 'doctrine', 'getDoctrineService', false],
            'form.factory' => ['services', 'form.factory', 'getForm_FactoryService', false],
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'security.authorization_checker' => ['services', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'security.csrf.token_manager' => ['services', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', false],
            'security.token_storage' => ['services', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'session' => ['services', 'session', 'getSessionService', false],
            'twig' => ['services', 'twig', 'getTwigService', false],
        ], [
            'doctrine' => '?',
            'form.factory' => '?',
            'http_kernel' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
            'security.authorization_checker' => '?',
            'security.csrf.token_manager' => '?',
            'security.token_storage' => '?',
            'session' => '?',
            'twig' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.NX_lu0O' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_NXLu0OService()
    {
        return $this->privates['.service_locator.NX_lu0O'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'permissionHelper' => ['privates', 'Zikula\\RoutesModule\\Helper\\PermissionHelper', 'getPermissionHelperService', false],
            'routeDumperHelper' => ['privates', 'Zikula\\RoutesModule\\Helper\\RouteDumperHelper', 'getRouteDumperHelperService', false],
        ], [
            'permissionHelper' => 'Zikula\\RoutesModule\\Helper\\PermissionHelper',
            'routeDumperHelper' => 'Zikula\\RoutesModule\\Helper\\RouteDumperHelper',
        ]);
    }

    /**
     * Gets the private '.service_locator.P7qdpMw' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_P7qdpMwService()
    {
        return $this->privates['.service_locator.P7qdpMw'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'localeApi' => ['services', 'Zikula\\SettingsModule\\Api\\LocaleApi', 'getLocaleApiService', false],
            'messageModuleCollector' => ['privates', 'Zikula\\UsersModule\\Collector\\MessageModuleCollector', 'getMessageModuleCollectorService', false],
            'profileModuleCollector' => ['privates', 'Zikula\\UsersModule\\Collector\\ProfileModuleCollector', 'getProfileModuleCollectorService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'localeApi' => '?',
            'messageModuleCollector' => 'Zikula\\UsersModule\\Collector\\MessageModuleCollector',
            'profileModuleCollector' => 'Zikula\\UsersModule\\Collector\\ProfileModuleCollector',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.PxQboCn' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_PxQboCnService()
    {
        return $this->privates['.service_locator.PxQboCn'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'appSettings' => ['privates', 'Zikula\\RoutesModule\\AppSettings', 'getAppSettingsService', false],
            'currentUserApi' => ['services', 'Zikula\\UsersModule\\Api\\CurrentUserApi', 'getCurrentUserApiService', false],
            'logger' => ['privates', 'monolog.logger', 'getMonolog_LoggerService', false],
            'permissionHelper' => ['privates', 'Zikula\\RoutesModule\\Helper\\PermissionHelper', 'getPermissionHelperService', false],
        ], [
            'appSettings' => 'Zikula\\RoutesModule\\AppSettings',
            'currentUserApi' => '?',
            'logger' => '?',
            'permissionHelper' => 'Zikula\\RoutesModule\\Helper\\PermissionHelper',
        ]);
    }

    /**
     * Gets the private '.service_locator.PyFwzGk' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_PyFwzGkService()
    {
        return $this->privates['.service_locator.PyFwzGk'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'blockRepository' => ['privates', 'Zikula\\BlocksModule\\Entity\\Repository\\BlockRepository', 'getBlockRepositoryService', false],
            'cacheClearer' => ['services', 'Zikula\\Bundle\\CoreBundle\\CacheClearer', 'getCacheClearer2Service', false],
            'dependencyHelper' => ['privates', 'Zikula\\ExtensionsModule\\Helper\\ExtensionDependencyHelper', 'getExtensionDependencyHelperService', false],
            'extension' => ['privates', 'Zikula\\ExtensionsModule\\Entity\\ExtensionEntity', 'getExtensionEntityService', false],
            'extensionHelper' => ['services', 'Zikula\\ExtensionsModule\\Helper\\ExtensionHelper', 'getExtensionHelperService', false],
            'extensionStateHelper' => ['privates', 'Zikula\\ExtensionsModule\\Helper\\ExtensionStateHelper', 'getExtensionStateHelperService', false],
            'kernel' => ['services', 'kernel', 'getKernelService', false],
        ], [
            'blockRepository' => '?',
            'cacheClearer' => 'Zikula\\Bundle\\CoreBundle\\CacheClearer',
            'dependencyHelper' => 'Zikula\\ExtensionsModule\\Helper\\ExtensionDependencyHelper',
            'extension' => 'Zikula\\ExtensionsModule\\Entity\\ExtensionEntity',
            'extensionHelper' => 'Zikula\\ExtensionsModule\\Helper\\ExtensionHelper',
            'extensionStateHelper' => 'Zikula\\ExtensionsModule\\Helper\\ExtensionStateHelper',
            'kernel' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.Q6Excfe' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_Q6ExcfeService()
    {
        return $this->privates['.service_locator.Q6Excfe'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'repository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminCategoryRepository', 'getAdminCategoryRepositoryService', false],
        ], [
            'repository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.QbjOsEa' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_QbjOsEaService()
    {
        return $this->privates['.service_locator.QbjOsEa'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'activator' => ['privates', '.errored..service_locator.QbjOsEa.Translation\\Bundle\\EditInPlace\\Activator', NULL, 'Cannot autowire service ".service_locator.QbjOsEa": it references class "Translation\\Bundle\\EditInPlace\\Activator" but no such service exists.'],
        ], [
            'activator' => 'Translation\\Bundle\\EditInPlace\\Activator',
        ]);
    }

    /**
     * Gets the private '.service_locator.Qd2v43d' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_Qd2v43dService()
    {
        return $this->privates['.service_locator.Qd2v43d'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'adminCategoryRepository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminCategoryRepository', 'getAdminCategoryRepositoryService', false],
            'adminModuleRepository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminModuleRepository', 'getAdminModuleRepositoryService', false],
            'capabilityApi' => ['privates', 'Zikula\\ExtensionsModule\\Api\\CapabilityApi', 'getCapabilityApiService', false],
            'extensionMenuCollector' => ['privates', 'Zikula\\MenuModule\\ExtensionMenu\\ExtensionMenuCollector', 'getExtensionMenuCollectorService', false],
            'extensionRepository' => ['services', 'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository', 'getExtensionRepositoryService', false],
            'requestStack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
        ], [
            'adminCategoryRepository' => '?',
            'adminModuleRepository' => '?',
            'capabilityApi' => '?',
            'extensionMenuCollector' => 'Zikula\\MenuModule\\ExtensionMenu\\ExtensionMenuCollector',
            'extensionRepository' => '?',
            'requestStack' => '?',
            'router' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.RAt1Xco' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_RAt1XcoService()
    {
        return $this->privates['.service_locator.RAt1Xco'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'entityFactory' => ['services', 'Zikula\\RoutesModule\\Entity\\Factory\\EntityFactory', 'getEntityFactoryService', false],
        ], [
            'entityFactory' => 'Zikula\\RoutesModule\\Entity\\Factory\\EntityFactory',
        ]);
    }

    /**
     * Gets the private '.service_locator.RehufEE' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_RehufEEService()
    {
        return $this->privates['.service_locator.RehufEE'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'bundleSyncHelper' => ['services', 'Zikula\\ExtensionsModule\\Helper\\BundleSyncHelper', 'getBundleSyncHelperService', false],
            'cacheClearer' => ['services', 'Zikula\\Bundle\\CoreBundle\\CacheClearer', 'getCacheClearer2Service', false],
        ], [
            'bundleSyncHelper' => 'Zikula\\ExtensionsModule\\Helper\\BundleSyncHelper',
            'cacheClearer' => 'Zikula\\Bundle\\CoreBundle\\CacheClearer',
        ]);
    }

    /**
     * Gets the private '.service_locator.Rn.c2h9' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_Rn_C2h9Service()
    {
        return $this->privates['.service_locator.Rn.c2h9'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'cacheClearer' => ['services', 'Zikula\\Bundle\\CoreBundle\\CacheClearer', 'getCacheClearer2Service', false],
            'purifierHelper' => ['services', 'Zikula\\SecurityCenterModule\\Helper\\PurifierHelper', 'getPurifierHelperService', false],
        ], [
            'cacheClearer' => 'Zikula\\Bundle\\CoreBundle\\CacheClearer',
            'purifierHelper' => 'Zikula\\SecurityCenterModule\\Helper\\PurifierHelper',
        ]);
    }

    /**
     * Gets the private '.service_locator.S3oQfnr' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_S3oQfnrService()
    {
        return $this->privates['.service_locator.S3oQfnr'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
        ], [
            'userRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.S9SudG.' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_S9SudG_Service()
    {
        return $this->privates['.service_locator.S9SudG.'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'repository' => ['privates', 'Zikula\\SecurityCenterModule\\Entity\\Repository\\IntrusionRepository', 'getIntrusionRepositoryService', false],
        ], [
            'repository' => 'Zikula\\SecurityCenterModule\\Entity\\Repository\\IntrusionRepository',
        ]);
    }

    /**
     * Gets the private '.service_locator.SRnkpTI' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_SRnkpTIService()
    {
        return $this->privates['.service_locator.SRnkpTI'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'translator' => ['services', 'translator', 'getTranslatorService', false],
        ], [
            'translator' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.SZXLtQR' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_SZXLtQRService()
    {
        return $this->privates['.service_locator.SZXLtQR'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'controllerHelper' => ['privates', 'Zikula\\RoutesModule\\Helper\\ControllerHelper', 'getControllerHelper2Service', false],
            'entityFactory' => ['services', 'Zikula\\RoutesModule\\Entity\\Factory\\EntityFactory', 'getEntityFactoryService', false],
            'permissionHelper' => ['privates', 'Zikula\\RoutesModule\\Helper\\PermissionHelper', 'getPermissionHelperService', false],
            'route' => ['privates', 'Zikula\\RoutesModule\\Entity\\RouteEntity', 'getRouteEntityService', false],
            'viewHelper' => ['privates', 'Zikula\\RoutesModule\\Helper\\ViewHelper', 'getViewHelperService', false],
        ], [
            'controllerHelper' => 'Zikula\\RoutesModule\\Helper\\ControllerHelper',
            'entityFactory' => 'Zikula\\RoutesModule\\Entity\\Factory\\EntityFactory',
            'permissionHelper' => 'Zikula\\RoutesModule\\Helper\\PermissionHelper',
            'route' => 'Zikula\\RoutesModule\\Entity\\RouteEntity',
            'viewHelper' => 'Zikula\\RoutesModule\\Helper\\ViewHelper',
        ]);
    }

    /**
     * Gets the private '.service_locator.T5htiMj' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_T5htiMjService()
    {
        return $this->privates['.service_locator.T5htiMj'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'collector' => ['privates', 'Zikula\\Bundle\\HookBundle\\Collector\\HookCollector', 'getHookCollectorService', false],
            'hookDispatcher' => ['privates', 'Zikula\\Bundle\\HookBundle\\Dispatcher\\HookDispatcher', 'getHookDispatcherService', false],
            'kernel' => ['services', 'kernel', 'getKernelService', false],
            'permissionApi' => ['privates', 'Zikula\\PermissionsModule\\Api\\PermissionApi', 'getPermissionApiService', false],
            'translator' => ['services', 'translator', 'getTranslatorService', false],
        ], [
            'collector' => '?',
            'hookDispatcher' => '?',
            'kernel' => '?',
            'permissionApi' => '?',
            'translator' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.TfcQtI2' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_TfcQtI2Service()
    {
        return $this->privates['.service_locator.TfcQtI2'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'doctrine' => ['services', 'doctrine', 'getDoctrineService', false],
            'form.factory' => ['services', 'form.factory', 'getForm_FactoryService', false],
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'security.authorization_checker' => ['services', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'security.csrf.token_manager' => ['services', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', false],
            'security.token_storage' => ['services', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'session' => ['services', 'session', 'getSessionService', false],
            'twig' => ['services', 'twig', 'getTwigService', false],
        ], [
            'doctrine' => '?',
            'form.factory' => '?',
            'http_kernel' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
            'security.authorization_checker' => '?',
            'security.csrf.token_manager' => '?',
            'security.token_storage' => '?',
            'session' => '?',
            'twig' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.Twi25pd' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_Twi25pdService()
    {
        return $this->privates['.service_locator.Twi25pd'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'doctrine' => ['services', 'doctrine', 'getDoctrineService', false],
            'form.factory' => ['services', 'form.factory', 'getForm_FactoryService', false],
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'security.authorization_checker' => ['services', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'security.csrf.token_manager' => ['services', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', false],
            'security.token_storage' => ['services', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'session' => ['services', 'session', 'getSessionService', false],
            'twig' => ['services', 'twig', 'getTwigService', false],
        ], [
            'doctrine' => '?',
            'form.factory' => '?',
            'http_kernel' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
            'security.authorization_checker' => '?',
            'security.csrf.token_manager' => '?',
            'security.token_storage' => '?',
            'session' => '?',
            'twig' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.UXQzp0z' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_UXQzp0zService()
    {
        return $this->privates['.service_locator.UXQzp0z'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'menuItemEntity' => ['privates', 'Zikula\\MenuModule\\Entity\\MenuItemEntity', 'getMenuItemEntityService', false],
        ], [
            'menuItemEntity' => 'Zikula\\MenuModule\\Entity\\MenuItemEntity',
        ]);
    }

    /**
     * Gets the private '.service_locator.UYLqkkP' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_UYLqkkPService()
    {
        return $this->privates['.service_locator.UYLqkkP'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'adminCategoryRepository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminCategoryRepository', 'getAdminCategoryRepositoryService', false],
        ], [
            'adminCategoryRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.VC15VB8' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_VC15VB8Service()
    {
        return $this->privates['.service_locator.VC15VB8'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'kernel' => ['services', 'kernel', 'getKernelService', false],
        ], [
            'kernel' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.VCOH3Fw' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_VCOH3FwService()
    {
        return $this->privates['.service_locator.VCOH3Fw'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'accessHelper' => ['privates', 'Zikula\\UsersModule\\Helper\\AccessHelper', 'getAccessHelperService', false],
            'currentUserApi' => ['services', 'Zikula\\UsersModule\\Api\\CurrentUserApi', 'getCurrentUserApiService', false],
            'eventDispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
        ], [
            'accessHelper' => 'Zikula\\UsersModule\\Helper\\AccessHelper',
            'currentUserApi' => '?',
            'eventDispatcher' => '?',
            'userRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.W5exam.' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_W5exam_Service()
    {
        return $this->privates['.service_locator.W5exam.'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'currentUserApi' => ['services', 'Zikula\\UsersModule\\Api\\CurrentUserApi', 'getCurrentUserApiService', false],
            'mailHelper' => ['privates', 'Zikula\\ZAuthModule\\Helper\\MailHelper', 'getMailHelperService', false],
            'passwordApi' => ['services', 'Zikula\\ZAuthModule\\Api\\PasswordApi', 'getPasswordApiService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'userVerificationRepository' => ['privates', 'Zikula\\ZAuthModule\\Entity\\Repository\\UserVerificationRepository', 'getUserVerificationRepositoryService', false],
        ], [
            'currentUserApi' => '?',
            'mailHelper' => 'Zikula\\ZAuthModule\\Helper\\MailHelper',
            'passwordApi' => '?',
            'router' => '?',
            'userVerificationRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.XNSlN14' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_XNSlN14Service()
    {
        return $this->privates['.service_locator.XNSlN14'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'actionsHelper' => ['privates', 'Zikula\\ZAuthModule\\Helper\\AdministrationActionsHelper', 'getAdministrationActionsHelperService', false],
            'authenticationMappingRepository' => ['privates', 'Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository', 'getAuthenticationMappingRepositoryService', false],
        ], [
            'actionsHelper' => 'Zikula\\ZAuthModule\\Helper\\AdministrationActionsHelper',
            'authenticationMappingRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.XdDM4ci' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_XdDM4ciService()
    {
        return $this->privates['.service_locator.XdDM4ci'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'eventDispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
        ], [
            'eventDispatcher' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.Y6FYYyz' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_Y6FYYyzService()
    {
        return $this->privates['.service_locator.Y6FYYyz'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'positionEntity' => ['privates', 'Zikula\\BlocksModule\\Entity\\BlockPositionEntity', 'getBlockPositionEntityService', false],
        ], [
            'positionEntity' => 'Zikula\\BlocksModule\\Entity\\BlockPositionEntity',
        ]);
    }

    /**
     * Gets the private '.service_locator.YMGaOSJ' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_YMGaOSJService()
    {
        return $this->privates['.service_locator.YMGaOSJ'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'extensionMenuCollector' => ['privates', 'Zikula\\MenuModule\\ExtensionMenu\\ExtensionMenuCollector', 'getExtensionMenuCollectorService', false],
            'extensionRepository' => ['services', 'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository', 'getExtensionRepositoryService', false],
            'requestStack' => ['services', 'request_stack', 'getRequestStackService', false],
        ], [
            'extensionMenuCollector' => 'Zikula\\MenuModule\\ExtensionMenu\\ExtensionMenuCollector',
            'extensionRepository' => '?',
            'requestStack' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.Yt68Lxm' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_Yt68LxmService()
    {
        return $this->privates['.service_locator.Yt68Lxm'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'category' => ['privates', 'Zikula\\CategoriesModule\\Entity\\CategoryEntity', 'getCategoryEntityService', false],
            'categoryRepository' => ['services', 'Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRepository', 'getCategoryRepositoryService', false],
        ], [
            'category' => 'Zikula\\CategoriesModule\\Entity\\CategoryEntity',
            'categoryRepository' => 'Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRepository',
        ]);
    }

    /**
     * Gets the private '.service_locator.ZEEmRh5' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_ZEEmRh5Service()
    {
        return $this->privates['.service_locator.ZEEmRh5'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'accessHelper' => ['privates', 'Zikula\\UsersModule\\Helper\\AccessHelper', 'getAccessHelperService', false],
            'authenticationMappingRepository' => ['privates', 'Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository', 'getAuthenticationMappingRepositoryService', false],
            'authenticationMethodCollector' => ['privates', 'Zikula\\UsersModule\\Collector\\AuthenticationMethodCollector', 'getAuthenticationMethodCollectorService', false],
            'currentUserApi' => ['services', 'Zikula\\UsersModule\\Api\\CurrentUserApi', 'getCurrentUserApiService', false],
            'lostPasswordVerificationHelper' => ['privates', 'Zikula\\ZAuthModule\\Helper\\LostPasswordVerificationHelper', 'getLostPasswordVerificationHelperService', false],
            'passwordApi' => ['services', 'Zikula\\ZAuthModule\\Api\\PasswordApi', 'getPasswordApiService', false],
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
        ], [
            'accessHelper' => 'Zikula\\UsersModule\\Helper\\AccessHelper',
            'authenticationMappingRepository' => '?',
            'authenticationMethodCollector' => 'Zikula\\UsersModule\\Collector\\AuthenticationMethodCollector',
            'currentUserApi' => '?',
            'lostPasswordVerificationHelper' => 'Zikula\\ZAuthModule\\Helper\\LostPasswordVerificationHelper',
            'passwordApi' => '?',
            'userRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.ZYCs5qz' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_ZYCs5qzService()
    {
        return $this->privates['.service_locator.ZYCs5qz'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'kernel' => ['services', 'kernel', 'getKernelService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'kernel' => '?',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.ZnkMVkQ' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_ZnkMVkQService()
    {
        return $this->privates['.service_locator.ZnkMVkQ'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'extension' => ['privates', 'Zikula\\ExtensionsModule\\Entity\\ExtensionEntity', 'getExtensionEntityService', false],
            'extensionHelper' => ['services', 'Zikula\\ExtensionsModule\\Helper\\ExtensionHelper', 'getExtensionHelperService', false],
        ], [
            'extension' => 'Zikula\\ExtensionsModule\\Entity\\ExtensionEntity',
            'extensionHelper' => 'Zikula\\ExtensionsModule\\Helper\\ExtensionHelper',
        ]);
    }

    /**
     * Gets the private '.service_locator._9jopT8' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_9jopT8Service()
    {
        return $this->privates['.service_locator._9jopT8'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'cacheClearer' => ['services', 'Zikula\\Bundle\\CoreBundle\\CacheClearer', 'getCacheClearer2Service', false],
            'kernel' => ['services', 'kernel', 'getKernelService', false],
            'themeRepository' => ['services', 'Zikula\\ThemeModule\\Entity\\Repository\\ThemeEntityRepository', 'getThemeEntityRepositoryService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'cacheClearer' => 'Zikula\\Bundle\\CoreBundle\\CacheClearer',
            'kernel' => '?',
            'themeRepository' => 'Zikula\\ThemeModule\\Entity\\Repository\\ThemeEntityRepository',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator._BDNuWv' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_BDNuWvService()
    {
        return $this->privates['.service_locator._BDNuWv'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'category' => ['privates', 'Zikula\\CategoriesModule\\Entity\\CategoryEntity', 'getCategoryEntityService', false],
            'categoryRepository' => ['services', 'Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRepository', 'getCategoryRepositoryService', false],
            'localeApi' => ['services', 'Zikula\\SettingsModule\\Api\\LocaleApi', 'getLocaleApiService', false],
            'processingHelper' => ['privates', 'Zikula\\CategoriesModule\\Helper\\CategoryProcessingHelper', 'getCategoryProcessingHelperService', false],
        ], [
            'category' => 'Zikula\\CategoriesModule\\Entity\\CategoryEntity',
            'categoryRepository' => 'Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRepository',
            'localeApi' => '?',
            'processingHelper' => 'Zikula\\CategoriesModule\\Helper\\CategoryProcessingHelper',
        ]);
    }

    /**
     * Gets the private '.service_locator._HVhBvb' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_HVhBvbService()
    {
        return $this->privates['.service_locator._HVhBvb'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'authenticationMappingRepository' => ['privates', 'Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository', 'getAuthenticationMappingRepositoryService', false],
            'currentUserApi' => ['services', 'Zikula\\UsersModule\\Api\\CurrentUserApi', 'getCurrentUserApiService', false],
            'mailHelper' => ['privates', 'Zikula\\ZAuthModule\\Helper\\MailHelper', 'getMailHelperService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'authenticationMappingRepository' => '?',
            'currentUserApi' => '?',
            'mailHelper' => 'Zikula\\ZAuthModule\\Helper\\MailHelper',
            'router' => '?',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.aukUB8P' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_AukUB8PService()
    {
        return $this->privates['.service_locator.aukUB8P'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'engine' => ['services', 'Zikula\\ThemeModule\\Engine\\Engine', 'getEngineService', false],
        ], [
            'engine' => 'Zikula\\ThemeModule\\Engine\\Engine',
        ]);
    }

    /**
     * Gets the private '.service_locator.bhmUFxm' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_BhmUFxmService()
    {
        return $this->privates['.service_locator.bhmUFxm'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'permissionApi' => ['privates', 'Zikula\\PermissionsModule\\Api\\PermissionApi', 'getPermissionApiService', false],
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
        ], [
            'permissionApi' => '?',
            'userRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.bxPsQVH' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_BxPsQVHService()
    {
        return $this->privates['.service_locator.bxPsQVH'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'cacheClearer' => ['services', 'Zikula\\Bundle\\CoreBundle\\CacheClearer', 'getCacheClearer2Service', false],
            'dependencyHelper' => ['privates', 'Zikula\\ExtensionsModule\\Helper\\ExtensionDependencyHelper', 'getExtensionDependencyHelperService', false],
            'extension' => ['privates', 'Zikula\\ExtensionsModule\\Entity\\ExtensionEntity', 'getExtensionEntityService', false],
            'extensionHelper' => ['services', 'Zikula\\ExtensionsModule\\Helper\\ExtensionHelper', 'getExtensionHelperService', false],
            'extensionRepository' => ['services', 'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository', 'getExtensionRepositoryService', false],
            'extensionStateHelper' => ['privates', 'Zikula\\ExtensionsModule\\Helper\\ExtensionStateHelper', 'getExtensionStateHelperService', false],
            'kernel' => ['services', 'kernel', 'getKernelService', false],
        ], [
            'cacheClearer' => 'Zikula\\Bundle\\CoreBundle\\CacheClearer',
            'dependencyHelper' => 'Zikula\\ExtensionsModule\\Helper\\ExtensionDependencyHelper',
            'extension' => 'Zikula\\ExtensionsModule\\Entity\\ExtensionEntity',
            'extensionHelper' => 'Zikula\\ExtensionsModule\\Helper\\ExtensionHelper',
            'extensionRepository' => '?',
            'extensionStateHelper' => 'Zikula\\ExtensionsModule\\Helper\\ExtensionStateHelper',
            'kernel' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.c4QGT1L' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_C4QGT1LService()
    {
        return $this->privates['.service_locator.c4QGT1L'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'groupsRepository' => ['services', 'Zikula\\GroupsModule\\Entity\\Repository\\GroupRepository', 'getGroupRepositoryService', false],
            'permissionApi' => ['privates', 'Zikula\\PermissionsModule\\Api\\PermissionApi', 'getPermissionApiService', false],
            'permissionRepository' => ['privates', 'Zikula\\PermissionsModule\\Entity\\Repository\\PermissionRepository', 'getPermissionRepositoryService', false],
            'schemaHelper' => ['privates', 'Zikula\\PermissionsModule\\Helper\\SchemaHelper', 'getSchemaHelper2Service', false],
        ], [
            'groupsRepository' => '?',
            'permissionApi' => '?',
            'permissionRepository' => '?',
            'schemaHelper' => 'Zikula\\PermissionsModule\\Helper\\SchemaHelper',
        ]);
    }

    /**
     * Gets the private '.service_locator.cNZ2NkP' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_CNZ2NkPService()
    {
        return $this->privates['.service_locator.cNZ2NkP'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'actionsHelper' => ['privates', 'Zikula\\UsersModule\\Helper\\AdministrationActionsHelper', 'getAdministrationActionsHelper2Service', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
        ], [
            'actionsHelper' => 'Zikula\\UsersModule\\Helper\\AdministrationActionsHelper',
            'router' => '?',
            'userRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.cqSHDFJ' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_CqSHDFJService()
    {
        return $this->privates['.service_locator.cqSHDFJ'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'groupRepository' => ['services', 'Zikula\\GroupsModule\\Entity\\Repository\\GroupRepository', 'getGroupRepositoryService', false],
            'ioHelper' => ['privates', 'Zikula\\ZAuthModule\\Helper\\FileIOHelper', 'getFileIOHelperService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'groupRepository' => '?',
            'ioHelper' => 'Zikula\\ZAuthModule\\Helper\\FileIOHelper',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.crDPbqM' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_CrDPbqMService()
    {
        return $this->privates['.service_locator.crDPbqM'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'doctrine' => ['services', 'doctrine', 'getDoctrineService', false],
            'form.factory' => ['services', 'form.factory', 'getForm_FactoryService', false],
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'security.authorization_checker' => ['services', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'security.csrf.token_manager' => ['services', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', false],
            'security.token_storage' => ['services', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'session' => ['services', 'session', 'getSessionService', false],
            'twig' => ['services', 'twig', 'getTwigService', false],
        ], [
            'doctrine' => '?',
            'form.factory' => '?',
            'http_kernel' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
            'security.authorization_checker' => '?',
            'security.csrf.token_manager' => '?',
            'security.token_storage' => '?',
            'session' => '?',
            'twig' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.ddxR4fK' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_DdxR4fKService()
    {
        return $this->privates['.service_locator.ddxR4fK'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'adminCategoryRepository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminCategoryRepository', 'getAdminCategoryRepositoryService', false],
            'adminLinksHelper' => ['privates', 'Zikula\\AdminModule\\Helper\\AdminLinksHelper', 'getAdminLinksHelperService', false],
            'adminModuleRepository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminModuleRepository', 'getAdminModuleRepositoryService', false],
            'capabilityApi' => ['privates', 'Zikula\\ExtensionsModule\\Api\\CapabilityApi', 'getCapabilityApiService', false],
            'extensionMenuCollector' => ['privates', 'Zikula\\MenuModule\\ExtensionMenu\\ExtensionMenuCollector', 'getExtensionMenuCollectorService', false],
            'kernel' => ['services', 'kernel', 'getKernelService', false],
            'router' => ['services', 'router', 'getRouterService', false],
        ], [
            'adminCategoryRepository' => '?',
            'adminLinksHelper' => 'Zikula\\AdminModule\\Helper\\AdminLinksHelper',
            'adminModuleRepository' => '?',
            'capabilityApi' => '?',
            'extensionMenuCollector' => 'Zikula\\MenuModule\\ExtensionMenu\\ExtensionMenuCollector',
            'kernel' => '?',
            'router' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.e.U7W_3' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_E_U7W3Service()
    {
        return $this->privates['.service_locator.e.U7W_3'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'doctrine' => ['services', 'doctrine', 'getDoctrineService', false],
            'form.factory' => ['services', 'form.factory', 'getForm_FactoryService', false],
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'security.authorization_checker' => ['services', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'security.csrf.token_manager' => ['services', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', false],
            'security.token_storage' => ['services', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'session' => ['services', 'session', 'getSessionService', false],
            'twig' => ['services', 'twig', 'getTwigService', false],
        ], [
            'doctrine' => '?',
            'form.factory' => '?',
            'http_kernel' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
            'security.authorization_checker' => '?',
            'security.csrf.token_manager' => '?',
            'security.token_storage' => '?',
            'session' => '?',
            'twig' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.etNUnIn' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_EtNUnInService()
    {
        return $this->privates['.service_locator.etNUnIn'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'accessHelper' => ['privates', 'Zikula\\UsersModule\\Helper\\AccessHelper', 'getAccessHelperService', false],
            'authenticationMappingRepository' => ['privates', 'Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository', 'getAuthenticationMappingRepositoryService', false],
            'currentUserApi' => ['services', 'Zikula\\UsersModule\\Api\\CurrentUserApi', 'getCurrentUserApiService', false],
            'eventDispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'mailHelper' => ['privates', 'Zikula\\UsersModule\\Helper\\MailHelper', 'getMailHelper2Service', false],
            'passwordApi' => ['services', 'Zikula\\ZAuthModule\\Api\\PasswordApi', 'getPasswordApiService', false],
            'registrationHelper' => ['privates', 'Zikula\\UsersModule\\Helper\\RegistrationHelper', 'getRegistrationHelperService', false],
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
            'userVerificationRepository' => ['privates', 'Zikula\\ZAuthModule\\Entity\\Repository\\UserVerificationRepository', 'getUserVerificationRepositoryService', false],
            'validator' => ['services', 'validator', 'getValidatorService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'accessHelper' => 'Zikula\\UsersModule\\Helper\\AccessHelper',
            'authenticationMappingRepository' => '?',
            'currentUserApi' => '?',
            'eventDispatcher' => '?',
            'mailHelper' => 'Zikula\\UsersModule\\Helper\\MailHelper',
            'passwordApi' => '?',
            'registrationHelper' => 'Zikula\\UsersModule\\Helper\\RegistrationHelper',
            'userRepository' => '?',
            'userVerificationRepository' => '?',
            'validator' => '?',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.fWyCulK' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_FWyCulKService()
    {
        return $this->privates['.service_locator.fWyCulK'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'capabilityApi' => ['privates', 'Zikula\\ExtensionsModule\\Api\\CapabilityApi', 'getCapabilityApiService', false],
            'entityManager' => ['services', 'doctrine.orm.default_entity_manager', 'getDoctrine_Orm_DefaultEntityManagerService', false],
            'registryEntity' => ['privates', 'Zikula\\CategoriesModule\\Entity\\CategoryRegistryEntity', 'getCategoryRegistryEntityService', false],
            'registryRepository' => ['services', 'Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRegistryRepository', 'getCategoryRegistryRepositoryService', false],
        ], [
            'capabilityApi' => '?',
            'entityManager' => '?',
            'registryEntity' => 'Zikula\\CategoriesModule\\Entity\\CategoryRegistryEntity',
            'registryRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.g77nwt4' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_G77nwt4Service()
    {
        return $this->privates['.service_locator.g77nwt4'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'localeApi' => ['services', 'Zikula\\SettingsModule\\Api\\LocaleApi', 'getLocaleApiService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'localeApi' => '?',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.gDZjEEP' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_GDZjEEPService()
    {
        return $this->privates['.service_locator.gDZjEEP'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'collector' => ['privates', 'Zikula\\SearchModule\\Collector\\SearchableModuleCollector', 'getSearchableModuleCollectorService', false],
            'kernel' => ['services', 'kernel', 'getKernelService', false],
        ], [
            'collector' => 'Zikula\\SearchModule\\Collector\\SearchableModuleCollector',
            'kernel' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.gSvt8Pq' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_GSvt8PqService()
    {
        return $this->privates['.service_locator.gSvt8Pq'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'eventDispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'groupRepository' => ['services', 'Zikula\\GroupsModule\\Entity\\Repository\\GroupRepository', 'getGroupRepositoryService', false],
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
        ], [
            'eventDispatcher' => '?',
            'groupRepository' => '?',
            'userRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.ghFHQf1' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_GhFHQf1Service()
    {
        return $this->privates['.service_locator.ghFHQf1'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'repository' => ['privates', 'Zikula\\SecurityCenterModule\\Entity\\Repository\\IntrusionRepository', 'getIntrusionRepositoryService', false],
            'router' => ['services', 'router', 'getRouterService', false],
        ], [
            'repository' => 'Zikula\\SecurityCenterModule\\Entity\\Repository\\IntrusionRepository',
            'router' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.gxU0C5u' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_GxU0C5uService()
    {
        return $this->privates['.service_locator.gxU0C5u'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'adminCategoryRepository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminCategoryRepository', 'getAdminCategoryRepositoryService', false],
            'adminLinksHelper' => ['privates', 'Zikula\\AdminModule\\Helper\\AdminLinksHelper', 'getAdminLinksHelperService', false],
            'adminModuleRepository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminModuleRepository', 'getAdminModuleRepositoryService', false],
            'capabilityApi' => ['privates', 'Zikula\\ExtensionsModule\\Api\\CapabilityApi', 'getCapabilityApiService', false],
            'router' => ['services', 'router', 'getRouterService', false],
        ], [
            'adminCategoryRepository' => '?',
            'adminLinksHelper' => 'Zikula\\AdminModule\\Helper\\AdminLinksHelper',
            'adminModuleRepository' => '?',
            'capabilityApi' => '?',
            'router' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.hg8Nqz8' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_Hg8Nqz8Service()
    {
        return $this->privates['.service_locator.hg8Nqz8'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'currentUserApi' => ['services', 'Zikula\\UsersModule\\Api\\CurrentUserApi', 'getCurrentUserApiService', false],
            'eventDispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'group' => ['privates', 'Zikula\\GroupsModule\\Entity\\GroupEntity', 'getGroupEntityService', false],
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
        ], [
            'currentUserApi' => '?',
            'eventDispatcher' => '?',
            'group' => 'Zikula\\GroupsModule\\Entity\\GroupEntity',
            'userRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.hohOVVO' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_HohOVVOService()
    {
        return $this->privates['.service_locator.hohOVVO'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'permissionHelper' => ['privates', 'Zikula\\RoutesModule\\Helper\\PermissionHelper', 'getPermissionHelperService', false],
        ], [
            'permissionHelper' => 'Zikula\\RoutesModule\\Helper\\PermissionHelper',
        ]);
    }

    /**
     * Gets the private '.service_locator.jM8x..f' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_JM8x__FService()
    {
        return $this->privates['.service_locator.jM8x..f'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'menuItemEntity' => ['privates', 'Zikula\\MenuModule\\Entity\\MenuItemEntity', 'getMenuItemEntityService', false],
            'menuItemRepository' => ['privates', 'Zikula\\MenuModule\\Entity\\Repository\\MenuItemRepository', 'getMenuItemRepositoryService', false],
        ], [
            'menuItemEntity' => 'Zikula\\MenuModule\\Entity\\MenuItemEntity',
            'menuItemRepository' => 'Zikula\\MenuModule\\Entity\\Repository\\MenuItemRepository',
        ]);
    }

    /**
     * Gets the private '.service_locator.j_lmtN.' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_JLmtN_Service()
    {
        return $this->privates['.service_locator.j_lmtN.'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'blockApi' => ['privates', 'Zikula\\BlocksModule\\Api\\BlockApi', 'getBlockApiService', false],
        ], [
            'blockApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.jx7C1V3' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_Jx7C1V3Service()
    {
        return $this->privates['.service_locator.jx7C1V3'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'group' => ['privates', 'Zikula\\GroupsModule\\Entity\\GroupEntity', 'getGroupEntityService', false],
        ], [
            'group' => 'Zikula\\GroupsModule\\Entity\\GroupEntity',
        ]);
    }

    /**
     * Gets the private '.service_locator.kHEP6vB' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_KHEP6vBService()
    {
        return $this->privates['.service_locator.kHEP6vB'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'actionsHelper' => ['privates', 'Zikula\\ZAuthModule\\Helper\\AdministrationActionsHelper', 'getAdministrationActionsHelperService', false],
            'authenticationMappingRepository' => ['privates', 'Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository', 'getAuthenticationMappingRepositoryService', false],
            'router' => ['services', 'router', 'getRouterService', false],
        ], [
            'actionsHelper' => 'Zikula\\ZAuthModule\\Helper\\AdministrationActionsHelper',
            'authenticationMappingRepository' => '?',
            'router' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.kgFMb_g' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_KgFMbGService()
    {
        return $this->privates['.service_locator.kgFMb_g'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'currentUserApi' => ['services', 'Zikula\\UsersModule\\Api\\CurrentUserApi', 'getCurrentUserApiService', false],
            'eventDispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'hookDispatcher' => ['privates', 'Zikula\\Bundle\\HookBundle\\Dispatcher\\HookDispatcher', 'getHookDispatcherService', false],
            'user' => ['privates', 'Zikula\\UsersModule\\Entity\\UserEntity', 'getUserEntityService', false],
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
        ], [
            'currentUserApi' => '?',
            'eventDispatcher' => '?',
            'hookDispatcher' => '?',
            'user' => 'Zikula\\UsersModule\\Entity\\UserEntity',
            'userRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.kl87m7D' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_Kl87m7DService()
    {
        return $this->privates['.service_locator.kl87m7D'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'permissionEntity' => ['privates', 'Zikula\\PermissionsModule\\Entity\\PermissionEntity', 'getPermissionEntityService', false],
            'permissionRepository' => ['privates', 'Zikula\\PermissionsModule\\Entity\\Repository\\PermissionRepository', 'getPermissionRepositoryService', false],
        ], [
            'permissionEntity' => 'Zikula\\PermissionsModule\\Entity\\PermissionEntity',
            'permissionRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.ktNcpdk' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_KtNcpdkService()
    {
        return $this->privates['.service_locator.ktNcpdk'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'accessHelper' => ['privates', 'Zikula\\UsersModule\\Helper\\AccessHelper', 'getAccessHelperService', false],
            'authenticationMethodCollector' => ['privates', 'Zikula\\UsersModule\\Collector\\AuthenticationMethodCollector', 'getAuthenticationMethodCollectorService', false],
            'currentUserApi' => ['services', 'Zikula\\UsersModule\\Api\\CurrentUserApi', 'getCurrentUserApiService', false],
            'eventDispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'hookDispatcher' => ['privates', 'Zikula\\Bundle\\HookBundle\\Dispatcher\\HookDispatcher', 'getHookDispatcherService', false],
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
        ], [
            'accessHelper' => 'Zikula\\UsersModule\\Helper\\AccessHelper',
            'authenticationMethodCollector' => 'Zikula\\UsersModule\\Collector\\AuthenticationMethodCollector',
            'currentUserApi' => '?',
            'eventDispatcher' => '?',
            'hookDispatcher' => '?',
            'userRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.lLVQ1cm' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_LLVQ1cmService()
    {
        return $this->privates['.service_locator.lLVQ1cm'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'blockApi' => ['privates', 'Zikula\\BlocksModule\\Api\\BlockApi', 'getBlockApiService', false],
            'blockRepository' => ['privates', 'Zikula\\BlocksModule\\Entity\\Repository\\BlockRepository', 'getBlockRepositoryService', false],
            'localeApi' => ['services', 'Zikula\\SettingsModule\\Api\\LocaleApi', 'getLocaleApiService', false],
            'positionRepository' => ['privates', 'Zikula\\BlocksModule\\Entity\\Repository\\BlockPositionRepository', 'getBlockPositionRepositoryService', false],
            'router' => ['services', 'router', 'getRouterService', false],
        ], [
            'blockApi' => '?',
            'blockRepository' => '?',
            'localeApi' => '?',
            'positionRepository' => '?',
            'router' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.msOSgbQ' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_MsOSgbQService()
    {
        return $this->privates['.service_locator.msOSgbQ'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'currentUserApi' => ['services', 'Zikula\\UsersModule\\Api\\CurrentUserApi', 'getCurrentUserApiService', false],
            'extensionMenuCollector' => ['privates', 'Zikula\\MenuModule\\ExtensionMenu\\ExtensionMenuCollector', 'getExtensionMenuCollectorService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'currentUserApi' => '?',
            'extensionMenuCollector' => 'Zikula\\MenuModule\\ExtensionMenu\\ExtensionMenuCollector',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.nHwaLpR' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_NHwaLpRService()
    {
        return $this->privates['.service_locator.nHwaLpR'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'authenticationMethodCollector' => ['privates', 'Zikula\\UsersModule\\Collector\\AuthenticationMethodCollector', 'getAuthenticationMethodCollectorService', false],
            'eventDispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'hookDispatcher' => ['privates', 'Zikula\\Bundle\\HookBundle\\Dispatcher\\HookDispatcher', 'getHookDispatcherService', false],
            'mailHelper' => ['privates', 'Zikula\\UsersModule\\Helper\\MailHelper', 'getMailHelper2Service', false],
            'registrationHelper' => ['privates', 'Zikula\\UsersModule\\Helper\\RegistrationHelper', 'getRegistrationHelperService', false],
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'authenticationMethodCollector' => 'Zikula\\UsersModule\\Collector\\AuthenticationMethodCollector',
            'eventDispatcher' => '?',
            'hookDispatcher' => '?',
            'mailHelper' => 'Zikula\\UsersModule\\Helper\\MailHelper',
            'registrationHelper' => 'Zikula\\UsersModule\\Helper\\RegistrationHelper',
            'userRepository' => '?',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.nwBlUkS' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_NwBlUkSService()
    {
        return $this->privates['.service_locator.nwBlUkS'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'blockRepository' => ['privates', 'Zikula\\BlocksModule\\Entity\\Repository\\BlockRepository', 'getBlockRepositoryService', false],
            'positionEntity' => ['privates', 'Zikula\\BlocksModule\\Entity\\BlockPositionEntity', 'getBlockPositionEntityService', false],
            'positionRepository' => ['privates', 'Zikula\\BlocksModule\\Entity\\Repository\\BlockPositionRepository', 'getBlockPositionRepositoryService', false],
        ], [
            'blockRepository' => '?',
            'positionEntity' => 'Zikula\\BlocksModule\\Entity\\BlockPositionEntity',
            'positionRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.nzfZYg.' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_NzfZYg_Service()
    {
        return $this->privates['.service_locator.nzfZYg.'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'accessHelper' => ['privates', 'Zikula\\UsersModule\\Helper\\AccessHelper', 'getAccessHelperService', false],
            'cacheClearer' => ['services', 'Zikula\\Bundle\\CoreBundle\\CacheClearer', 'getCacheClearer2Service', false],
            'configDumper' => ['services', 'Zikula\\Bundle\\CoreBundle\\DynamicConfigDumper', 'getDynamicConfigDumperService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'accessHelper' => 'Zikula\\UsersModule\\Helper\\AccessHelper',
            'cacheClearer' => 'Zikula\\Bundle\\CoreBundle\\CacheClearer',
            'configDumper' => 'Zikula\\Bundle\\CoreBundle\\DynamicConfigDumper',
            'router' => '?',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.o2lcBnc' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_O2lcBncService()
    {
        return $this->privates['.service_locator.o2lcBnc'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'adminCategoryRepository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminCategoryRepository', 'getAdminCategoryRepositoryService', false],
            'adminModuleHelper' => ['privates', 'Zikula\\AdminModule\\Helper\\AdminModuleHelper', 'getAdminModuleHelperService', false],
            'adminModuleRepository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminModuleRepository', 'getAdminModuleRepositoryService', false],
            'capabilityApi' => ['privates', 'Zikula\\ExtensionsModule\\Api\\CapabilityApi', 'getCapabilityApiService', false],
            'themeEntityRepository' => ['services', 'Zikula\\ThemeModule\\Entity\\Repository\\ThemeEntityRepository', 'getThemeEntityRepositoryService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'adminCategoryRepository' => '?',
            'adminModuleHelper' => 'Zikula\\AdminModule\\Helper\\AdminModuleHelper',
            'adminModuleRepository' => '?',
            'capabilityApi' => '?',
            'themeEntityRepository' => 'Zikula\\ThemeModule\\Entity\\Repository\\ThemeEntityRepository',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.olqsteU' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_OlqsteUService()
    {
        return $this->privates['.service_locator.olqsteU'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'actionsHelper' => ['privates', 'Zikula\\UsersModule\\Helper\\AdministrationActionsHelper', 'getAdministrationActionsHelper2Service', false],
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
        ], [
            'actionsHelper' => 'Zikula\\UsersModule\\Helper\\AdministrationActionsHelper',
            'userRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.p6UcmdX' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_P6UcmdXService()
    {
        return $this->privates['.service_locator.p6UcmdX'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'mailHelper' => ['privates', 'Zikula\\UsersModule\\Helper\\MailHelper', 'getMailHelper2Service', false],
            'registrationHelper' => ['privates', 'Zikula\\UsersModule\\Helper\\RegistrationHelper', 'getRegistrationHelperService', false],
            'user' => ['privates', 'Zikula\\UsersModule\\Entity\\UserEntity', 'getUserEntityService', false],
        ], [
            'mailHelper' => 'Zikula\\UsersModule\\Helper\\MailHelper',
            'registrationHelper' => 'Zikula\\UsersModule\\Helper\\RegistrationHelper',
            'user' => 'Zikula\\UsersModule\\Entity\\UserEntity',
        ]);
    }

    /**
     * Gets the private '.service_locator.pNNo5z3' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_PNNo5z3Service()
    {
        return $this->privates['.service_locator.pNNo5z3'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'doctrine' => ['services', 'doctrine', 'getDoctrineService', false],
            'form.factory' => ['services', 'form.factory', 'getForm_FactoryService', false],
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'security.authorization_checker' => ['services', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'security.csrf.token_manager' => ['services', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', false],
            'security.token_storage' => ['services', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'session' => ['services', 'session', 'getSessionService', false],
            'twig' => ['services', 'twig', 'getTwigService', false],
        ], [
            'doctrine' => '?',
            'form.factory' => '?',
            'http_kernel' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
            'security.authorization_checker' => '?',
            'security.csrf.token_manager' => '?',
            'security.token_storage' => '?',
            'session' => '?',
            'twig' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.pQSbIFR' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_PQSbIFRService()
    {
        return $this->privates['.service_locator.pQSbIFR'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'doctrine' => ['services', 'doctrine', 'getDoctrineService', false],
            'form.factory' => ['services', 'form.factory', 'getForm_FactoryService', false],
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'security.authorization_checker' => ['services', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'security.csrf.token_manager' => ['services', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', false],
            'security.token_storage' => ['services', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'session' => ['services', 'session', 'getSessionService', false],
            'twig' => ['services', 'twig', 'getTwigService', false],
        ], [
            'doctrine' => '?',
            'form.factory' => '?',
            'http_kernel' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
            'security.authorization_checker' => '?',
            'security.csrf.token_manager' => '?',
            'security.token_storage' => '?',
            'session' => '?',
            'twig' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.pdFAuYB' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_PdFAuYBService()
    {
        return $this->privates['.service_locator.pdFAuYB'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'authenticationMappingRepository' => ['privates', 'Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository', 'getAuthenticationMappingRepositoryService', false],
            'currentUserApi' => ['services', 'Zikula\\UsersModule\\Api\\CurrentUserApi', 'getCurrentUserApiService', false],
            'lostPasswordVerificationHelper' => ['privates', 'Zikula\\ZAuthModule\\Helper\\LostPasswordVerificationHelper', 'getLostPasswordVerificationHelperService', false],
            'mailHelper' => ['privates', 'Zikula\\ZAuthModule\\Helper\\MailHelper', 'getMailHelperService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'authenticationMappingRepository' => '?',
            'currentUserApi' => '?',
            'lostPasswordVerificationHelper' => 'Zikula\\ZAuthModule\\Helper\\LostPasswordVerificationHelper',
            'mailHelper' => 'Zikula\\ZAuthModule\\Helper\\MailHelper',
            'router' => '?',
            'userRepository' => '?',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.qUTQ8Yv' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_QUTQ8YvService()
    {
        return $this->privates['.service_locator.qUTQ8Yv'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'controllerHelper' => ['privates', 'Zikula\\RoutesModule\\Helper\\ControllerHelper', 'getControllerHelper2Service', false],
            'formHandler' => ['privates', 'Zikula\\RoutesModule\\Form\\Handler\\Route\\EditHandler', 'getEditHandlerService', false],
            'permissionHelper' => ['privates', 'Zikula\\RoutesModule\\Helper\\PermissionHelper', 'getPermissionHelperService', false],
            'viewHelper' => ['privates', 'Zikula\\RoutesModule\\Helper\\ViewHelper', 'getViewHelperService', false],
        ], [
            'controllerHelper' => 'Zikula\\RoutesModule\\Helper\\ControllerHelper',
            'formHandler' => 'Zikula\\RoutesModule\\Form\\Handler\\Route\\EditHandler',
            'permissionHelper' => 'Zikula\\RoutesModule\\Helper\\PermissionHelper',
            'viewHelper' => 'Zikula\\RoutesModule\\Helper\\ViewHelper',
        ]);
    }

    /**
     * Gets the private '.service_locator.qi_rkSP' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_QiRkSPService()
    {
        return $this->privates['.service_locator.qi_rkSP'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'category' => ['privates', 'Zikula\\AdminModule\\Entity\\AdminCategoryEntity', 'getAdminCategoryEntityService', false],
        ], [
            'category' => 'Zikula\\AdminModule\\Entity\\AdminCategoryEntity',
        ]);
    }

    /**
     * Gets the private '.service_locator.r4oPMH7' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_R4oPMH7Service()
    {
        return $this->privates['.service_locator.r4oPMH7'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'currentUserApi' => ['services', 'Zikula\\UsersModule\\Api\\CurrentUserApi', 'getCurrentUserApiService', false],
            'entityFactory' => ['services', 'Zikula\\RoutesModule\\Entity\\Factory\\EntityFactory', 'getEntityFactoryService', false],
            'logger' => ['privates', 'monolog.logger', 'getMonolog_LoggerService', false],
            'workflowHelper' => ['privates', 'Zikula\\RoutesModule\\Helper\\WorkflowHelper', 'getWorkflowHelperService', false],
        ], [
            'currentUserApi' => '?',
            'entityFactory' => 'Zikula\\RoutesModule\\Entity\\Factory\\EntityFactory',
            'logger' => '?',
            'workflowHelper' => 'Zikula\\RoutesModule\\Helper\\WorkflowHelper',
        ]);
    }

    /**
     * Gets the private '.service_locator.rjioojn' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_RjioojnService()
    {
        return $this->privates['.service_locator.rjioojn'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'blockApi' => ['privates', 'Zikula\\BlocksModule\\Api\\BlockApi', 'getBlockApiService', false],
            'blockEntity' => ['privates', 'Zikula\\BlocksModule\\Entity\\BlockEntity', 'getBlockEntityService', false],
            'extensionRepository' => ['services', 'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository', 'getExtensionRepositoryService', false],
        ], [
            'blockApi' => '?',
            'blockEntity' => 'Zikula\\BlocksModule\\Entity\\BlockEntity',
            'extensionRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.sVSDQFF' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_SVSDQFFService()
    {
        return $this->privates['.service_locator.sVSDQFF'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'authenticationMappingRepository' => ['privates', 'Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository', 'getAuthenticationMappingRepositoryService', false],
            'currentUserApi' => ['services', 'Zikula\\UsersModule\\Api\\CurrentUserApi', 'getCurrentUserApiService', false],
            'passwordApi' => ['services', 'Zikula\\ZAuthModule\\Api\\PasswordApi', 'getPasswordApiService', false],
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
            'userVerificationRepository' => ['privates', 'Zikula\\ZAuthModule\\Entity\\Repository\\UserVerificationRepository', 'getUserVerificationRepositoryService', false],
        ], [
            'authenticationMappingRepository' => '?',
            'currentUserApi' => '?',
            'passwordApi' => '?',
            'userRepository' => '?',
            'userVerificationRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.tGwLL8t' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_TGwLL8tService()
    {
        return $this->privates['.service_locator.tGwLL8t'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'doctrine' => ['services', 'doctrine', 'getDoctrineService', false],
            'form.factory' => ['services', 'form.factory', 'getForm_FactoryService', false],
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'security.authorization_checker' => ['services', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'security.csrf.token_manager' => ['services', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', false],
            'security.token_storage' => ['services', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'session' => ['services', 'session', 'getSessionService', false],
            'twig' => ['services', 'twig', 'getTwigService', false],
        ], [
            'doctrine' => '?',
            'form.factory' => '?',
            'http_kernel' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
            'security.authorization_checker' => '?',
            'security.csrf.token_manager' => '?',
            'security.token_storage' => '?',
            'session' => '?',
            'twig' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.trGWsqD' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_TrGWsqDService()
    {
        return $this->privates['.service_locator.trGWsqD'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'configDumper' => ['services', 'Zikula\\Bundle\\CoreBundle\\DynamicConfigDumper', 'getDynamicConfigDumperService', false],
            'kernel' => ['services', 'kernel', 'getKernelService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'configDumper' => 'Zikula\\Bundle\\CoreBundle\\DynamicConfigDumper',
            'kernel' => '?',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.u8DyEi_' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_U8DyEiService()
    {
        return $this->privates['.service_locator.u8DyEi_'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'menuItemRepository' => ['privates', 'Zikula\\MenuModule\\Entity\\Repository\\MenuItemRepository', 'getMenuItemRepositoryService', false],
        ], [
            'menuItemRepository' => 'Zikula\\MenuModule\\Entity\\Repository\\MenuItemRepository',
        ]);
    }

    /**
     * Gets the private '.service_locator.uGcwr.9' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_UGcwr_9Service()
    {
        return $this->privates['.service_locator.uGcwr.9'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'applicationRepository' => ['privates', 'Zikula\\GroupsModule\\Entity\\Repository\\GroupApplicationRepository', 'getGroupApplicationRepositoryService', false],
            'currentUserApi' => ['services', 'Zikula\\UsersModule\\Api\\CurrentUserApi', 'getCurrentUserApiService', false],
            'eventDispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'group' => ['privates', 'Zikula\\GroupsModule\\Entity\\GroupEntity', 'getGroupEntityService', false],
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
        ], [
            'applicationRepository' => 'Zikula\\GroupsModule\\Entity\\Repository\\GroupApplicationRepository',
            'currentUserApi' => '?',
            'eventDispatcher' => '?',
            'group' => 'Zikula\\GroupsModule\\Entity\\GroupEntity',
            'userRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.uGiYVVQ' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_UGiYVVQService()
    {
        return $this->privates['.service_locator.uGiYVVQ'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'user' => ['privates', 'Zikula\\UsersModule\\Entity\\UserEntity', 'getUserEntityService', false],
        ], [
            'user' => 'Zikula\\UsersModule\\Entity\\UserEntity',
        ]);
    }

    /**
     * Gets the private '.service_locator.uc8W4ZT' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_Uc8W4ZTService()
    {
        return $this->privates['.service_locator.uc8W4ZT'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'mailHelper' => ['privates', 'Zikula\\ZAuthModule\\Helper\\MailHelper', 'getMailHelperService', false],
            'mapping' => ['privates', 'Zikula\\ZAuthModule\\Entity\\AuthenticationMappingEntity', 'getAuthenticationMappingEntityService', false],
        ], [
            'mailHelper' => 'Zikula\\ZAuthModule\\Helper\\MailHelper',
            'mapping' => 'Zikula\\ZAuthModule\\Entity\\AuthenticationMappingEntity',
        ]);
    }

    /**
     * Gets the private '.service_locator.uv0Gloe' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_Uv0GloeService()
    {
        return $this->privates['.service_locator.uv0Gloe'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'blockEntity' => ['privates', 'Zikula\\BlocksModule\\Entity\\BlockEntity', 'getBlockEntityService', false],
        ], [
            'blockEntity' => 'Zikula\\BlocksModule\\Entity\\BlockEntity',
        ]);
    }

    /**
     * Gets the private '.service_locator.v2pqszd' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_V2pqszdService()
    {
        return $this->privates['.service_locator.v2pqszd'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'eventDispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'extensionRepository' => ['services', 'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository', 'getExtensionRepositoryService', false],
            'kernel' => ['services', 'kernel', 'getKernelService', false],
        ], [
            'eventDispatcher' => '?',
            'extensionRepository' => '?',
            'kernel' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.vvjD5fm' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_VvjD5fmService()
    {
        return $this->privates['.service_locator.vvjD5fm'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'cacheClearer' => ['services', 'Zikula\\Bundle\\CoreBundle\\CacheClearer', 'getCacheClearer2Service', false],
            'themeRepository' => ['services', 'Zikula\\ThemeModule\\Entity\\Repository\\ThemeEntityRepository', 'getThemeEntityRepositoryService', false],
        ], [
            'cacheClearer' => 'Zikula\\Bundle\\CoreBundle\\CacheClearer',
            'themeRepository' => 'Zikula\\ThemeModule\\Entity\\Repository\\ThemeEntityRepository',
        ]);
    }

    /**
     * Gets the private '.service_locator.wT30FSu' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_WT30FSuService()
    {
        return $this->privates['.service_locator.wT30FSu'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'cacheClearer' => ['services', 'Zikula\\Bundle\\CoreBundle\\CacheClearer', 'getCacheClearer2Service', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'cacheClearer' => 'Zikula\\Bundle\\CoreBundle\\CacheClearer',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.wTOCTmi' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_WTOCTmiService()
    {
        return $this->privates['.service_locator.wTOCTmi'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'adminCategoryRepository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminCategoryRepository', 'getAdminCategoryRepositoryService', false],
            'adminModuleRepository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminModuleRepository', 'getAdminModuleRepositoryService', false],
            'extensionRepository' => ['services', 'Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository', 'getExtensionRepositoryService', false],
            'requestStack' => ['services', 'request_stack', 'getRequestStackService', false],
        ], [
            'adminCategoryRepository' => '?',
            'adminModuleRepository' => '?',
            'extensionRepository' => '?',
            'requestStack' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.woEf4Un' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_WoEf4UnService()
    {
        return $this->privates['.service_locator.woEf4Un'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'container' => ['services', 'service_container', 'getServiceContainerService', false],
            'permissionApi' => ['privates', 'Zikula\\PermissionsModule\\Api\\PermissionApi', 'getPermissionApiService', false],
            'translator' => ['services', 'translator', 'getTranslatorService', false],
            'workflowRegistry' => ['privates', 'workflow.registry', 'getWorkflow_RegistryService', false],
        ], [
            'container' => '?',
            'permissionApi' => '?',
            'translator' => '?',
            'workflowRegistry' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.x.KNJyk' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_X_KNJykService()
    {
        return $this->privates['.service_locator.x.KNJyk'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'permissionRepository' => ['privates', 'Zikula\\PermissionsModule\\Entity\\Repository\\PermissionRepository', 'getPermissionRepositoryService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'permissionRepository' => '?',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.x2mM6.W' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_X2mM6_WService()
    {
        return $this->privates['.service_locator.x2mM6.W'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'cacheClearer' => ['services', 'Zikula\\Bundle\\CoreBundle\\CacheClearer', 'getCacheClearer2Service', false],
            'extension' => ['privates', 'Zikula\\ExtensionsModule\\Entity\\ExtensionEntity', 'getExtensionEntityService', false],
            'kernel' => ['services', 'kernel', 'getKernelService', false],
        ], [
            'cacheClearer' => 'Zikula\\Bundle\\CoreBundle\\CacheClearer',
            'extension' => 'Zikula\\ExtensionsModule\\Entity\\ExtensionEntity',
            'kernel' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.xkQyMNr' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_XkQyMNrService()
    {
        return $this->privates['.service_locator.xkQyMNr'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'eventDispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'syncHelper' => ['services', 'Zikula\\ThemeModule\\Helper\\BundleSyncHelper', 'getBundleSyncHelper2Service', false],
            'themeRepository' => ['services', 'Zikula\\ThemeModule\\Entity\\Repository\\ThemeEntityRepository', 'getThemeEntityRepositoryService', false],
            'translationConfigHelper' => ['privates', 'Zikula\\SettingsModule\\Helper\\TranslationConfigHelper', 'getTranslationConfigHelperService', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'eventDispatcher' => '?',
            'syncHelper' => 'Zikula\\ThemeModule\\Helper\\BundleSyncHelper',
            'themeRepository' => 'Zikula\\ThemeModule\\Entity\\Repository\\ThemeEntityRepository',
            'translationConfigHelper' => 'Zikula\\SettingsModule\\Helper\\TranslationConfigHelper',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.xw2rwYO' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_Xw2rwYOService()
    {
        return $this->privates['.service_locator.xw2rwYO'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'authenticationMappingRepository' => ['privates', 'Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository', 'getAuthenticationMappingRepositoryService', false],
            'mapping' => ['privates', 'Zikula\\ZAuthModule\\Entity\\AuthenticationMappingEntity', 'getAuthenticationMappingEntityService', false],
            'registrationVerificationHelper' => ['privates', 'Zikula\\ZAuthModule\\Helper\\RegistrationVerificationHelper', 'getRegistrationVerificationHelperService', false],
        ], [
            'authenticationMappingRepository' => '?',
            'mapping' => 'Zikula\\ZAuthModule\\Entity\\AuthenticationMappingEntity',
            'registrationVerificationHelper' => 'Zikula\\ZAuthModule\\Helper\\RegistrationVerificationHelper',
        ]);
    }

    /**
     * Gets the private '.service_locator.y2AvubJ' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_Y2AvubJService()
    {
        return $this->privates['.service_locator.y2AvubJ'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'applicationRepository' => ['privates', 'Zikula\\GroupsModule\\Entity\\Repository\\GroupApplicationRepository', 'getGroupApplicationRepositoryService', false],
            'groupRepository' => ['services', 'Zikula\\GroupsModule\\Entity\\Repository\\GroupRepository', 'getGroupRepositoryService', false],
        ], [
            'applicationRepository' => 'Zikula\\GroupsModule\\Entity\\Repository\\GroupApplicationRepository',
            'groupRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.yMnaMnu' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_YMnaMnuService()
    {
        return $this->privates['.service_locator.yMnaMnu'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'authenticationMethodCollector' => ['privates', 'Zikula\\UsersModule\\Collector\\AuthenticationMethodCollector', 'getAuthenticationMethodCollectorService', false],
            'cacheClearer' => ['services', 'Zikula\\Bundle\\CoreBundle\\CacheClearer', 'getCacheClearer2Service', false],
            'variableApi' => ['services', 'Zikula\\ExtensionsModule\\Api\\VariableApi', 'getVariableApiService', false],
        ], [
            'authenticationMethodCollector' => 'Zikula\\UsersModule\\Collector\\AuthenticationMethodCollector',
            'cacheClearer' => 'Zikula\\Bundle\\CoreBundle\\CacheClearer',
            'variableApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.ybqw7s0' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_Ybqw7s0Service()
    {
        return $this->privates['.service_locator.ybqw7s0'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'doctrine' => ['services', 'doctrine', 'getDoctrineService', false],
            'form.factory' => ['services', 'form.factory', 'getForm_FactoryService', false],
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'security.authorization_checker' => ['services', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'security.csrf.token_manager' => ['services', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', false],
            'security.token_storage' => ['services', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'session' => ['services', 'session', 'getSessionService', false],
            'twig' => ['services', 'twig', 'getTwigService', false],
        ], [
            'doctrine' => '?',
            'form.factory' => '?',
            'http_kernel' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
            'security.authorization_checker' => '?',
            'security.csrf.token_manager' => '?',
            'security.token_storage' => '?',
            'session' => '?',
            'twig' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.yeFq60B' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_YeFq60BService()
    {
        return $this->privates['.service_locator.yeFq60B'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'currentUserApi' => ['services', 'Zikula\\UsersModule\\Api\\CurrentUserApi', 'getCurrentUserApiService', false],
            'userRepository' => ['services', 'Zikula\\UsersModule\\Entity\\Repository\\UserRepository', 'getUserRepositoryService', false],
        ], [
            'currentUserApi' => '?',
            'userRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.ymo5u1_' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_Ymo5u1Service()
    {
        return $this->privates['.service_locator.ymo5u1_'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'eventDispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'groupApplicationEntity' => ['privates', 'Zikula\\GroupsModule\\Entity\\GroupApplicationEntity', 'getGroupApplicationEntityService', false],
        ], [
            'eventDispatcher' => '?',
            'groupApplicationEntity' => 'Zikula\\GroupsModule\\Entity\\GroupApplicationEntity',
        ]);
    }

    /**
     * Gets the private '.service_locator.z1ANE._' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_Z1ANE_Service()
    {
        return $this->privates['.service_locator.z1ANE._'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'searchStatRepository' => ['privates', 'Zikula\\SearchModule\\Entity\\Repository\\SearchStatRepository', 'getSearchStatRepositoryService', false],
        ], [
            'searchStatRepository' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.z8jU37N' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_Z8jU37NService()
    {
        return $this->privates['.service_locator.z8jU37N'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'collector' => ['privates', 'Zikula\\SearchModule\\Collector\\SearchableModuleCollector', 'getSearchableModuleCollectorService', false],
            'formFactory' => ['services', 'form.factory', 'getForm_FactoryService', false],
            'kernel' => ['services', 'kernel', 'getKernelService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'searchApi' => ['privates', 'Zikula\\SearchModule\\Api\\SearchApi', 'getSearchApiService', false],
        ], [
            'collector' => 'Zikula\\SearchModule\\Collector\\SearchableModuleCollector',
            'formFactory' => '?',
            'kernel' => '?',
            'router' => '?',
            'searchApi' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.zkRr5GG' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_ZkRr5GGService()
    {
        return $this->privates['.service_locator.zkRr5GG'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'adminCategoryRepository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminCategoryRepository', 'getAdminCategoryRepositoryService', false],
            'adminModuleRepository' => ['privates', 'Zikula\\AdminModule\\Entity\\Repository\\AdminModuleRepository', 'getAdminModuleRepositoryService', false],
        ], [
            'adminCategoryRepository' => '?',
            'adminModuleRepository' => '?',
        ]);
    }

    /**
     * Gets the private 'Translation\Extractor\Extractor' shared service.
     *
     * @return \Translation\Extractor\Extractor
     */
    protected function getExtractorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/Extractor.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/FileExtractor/FileExtractor.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/FileExtractor/PHPFileExtractor.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/Visitor/Visitor.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/Visitor/BaseVisitor.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/Visitor/Php/BasePHPVisitor.php';
        include_once \dirname(__DIR__, 4).'/vendor/nikic/php-parser/lib/PhpParser/NodeVisitor.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Translation/Extractor/Visitor/Php/Knp/Menu/AbstractKnpMenuVisitor.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Translation/Extractor/Visitor/Php/Knp/Menu/ItemLabel.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Translation/Extractor/Visitor/Php/Knp/Menu/LinkTitle.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Translation/Extractor/Visitor/Php/Routes/ZikulaRouteTranslationExtractor.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/Visitor/Php/Symfony/AbstractFormType.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/Visitor/Php/Symfony/FormTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Translation/Extractor/Visitor/Php/Zikula/FormTypeAlert.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Translation/Extractor/Visitor/Php/Zikula/FormTypeInputGroup.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/Visitor/Php/Symfony/ContainerAwareTrans.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/Visitor/Php/Symfony/ContainerAwareTransChoice.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/Visitor/Php/Symfony/FlashMessage.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/Visitor/Php/Symfony/FormTypeChoices.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/Visitor/Php/Symfony/FormTypeEmptyValue.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/Visitor/Php/Symfony/FormTypeHelp.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/Visitor/Php/Symfony/FormTypeInvalidMessage.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/Visitor/Php/Symfony/FormTypeLabelExplicit.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/Visitor/Php/Symfony/FormTypeLabelImplicit.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/Visitor/Php/Symfony/FormTypePlaceholder.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/Visitor/Php/Symfony/ValidationAnnotation.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/Visitor/Php/SourceLocationContainerVisitor.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/FileExtractor/TwigFileExtractor.php';
        include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/NodeVisitor/NodeVisitorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/extractor/src/Visitor/Twig/TwigVisitor.php';

        $this->privates['Translation\\Extractor\\Extractor'] = $instance = new \Translation\Extractor\Extractor();

        $a = new \Translation\Extractor\FileExtractor\PHPFileExtractor();

        $b = new \Translation\Extractor\Visitor\Php\Symfony\FormTypeChoices();
        $b->setSymfonyMajorVersion(5);

        $a->addVisitor(new \Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Knp\Menu\ItemLabel());
        $a->addVisitor(new \Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Knp\Menu\LinkTitle());
        $a->addVisitor(new \Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Routes\ZikulaRouteTranslationExtractor(($this->services['router'] ?? $this->getRouterService()), ($this->privates['jms_i18n_routing.route_exclusion_strategy'] ?? $this->getJmsI18nRouting_RouteExclusionStrategyService())));
        $a->addVisitor(new \Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Zikula\FormTypeAlert());
        $a->addVisitor(new \Zikula\Bundle\CoreBundle\Translation\Extractor\Visitor\Php\Zikula\FormTypeInputGroup());
        $a->addVisitor(new \Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTrans());
        $a->addVisitor(new \Translation\Extractor\Visitor\Php\Symfony\ContainerAwareTransChoice());
        $a->addVisitor(new \Translation\Extractor\Visitor\Php\Symfony\FlashMessage());
        $a->addVisitor($b);
        $a->addVisitor(new \Translation\Extractor\Visitor\Php\Symfony\FormTypeEmptyValue());
        $a->addVisitor(new \Translation\Extractor\Visitor\Php\Symfony\FormTypeHelp());
        $a->addVisitor(new \Translation\Extractor\Visitor\Php\Symfony\FormTypeInvalidMessage());
        $a->addVisitor(new \Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelExplicit());
        $a->addVisitor(new \Translation\Extractor\Visitor\Php\Symfony\FormTypeLabelImplicit());
        $a->addVisitor(new \Translation\Extractor\Visitor\Php\Symfony\FormTypePlaceholder());
        $a->addVisitor(new \Translation\Extractor\Visitor\Php\Symfony\ValidationAnnotation(($this->services['validator'] ?? $this->getValidatorService())));
        $a->addVisitor(new \Translation\Extractor\Visitor\Php\SourceLocationContainerVisitor());
        $c = new \Translation\Extractor\FileExtractor\TwigFileExtractor(($this->services['twig'] ?? $this->getTwigService()));
        $c->addVisitor(new \Translation\Extractor\Visitor\Twig\TwigVisitor());

        $instance->addFileExtractor($a);
        $instance->addFileExtractor($c);

        return $instance;
    }

    /**
     * Gets the private 'Zikula\AdminModule\Entity\AdminCategoryEntity' shared autowired service.
     *
     * @return \Zikula\AdminModule\Entity\AdminCategoryEntity
     */
    protected function getAdminCategoryEntityService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/EntityAccess.php';
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/Entity/AdminCategoryEntity.php';

        return $this->privates['Zikula\\AdminModule\\Entity\\AdminCategoryEntity'] = new \Zikula\AdminModule\Entity\AdminCategoryEntity();
    }

    /**
     * Gets the private 'Zikula\AdminModule\Entity\Repository\AdminCategoryRepository' shared autowired service.
     *
     * @return \Zikula\AdminModule\Entity\Repository\AdminCategoryRepository
     */
    protected function getAdminCategoryRepositoryService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/Entity/RepositoryInterface/AdminCategoryRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/Entity/Repository/AdminCategoryRepository.php';

        return $this->privates['Zikula\\AdminModule\\Entity\\Repository\\AdminCategoryRepository'] = new \Zikula\AdminModule\Entity\Repository\AdminCategoryRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'Zikula\AdminModule\Entity\Repository\AdminModuleRepository' shared autowired service.
     *
     * @return \Zikula\AdminModule\Entity\Repository\AdminModuleRepository
     */
    protected function getAdminModuleRepositoryService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/Entity/RepositoryInterface/AdminModuleRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/Entity/Repository/AdminModuleRepository.php';

        return $this->privates['Zikula\\AdminModule\\Entity\\Repository\\AdminModuleRepository'] = new \Zikula\AdminModule\Entity\Repository\AdminModuleRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'Zikula\AdminModule\Form\Type\AdminCategoryType' shared autowired service.
     *
     * @return \Zikula\AdminModule\Form\Type\AdminCategoryType
     */
    protected function getAdminCategoryTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/Form/Type/AdminCategoryType.php';

        return $this->privates['Zikula\\AdminModule\\Form\\Type\\AdminCategoryType'] = new \Zikula\AdminModule\Form\Type\AdminCategoryType();
    }

    /**
     * Gets the private 'Zikula\AdminModule\Form\Type\ConfigType' shared autowired service.
     *
     * @return \Zikula\AdminModule\Form\Type\ConfigType
     */
    protected function getConfigTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/Form/Type/ConfigType.php';

        return $this->privates['Zikula\\AdminModule\\Form\\Type\\ConfigType'] = new \Zikula\AdminModule\Form\Type\ConfigType();
    }

    /**
     * Gets the private 'Zikula\AdminModule\Helper\AdminLinksHelper' shared autowired service.
     *
     * @return \Zikula\AdminModule\Helper\AdminLinksHelper
     */
    protected function getAdminLinksHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/Helper/AdminLinksHelper.php';

        return $this->privates['Zikula\\AdminModule\\Helper\\AdminLinksHelper'] = new \Zikula\AdminModule\Helper\AdminLinksHelper();
    }

    /**
     * Gets the private 'Zikula\AdminModule\Helper\AdminModuleHelper' shared autowired service.
     *
     * @return \Zikula\AdminModule\Helper\AdminModuleHelper
     */
    protected function getAdminModuleHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/Helper/AdminModuleHelper.php';

        return $this->privates['Zikula\\AdminModule\\Helper\\AdminModuleHelper'] = new \Zikula\AdminModule\Helper\AdminModuleHelper(($this->privates['Zikula\\AdminModule\\Entity\\Repository\\AdminModuleRepository'] ?? $this->getAdminModuleRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\AdminModule\Helper\UpdateCheckHelper' shared autowired service.
     *
     * @return \Zikula\AdminModule\Helper\UpdateCheckHelper
     */
    protected function getUpdateCheckHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/Helper/UpdateCheckHelper.php';

        return $this->privates['Zikula\\AdminModule\\Helper\\UpdateCheckHelper'] = new \Zikula\AdminModule\Helper\UpdateCheckHelper(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }

    /**
     * Gets the private 'Zikula\AdminModule\Listener\Core3UpgradeListener' shared autowired service.
     *
     * @return \Zikula\AdminModule\Listener\Core3UpgradeListener
     */
    protected function getCore3UpgradeListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/ColumnExistsTrait.php';
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/Listener/Core3UpgradeListener.php';

        return $this->privates['Zikula\\AdminModule\\Listener\\Core3UpgradeListener'] = new \Zikula\AdminModule\Listener\Core3UpgradeListener(($this->services['doctrine.dbal.default_connection'] ?? $this->getDoctrine_Dbal_DefaultConnectionService()));
    }

    /**
     * Gets the private 'Zikula\AdminModule\Listener\ModuleEventListener' shared autowired service.
     *
     * @return \Zikula\AdminModule\Listener\ModuleEventListener
     */
    protected function getModuleEventListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/Listener/ModuleEventListener.php';

        return $this->privates['Zikula\\AdminModule\\Listener\\ModuleEventListener'] = new \Zikula\AdminModule\Listener\ModuleEventListener(($this->privates['Zikula\\AdminModule\\Entity\\Repository\\AdminModuleRepository'] ?? $this->getAdminModuleRepositoryService()), ($this->services['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository'] ?? $this->getExtensionRepositoryService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), false);
    }

    /**
     * Gets the private 'Zikula\AdminModule\Menu\ExtensionMenu' shared autowired service.
     *
     * @return \Zikula\AdminModule\Menu\ExtensionMenu
     */
    protected function getExtensionMenuService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/ExtensionMenu/ExtensionMenuInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/AdminModule/Menu/ExtensionMenu.php';

        return $this->privates['Zikula\\AdminModule\\Menu\\ExtensionMenu'] = new \Zikula\AdminModule\Menu\ExtensionMenu(($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()));
    }

    /**
     * Gets the private 'Zikula\BlocksModule\Api\BlockApi' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Api\BlockApi
     */
    protected function getBlockApiService()
    {
        return $this->privates['Zikula\\BlocksModule\\Api\\BlockApi'] = new \Zikula\BlocksModule\Api\BlockApi(($this->privates['Zikula\\BlocksModule\\Entity\\Repository\\BlockPositionRepository'] ?? $this->getBlockPositionRepositoryService()), new \Zikula\BlocksModule\Api\BlockFactoryApi($this, ($this->services['translator'] ?? $this->getTranslatorService())), ($this->services['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository'] ?? $this->getExtensionRepositoryService()), new \Zikula\BlocksModule\Collector\BlockCollector(new RewindableGenerator(function () {
            yield 0 => $this->getAdminnavBlockService();
            yield 1 => $this->getFincludeBlockService();
            yield 2 => $this->getHtmlBlockService();
            yield 3 => $this->getPendingContentBlockService();
            yield 4 => $this->getTextBlockService();
            yield 5 => $this->getXsltBlockService();
            yield 6 => $this->getMenuBlockService();
            yield 7 => $this->getSearchBlockService();
            yield 8 => $this->getLocaleBlockService();
            yield 9 => $this->getAccountLinksBlockService();
            yield 10 => $this->getLoginBlockService();
            yield 11 => $this->getOnlineBlockService();
        }, 12)));
    }

    /**
     * Gets the private 'Zikula\BlocksModule\Api\BlockFilterApi' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Api\BlockFilterApi
     */
    protected function getBlockFilterApiService()
    {
        return $this->privates['Zikula\\BlocksModule\\Api\\BlockFilterApi'] = new \Zikula\BlocksModule\Api\BlockFilterApi(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }

    /**
     * Gets the private 'Zikula\BlocksModule\Block\Form\Type\FincludeBlockType' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Block\Form\Type\FincludeBlockType
     */
    protected function getFincludeBlockTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Block/Form/Type/FincludeBlockType.php';

        return $this->privates['Zikula\\BlocksModule\\Block\\Form\\Type\\FincludeBlockType'] = new \Zikula\BlocksModule\Block\Form\Type\FincludeBlockType(($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\BlocksModule\Block\Form\Type\HtmlBlockType' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Block\Form\Type\HtmlBlockType
     */
    protected function getHtmlBlockTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Block/Form/Type/HtmlBlockType.php';

        return $this->privates['Zikula\\BlocksModule\\Block\\Form\\Type\\HtmlBlockType'] = new \Zikula\BlocksModule\Block\Form\Type\HtmlBlockType();
    }

    /**
     * Gets the private 'Zikula\BlocksModule\Block\Form\Type\TextBlockType' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Block\Form\Type\TextBlockType
     */
    protected function getTextBlockTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Block/Form/Type/TextBlockType.php';

        return $this->privates['Zikula\\BlocksModule\\Block\\Form\\Type\\TextBlockType'] = new \Zikula\BlocksModule\Block\Form\Type\TextBlockType();
    }

    /**
     * Gets the private 'Zikula\BlocksModule\Block\Form\Type\XsltBlockType' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Block\Form\Type\XsltBlockType
     */
    protected function getXsltBlockTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Block/Form/Type/XsltBlockType.php';

        return $this->privates['Zikula\\BlocksModule\\Block\\Form\\Type\\XsltBlockType'] = new \Zikula\BlocksModule\Block\Form\Type\XsltBlockType(($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\BlocksModule\Entity\BlockEntity' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Entity\BlockEntity
     */
    protected function getBlockEntityService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/EntityAccess.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Entity/BlockEntity.php';

        return $this->privates['Zikula\\BlocksModule\\Entity\\BlockEntity'] = new \Zikula\BlocksModule\Entity\BlockEntity();
    }

    /**
     * Gets the private 'Zikula\BlocksModule\Entity\BlockPositionEntity' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Entity\BlockPositionEntity
     */
    protected function getBlockPositionEntityService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/EntityAccess.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Entity/BlockPositionEntity.php';

        return $this->privates['Zikula\\BlocksModule\\Entity\\BlockPositionEntity'] = new \Zikula\BlocksModule\Entity\BlockPositionEntity();
    }

    /**
     * Gets the private 'Zikula\BlocksModule\Entity\Repository\BlockPositionRepository' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Entity\Repository\BlockPositionRepository
     */
    protected function getBlockPositionRepositoryService()
    {
        return $this->privates['Zikula\\BlocksModule\\Entity\\Repository\\BlockPositionRepository'] = new \Zikula\BlocksModule\Entity\Repository\BlockPositionRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'Zikula\BlocksModule\Entity\Repository\BlockRepository' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Entity\Repository\BlockRepository
     */
    protected function getBlockRepositoryService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Entity/RepositoryInterface/BlockRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Entity/Repository/BlockRepository.php';

        return $this->privates['Zikula\\BlocksModule\\Entity\\Repository\\BlockRepository'] = new \Zikula\BlocksModule\Entity\Repository\BlockRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'Zikula\BlocksModule\Form\Type\AdminViewFilterType' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Form\Type\AdminViewFilterType
     */
    protected function getAdminViewFilterTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Form/Type/AdminViewFilterType.php';

        return $this->privates['Zikula\\BlocksModule\\Form\\Type\\AdminViewFilterType'] = new \Zikula\BlocksModule\Form\Type\AdminViewFilterType();
    }

    /**
     * Gets the private 'Zikula\BlocksModule\Form\Type\BlockFilterType' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Form\Type\BlockFilterType
     */
    protected function getBlockFilterTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Form/Type/BlockFilterType.php';

        return $this->privates['Zikula\\BlocksModule\\Form\\Type\\BlockFilterType'] = new \Zikula\BlocksModule\Form\Type\BlockFilterType(($this->privates['Zikula\\BlocksModule\\Api\\BlockFilterApi'] ?? $this->getBlockFilterApiService()));
    }

    /**
     * Gets the private 'Zikula\BlocksModule\Form\Type\BlockPositionType' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Form\Type\BlockPositionType
     */
    protected function getBlockPositionTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Form/Type/BlockPositionType.php';

        return $this->privates['Zikula\\BlocksModule\\Form\\Type\\BlockPositionType'] = new \Zikula\BlocksModule\Form\Type\BlockPositionType();
    }

    /**
     * Gets the private 'Zikula\BlocksModule\Form\Type\BlockType' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Form\Type\BlockType
     */
    protected function getBlockTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Form/Type/BlockType.php';

        return $this->privates['Zikula\\BlocksModule\\Form\\Type\\BlockType'] = new \Zikula\BlocksModule\Form\Type\BlockType(($this->services['Zikula\\SettingsModule\\Api\\LocaleApi'] ?? $this->getLocaleApiService()));
    }

    /**
     * Gets the private 'Zikula\BlocksModule\Form\Type\ConfigType' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Form\Type\ConfigType
     */
    protected function getConfigType2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Form/Type/ConfigType.php';

        return $this->privates['Zikula\\BlocksModule\\Form\\Type\\ConfigType'] = new \Zikula\BlocksModule\Form\Type\ConfigType();
    }

    /**
     * Gets the private 'Zikula\BlocksModule\Form\Type\NewBlockType' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Form\Type\NewBlockType
     */
    protected function getNewBlockTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Form/Type/NewBlockType.php';

        return $this->privates['Zikula\\BlocksModule\\Form\\Type\\NewBlockType'] = new \Zikula\BlocksModule\Form\Type\NewBlockType(($this->privates['Zikula\\BlocksModule\\Api\\BlockApi'] ?? $this->getBlockApiService()));
    }

    /**
     * Gets the private 'Zikula\BlocksModule\HookSubscriber\UiHooksSubscriber' shared autowired service.
     *
     * @return \Zikula\BlocksModule\HookSubscriber\UiHooksSubscriber
     */
    protected function getUiHooksSubscriberService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/HookInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/HookSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/HookSubscriber/UiHooksSubscriber.php';

        return $this->privates['Zikula\\BlocksModule\\HookSubscriber\\UiHooksSubscriber'] = new \Zikula\BlocksModule\HookSubscriber\UiHooksSubscriber(($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\BlocksModule\Listener\CollapseableBlockListener' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Listener\CollapseableBlockListener
     */
    protected function getCollapseableBlockListenerService()
    {
        return $this->privates['Zikula\\BlocksModule\\Listener\\CollapseableBlockListener'] = new \Zikula\BlocksModule\Listener\CollapseableBlockListener(($this->privates['zikula_core.common.theme.assets_js'] ?? ($this->privates['zikula_core.common.theme.assets_js'] = new \Zikula\ThemeModule\Engine\AssetBag())), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['Zikula\\ThemeModule\\Engine\\Asset'] ?? $this->getAssetService()), false, (($this->hasParameter("upgrading")) ? ($this->getParameter("upgrading")) : (false)));
    }

    /**
     * Gets the private 'Zikula\BlocksModule\Menu\ExtensionMenu' shared autowired service.
     *
     * @return \Zikula\BlocksModule\Menu\ExtensionMenu
     */
    protected function getExtensionMenu2Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/ExtensionMenu/ExtensionMenuInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/BlocksModule/Menu/ExtensionMenu.php';

        return $this->privates['Zikula\\BlocksModule\\Menu\\ExtensionMenu'] = new \Zikula\BlocksModule\Menu\ExtensionMenu(($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()));
    }

    /**
     * Gets the private 'Zikula\Bundle\CoreBundle\EventListener\BlameListener' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreBundle\EventListener\BlameListener
     */
    protected function getBlameListenerService()
    {
        return $this->privates['Zikula\\Bundle\\CoreBundle\\EventListener\\BlameListener'] = new \Zikula\Bundle\CoreBundle\EventListener\BlameListener(($this->privates['stof_doctrine_extensions.listener.blameable'] ?? $this->getStofDoctrineExtensions_Listener_BlameableService()), ($this->services['doctrine.orm.default_entity_manager'] ?? $this->getDoctrine_Orm_DefaultEntityManagerService()), ($this->services['session'] ?? $this->getSessionService()), false);
    }

    /**
     * Gets the private 'Zikula\Bundle\CoreBundle\EventListener\Core3UpgradeListener' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreBundle\EventListener\Core3UpgradeListener
     */
    protected function getCore3UpgradeListener2Service()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/ColumnExistsTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/EventListener/Core3UpgradeListener.php';

        return $this->privates['Zikula\\Bundle\\CoreBundle\\EventListener\\Core3UpgradeListener'] = new \Zikula\Bundle\CoreBundle\EventListener\Core3UpgradeListener(($this->services['doctrine.dbal.default_connection'] ?? $this->getDoctrine_Dbal_DefaultConnectionService()));
    }

    /**
     * Gets the private 'Zikula\Bundle\CoreBundle\EventListener\DoctrineListener' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreBundle\EventListener\DoctrineListener
     */
    protected function getDoctrineListenerService()
    {
        return $this->privates['Zikula\\Bundle\\CoreBundle\\EventListener\\DoctrineListener'] = new \Zikula\Bundle\CoreBundle\EventListener\DoctrineListener(($this->services['doctrine.orm.default_entity_manager'] ?? $this->getDoctrine_Orm_DefaultEntityManagerService()), ($this->privates['doctrine.orm.default_annotation_metadata_driver'] ?? $this->getDoctrine_Orm_DefaultAnnotationMetadataDriverService()));
    }

    /**
     * Gets the private 'Zikula\Bundle\CoreBundle\EventListener\ExceptionListener' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreBundle\EventListener\ExceptionListener
     */
    protected function getExceptionListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/EventListener/ExceptionListener.php';

        return $this->privates['Zikula\\Bundle\\CoreBundle\\EventListener\\ExceptionListener'] = new \Zikula\Bundle\CoreBundle\EventListener\ExceptionListener(($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['router'] ?? $this->getRouterService()), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()), false);
    }

    /**
     * Gets the private 'Zikula\Bundle\CoreBundle\EventListener\OutputCompressionListener' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreBundle\EventListener\OutputCompressionListener
     */
    protected function getOutputCompressionListenerService()
    {
        return $this->privates['Zikula\\Bundle\\CoreBundle\\EventListener\\OutputCompressionListener'] = new \Zikula\Bundle\CoreBundle\EventListener\OutputCompressionListener(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), false);
    }

    /**
     * Gets the private 'Zikula\Bundle\CoreBundle\EventListener\SiteOffListener' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreBundle\EventListener\SiteOffListener
     */
    protected function getSiteOffListenerService()
    {
        return $this->privates['Zikula\\Bundle\\CoreBundle\\EventListener\\SiteOffListener'] = new \Zikula\Bundle\CoreBundle\EventListener\SiteOffListener(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()), ($this->services['twig'] ?? $this->getTwigService()), ($this->services['router'] ?? $this->getRouterService()), false);
    }

    /**
     * Gets the private 'Zikula\Bundle\CoreBundle\EventListener\SiteOffVetoLoginListener' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreBundle\EventListener\SiteOffVetoLoginListener
     */
    protected function getSiteOffVetoLoginListenerService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/EventListener/SiteOffVetoLoginListener.php';

        return $this->privates['Zikula\\Bundle\\CoreBundle\\EventListener\\SiteOffVetoLoginListener'] = new \Zikula\Bundle\CoreBundle\EventListener\SiteOffVetoLoginListener(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['router'] ?? $this->getRouterService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }

    /**
     * Gets the private 'Zikula\Bundle\CoreBundle\Helper\BundlesSchemaHelper' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreBundle\Helper\BundlesSchemaHelper
     */
    protected function getBundlesSchemaHelperService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Helper/BundlesSchemaHelper.php';

        return $this->privates['Zikula\\Bundle\\CoreBundle\\Helper\\BundlesSchemaHelper'] = new \Zikula\Bundle\CoreBundle\Helper\BundlesSchemaHelper(($this->services['doctrine.dbal.default_connection'] ?? $this->getDoctrine_Dbal_DefaultConnectionService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\Bundle\\CoreBundle\\CacheClearer'] ?? $this->getCacheClearer2Service()), \dirname(__DIR__, 4));
    }

    /**
     * Gets the private 'Zikula\Bundle\FormExtensionBundle\Form\Type\DeletionType' shared autowired service.
     *
     * @return \Zikula\Bundle\FormExtensionBundle\Form\Type\DeletionType
     */
    protected function getDeletionTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/Form/Type/DeletionType.php';

        return $this->privates['Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DeletionType'] = new \Zikula\Bundle\FormExtensionBundle\Form\Type\DeletionType();
    }

    /**
     * Gets the private 'Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicFieldType' shared autowired service.
     *
     * @return \Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicFieldType
     */
    protected function getDynamicFieldTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/Form/Type/DynamicFieldType.php';

        return $this->privates['Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicFieldType'] = new \Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicFieldType(($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->privates['Zikula\\ThemeModule\\Api\\PageAssetApi'] ?? $this->getPageAssetApiService()), ($this->services['Zikula\\ThemeModule\\Engine\\Asset'] ?? $this->getAssetService()));
    }

    /**
     * Gets the private 'Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\ChoiceFormOptionsArrayType' shared autowired service.
     *
     * @return \Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\ChoiceFormOptionsArrayType
     */
    protected function getChoiceFormOptionsArrayTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/Form/Type/DynamicOptions/FormOptionsArrayType.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/Form/Type/DynamicOptions/ChoiceFormOptionsArrayType.php';

        return $this->privates['Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\ChoiceFormOptionsArrayType'] = new \Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\ChoiceFormOptionsArrayType();
    }

    /**
     * Gets the private 'Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\DateTimeFormOptionsArrayType' shared autowired service.
     *
     * @return \Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\DateTimeFormOptionsArrayType
     */
    protected function getDateTimeFormOptionsArrayTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/Form/Type/DynamicOptions/FormOptionsArrayType.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/Form/Type/DynamicOptions/DateTimeFormOptionsArrayType.php';

        return $this->privates['Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\DateTimeFormOptionsArrayType'] = new \Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\DateTimeFormOptionsArrayType();
    }

    /**
     * Gets the private 'Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\FormOptionsArrayType' shared autowired service.
     *
     * @return \Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\FormOptionsArrayType
     */
    protected function getFormOptionsArrayTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/Form/Type/DynamicOptions/FormOptionsArrayType.php';

        return $this->privates['Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\FormOptionsArrayType'] = new \Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\FormOptionsArrayType();
    }

    /**
     * Gets the private 'Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\MoneyFormOptionsArrayType' shared autowired service.
     *
     * @return \Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\MoneyFormOptionsArrayType
     */
    protected function getMoneyFormOptionsArrayTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/Form/Type/DynamicOptions/FormOptionsArrayType.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/Form/Type/DynamicOptions/MoneyFormOptionsArrayType.php';

        return $this->privates['Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\MoneyFormOptionsArrayType'] = new \Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\MoneyFormOptionsArrayType();
    }

    /**
     * Gets the private 'Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\RegexibleFormOptionsArrayType' shared autowired service.
     *
     * @return \Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\RegexibleFormOptionsArrayType
     */
    protected function getRegexibleFormOptionsArrayTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/Form/Type/DynamicOptions/FormOptionsArrayType.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/Form/Type/DynamicOptions/RegexibleFormOptionsArrayType.php';

        return $this->privates['Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\RegexibleFormOptionsArrayType'] = new \Zikula\Bundle\FormExtensionBundle\Form\Type\DynamicOptions\RegexibleFormOptionsArrayType();
    }

    /**
     * Gets the private 'Zikula\Bundle\FormExtensionBundle\Form\Type\IconType' shared autowired service.
     *
     * @return \Zikula\Bundle\FormExtensionBundle\Form\Type\IconType
     */
    protected function getIconTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/Form/Type/IconType.php';

        return $this->privates['Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\IconType'] = new \Zikula\Bundle\FormExtensionBundle\Form\Type\IconType();
    }

    /**
     * Gets the private 'Zikula\Bundle\FormExtensionBundle\Form\Type\InlineFormDefinitionType' shared autowired service.
     *
     * @return \Zikula\Bundle\FormExtensionBundle\Form\Type\InlineFormDefinitionType
     */
    protected function getInlineFormDefinitionTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/Form/Type/InlineFormDefinitionType.php';

        return $this->privates['Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\InlineFormDefinitionType'] = new \Zikula\Bundle\FormExtensionBundle\Form\Type\InlineFormDefinitionType(($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\Bundle\FormExtensionBundle\Form\Type\LocaleType' shared autowired service.
     *
     * @return \Zikula\Bundle\FormExtensionBundle\Form\Type\LocaleType
     */
    protected function getLocaleType2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/Form/Type/LocaleType.php';

        return $this->privates['Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\LocaleType'] = new \Zikula\Bundle\FormExtensionBundle\Form\Type\LocaleType(($this->services['Zikula\\SettingsModule\\Api\\LocaleApi'] ?? $this->getLocaleApiService()));
    }

    /**
     * Gets the private 'Zikula\Bundle\HookBundle\Collector\HookCollector' shared autowired service.
     *
     * @return \Zikula\Bundle\HookBundle\Collector\HookCollector
     */
    protected function getHookCollectorService()
    {
        return $this->privates['Zikula\\Bundle\\HookBundle\\Collector\\HookCollector'] = new \Zikula\Bundle\HookBundle\Collector\HookCollector(new RewindableGenerator(function () {
            return new \EmptyIterator();
        }, 0), new RewindableGenerator(function () {
            yield 0 => ($this->privates['Zikula\\BlocksModule\\HookSubscriber\\UiHooksSubscriber'] ?? $this->getUiHooksSubscriberService());
            yield 1 => ($this->privates['Zikula\\MailerModule\\HookSubscriber\\UiHooksSubscriber'] ?? $this->getUiHooksSubscriber2Service());
            yield 2 => ($this->privates['Zikula\\UsersModule\\HookSubscriber\\LoginUiHooksSubscriber'] ?? $this->getLoginUiHooksSubscriberService());
            yield 3 => ($this->privates['Zikula\\UsersModule\\HookSubscriber\\RegistrationUiHooksSubscriber'] ?? $this->getRegistrationUiHooksSubscriberService());
            yield 4 => ($this->privates['Zikula\\UsersModule\\HookSubscriber\\UserManagementUiHooksSubscriber'] ?? $this->getUserManagementUiHooksSubscriberService());
        }, 5));
    }

    /**
     * Gets the private 'Zikula\Bundle\HookBundle\Dispatcher\HookDispatcher' shared autowired service.
     *
     * @return \Zikula\Bundle\HookBundle\Dispatcher\HookDispatcher
     */
    protected function getHookDispatcherService()
    {
        return $this->privates['Zikula\\Bundle\\HookBundle\\Dispatcher\\HookDispatcher'] = new \Zikula\Bundle\HookBundle\Dispatcher\HookDispatcher(new \Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\DoctrineStorage(($this->services['doctrine'] ?? $this->getDoctrineService()), ($this->privates['Zikula\\Bundle\\HookBundle\\Dispatcher\\Storage\\Doctrine\\Entity\\Repository\\HookBindingRepository'] ?? $this->getHookBindingRepositoryService()), ($this->privates['Zikula\\Bundle\\HookBundle\\Dispatcher\\Storage\\Doctrine\\Entity\\Repository\\HookRuntimeRepository'] ?? $this->getHookRuntimeRepositoryService()), ($this->privates['Zikula\\Bundle\\HookBundle\\Collector\\HookCollector'] ?? $this->getHookCollectorService())), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /**
     * Gets the private 'Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookBindingRepository' shared autowired service.
     *
     * @return \Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookBindingRepository
     */
    protected function getHookBindingRepositoryService()
    {
        return $this->privates['Zikula\\Bundle\\HookBundle\\Dispatcher\\Storage\\Doctrine\\Entity\\Repository\\HookBindingRepository'] = new \Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookBindingRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookRuntimeRepository' shared autowired service.
     *
     * @return \Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookRuntimeRepository
     */
    protected function getHookRuntimeRepositoryService()
    {
        return $this->privates['Zikula\\Bundle\\HookBundle\\Dispatcher\\Storage\\Doctrine\\Entity\\Repository\\HookRuntimeRepository'] = new \Zikula\Bundle\HookBundle\Dispatcher\Storage\Doctrine\Entity\Repository\HookRuntimeRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'Zikula\Bundle\HookBundle\Listener\CoreInstallerListener' shared autowired service.
     *
     * @return \Zikula\Bundle\HookBundle\Listener\CoreInstallerListener
     */
    protected function getCoreInstallerListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/Listener/CoreInstallerListener.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Installer/InstallerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/HookBundleInstaller.php';

        return $this->privates['Zikula\\Bundle\\HookBundle\\Listener\\CoreInstallerListener'] = new \Zikula\Bundle\HookBundle\Listener\CoreInstallerListener(new \Zikula\Bundle\HookBundle\HookBundleInstaller(($this->services['Zikula\\Bundle\\CoreBundle\\Doctrine\\Helper\\SchemaHelper'] ?? $this->getSchemaHelperService()), ($this->services['doctrine.orm.default_entity_manager'] ?? $this->getDoctrine_Orm_DefaultEntityManagerService())));
    }

    /**
     * Gets the private 'Zikula\Bundle\HookBundle\Listener\HookListenerBuilderListener' shared autowired service.
     *
     * @return \Zikula\Bundle\HookBundle\Listener\HookListenerBuilderListener
     */
    protected function getHookListenerBuilderListenerService()
    {
        return $this->privates['Zikula\\Bundle\\HookBundle\\Listener\\HookListenerBuilderListener'] = new \Zikula\Bundle\HookBundle\Listener\HookListenerBuilderListener($this, ($this->privates['Zikula\\Bundle\\HookBundle\\Dispatcher\\Storage\\Doctrine\\Entity\\Repository\\HookRuntimeRepository'] ?? $this->getHookRuntimeRepositoryService()), false);
    }

    /**
     * Gets the private 'Zikula\Bundle\HookBundle\Listener\HooksListener' shared autowired service.
     *
     * @return \Zikula\Bundle\HookBundle\Listener\HooksListener
     */
    protected function getHooksListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/Listener/HooksListener.php';

        return $this->privates['Zikula\\Bundle\\HookBundle\\Listener\\HooksListener'] = new \Zikula\Bundle\HookBundle\Listener\HooksListener(($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->privates['Zikula\\Bundle\\HookBundle\\Collector\\HookCollector'] ?? $this->getHookCollectorService()), ($this->services['router'] ?? $this->getRouterService()), ($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\Bundle\HookBundle\Listener\ModuleUninstallListener' shared autowired service.
     *
     * @return \Zikula\Bundle\HookBundle\Listener\ModuleUninstallListener
     */
    protected function getModuleUninstallListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/Listener/ModuleUninstallListener.php';

        return $this->privates['Zikula\\Bundle\\HookBundle\\Listener\\ModuleUninstallListener'] = new \Zikula\Bundle\HookBundle\Listener\ModuleUninstallListener(($this->privates['Zikula\\Bundle\\HookBundle\\Dispatcher\\Storage\\Doctrine\\Entity\\Repository\\HookBindingRepository'] ?? $this->getHookBindingRepositoryService()), ($this->privates['Zikula\\Bundle\\HookBundle\\Dispatcher\\Storage\\Doctrine\\Entity\\Repository\\HookRuntimeRepository'] ?? $this->getHookRuntimeRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\CategoriesModule\Entity\CategoryEntity' shared autowired service.
     *
     * @return \Zikula\CategoriesModule\Entity\CategoryEntity
     */
    protected function getCategoryEntityService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/EntityAccess.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Entity/CategoryEntity.php';

        return $this->privates['Zikula\\CategoriesModule\\Entity\\CategoryEntity'] = new \Zikula\CategoriesModule\Entity\CategoryEntity();
    }

    /**
     * Gets the private 'Zikula\CategoriesModule\Entity\CategoryRegistryEntity' shared autowired service.
     *
     * @return \Zikula\CategoriesModule\Entity\CategoryRegistryEntity
     */
    protected function getCategoryRegistryEntityService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/EntityAccess.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Entity/CategoryRegistryEntity.php';

        return $this->privates['Zikula\\CategoriesModule\\Entity\\CategoryRegistryEntity'] = new \Zikula\CategoriesModule\Entity\CategoryRegistryEntity();
    }

    /**
     * Gets the private 'Zikula\CategoriesModule\Form\Type\CategoriesType' shared autowired service.
     *
     * @return \Zikula\CategoriesModule\Form\Type\CategoriesType
     */
    protected function getCategoriesTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Form/Type/CategoriesType.php';

        return $this->privates['Zikula\\CategoriesModule\\Form\\Type\\CategoriesType'] = new \Zikula\CategoriesModule\Form\Type\CategoriesType(($this->services['Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRegistryRepository'] ?? $this->getCategoryRegistryRepositoryService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['doctrine.orm.default_entity_manager'] ?? $this->getDoctrine_Orm_DefaultEntityManagerService()));
    }

    /**
     * Gets the private 'Zikula\CategoriesModule\Form\Type\CategoryAttributeType' shared autowired service.
     *
     * @return \Zikula\CategoriesModule\Form\Type\CategoryAttributeType
     */
    protected function getCategoryAttributeTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Form/Type/CategoryAttributeType.php';

        return $this->privates['Zikula\\CategoriesModule\\Form\\Type\\CategoryAttributeType'] = new \Zikula\CategoriesModule\Form\Type\CategoryAttributeType();
    }

    /**
     * Gets the private 'Zikula\CategoriesModule\Form\Type\CategoryRegistryType' shared autowired service.
     *
     * @return \Zikula\CategoriesModule\Form\Type\CategoryRegistryType
     */
    protected function getCategoryRegistryTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Form/Type/CategoryRegistryType.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Builder/EntitySelectionBuilder.php';

        return $this->privates['Zikula\\CategoriesModule\\Form\\Type\\CategoryRegistryType'] = new \Zikula\CategoriesModule\Form\Type\CategoryRegistryType(($this->services['translator'] ?? $this->getTranslatorService()), new \Zikula\CategoriesModule\Builder\EntitySelectionBuilder(($this->services['kernel'] ?? $this->get('kernel', 1))));
    }

    /**
     * Gets the private 'Zikula\CategoriesModule\Form\Type\CategoryTreeType' shared autowired service.
     *
     * @return \Zikula\CategoriesModule\Form\Type\CategoryTreeType
     */
    protected function getCategoryTreeTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Form/Type/CategoryTreeType.php';

        return $this->privates['Zikula\\CategoriesModule\\Form\\Type\\CategoryTreeType'] = new \Zikula\CategoriesModule\Form\Type\CategoryTreeType(($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRepository'] ?? $this->getCategoryRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\CategoriesModule\Form\Type\CategoryType' shared autowired service.
     *
     * @return \Zikula\CategoriesModule\Form\Type\CategoryType
     */
    protected function getCategoryTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Form/Type/CategoryType.php';

        return $this->privates['Zikula\\CategoriesModule\\Form\\Type\\CategoryType'] = new \Zikula\CategoriesModule\Form\Type\CategoryType(($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\CategoriesModule\Helper\CategoryProcessingHelper' shared autowired service.
     *
     * @return \Zikula\CategoriesModule\Helper\CategoryProcessingHelper
     */
    protected function getCategoryProcessingHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Helper/CategoryProcessingHelper.php';

        return $this->privates['Zikula\\CategoriesModule\\Helper\\CategoryProcessingHelper'] = new \Zikula\CategoriesModule\Helper\CategoryProcessingHelper(($this->services['doctrine.orm.default_entity_manager'] ?? $this->getDoctrine_Orm_DefaultEntityManagerService()), ($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->services['Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRegistryRepository'] ?? $this->getCategoryRegistryRepositoryService()), ($this->privates['Zikula\\ExtensionsModule\\Api\\CapabilityApi'] ?? $this->getCapabilityApiService()));
    }

    /**
     * Gets the private 'Zikula\CategoriesModule\Listener\Core3UpgradeListener' shared autowired service.
     *
     * @return \Zikula\CategoriesModule\Listener\Core3UpgradeListener
     */
    protected function getCore3UpgradeListener3Service()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/ColumnExistsTrait.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Listener/Core3UpgradeListener.php';

        return $this->privates['Zikula\\CategoriesModule\\Listener\\Core3UpgradeListener'] = new \Zikula\CategoriesModule\Listener\Core3UpgradeListener(($this->services['doctrine.dbal.default_connection'] ?? $this->getDoctrine_Dbal_DefaultConnectionService()));
    }

    /**
     * Gets the private 'Zikula\CategoriesModule\Menu\ExtensionMenu' shared autowired service.
     *
     * @return \Zikula\CategoriesModule\Menu\ExtensionMenu
     */
    protected function getExtensionMenu3Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/ExtensionMenu/ExtensionMenuInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Menu/ExtensionMenu.php';

        return $this->privates['Zikula\\CategoriesModule\\Menu\\ExtensionMenu'] = new \Zikula\CategoriesModule\Menu\ExtensionMenu(($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()));
    }

    /**
     * Gets the private 'Zikula\CategoriesModule\Validator\Constraints\UniqueNameForPositionValidator' shared autowired service.
     *
     * @return \Zikula\CategoriesModule\Validator\Constraints\UniqueNameForPositionValidator
     */
    protected function getUniqueNameForPositionValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/src/system/CategoriesModule/Validator/Constraints/UniqueNameForPositionValidator.php';

        return $this->privates['Zikula\\CategoriesModule\\Validator\\Constraints\\UniqueNameForPositionValidator'] = new \Zikula\CategoriesModule\Validator\Constraints\UniqueNameForPositionValidator(($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\CategoriesModule\\Entity\\Repository\\CategoryRepository'] ?? $this->getCategoryRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\ExtensionsModule\Api\CapabilityApi' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Api\CapabilityApi
     */
    protected function getCapabilityApiService()
    {
        return $this->privates['Zikula\\ExtensionsModule\\Api\\CapabilityApi'] = new \Zikula\ExtensionsModule\Api\CapabilityApi(($this->services['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository'] ?? $this->getExtensionRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\ExtensionsModule\Command\ZikulaExtensionInstallCommand' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Command\ZikulaExtensionInstallCommand
     */
    protected function getZikulaExtensionInstallCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Command/AbstractExtensionCommand.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Command/ZikulaExtensionInstallCommand.php';

        $this->privates['Zikula\\ExtensionsModule\\Command\\ZikulaExtensionInstallCommand'] = $instance = new \Zikula\ExtensionsModule\Command\ZikulaExtensionInstallCommand(($this->services['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository'] ?? $this->getExtensionRepositoryService()), ($this->privates['Zikula\\BlocksModule\\Entity\\Repository\\BlockRepository'] ?? $this->getBlockRepositoryService()), ($this->privates['Zikula\\ExtensionsModule\\Helper\\ExtensionDependencyHelper'] ?? $this->getExtensionDependencyHelperService()), ($this->services['Zikula\\ExtensionsModule\\Helper\\BundleSyncHelper'] ?? $this->getBundleSyncHelperService()), ($this->services['Zikula\\ExtensionsModule\\Helper\\ExtensionHelper'] ?? $this->getExtensionHelperService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['kernel'] ?? $this->get('kernel', 1)));

        $instance->setName('zikula:extension:install');

        return $instance;
    }

    /**
     * Gets the private 'Zikula\ExtensionsModule\Command\ZikulaExtensionStatusCommand' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Command\ZikulaExtensionStatusCommand
     */
    protected function getZikulaExtensionStatusCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Command/AbstractExtensionCommand.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Command/ZikulaExtensionStatusCommand.php';

        $this->privates['Zikula\\ExtensionsModule\\Command\\ZikulaExtensionStatusCommand'] = $instance = new \Zikula\ExtensionsModule\Command\ZikulaExtensionStatusCommand(($this->services['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository'] ?? $this->getExtensionRepositoryService()), ($this->privates['Zikula\\BlocksModule\\Entity\\Repository\\BlockRepository'] ?? $this->getBlockRepositoryService()), ($this->privates['Zikula\\ExtensionsModule\\Helper\\ExtensionDependencyHelper'] ?? $this->getExtensionDependencyHelperService()), ($this->services['Zikula\\ExtensionsModule\\Helper\\BundleSyncHelper'] ?? $this->getBundleSyncHelperService()), ($this->services['Zikula\\ExtensionsModule\\Helper\\ExtensionHelper'] ?? $this->getExtensionHelperService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['kernel'] ?? $this->get('kernel', 1)));

        $instance->setName('zikula:extension:status');

        return $instance;
    }

    /**
     * Gets the private 'Zikula\ExtensionsModule\Command\ZikulaExtensionUninstallCommand' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Command\ZikulaExtensionUninstallCommand
     */
    protected function getZikulaExtensionUninstallCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Command/AbstractExtensionCommand.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Command/ZikulaExtensionUninstallCommand.php';

        $this->privates['Zikula\\ExtensionsModule\\Command\\ZikulaExtensionUninstallCommand'] = $instance = new \Zikula\ExtensionsModule\Command\ZikulaExtensionUninstallCommand(($this->services['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository'] ?? $this->getExtensionRepositoryService()), ($this->privates['Zikula\\BlocksModule\\Entity\\Repository\\BlockRepository'] ?? $this->getBlockRepositoryService()), ($this->privates['Zikula\\ExtensionsModule\\Helper\\ExtensionDependencyHelper'] ?? $this->getExtensionDependencyHelperService()), ($this->services['Zikula\\ExtensionsModule\\Helper\\BundleSyncHelper'] ?? $this->getBundleSyncHelperService()), ($this->services['Zikula\\ExtensionsModule\\Helper\\ExtensionHelper'] ?? $this->getExtensionHelperService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['kernel'] ?? $this->get('kernel', 1)));

        $instance->setName('zikula:extension:uninstall');

        return $instance;
    }

    /**
     * Gets the private 'Zikula\ExtensionsModule\Command\ZikulaExtensionUpgradeCommand' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Command\ZikulaExtensionUpgradeCommand
     */
    protected function getZikulaExtensionUpgradeCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Command/AbstractExtensionCommand.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Command/ZikulaExtensionUpgradeCommand.php';

        $this->privates['Zikula\\ExtensionsModule\\Command\\ZikulaExtensionUpgradeCommand'] = $instance = new \Zikula\ExtensionsModule\Command\ZikulaExtensionUpgradeCommand(($this->services['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository'] ?? $this->getExtensionRepositoryService()), ($this->privates['Zikula\\BlocksModule\\Entity\\Repository\\BlockRepository'] ?? $this->getBlockRepositoryService()), ($this->privates['Zikula\\ExtensionsModule\\Helper\\ExtensionDependencyHelper'] ?? $this->getExtensionDependencyHelperService()), ($this->services['Zikula\\ExtensionsModule\\Helper\\BundleSyncHelper'] ?? $this->getBundleSyncHelperService()), ($this->services['Zikula\\ExtensionsModule\\Helper\\ExtensionHelper'] ?? $this->getExtensionHelperService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['kernel'] ?? $this->get('kernel', 1)));

        $instance->setName('zikula:extension:upgrade');

        return $instance;
    }

    /**
     * Gets the private 'Zikula\ExtensionsModule\Entity\ExtensionEntity' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Entity\ExtensionEntity
     */
    protected function getExtensionEntityService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/EntityAccess.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Entity/ExtensionEntity.php';

        return $this->privates['Zikula\\ExtensionsModule\\Entity\\ExtensionEntity'] = new \Zikula\ExtensionsModule\Entity\ExtensionEntity();
    }

    /**
     * Gets the private 'Zikula\ExtensionsModule\Entity\Repository\ExtensionDependencyRepository' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Entity\Repository\ExtensionDependencyRepository
     */
    protected function getExtensionDependencyRepositoryService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Entity/Repository/ExtensionDependencyRepository.php';

        return $this->privates['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionDependencyRepository'] = new \Zikula\ExtensionsModule\Entity\Repository\ExtensionDependencyRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'Zikula\ExtensionsModule\Entity\Repository\ExtensionVarRepository' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Entity\Repository\ExtensionVarRepository
     */
    protected function getExtensionVarRepositoryService()
    {
        return $this->privates['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionVarRepository'] = new \Zikula\ExtensionsModule\Entity\Repository\ExtensionVarRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'Zikula\ExtensionsModule\Form\Type\ConfigType' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Form\Type\ConfigType
     */
    protected function getConfigType3Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Form/Type/ConfigType.php';

        return $this->privates['Zikula\\ExtensionsModule\\Form\\Type\\ConfigType'] = new \Zikula\ExtensionsModule\Form\Type\ConfigType();
    }

    /**
     * Gets the private 'Zikula\ExtensionsModule\Form\Type\ExtensionInstallType' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Form\Type\ExtensionInstallType
     */
    protected function getExtensionInstallTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Form/Type/ExtensionInstallType.php';

        return $this->privates['Zikula\\ExtensionsModule\\Form\\Type\\ExtensionInstallType'] = new \Zikula\ExtensionsModule\Form\Type\ExtensionInstallType();
    }

    /**
     * Gets the private 'Zikula\ExtensionsModule\Form\Type\ExtensionModifyType' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Form\Type\ExtensionModifyType
     */
    protected function getExtensionModifyTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Form/Type/ExtensionModifyType.php';

        return $this->privates['Zikula\\ExtensionsModule\\Form\\Type\\ExtensionModifyType'] = new \Zikula\ExtensionsModule\Form\Type\ExtensionModifyType();
    }

    /**
     * Gets the private 'Zikula\ExtensionsModule\Helper\ComposerValidationHelper' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Helper\ComposerValidationHelper
     */
    protected function getComposerValidationHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Helper/ComposerValidationHelper.php';

        return $this->privates['Zikula\\ExtensionsModule\\Helper\\ComposerValidationHelper'] = new \Zikula\ExtensionsModule\Helper\ComposerValidationHelper(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\ExtensionsModule\Helper\ExtensionDependencyHelper' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Helper\ExtensionDependencyHelper
     */
    protected function getExtensionDependencyHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Helper/ExtensionDependencyHelper.php';

        return $this->privates['Zikula\\ExtensionsModule\\Helper\\ExtensionDependencyHelper'] = new \Zikula\ExtensionsModule\Helper\ExtensionDependencyHelper(($this->privates['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionDependencyRepository'] ?? $this->getExtensionDependencyRepositoryService()), ($this->services['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository'] ?? $this->getExtensionRepositoryService()), ($this->services['kernel'] ?? $this->get('kernel', 1)));
    }

    /**
     * Gets the private 'Zikula\ExtensionsModule\Helper\ExtensionStateHelper' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Helper\ExtensionStateHelper
     */
    protected function getExtensionStateHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Helper/ExtensionStateHelper.php';

        return $this->privates['Zikula\\ExtensionsModule\\Helper\\ExtensionStateHelper'] = new \Zikula\ExtensionsModule\Helper\ExtensionStateHelper(($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['Zikula\\Bundle\\CoreBundle\\CacheClearer'] ?? $this->getCacheClearer2Service()), ($this->services['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository'] ?? $this->getExtensionRepositoryService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['kernel'] ?? $this->get('kernel', 1)));
    }

    /**
     * Gets the private 'Zikula\ExtensionsModule\Listener\Core3UpgradeListener' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Listener\Core3UpgradeListener
     */
    protected function getCore3UpgradeListener4Service()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/ColumnExistsTrait.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Listener/Core3UpgradeListener.php';

        return $this->privates['Zikula\\ExtensionsModule\\Listener\\Core3UpgradeListener'] = new \Zikula\ExtensionsModule\Listener\Core3UpgradeListener(($this->services['doctrine.dbal.default_connection'] ?? $this->getDoctrine_Dbal_DefaultConnectionService()));
    }

    /**
     * Gets the private 'Zikula\ExtensionsModule\Listener\ExtensionServicesListener' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Listener\ExtensionServicesListener
     */
    protected function getExtensionServicesListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Listener/ExtensionServicesListener.php';

        return $this->privates['Zikula\\ExtensionsModule\\Listener\\ExtensionServicesListener'] = new \Zikula\ExtensionsModule\Listener\ExtensionServicesListener(($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['router'] ?? $this->getRouterService()), ($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\ExtensionsModule\Menu\ExtensionMenu' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Menu\ExtensionMenu
     */
    protected function getExtensionMenu4Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/ExtensionMenu/ExtensionMenuInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Menu/ExtensionMenu.php';

        return $this->privates['Zikula\\ExtensionsModule\\Menu\\ExtensionMenu'] = new \Zikula\ExtensionsModule\Menu\ExtensionMenu(($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()));
    }

    /**
     * Gets the private 'Zikula\ExtensionsModule\Menu\MenuBuilder' shared autowired service.
     *
     * @return \Zikula\ExtensionsModule\Menu\MenuBuilder
     */
    protected function getMenuBuilderService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/ExtensionsModule/Menu/MenuBuilder.php';

        return $this->privates['Zikula\\ExtensionsModule\\Menu\\MenuBuilder'] = new \Zikula\ExtensionsModule\Menu\MenuBuilder(($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['security.csrf.token_manager'] ?? $this->getSecurity_Csrf_TokenManagerService()));
    }

    /**
     * Gets the private 'Zikula\GroupsModule\Entity\GroupApplicationEntity' shared autowired service.
     *
     * @return \Zikula\GroupsModule\Entity\GroupApplicationEntity
     */
    protected function getGroupApplicationEntityService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/EntityAccess.php';
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Entity/GroupApplicationEntity.php';

        return $this->privates['Zikula\\GroupsModule\\Entity\\GroupApplicationEntity'] = new \Zikula\GroupsModule\Entity\GroupApplicationEntity();
    }

    /**
     * Gets the private 'Zikula\GroupsModule\Entity\GroupEntity' shared autowired service.
     *
     * @return \Zikula\GroupsModule\Entity\GroupEntity
     */
    protected function getGroupEntityService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/EntityAccess.php';
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Entity/GroupEntity.php';

        return $this->privates['Zikula\\GroupsModule\\Entity\\GroupEntity'] = new \Zikula\GroupsModule\Entity\GroupEntity();
    }

    /**
     * Gets the private 'Zikula\GroupsModule\Entity\Repository\GroupApplicationRepository' shared autowired service.
     *
     * @return \Zikula\GroupsModule\Entity\Repository\GroupApplicationRepository
     */
    protected function getGroupApplicationRepositoryService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Entity/RepositoryInterface/GroupApplicationRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Entity/Repository/GroupApplicationRepository.php';

        return $this->privates['Zikula\\GroupsModule\\Entity\\Repository\\GroupApplicationRepository'] = new \Zikula\GroupsModule\Entity\Repository\GroupApplicationRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'Zikula\GroupsModule\Form\Type\ConfigType' shared autowired service.
     *
     * @return \Zikula\GroupsModule\Form\Type\ConfigType
     */
    protected function getConfigType4Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Form/Type/ConfigType.php';

        return $this->privates['Zikula\\GroupsModule\\Form\\Type\\ConfigType'] = new \Zikula\GroupsModule\Form\Type\ConfigType();
    }

    /**
     * Gets the private 'Zikula\GroupsModule\Form\Type\CreateGroupType' shared autowired service.
     *
     * @return \Zikula\GroupsModule\Form\Type\CreateGroupType
     */
    protected function getCreateGroupTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Form/Type/CreateGroupType.php';

        return $this->privates['Zikula\\GroupsModule\\Form\\Type\\CreateGroupType'] = new \Zikula\GroupsModule\Form\Type\CreateGroupType(($this->privates['Zikula\\GroupsModule\\Helper\\CommonHelper'] ?? $this->getCommonHelperService()));
    }

    /**
     * Gets the private 'Zikula\GroupsModule\Form\Type\EditGroupType' shared autowired service.
     *
     * @return \Zikula\GroupsModule\Form\Type\EditGroupType
     */
    protected function getEditGroupTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Form/Type/EditGroupType.php';

        return $this->privates['Zikula\\GroupsModule\\Form\\Type\\EditGroupType'] = new \Zikula\GroupsModule\Form\Type\EditGroupType(($this->privates['Zikula\\GroupsModule\\Helper\\CommonHelper'] ?? $this->getCommonHelperService()));
    }

    /**
     * Gets the private 'Zikula\GroupsModule\Form\Type\ManageApplicationType' shared autowired service.
     *
     * @return \Zikula\GroupsModule\Form\Type\ManageApplicationType
     */
    protected function getManageApplicationTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Form/Type/ManageApplicationType.php';

        return $this->privates['Zikula\\GroupsModule\\Form\\Type\\ManageApplicationType'] = new \Zikula\GroupsModule\Form\Type\ManageApplicationType();
    }

    /**
     * Gets the private 'Zikula\GroupsModule\Form\Type\MembershipApplicationType' shared autowired service.
     *
     * @return \Zikula\GroupsModule\Form\Type\MembershipApplicationType
     */
    protected function getMembershipApplicationTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Form/Type/MembershipApplicationType.php';

        return $this->privates['Zikula\\GroupsModule\\Form\\Type\\MembershipApplicationType'] = new \Zikula\GroupsModule\Form\Type\MembershipApplicationType();
    }

    /**
     * Gets the private 'Zikula\GroupsModule\Form\Type\RemoveUserType' shared autowired service.
     *
     * @return \Zikula\GroupsModule\Form\Type\RemoveUserType
     */
    protected function getRemoveUserTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Form/Type/RemoveUserType.php';

        return $this->privates['Zikula\\GroupsModule\\Form\\Type\\RemoveUserType'] = new \Zikula\GroupsModule\Form\Type\RemoveUserType();
    }

    /**
     * Gets the private 'Zikula\GroupsModule\Helper\CommonHelper' shared autowired service.
     *
     * @return \Zikula\GroupsModule\Helper\CommonHelper
     */
    protected function getCommonHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Helper/CommonHelper.php';

        return $this->privates['Zikula\\GroupsModule\\Helper\\CommonHelper'] = new \Zikula\GroupsModule\Helper\CommonHelper(($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\GroupsModule\Listener\GroupEventListener' shared autowired service.
     *
     * @return \Zikula\GroupsModule\Listener\GroupEventListener
     */
    protected function getGroupEventListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Listener/GroupEventListener.php';

        return $this->privates['Zikula\\GroupsModule\\Listener\\GroupEventListener'] = new \Zikula\GroupsModule\Listener\GroupEventListener(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->privates['Zikula\\MailerModule\\Api\\MailerApi'] ?? $this->getMailerApiService()), ($this->services['router'] ?? $this->getRouterService()));
    }

    /**
     * Gets the private 'Zikula\GroupsModule\Menu\ExtensionMenu' shared autowired service.
     *
     * @return \Zikula\GroupsModule\Menu\ExtensionMenu
     */
    protected function getExtensionMenu5Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/ExtensionMenu/ExtensionMenuInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Menu/ExtensionMenu.php';

        return $this->privates['Zikula\\GroupsModule\\Menu\\ExtensionMenu'] = new \Zikula\GroupsModule\Menu\ExtensionMenu(($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\GroupsModule\\Entity\\Repository\\GroupRepository'] ?? $this->getGroupRepositoryService()), ($this->privates['Zikula\\GroupsModule\\Entity\\Repository\\GroupApplicationRepository'] ?? $this->getGroupApplicationRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\GroupsModule\Menu\MenuBuilder' shared autowired service.
     *
     * @return \Zikula\GroupsModule\Menu\MenuBuilder
     */
    protected function getMenuBuilder2Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Menu/MenuBuilder.php';

        return $this->privates['Zikula\\GroupsModule\\Menu\\MenuBuilder'] = new \Zikula\GroupsModule\Menu\MenuBuilder(($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()), ($this->services['Zikula\\UsersModule\\Entity\\Repository\\UserRepository'] ?? $this->getUserRepositoryService()), ($this->privates['Zikula\\GroupsModule\\Entity\\Repository\\GroupApplicationRepository'] ?? $this->getGroupApplicationRepositoryService()), ($this->services['router'] ?? $this->getRouterService()));
    }

    /**
     * Gets the private 'Zikula\GroupsModule\Validator\Constraints\ValidGroupNameValidator' shared autowired service.
     *
     * @return \Zikula\GroupsModule\Validator\Constraints\ValidGroupNameValidator
     */
    protected function getValidGroupNameValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/src/system/GroupsModule/Validator/Constraints/ValidGroupNameValidator.php';

        return $this->privates['Zikula\\GroupsModule\\Validator\\Constraints\\ValidGroupNameValidator'] = new \Zikula\GroupsModule\Validator\Constraints\ValidGroupNameValidator(($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\GroupsModule\\Entity\\Repository\\GroupRepository'] ?? $this->getGroupRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\MailerModule\Api\MailerApi' shared autowired service.
     *
     * @return \Zikula\MailerModule\Api\MailerApi
     */
    protected function getMailerApiService()
    {
        return $this->privates['Zikula\\MailerModule\\Api\\MailerApi'] = new \Zikula\MailerModule\Api\MailerApi(false, ($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['Zikula\\Bundle\\CoreBundle\\DynamicConfigDumper'] ?? ($this->services['Zikula\\Bundle\\CoreBundle\\DynamicConfigDumper'] = new \Zikula\Bundle\CoreBundle\DynamicConfigDumper((\dirname(__DIR__, 4).'/config')))), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['swiftmailer.mailer.default'] ?? $this->getSwiftmailer_Mailer_DefaultService()));
    }

    /**
     * Gets the private 'Zikula\MailerModule\Form\Type\ConfigType' shared autowired service.
     *
     * @return \Zikula\MailerModule\Form\Type\ConfigType
     */
    protected function getConfigType5Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/MailerModule/Form/Type/ConfigType.php';

        return $this->privates['Zikula\\MailerModule\\Form\\Type\\ConfigType'] = new \Zikula\MailerModule\Form\Type\ConfigType();
    }

    /**
     * Gets the private 'Zikula\MailerModule\Form\Type\TestType' shared autowired service.
     *
     * @return \Zikula\MailerModule\Form\Type\TestType
     */
    protected function getTestTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/MailerModule/Form/Type/TestType.php';

        return $this->privates['Zikula\\MailerModule\\Form\\Type\\TestType'] = new \Zikula\MailerModule\Form\Type\TestType();
    }

    /**
     * Gets the private 'Zikula\MailerModule\HookSubscriber\UiHooksSubscriber' shared autowired service.
     *
     * @return \Zikula\MailerModule\HookSubscriber\UiHooksSubscriber
     */
    protected function getUiHooksSubscriber2Service()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/HookInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/HookSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/MailerModule/HookSubscriber/UiHooksSubscriber.php';

        return $this->privates['Zikula\\MailerModule\\HookSubscriber\\UiHooksSubscriber'] = new \Zikula\MailerModule\HookSubscriber\UiHooksSubscriber(($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\MailerModule\Menu\ExtensionMenu' shared autowired service.
     *
     * @return \Zikula\MailerModule\Menu\ExtensionMenu
     */
    protected function getExtensionMenu6Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/ExtensionMenu/ExtensionMenuInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/MailerModule/Menu/ExtensionMenu.php';

        return $this->privates['Zikula\\MailerModule\\Menu\\ExtensionMenu'] = new \Zikula\MailerModule\Menu\ExtensionMenu(($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()));
    }

    /**
     * Gets the private 'Zikula\MenuModule\Block\Form\Type\MenuType' shared autowired service.
     *
     * @return \Zikula\MenuModule\Block\Form\Type\MenuType
     */
    protected function getMenuTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/Block/Form/Type/MenuType.php';

        return $this->privates['Zikula\\MenuModule\\Block\\Form\\Type\\MenuType'] = new \Zikula\MenuModule\Block\Form\Type\MenuType(($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\MenuModule\Entity\MenuItemEntity' shared autowired service.
     *
     * @return \Zikula\MenuModule\Entity\MenuItemEntity
     */
    protected function getMenuItemEntityService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/EntityAccess.php';
        include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/NodeInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/Entity/MenuItemEntity.php';

        return $this->privates['Zikula\\MenuModule\\Entity\\MenuItemEntity'] = new \Zikula\MenuModule\Entity\MenuItemEntity();
    }

    /**
     * Gets the private 'Zikula\MenuModule\Entity\Repository\MenuItemRepository' shared autowired service.
     *
     * @return \Zikula\MenuModule\Entity\Repository\MenuItemRepository
     */
    protected function getMenuItemRepositoryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/RepositoryUtilsInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/RepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity/Repository/AbstractTreeRepository.php';
        include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity/Repository/NestedTreeRepository.php';
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/Entity/RepositoryInterface/MenuItemRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/Entity/Repository/MenuItemRepository.php';

        return $this->privates['Zikula\\MenuModule\\Entity\\Repository\\MenuItemRepository'] = new \Zikula\MenuModule\Entity\Repository\MenuItemRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'Zikula\MenuModule\ExtensionMenu\ExtensionMenuCollector' shared autowired service.
     *
     * @return \Zikula\MenuModule\ExtensionMenu\ExtensionMenuCollector
     */
    protected function getExtensionMenuCollectorService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/ExtensionMenu/ExtensionMenuCollector.php';

        return $this->privates['Zikula\\MenuModule\\ExtensionMenu\\ExtensionMenuCollector'] = new \Zikula\MenuModule\ExtensionMenu\ExtensionMenuCollector(($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), new RewindableGenerator(function () {
            yield 0 => ($this->privates['Zikula\\AdminModule\\Menu\\ExtensionMenu'] ?? $this->getExtensionMenuService());
            yield 1 => ($this->privates['Zikula\\BlocksModule\\Menu\\ExtensionMenu'] ?? $this->getExtensionMenu2Service());
            yield 2 => ($this->privates['Zikula\\CategoriesModule\\Menu\\ExtensionMenu'] ?? $this->getExtensionMenu3Service());
            yield 3 => ($this->privates['Zikula\\ExtensionsModule\\Menu\\ExtensionMenu'] ?? $this->getExtensionMenu4Service());
            yield 4 => ($this->privates['Zikula\\GroupsModule\\Menu\\ExtensionMenu'] ?? $this->getExtensionMenu5Service());
            yield 5 => ($this->privates['Zikula\\MailerModule\\Menu\\ExtensionMenu'] ?? $this->getExtensionMenu6Service());
            yield 6 => ($this->privates['Zikula\\MenuModule\\Menu\\ExtensionMenu'] ?? $this->getExtensionMenu7Service());
            yield 7 => ($this->privates['Zikula\\PermissionsModule\\Menu\\ExtensionMenu'] ?? $this->getExtensionMenu8Service());
            yield 8 => ($this->privates['Zikula\\RoutesModule\\Menu\\ExtensionMenu'] ?? $this->getExtensionMenu9Service());
            yield 9 => ($this->privates['Zikula\\SearchModule\\Menu\\ExtensionMenu'] ?? $this->getExtensionMenu10Service());
            yield 10 => ($this->privates['Zikula\\SecurityCenterModule\\Menu\\ExtensionMenu'] ?? $this->getExtensionMenu11Service());
            yield 11 => ($this->privates['Zikula\\SettingsModule\\Menu\\ExtensionMenu'] ?? $this->getExtensionMenu12Service());
            yield 12 => ($this->privates['Zikula\\ThemeModule\\Menu\\ExtensionMenu'] ?? $this->getExtensionMenu13Service());
            yield 13 => ($this->privates['Zikula\\UsersModule\\Menu\\ExtensionMenu'] ?? $this->getExtensionMenu14Service());
            yield 14 => ($this->privates['Zikula\\ZAuthModule\\Menu\\ExtensionMenu'] ?? $this->getExtensionMenu15Service());
        }, 15));
    }

    /**
     * Gets the private 'Zikula\MenuModule\Form\EventListener\OptionValidatorListener' shared autowired service.
     *
     * @return \Zikula\MenuModule\Form\EventListener\OptionValidatorListener
     */
    protected function getOptionValidatorListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/Form/EventListener/OptionValidatorListener.php';

        return $this->privates['Zikula\\MenuModule\\Form\\EventListener\\OptionValidatorListener'] = new \Zikula\MenuModule\Form\EventListener\OptionValidatorListener(($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\MenuModule\Form\Type\DeleteMenuItemType' shared autowired service.
     *
     * @return \Zikula\MenuModule\Form\Type\DeleteMenuItemType
     */
    protected function getDeleteMenuItemTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/Form/Type/DeleteMenuItemType.php';

        return $this->privates['Zikula\\MenuModule\\Form\\Type\\DeleteMenuItemType'] = new \Zikula\MenuModule\Form\Type\DeleteMenuItemType();
    }

    /**
     * Gets the private 'Zikula\MenuModule\Form\Type\HiddenMenuItemType' shared autowired service.
     *
     * @return \Zikula\MenuModule\Form\Type\HiddenMenuItemType
     */
    protected function getHiddenMenuItemTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/Form/Type/HiddenMenuItemType.php';

        return $this->privates['Zikula\\MenuModule\\Form\\Type\\HiddenMenuItemType'] = new \Zikula\MenuModule\Form\Type\HiddenMenuItemType(($this->services['translator'] ?? $this->getTranslatorService()), ($this->privates['Zikula\\MenuModule\\Entity\\Repository\\MenuItemRepository'] ?? $this->getMenuItemRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\MenuModule\Form\Type\KeyValuePairType' shared autowired service.
     *
     * @return \Zikula\MenuModule\Form\Type\KeyValuePairType
     */
    protected function getKeyValuePairTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/Form/Type/KeyValuePairType.php';

        return $this->privates['Zikula\\MenuModule\\Form\\Type\\KeyValuePairType'] = new \Zikula\MenuModule\Form\Type\KeyValuePairType();
    }

    /**
     * Gets the private 'Zikula\MenuModule\Form\Type\MenuItemType' shared autowired service.
     *
     * @return \Zikula\MenuModule\Form\Type\MenuItemType
     */
    protected function getMenuItemTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/Form/Type/MenuItemType.php';

        return $this->privates['Zikula\\MenuModule\\Form\\Type\\MenuItemType'] = new \Zikula\MenuModule\Form\Type\MenuItemType(($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\MenuModule\Menu\ExtensionMenu' shared autowired service.
     *
     * @return \Zikula\MenuModule\Menu\ExtensionMenu
     */
    protected function getExtensionMenu7Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/ExtensionMenu/ExtensionMenuInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/Menu/ExtensionMenu.php';

        return $this->privates['Zikula\\MenuModule\\Menu\\ExtensionMenu'] = new \Zikula\MenuModule\Menu\ExtensionMenu(($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()));
    }

    /**
     * Gets the private 'Zikula\MenuModule\Menu\MenuBuilder' shared autowired service.
     *
     * @return \Zikula\MenuModule\Menu\MenuBuilder
     */
    protected function getMenuBuilder3Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/Menu/MenuBuilder.php';

        return $this->privates['Zikula\\MenuModule\\Menu\\MenuBuilder'] = new \Zikula\MenuModule\Menu\MenuBuilder(($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->privates['Zikula\\ExtensionsModule\\Api\\CapabilityApi'] ?? $this->getCapabilityApiService()));
    }

    /**
     * Gets the private 'Zikula\MenuModule\Provider\DoctrineTreeProvider' shared autowired service.
     *
     * @return \Zikula\MenuModule\Provider\DoctrineTreeProvider
     */
    protected function getDoctrineTreeProviderService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/Provider/DoctrineTreeProvider.php';

        return $this->privates['Zikula\\MenuModule\\Provider\\DoctrineTreeProvider'] = new \Zikula\MenuModule\Provider\DoctrineTreeProvider(($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->privates['Zikula\\MenuModule\\Entity\\Repository\\MenuItemRepository'] ?? $this->getMenuItemRepositoryService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /**
     * Gets the private 'Zikula\MenuModule\Voter\RequestVoter' shared autowired service.
     *
     * @return \Zikula\MenuModule\Voter\RequestVoter
     */
    protected function getRequestVoterService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Matcher/Voter/VoterInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/Voter/RequestVoter.php';

        return $this->privates['Zikula\\MenuModule\\Voter\\RequestVoter'] = new \Zikula\MenuModule\Voter\RequestVoter(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }

    /**
     * Gets the private 'Zikula\PermissionsModule\Api\PermissionApi' shared autowired service.
     *
     * @return \Zikula\PermissionsModule\Api\PermissionApi
     */
    protected function getPermissionApiService()
    {
        return $this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] = new \Zikula\PermissionsModule\Api\PermissionApi(($this->privates['Zikula\\PermissionsModule\\Entity\\Repository\\PermissionRepository'] ?? $this->getPermissionRepositoryService()), ($this->services['Zikula\\UsersModule\\Entity\\Repository\\UserRepository'] ?? $this->getUserRepositoryService()), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()), ($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\PermissionsModule\Entity\PermissionEntity' shared autowired service.
     *
     * @return \Zikula\PermissionsModule\Entity\PermissionEntity
     */
    protected function getPermissionEntityService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/EntityAccess.php';
        include_once \dirname(__DIR__, 4).'/src/system/PermissionsModule/Entity/PermissionEntity.php';

        return $this->privates['Zikula\\PermissionsModule\\Entity\\PermissionEntity'] = new \Zikula\PermissionsModule\Entity\PermissionEntity();
    }

    /**
     * Gets the private 'Zikula\PermissionsModule\Entity\Repository\PermissionRepository' shared autowired service.
     *
     * @return \Zikula\PermissionsModule\Entity\Repository\PermissionRepository
     */
    protected function getPermissionRepositoryService()
    {
        return $this->privates['Zikula\\PermissionsModule\\Entity\\Repository\\PermissionRepository'] = new \Zikula\PermissionsModule\Entity\Repository\PermissionRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'Zikula\PermissionsModule\Form\Type\ConfigType' shared autowired service.
     *
     * @return \Zikula\PermissionsModule\Form\Type\ConfigType
     */
    protected function getConfigType6Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/PermissionsModule/Form/Type/ConfigType.php';

        return $this->privates['Zikula\\PermissionsModule\\Form\\Type\\ConfigType'] = new \Zikula\PermissionsModule\Form\Type\ConfigType();
    }

    /**
     * Gets the private 'Zikula\PermissionsModule\Form\Type\FilterListType' shared autowired service.
     *
     * @return \Zikula\PermissionsModule\Form\Type\FilterListType
     */
    protected function getFilterListTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/PermissionsModule/Form/Type/FilterListType.php';

        return $this->privates['Zikula\\PermissionsModule\\Form\\Type\\FilterListType'] = new \Zikula\PermissionsModule\Form\Type\FilterListType();
    }

    /**
     * Gets the private 'Zikula\PermissionsModule\Form\Type\PermissionCheckType' shared autowired service.
     *
     * @return \Zikula\PermissionsModule\Form\Type\PermissionCheckType
     */
    protected function getPermissionCheckTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/PermissionsModule/Form/Type/PermissionCheckType.php';

        return $this->privates['Zikula\\PermissionsModule\\Form\\Type\\PermissionCheckType'] = new \Zikula\PermissionsModule\Form\Type\PermissionCheckType();
    }

    /**
     * Gets the private 'Zikula\PermissionsModule\Form\Type\PermissionType' shared autowired service.
     *
     * @return \Zikula\PermissionsModule\Form\Type\PermissionType
     */
    protected function getPermissionTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/PermissionsModule/Form/Type/PermissionType.php';

        return $this->privates['Zikula\\PermissionsModule\\Form\\Type\\PermissionType'] = new \Zikula\PermissionsModule\Form\Type\PermissionType();
    }

    /**
     * Gets the private 'Zikula\PermissionsModule\Helper\SchemaHelper' shared autowired service.
     *
     * @return \Zikula\PermissionsModule\Helper\SchemaHelper
     */
    protected function getSchemaHelper2Service($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/PermissionsModule/Helper/SchemaHelper.php';

        return $this->privates['Zikula\\PermissionsModule\\Helper\\SchemaHelper'] = new \Zikula\PermissionsModule\Helper\SchemaHelper(($this->services['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository'] ?? $this->getExtensionRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\PermissionsModule\Listener\Core3UpgradeListener' shared autowired service.
     *
     * @return \Zikula\PermissionsModule\Listener\Core3UpgradeListener
     */
    protected function getCore3UpgradeListener5Service()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/ColumnExistsTrait.php';
        include_once \dirname(__DIR__, 4).'/src/system/PermissionsModule/Listener/Core3UpgradeListener.php';

        return $this->privates['Zikula\\PermissionsModule\\Listener\\Core3UpgradeListener'] = new \Zikula\PermissionsModule\Listener\Core3UpgradeListener(($this->services['doctrine.dbal.default_connection'] ?? $this->getDoctrine_Dbal_DefaultConnectionService()));
    }

    /**
     * Gets the private 'Zikula\PermissionsModule\Listener\GroupDeletionListener' shared autowired service.
     *
     * @return \Zikula\PermissionsModule\Listener\GroupDeletionListener
     */
    protected function getGroupDeletionListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/PermissionsModule/Listener/GroupDeletionListener.php';

        return $this->privates['Zikula\\PermissionsModule\\Listener\\GroupDeletionListener'] = new \Zikula\PermissionsModule\Listener\GroupDeletionListener(($this->privates['Zikula\\PermissionsModule\\Entity\\Repository\\PermissionRepository'] ?? $this->getPermissionRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\PermissionsModule\Menu\ExtensionMenu' shared autowired service.
     *
     * @return \Zikula\PermissionsModule\Menu\ExtensionMenu
     */
    protected function getExtensionMenu8Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/ExtensionMenu/ExtensionMenuInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/PermissionsModule/Menu/ExtensionMenu.php';

        return $this->privates['Zikula\\PermissionsModule\\Menu\\ExtensionMenu'] = new \Zikula\PermissionsModule\Menu\ExtensionMenu(($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()));
    }

    /**
     * Gets the private 'Zikula\PermissionsModule\Menu\MenuBuilder' shared autowired service.
     *
     * @return \Zikula\PermissionsModule\Menu\MenuBuilder
     */
    protected function getMenuBuilder4Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/PermissionsModule/Menu/MenuBuilder.php';

        return $this->privates['Zikula\\PermissionsModule\\Menu\\MenuBuilder'] = new \Zikula\PermissionsModule\Menu\MenuBuilder(($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()));
    }

    /**
     * Gets the private 'Zikula\RoutesModule\AppSettings' shared autowired service.
     *
     * @return \Zikula\RoutesModule\AppSettings
     */
    protected function getAppSettingsService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Base/AbstractAppSettings.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/AppSettings.php';

        return $this->privates['Zikula\\RoutesModule\\AppSettings'] = new \Zikula\RoutesModule\AppSettings(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()));
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Entity\RouteEntity' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Entity\RouteEntity
     */
    protected function getRouteEntityService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/EntityAccess.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Traits/StandardFieldsTrait.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Entity/Base/AbstractRouteEntity.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Entity/RouteEntity.php';

        return $this->privates['Zikula\\RoutesModule\\Entity\\RouteEntity'] = new \Zikula\RoutesModule\Entity\RouteEntity();
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Form\Handler\Route\EditHandler' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Form\Handler\Route\EditHandler
     */
    protected function getEditHandlerService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Form/Handler/Common/Base/AbstractEditHandler.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Form/Handler/Common/EditHandler.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Form/Handler/Route/Base/AbstractEditHandler.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Form/Handler/Route/EditHandler.php';

        $this->privates['Zikula\\RoutesModule\\Form\\Handler\\Route\\EditHandler'] = $instance = new \Zikula\RoutesModule\Form\Handler\Route\EditHandler(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['form.factory'] ?? $this->getForm_FactoryService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['router'] ?? $this->getRouterService()), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()), ($this->services['Zikula\\RoutesModule\\Entity\\Factory\\EntityFactory'] ?? $this->getEntityFactoryService()), ($this->privates['Zikula\\RoutesModule\\Helper\\ControllerHelper'] ?? $this->getControllerHelper2Service()), ($this->privates['Zikula\\RoutesModule\\Helper\\ModelHelper'] ?? $this->getModelHelperService()), ($this->privates['Zikula\\RoutesModule\\Helper\\PermissionHelper'] ?? $this->getPermissionHelperService()), ($this->privates['Zikula\\RoutesModule\\Helper\\WorkflowHelper'] ?? $this->getWorkflowHelperService()));

        $instance->setPathBuilderHelper(($this->privates['Zikula\\RoutesModule\\Helper\\PathBuilderHelper'] ?? $this->getPathBuilderHelperService()));
        $instance->setRouteDumperHelper(($this->privates['Zikula\\RoutesModule\\Helper\\RouteDumperHelper'] ?? $this->getRouteDumperHelperService()));
        $instance->setSanitizeHelper(($this->privates['Zikula\\RoutesModule\\Helper\\SanitizeHelper'] ?? $this->getSanitizeHelperService()));
        $instance->setCacheClearer(($this->services['Zikula\\Bundle\\CoreBundle\\CacheClearer'] ?? $this->getCacheClearer2Service()));

        return $instance;
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Form\Type\ConfigType' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Form\Type\ConfigType
     */
    protected function getConfigType7Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Form/Type/Base/AbstractConfigType.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Form/Type/ConfigType.php';

        return $this->privates['Zikula\\RoutesModule\\Form\\Type\\ConfigType'] = new \Zikula\RoutesModule\Form\Type\ConfigType();
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Form\Type\Field\ArrayType' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Form\Type\Field\ArrayType
     */
    protected function getArrayTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Form/Type/Field/Base/AbstractArrayType.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Form/Type/Field/ArrayType.php';

        return $this->privates['Zikula\\RoutesModule\\Form\\Type\\Field\\ArrayType'] = new \Zikula\RoutesModule\Form\Type\Field\ArrayType();
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Form\Type\Field\MultiListType' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Form\Type\Field\MultiListType
     */
    protected function getMultiListTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Form/Type/Field/Base/AbstractMultiListType.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Form/Type/Field/MultiListType.php';

        return $this->privates['Zikula\\RoutesModule\\Form\\Type\\Field\\MultiListType'] = new \Zikula\RoutesModule\Form\Type\Field\MultiListType(($this->privates['Zikula\\RoutesModule\\Helper\\ListEntriesHelper'] ?? $this->getListEntriesHelperService()));
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Form\Type\QuickNavigation\RouteQuickNavType' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Form\Type\QuickNavigation\RouteQuickNavType
     */
    protected function getRouteQuickNavTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Form/Type/QuickNavigation/Base/AbstractRouteQuickNavType.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Form/Type/QuickNavigation/RouteQuickNavType.php';

        return $this->privates['Zikula\\RoutesModule\\Form\\Type\\QuickNavigation\\RouteQuickNavType'] = new \Zikula\RoutesModule\Form\Type\QuickNavigation\RouteQuickNavType(($this->privates['Zikula\\RoutesModule\\Helper\\ListEntriesHelper'] ?? $this->getListEntriesHelperService()));
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Form\Type\RouteType' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Form\Type\RouteType
     */
    protected function getRouteTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Traits/ModerationFormFieldsTrait.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Form/Type/Base/AbstractRouteType.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Form/Type/RouteType.php';

        $this->privates['Zikula\\RoutesModule\\Form\\Type\\RouteType'] = $instance = new \Zikula\RoutesModule\Form\Type\RouteType(($this->services['Zikula\\RoutesModule\\Entity\\Factory\\EntityFactory'] ?? $this->getEntityFactoryService()), ($this->privates['Zikula\\RoutesModule\\Helper\\ListEntriesHelper'] ?? $this->getListEntriesHelperService()));

        $instance->setExtensionRepository(($this->services['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository'] ?? $this->getExtensionRepositoryService()));

        return $instance;
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Helper\CollectionFilterHelper' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Helper\CollectionFilterHelper
     */
    protected function getCollectionFilterHelperService($lazyLoad = true)
    {
        return $this->privates['Zikula\\RoutesModule\\Helper\\CollectionFilterHelper'] = new \Zikula\RoutesModule\Helper\CollectionFilterHelper(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->privates['Zikula\\RoutesModule\\Helper\\PermissionHelper'] ?? $this->getPermissionHelperService()), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()));
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Helper\ControllerHelper' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Helper\ControllerHelper
     */
    protected function getControllerHelper2Service($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/Base/AbstractControllerHelper.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/ControllerHelper.php';

        return $this->privates['Zikula\\RoutesModule\\Helper\\ControllerHelper'] = new \Zikula\RoutesModule\Helper\ControllerHelper(($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['form.factory'] ?? $this->getForm_FactoryService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['Zikula\\RoutesModule\\Entity\\Factory\\EntityFactory'] ?? $this->getEntityFactoryService()), ($this->privates['Zikula\\RoutesModule\\Helper\\CollectionFilterHelper'] ?? $this->getCollectionFilterHelperService()), ($this->privates['Zikula\\RoutesModule\\Helper\\PermissionHelper'] ?? $this->getPermissionHelperService()));
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Helper\EntityDisplayHelper' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Helper\EntityDisplayHelper
     */
    protected function getEntityDisplayHelperService($lazyLoad = true)
    {
        return $this->privates['Zikula\\RoutesModule\\Helper\\EntityDisplayHelper'] = new \Zikula\RoutesModule\Helper\EntityDisplayHelper(($this->services['translator'] ?? $this->getTranslatorService()), ($this->privates['Zikula\\RoutesModule\\Helper\\ListEntriesHelper'] ?? $this->getListEntriesHelperService()));
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Helper\ExtractTranslationHelper' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Helper\ExtractTranslationHelper
     */
    protected function getExtractTranslationHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/ExtractTranslationHelper.php';

        return $this->privates['Zikula\\RoutesModule\\Helper\\ExtractTranslationHelper'] = new \Zikula\RoutesModule\Helper\ExtractTranslationHelper();
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Helper\ListEntriesHelper' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Helper\ListEntriesHelper
     */
    protected function getListEntriesHelperService($lazyLoad = true)
    {
        return $this->privates['Zikula\\RoutesModule\\Helper\\ListEntriesHelper'] = new \Zikula\RoutesModule\Helper\ListEntriesHelper(($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Helper\ModelHelper' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Helper\ModelHelper
     */
    protected function getModelHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/Base/AbstractModelHelper.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/ModelHelper.php';

        return $this->privates['Zikula\\RoutesModule\\Helper\\ModelHelper'] = new \Zikula\RoutesModule\Helper\ModelHelper(($this->services['Zikula\\RoutesModule\\Entity\\Factory\\EntityFactory'] ?? $this->getEntityFactoryService()));
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Helper\PathBuilderHelper' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Helper\PathBuilderHelper
     */
    protected function getPathBuilderHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/PathBuilderHelper.php';

        return $this->privates['Zikula\\RoutesModule\\Helper\\PathBuilderHelper'] = new \Zikula\RoutesModule\Helper\PathBuilderHelper(($this->services['kernel'] ?? $this->get('kernel', 1)));
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Helper\PermissionHelper' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Helper\PermissionHelper
     */
    protected function getPermissionHelperService($lazyLoad = true)
    {
        return $this->privates['Zikula\\RoutesModule\\Helper\\PermissionHelper'] = new \Zikula\RoutesModule\Helper\PermissionHelper(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()), ($this->services['Zikula\\UsersModule\\Entity\\Repository\\UserRepository'] ?? $this->getUserRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Helper\RouteDumperHelper' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Helper\RouteDumperHelper
     */
    protected function getRouteDumperHelperService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/RouteDumperHelper.php';

        return $this->privates['Zikula\\RoutesModule\\Helper\\RouteDumperHelper'] = new \Zikula\RoutesModule\Helper\RouteDumperHelper(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['Zikula\\SettingsModule\\Api\\LocaleApi'] ?? $this->getLocaleApiService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->privates['fos_js_routing.dump_command'] ?? $this->getFosJsRouting_DumpCommandService()));
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Helper\SanitizeHelper' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Helper\SanitizeHelper
     */
    protected function getSanitizeHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/SanitizeHelper.php';

        return $this->privates['Zikula\\RoutesModule\\Helper\\SanitizeHelper'] = new \Zikula\RoutesModule\Helper\SanitizeHelper();
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Helper\ViewHelper' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Helper\ViewHelper
     */
    protected function getViewHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/Base/AbstractViewHelper.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/ViewHelper.php';

        $this->privates['Zikula\\RoutesModule\\Helper\\ViewHelper'] = $instance = new \Zikula\RoutesModule\Helper\ViewHelper(($this->services['twig'] ?? $this->getTwigService()), ($this->privates['twig.loader.native_filesystem'] ?? $this->getTwig_Loader_NativeFilesystemService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->privates['Zikula\\ThemeModule\\Engine\\AssetFilter'] ?? $this->getAssetFilterService()), ($this->privates['Zikula\\RoutesModule\\Helper\\ControllerHelper'] ?? $this->getControllerHelper2Service()), ($this->privates['Zikula\\RoutesModule\\Helper\\PermissionHelper'] ?? $this->getPermissionHelperService()));

        $instance->setAdditionalDependencies(($this->services['Zikula\\Bundle\\CoreBundle\\DynamicConfigDumper'] ?? ($this->services['Zikula\\Bundle\\CoreBundle\\DynamicConfigDumper'] = new \Zikula\Bundle\CoreBundle\DynamicConfigDumper((\dirname(__DIR__, 4).'/config')))), ($this->services['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository'] ?? $this->getExtensionRepositoryService()));

        return $instance;
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Helper\WorkflowHelper' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Helper\WorkflowHelper
     */
    protected function getWorkflowHelperService($lazyLoad = true)
    {
        return $this->privates['Zikula\\RoutesModule\\Helper\\WorkflowHelper'] = new \Zikula\RoutesModule\Helper\WorkflowHelper(($this->services['translator'] ?? $this->getTranslatorService()), ($this->privates['workflow.registry'] ?? $this->getWorkflow_RegistryService()), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()), ($this->services['Zikula\\RoutesModule\\Entity\\Factory\\EntityFactory'] ?? $this->getEntityFactoryService()), ($this->privates['Zikula\\RoutesModule\\Helper\\ListEntriesHelper'] ?? $this->getListEntriesHelperService()), ($this->privates['Zikula\\RoutesModule\\Helper\\PermissionHelper'] ?? $this->getPermissionHelperService()));
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Listener\InstallerListener' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Listener\InstallerListener
     */
    protected function getInstallerListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Listener/Base/AbstractInstallerListener.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Listener/InstallerListener.php';

        return $this->privates['Zikula\\RoutesModule\\Listener\\InstallerListener'] = new \Zikula\RoutesModule\Listener\InstallerListener(($this->services['Zikula\\Bundle\\CoreBundle\\CacheClearer'] ?? $this->getCacheClearer2Service()), ($this->privates['Zikula\\RoutesModule\\Helper\\RouteDumperHelper'] ?? $this->getRouteDumperHelperService()), ($this->services['Zikula\\RoutesModule\\Helper\\MultilingualRoutingHelper'] ?? $this->getMultilingualRoutingHelperService()), ($this->services['Zikula\\RoutesModule\\Entity\\Factory\\EntityFactory'] ?? $this->getEntityFactoryService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Listener\UserListener' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Listener\UserListener
     */
    protected function getUserListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Listener/Base/AbstractUserListener.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Listener/UserListener.php';

        return $this->privates['Zikula\\RoutesModule\\Listener\\UserListener'] = new \Zikula\RoutesModule\Listener\UserListener(($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\RoutesModule\\Entity\\Factory\\EntityFactory'] ?? $this->getEntityFactoryService()), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()));
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Listener\WorkflowEventsListener' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Listener\WorkflowEventsListener
     */
    protected function getWorkflowEventsListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Listener/Base/AbstractWorkflowEventsListener.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Listener/WorkflowEventsListener.php';

        return $this->privates['Zikula\\RoutesModule\\Listener\\WorkflowEventsListener'] = new \Zikula\RoutesModule\Listener\WorkflowEventsListener(($this->services['Zikula\\RoutesModule\\Entity\\Factory\\EntityFactory'] ?? $this->getEntityFactoryService()), ($this->privates['Zikula\\RoutesModule\\Helper\\PermissionHelper'] ?? $this->getPermissionHelperService()));
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Menu\ExtensionMenu' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Menu\ExtensionMenu
     */
    protected function getExtensionMenu9Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/ExtensionMenu/ExtensionMenuInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Menu/Base/AbstractExtensionMenu.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Menu/ExtensionMenu.php';

        return $this->privates['Zikula\\RoutesModule\\Menu\\ExtensionMenu'] = new \Zikula\RoutesModule\Menu\ExtensionMenu(($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->privates['Zikula\\RoutesModule\\Helper\\ControllerHelper'] ?? $this->getControllerHelper2Service()), ($this->privates['Zikula\\RoutesModule\\Helper\\PermissionHelper'] ?? $this->getPermissionHelperService()));
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Menu\MenuBuilder' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Menu\MenuBuilder
     */
    protected function getMenuBuilder5Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Menu/Base/AbstractMenuBuilder.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Menu/MenuBuilder.php';

        return $this->privates['Zikula\\RoutesModule\\Menu\\MenuBuilder'] = new \Zikula\RoutesModule\Menu\MenuBuilder(($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->privates['Zikula\\RoutesModule\\Helper\\PermissionHelper'] ?? $this->getPermissionHelperService()), ($this->privates['Zikula\\RoutesModule\\Helper\\EntityDisplayHelper'] ?? $this->getEntityDisplayHelperService()), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->privates['Zikula\\RoutesModule\\Helper\\ModelHelper'] ?? $this->getModelHelperService()));
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Translation\ConsoleCommandListener' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Translation\ConsoleCommandListener
     */
    protected function getConsoleCommandListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Translation/ConsoleCommandListener.php';

        return $this->privates['Zikula\\RoutesModule\\Translation\\ConsoleCommandListener'] = new \Zikula\RoutesModule\Translation\ConsoleCommandListener(($this->privates['Zikula\\RoutesModule\\Helper\\ExtractTranslationHelper'] ?? $this->getExtractTranslationHelperService()));
    }

    /**
     * Gets the private 'Zikula\RoutesModule\Validator\Constraints\ListEntryValidator' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Validator\Constraints\ListEntryValidator
     */
    protected function getListEntryValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Validator/Constraints/Base/AbstractListEntryValidator.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Validator/Constraints/ListEntryValidator.php';

        return $this->privates['Zikula\\RoutesModule\\Validator\\Constraints\\ListEntryValidator'] = new \Zikula\RoutesModule\Validator\Constraints\ListEntryValidator(($this->services['translator'] ?? $this->getTranslatorService()), ($this->privates['Zikula\\RoutesModule\\Helper\\ListEntriesHelper'] ?? $this->getListEntriesHelperService()));
    }

    /**
     * Gets the private 'Zikula\SearchModule\Api\SearchApi' shared autowired service.
     *
     * @return \Zikula\SearchModule\Api\SearchApi
     */
    protected function getSearchApiService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/SearchModule/Api/ApiInterface/SearchApiInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/SearchModule/Api/SearchApi.php';

        return $this->privates['Zikula\\SearchModule\\Api\\SearchApi'] = new \Zikula\SearchModule\Api\SearchApi(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->privates['Zikula\\SearchModule\\Entity\\Repository\\SearchResultRepository'] ?? $this->getSearchResultRepositoryService()), ($this->privates['Zikula\\SearchModule\\Entity\\Repository\\SearchStatRepository'] ?? $this->getSearchStatRepositoryService()), ($this->services['session'] ?? $this->getSessionService()), ($this->privates['Zikula\\SearchModule\\Collector\\SearchableModuleCollector'] ?? $this->getSearchableModuleCollectorService()));
    }

    /**
     * Gets the private 'Zikula\SearchModule\Block\Form\Type\SearchBlockType' shared autowired service.
     *
     * @return \Zikula\SearchModule\Block\Form\Type\SearchBlockType
     */
    protected function getSearchBlockTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/SearchModule/Block/Form/Type/SearchBlockType.php';

        return $this->privates['Zikula\\SearchModule\\Block\\Form\\Type\\SearchBlockType'] = new \Zikula\SearchModule\Block\Form\Type\SearchBlockType();
    }

    /**
     * Gets the private 'Zikula\SearchModule\Collector\SearchableModuleCollector' shared autowired service.
     *
     * @return \Zikula\SearchModule\Collector\SearchableModuleCollector
     */
    protected function getSearchableModuleCollectorService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/SearchModule/Collector/SearchableModuleCollector.php';

        return $this->privates['Zikula\\SearchModule\\Collector\\SearchableModuleCollector'] = new \Zikula\SearchModule\Collector\SearchableModuleCollector(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Zikula\\UsersModule\\Helper\\SearchHelper'] ?? $this->getSearchHelperService());
        }, 1));
    }

    /**
     * Gets the private 'Zikula\SearchModule\Entity\Repository\SearchResultRepository' shared autowired service.
     *
     * @return \Zikula\SearchModule\Entity\Repository\SearchResultRepository
     */
    protected function getSearchResultRepositoryService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/SearchModule/Entity/RepositoryInterface/SearchResultRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/SearchModule/Entity/Repository/SearchResultRepository.php';

        return $this->privates['Zikula\\SearchModule\\Entity\\Repository\\SearchResultRepository'] = new \Zikula\SearchModule\Entity\Repository\SearchResultRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'Zikula\SearchModule\Entity\Repository\SearchStatRepository' shared autowired service.
     *
     * @return \Zikula\SearchModule\Entity\Repository\SearchStatRepository
     */
    protected function getSearchStatRepositoryService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/SearchModule/Entity/RepositoryInterface/SearchStatRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/SearchModule/Entity/Repository/SearchStatRepository.php';

        return $this->privates['Zikula\\SearchModule\\Entity\\Repository\\SearchStatRepository'] = new \Zikula\SearchModule\Entity\Repository\SearchStatRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'Zikula\SearchModule\Form\Type\AmendableModuleSearchType' shared autowired service.
     *
     * @return \Zikula\SearchModule\Form\Type\AmendableModuleSearchType
     */
    protected function getAmendableModuleSearchTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/SearchModule/Form/Type/AmendableModuleSearchType.php';

        return $this->privates['Zikula\\SearchModule\\Form\\Type\\AmendableModuleSearchType'] = new \Zikula\SearchModule\Form\Type\AmendableModuleSearchType(($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()));
    }

    /**
     * Gets the private 'Zikula\SearchModule\Form\Type\ConfigType' shared autowired service.
     *
     * @return \Zikula\SearchModule\Form\Type\ConfigType
     */
    protected function getConfigType8Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/SearchModule/Form/Type/ConfigType.php';

        return $this->privates['Zikula\\SearchModule\\Form\\Type\\ConfigType'] = new \Zikula\SearchModule\Form\Type\ConfigType();
    }

    /**
     * Gets the private 'Zikula\SearchModule\Form\Type\SearchType' shared autowired service.
     *
     * @return \Zikula\SearchModule\Form\Type\SearchType
     */
    protected function getSearchTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/SearchModule/Form/Type/SearchType.php';

        return $this->privates['Zikula\\SearchModule\\Form\\Type\\SearchType'] = new \Zikula\SearchModule\Form\Type\SearchType();
    }

    /**
     * Gets the private 'Zikula\SearchModule\Listener\FrontControllerListener' shared autowired service.
     *
     * @return \Zikula\SearchModule\Listener\FrontControllerListener
     */
    protected function getFrontControllerListenerService()
    {
        return $this->privates['Zikula\\SearchModule\\Listener\\FrontControllerListener'] = new \Zikula\SearchModule\Listener\FrontControllerListener(($this->services['router'] ?? $this->getRouterService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->privates['zikula_core.common.theme.assets_header'] ?? ($this->privates['zikula_core.common.theme.assets_header'] = new \Zikula\ThemeModule\Engine\AssetBag())), false, (($this->hasParameter("upgrading")) ? ($this->getParameter("upgrading")) : (false)));
    }

    /**
     * Gets the private 'Zikula\SearchModule\Listener\ModuleEventListener' shared autowired service.
     *
     * @return \Zikula\SearchModule\Listener\ModuleEventListener
     */
    protected function getModuleEventListener2Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/SearchModule/Listener/ModuleEventListener.php';

        return $this->privates['Zikula\\SearchModule\\Listener\\ModuleEventListener'] = new \Zikula\SearchModule\Listener\ModuleEventListener(($this->privates['Zikula\\SearchModule\\Collector\\SearchableModuleCollector'] ?? $this->getSearchableModuleCollectorService()), ($this->privates['Zikula\\BlocksModule\\Entity\\Repository\\BlockRepository'] ?? $this->getBlockRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\SearchModule\Menu\ExtensionMenu' shared autowired service.
     *
     * @return \Zikula\SearchModule\Menu\ExtensionMenu
     */
    protected function getExtensionMenu10Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/ExtensionMenu/ExtensionMenuInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/SearchModule/Menu/ExtensionMenu.php';

        return $this->privates['Zikula\\SearchModule\\Menu\\ExtensionMenu'] = new \Zikula\SearchModule\Menu\ExtensionMenu(($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()), ($this->privates['Zikula\\SearchModule\\Entity\\Repository\\SearchStatRepository'] ?? $this->getSearchStatRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\SecurityCenterModule\Entity\Repository\IntrusionRepository' shared autowired service.
     *
     * @return \Zikula\SecurityCenterModule\Entity\Repository\IntrusionRepository
     */
    protected function getIntrusionRepositoryService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Entity/Repository/IntrusionRepository.php';

        return $this->privates['Zikula\\SecurityCenterModule\\Entity\\Repository\\IntrusionRepository'] = new \Zikula\SecurityCenterModule\Entity\Repository\IntrusionRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'Zikula\SecurityCenterModule\Form\Type\ConfigType' shared autowired service.
     *
     * @return \Zikula\SecurityCenterModule\Form\Type\ConfigType
     */
    protected function getConfigType9Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Form/Type/ConfigType.php';

        return $this->privates['Zikula\\SecurityCenterModule\\Form\\Type\\ConfigType'] = new \Zikula\SecurityCenterModule\Form\Type\ConfigType();
    }

    /**
     * Gets the private 'Zikula\SecurityCenterModule\Form\Type\IdsLogExportType' shared autowired service.
     *
     * @return \Zikula\SecurityCenterModule\Form\Type\IdsLogExportType
     */
    protected function getIdsLogExportTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Form/Type/IdsLogExportType.php';

        return $this->privates['Zikula\\SecurityCenterModule\\Form\\Type\\IdsLogExportType'] = new \Zikula\SecurityCenterModule\Form\Type\IdsLogExportType();
    }

    /**
     * Gets the private 'Zikula\SecurityCenterModule\Form\Type\IdsLogFilterType' shared autowired service.
     *
     * @return \Zikula\SecurityCenterModule\Form\Type\IdsLogFilterType
     */
    protected function getIdsLogFilterTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Form/Type/IdsLogFilterType.php';

        return $this->privates['Zikula\\SecurityCenterModule\\Form\\Type\\IdsLogFilterType'] = new \Zikula\SecurityCenterModule\Form\Type\IdsLogFilterType(($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\SecurityCenterModule\Listener\FilterListener' shared autowired service.
     *
     * @return \Zikula\SecurityCenterModule\Listener\FilterListener
     */
    protected function getFilterListenerService()
    {
        return $this->privates['Zikula\\SecurityCenterModule\\Listener\\FilterListener'] = new \Zikula\SecurityCenterModule\Listener\FilterListener(false, (($this->hasParameter("upgrading")) ? ($this->getParameter("upgrading")) : (false)), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['doctrine.orm.default_entity_manager'] ?? $this->getDoctrine_Orm_DefaultEntityManagerService()), ($this->privates['Zikula\\MailerModule\\Api\\MailerApi'] ?? $this->getMailerApiService()), ($this->services['translator'] ?? $this->getTranslatorService()), $this->targetDir.'');
    }

    /**
     * Gets the private 'Zikula\SecurityCenterModule\Listener\PurifierListener' shared autowired service.
     *
     * @return \Zikula\SecurityCenterModule\Listener\PurifierListener
     */
    protected function getPurifierListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Listener/PurifierListener.php';

        return $this->privates['Zikula\\SecurityCenterModule\\Listener\\PurifierListener'] = new \Zikula\SecurityCenterModule\Listener\PurifierListener(false, (($this->hasParameter("upgrading")) ? ($this->getParameter("upgrading")) : (false)), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['Zikula\\SecurityCenterModule\\Helper\\PurifierHelper'] ?? $this->getPurifierHelperService()));
    }

    /**
     * Gets the private 'Zikula\SecurityCenterModule\Menu\ExtensionMenu' shared autowired service.
     *
     * @return \Zikula\SecurityCenterModule\Menu\ExtensionMenu
     */
    protected function getExtensionMenu11Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/ExtensionMenu/ExtensionMenuInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Menu/ExtensionMenu.php';

        return $this->privates['Zikula\\SecurityCenterModule\\Menu\\ExtensionMenu'] = new \Zikula\SecurityCenterModule\Menu\ExtensionMenu(($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()));
    }

    /**
     * Gets the private 'Zikula\SettingsModule\Form\Type\LocaleSettingsType' shared autowired service.
     *
     * @return \Zikula\SettingsModule\Form\Type\LocaleSettingsType
     */
    protected function getLocaleSettingsTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/SettingsModule/Form/Type/LocaleSettingsType.php';

        return $this->privates['Zikula\\SettingsModule\\Form\\Type\\LocaleSettingsType'] = new \Zikula\SettingsModule\Form\Type\LocaleSettingsType();
    }

    /**
     * Gets the private 'Zikula\SettingsModule\Form\Type\MainSettingsType' shared autowired service.
     *
     * @return \Zikula\SettingsModule\Form\Type\MainSettingsType
     */
    protected function getMainSettingsTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/SettingsModule/Form/Type/MainSettingsType.php';

        return $this->privates['Zikula\\SettingsModule\\Form\\Type\\MainSettingsType'] = new \Zikula\SettingsModule\Form\Type\MainSettingsType(($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository'] ?? $this->getExtensionRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\SettingsModule\Helper\TranslationConfigHelper' shared autowired service.
     *
     * @return \Zikula\SettingsModule\Helper\TranslationConfigHelper
     */
    protected function getTranslationConfigHelperService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/SettingsModule/Helper/TranslationConfigHelper.php';

        return $this->privates['Zikula\\SettingsModule\\Helper\\TranslationConfigHelper'] = new \Zikula\SettingsModule\Helper\TranslationConfigHelper(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->services['Zikula\\Bundle\\CoreBundle\\DynamicConfigDumper'] ?? ($this->services['Zikula\\Bundle\\CoreBundle\\DynamicConfigDumper'] = new \Zikula\Bundle\CoreBundle\DynamicConfigDumper((\dirname(__DIR__, 4).'/config')))), ($this->services['Zikula\\Bundle\\CoreBundle\\CacheClearer'] ?? $this->getCacheClearer2Service()));
    }

    /**
     * Gets the private 'Zikula\SettingsModule\Listener\ExtensionInstallerListener' shared autowired service.
     *
     * @return \Zikula\SettingsModule\Listener\ExtensionInstallerListener
     */
    protected function getExtensionInstallerListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/SettingsModule/Listener/ExtensionInstallerListener.php';

        return $this->privates['Zikula\\SettingsModule\\Listener\\ExtensionInstallerListener'] = new \Zikula\SettingsModule\Listener\ExtensionInstallerListener(($this->privates['Zikula\\SettingsModule\\Helper\\TranslationConfigHelper'] ?? $this->getTranslationConfigHelperService()));
    }

    /**
     * Gets the private 'Zikula\SettingsModule\Listener\LocaleListener' shared autowired service.
     *
     * @return \Zikula\SettingsModule\Listener\LocaleListener
     */
    protected function getLocaleListenerService()
    {
        return $this->privates['Zikula\\SettingsModule\\Listener\\LocaleListener'] = new \Zikula\SettingsModule\Listener\LocaleListener(($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()));
    }

    /**
     * Gets the private 'Zikula\SettingsModule\Listener\LocalizedVariableListener' shared autowired service.
     *
     * @return \Zikula\SettingsModule\Listener\LocalizedVariableListener
     */
    protected function getLocalizedVariableListenerService()
    {
        return $this->privates['Zikula\\SettingsModule\\Listener\\LocalizedVariableListener'] = new \Zikula\SettingsModule\Listener\LocalizedVariableListener(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()));
    }

    /**
     * Gets the private 'Zikula\SettingsModule\Listener\ModuleListener' shared autowired service.
     *
     * @return \Zikula\SettingsModule\Listener\ModuleListener
     */
    protected function getModuleListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/SettingsModule/Listener/ModuleListener.php';

        return $this->privates['Zikula\\SettingsModule\\Listener\\ModuleListener'] = new \Zikula\SettingsModule\Listener\ModuleListener(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\SettingsModule\Listener\TranslationUiListener' shared autowired service.
     *
     * @return \Zikula\SettingsModule\Listener\TranslationUiListener
     */
    protected function getTranslationUiListenerService()
    {
        return $this->privates['Zikula\\SettingsModule\\Listener\\TranslationUiListener'] = new \Zikula\SettingsModule\Listener\TranslationUiListener(($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\SettingsModule\\Api\\LocaleApi'] ?? $this->getLocaleApiService()));
    }

    /**
     * Gets the private 'Zikula\SettingsModule\Menu\ExtensionMenu' shared autowired service.
     *
     * @return \Zikula\SettingsModule\Menu\ExtensionMenu
     */
    protected function getExtensionMenu12Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/ExtensionMenu/ExtensionMenuInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/SettingsModule/Menu/ExtensionMenu.php';

        return $this->privates['Zikula\\SettingsModule\\Menu\\ExtensionMenu'] = new \Zikula\SettingsModule\Menu\ExtensionMenu(($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['kernel'] ?? $this->get('kernel', 1)));
    }

    /**
     * Gets the private 'Zikula\SettingsModule\Validator\Constraints\ValidControllerValidator' shared autowired service.
     *
     * @return \Zikula\SettingsModule\Validator\Constraints\ValidControllerValidator
     */
    protected function getValidControllerValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/src/system/SettingsModule/Validator/Constraints/ValidControllerValidator.php';

        return $this->privates['Zikula\\SettingsModule\\Validator\\Constraints\\ValidControllerValidator'] = new \Zikula\SettingsModule\Validator\Constraints\ValidControllerValidator();
    }

    /**
     * Gets the private 'Zikula\ThemeModule\Api\PageAssetApi' shared autowired service.
     *
     * @return \Zikula\ThemeModule\Api\PageAssetApi
     */
    protected function getPageAssetApiService()
    {
        return $this->privates['Zikula\\ThemeModule\\Api\\PageAssetApi'] = new \Zikula\ThemeModule\Api\PageAssetApi(($this->services['zikula_core.common.theme.assets_css'] ?? ($this->services['zikula_core.common.theme.assets_css'] = new \Zikula\ThemeModule\Engine\AssetBag())), ($this->privates['zikula_core.common.theme.assets_js'] ?? ($this->privates['zikula_core.common.theme.assets_js'] = new \Zikula\ThemeModule\Engine\AssetBag())), ($this->privates['zikula_core.common.theme.assets_header'] ?? ($this->privates['zikula_core.common.theme.assets_header'] = new \Zikula\ThemeModule\Engine\AssetBag())), ($this->privates['zikula_core.common.theme.assets_footer'] ?? ($this->privates['zikula_core.common.theme.assets_footer'] = new \Zikula\ThemeModule\Engine\AssetBag())));
    }

    /**
     * Gets the private 'Zikula\ThemeModule\Engine\AssetFilter' shared autowired service.
     *
     * @return \Zikula\ThemeModule\Engine\AssetFilter
     */
    protected function getAssetFilterService()
    {
        $a = new \Zikula\ThemeModule\Engine\Asset\Merger(($this->services['router'] ?? $this->getRouterService()), ($this->services['kernel'] ?? $this->get('kernel', 1)), '1 day', true, true, [0 => '/jquery/jquery.min.js', 1 => '/bootstrap/css/bootstrap.min.css', 2 => '/font-awesome/css/all.min.css', 3 => '/mmenu/css/mmenu.css', 4 => '/mmenu/js/mmenu.js']);

        return $this->privates['Zikula\\ThemeModule\\Engine\\AssetFilter'] = new \Zikula\ThemeModule\Engine\AssetFilter(($this->privates['zikula_core.common.theme.assets_header'] ?? ($this->privates['zikula_core.common.theme.assets_header'] = new \Zikula\ThemeModule\Engine\AssetBag())), ($this->privates['zikula_core.common.theme.assets_footer'] ?? ($this->privates['zikula_core.common.theme.assets_footer'] = new \Zikula\ThemeModule\Engine\AssetBag())), new \Zikula\ThemeModule\Engine\Asset\JsResolver(($this->privates['zikula_core.common.theme.assets_js'] ?? ($this->privates['zikula_core.common.theme.assets_js'] = new \Zikula\ThemeModule\Engine\AssetBag())), $a, 'prod', true), new \Zikula\ThemeModule\Engine\Asset\CssResolver(($this->services['zikula_core.common.theme.assets_css'] ?? ($this->services['zikula_core.common.theme.assets_css'] = new \Zikula\ThemeModule\Engine\AssetBag())), $a, 'prod', true), 'foot');
    }

    /**
     * Gets the private 'Zikula\ThemeModule\EventListener\AddJSConfigListener' shared autowired service.
     *
     * @return \Zikula\ThemeModule\EventListener\AddJSConfigListener
     */
    protected function getAddJSConfigListenerService()
    {
        return $this->privates['Zikula\\ThemeModule\\EventListener\\AddJSConfigListener'] = new \Zikula\ThemeModule\EventListener\AddJSConfigListener(false, ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()), ($this->services['twig'] ?? $this->getTwigService()), ($this->privates['zikula_core.common.theme.assets_header'] ?? ($this->privates['zikula_core.common.theme.assets_header'] = new \Zikula\ThemeModule\Engine\AssetBag())));
    }

    /**
     * Gets the private 'Zikula\ThemeModule\EventListener\ControllerAnnotationReaderListener' shared autowired service.
     *
     * @return \Zikula\ThemeModule\EventListener\ControllerAnnotationReaderListener
     */
    protected function getControllerAnnotationReaderListenerService()
    {
        return $this->privates['Zikula\\ThemeModule\\EventListener\\ControllerAnnotationReaderListener'] = new \Zikula\ThemeModule\EventListener\ControllerAnnotationReaderListener(($this->services['Zikula\\ThemeModule\\Engine\\Engine'] ?? $this->getEngineService()));
    }

    /**
     * Gets the private 'Zikula\ThemeModule\EventListener\Core3UpgradeListener' shared autowired service.
     *
     * @return \Zikula\ThemeModule\EventListener\Core3UpgradeListener
     */
    protected function getCore3UpgradeListener6Service()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/ColumnExistsTrait.php';
        include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/EventListener/Core3UpgradeListener.php';

        return $this->privates['Zikula\\ThemeModule\\EventListener\\Core3UpgradeListener'] = new \Zikula\ThemeModule\EventListener\Core3UpgradeListener(($this->services['doctrine.dbal.default_connection'] ?? $this->getDoctrine_Dbal_DefaultConnectionService()));
    }

    /**
     * Gets the private 'Zikula\ThemeModule\EventListener\CreateThemedResponseListener' shared autowired service.
     *
     * @return \Zikula\ThemeModule\EventListener\CreateThemedResponseListener
     */
    protected function getCreateThemedResponseListenerService()
    {
        return $this->privates['Zikula\\ThemeModule\\EventListener\\CreateThemedResponseListener'] = new \Zikula\ThemeModule\EventListener\CreateThemedResponseListener(false, ($this->services['Zikula\\ThemeModule\\Engine\\Engine'] ?? $this->getEngineService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()));
    }

    /**
     * Gets the private 'Zikula\ThemeModule\EventListener\DefaultPageAssetSetterListener' shared autowired service.
     *
     * @return \Zikula\ThemeModule\EventListener\DefaultPageAssetSetterListener
     */
    protected function getDefaultPageAssetSetterListenerService()
    {
        return $this->privates['Zikula\\ThemeModule\\EventListener\\DefaultPageAssetSetterListener'] = new \Zikula\ThemeModule\EventListener\DefaultPageAssetSetterListener(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->privates['zikula_core.common.theme.assets_js'] ?? ($this->privates['zikula_core.common.theme.assets_js'] = new \Zikula\ThemeModule\Engine\AssetBag())), ($this->services['zikula_core.common.theme.assets_css'] ?? ($this->services['zikula_core.common.theme.assets_css'] = new \Zikula\ThemeModule\Engine\AssetBag())), ($this->services['router'] ?? $this->getRouterService()), ($this->services['Zikula\\ThemeModule\\Engine\\Asset'] ?? $this->getAssetService()), ($this->services['Zikula\\ThemeModule\\Engine\\Engine'] ?? $this->getEngineService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), 'prod', false, '/bootstrap/js/bootstrap.bundle.min.js', '/bootstrap/css/bootstrap.min.css', '/font-awesome/css/all.min.css');
    }

    /**
     * Gets the private 'Zikula\ThemeModule\EventListener\DefaultPageVarSetterListener' shared autowired service.
     *
     * @return \Zikula\ThemeModule\EventListener\DefaultPageVarSetterListener
     */
    protected function getDefaultPageVarSetterListenerService()
    {
        return $this->privates['Zikula\\ThemeModule\\EventListener\\DefaultPageVarSetterListener'] = new \Zikula\ThemeModule\EventListener\DefaultPageVarSetterListener(($this->privates['zikula_core.common.theme.pagevars'] ?? $this->getZikulaCore_Common_Theme_PagevarsService()), ($this->services['router'] ?? $this->getRouterService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['kernel'] ?? $this->get('kernel', 1)), false);
    }

    /**
     * Gets the private 'Zikula\ThemeModule\EventListener\ExtensionInstallationListener' shared autowired service.
     *
     * @return \Zikula\ThemeModule\EventListener\ExtensionInstallationListener
     */
    protected function getExtensionInstallationListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/EventListener/ExtensionInstallationListener.php';

        return $this->privates['Zikula\\ThemeModule\\EventListener\\ExtensionInstallationListener'] = new \Zikula\ThemeModule\EventListener\ExtensionInstallationListener(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\Bundle\\CoreBundle\\CacheClearer'] ?? $this->getCacheClearer2Service()), true);
    }

    /**
     * Gets the private 'Zikula\ThemeModule\EventListener\TemplatePathOverrideListener' shared autowired service.
     *
     * @return \Zikula\ThemeModule\EventListener\TemplatePathOverrideListener
     */
    protected function getTemplatePathOverrideListenerService()
    {
        return $this->privates['Zikula\\ThemeModule\\EventListener\\TemplatePathOverrideListener'] = new \Zikula\ThemeModule\EventListener\TemplatePathOverrideListener(($this->privates['twig.loader.native_filesystem'] ?? $this->getTwig_Loader_NativeFilesystemService()), ($this->services['Zikula\\ThemeModule\\Engine\\Engine'] ?? $this->getEngineService()));
    }

    /**
     * Gets the private 'Zikula\ThemeModule\Form\Type\DeleteThemeType' shared autowired service.
     *
     * @return \Zikula\ThemeModule\Form\Type\DeleteThemeType
     */
    protected function getDeleteThemeTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Form/Type/DeleteThemeType.php';

        return $this->privates['Zikula\\ThemeModule\\Form\\Type\\DeleteThemeType'] = new \Zikula\ThemeModule\Form\Type\DeleteThemeType();
    }

    /**
     * Gets the private 'Zikula\ThemeModule\Form\Type\SetDefaultThemeType' shared autowired service.
     *
     * @return \Zikula\ThemeModule\Form\Type\SetDefaultThemeType
     */
    protected function getSetDefaultThemeTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Form/Type/SetDefaultThemeType.php';

        return $this->privates['Zikula\\ThemeModule\\Form\\Type\\SetDefaultThemeType'] = new \Zikula\ThemeModule\Form\Type\SetDefaultThemeType();
    }

    /**
     * Gets the private 'Zikula\ThemeModule\Menu\ExtensionMenu' shared autowired service.
     *
     * @return \Zikula\ThemeModule\Menu\ExtensionMenu
     */
    protected function getExtensionMenu13Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/ExtensionMenu/ExtensionMenuInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ThemeModule/Menu/ExtensionMenu.php';

        return $this->privates['Zikula\\ThemeModule\\Menu\\ExtensionMenu'] = new \Zikula\ThemeModule\Menu\ExtensionMenu(($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()));
    }

    /**
     * Gets the private 'Zikula\UsersModule\Collector\AuthenticationMethodCollector' shared autowired service.
     *
     * @return \Zikula\UsersModule\Collector\AuthenticationMethodCollector
     */
    protected function getAuthenticationMethodCollectorService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Collector/AuthenticationMethodCollector.php';

        return $this->privates['Zikula\\UsersModule\\Collector\\AuthenticationMethodCollector'] = new \Zikula\UsersModule\Collector\AuthenticationMethodCollector(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), new RewindableGenerator(function () {
            yield 0 => ($this->privates['Zikula\\ZAuthModule\\AuthenticationMethod\\NativeEitherAuthenticationMethod'] ?? $this->getNativeEitherAuthenticationMethodService());
            yield 1 => ($this->privates['Zikula\\ZAuthModule\\AuthenticationMethod\\NativeEmailAuthenticationMethod'] ?? $this->getNativeEmailAuthenticationMethodService());
            yield 2 => ($this->privates['Zikula\\ZAuthModule\\AuthenticationMethod\\NativeUnameAuthenticationMethod'] ?? $this->getNativeUnameAuthenticationMethodService());
        }, 3));
    }

    /**
     * Gets the private 'Zikula\UsersModule\Collector\MessageModuleCollector' shared autowired service.
     *
     * @return \Zikula\UsersModule\Collector\MessageModuleCollector
     */
    protected function getMessageModuleCollectorService()
    {
        return $this->privates['Zikula\\UsersModule\\Collector\\MessageModuleCollector'] = new \Zikula\UsersModule\Collector\MessageModuleCollector(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), new RewindableGenerator(function () {
            yield 0 => ($this->privates['Zikula\\UsersModule\\MessageModule\\IdentityMessageModule'] ?? ($this->privates['Zikula\\UsersModule\\MessageModule\\IdentityMessageModule'] = new \Zikula\UsersModule\MessageModule\IdentityMessageModule()));
        }, 1));
    }

    /**
     * Gets the private 'Zikula\UsersModule\Collector\ProfileModuleCollector' shared autowired service.
     *
     * @return \Zikula\UsersModule\Collector\ProfileModuleCollector
     */
    protected function getProfileModuleCollectorService()
    {
        return $this->privates['Zikula\\UsersModule\\Collector\\ProfileModuleCollector'] = new \Zikula\UsersModule\Collector\ProfileModuleCollector(($this->services['Zikula\\UsersModule\\Entity\\Repository\\UserRepository'] ?? $this->getUserRepositoryService()), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), new RewindableGenerator(function () {
            yield 0 => ($this->privates['Zikula\\UsersModule\\ProfileModule\\IdentityProfileModule'] ?? $this->getIdentityProfileModuleService());
        }, 1));
    }

    /**
     * Gets the private 'Zikula\UsersModule\Entity\Repository\UserAttributeRepository' shared autowired service.
     *
     * @return \Zikula\UsersModule\Entity\Repository\UserAttributeRepository
     */
    protected function getUserAttributeRepositoryService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Entity/RepositoryInterface/UserAttributeRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Entity/Repository/UserAttributeRepository.php';

        return $this->privates['Zikula\\UsersModule\\Entity\\Repository\\UserAttributeRepository'] = new \Zikula\UsersModule\Entity\Repository\UserAttributeRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'Zikula\UsersModule\Entity\Repository\UserSessionRepository' shared autowired service.
     *
     * @return \Zikula\UsersModule\Entity\Repository\UserSessionRepository
     */
    protected function getUserSessionRepositoryService()
    {
        return $this->privates['Zikula\\UsersModule\\Entity\\Repository\\UserSessionRepository'] = new \Zikula\UsersModule\Entity\Repository\UserSessionRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'Zikula\UsersModule\Entity\UserEntity' shared autowired service.
     *
     * @return \Zikula\UsersModule\Entity\UserEntity
     */
    protected function getUserEntityService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/EntityAccess.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Entity/UserEntity.php';

        return $this->privates['Zikula\\UsersModule\\Entity\\UserEntity'] = new \Zikula\UsersModule\Entity\UserEntity();
    }

    /**
     * Gets the private 'Zikula\UsersModule\Form\Type\AdminModifyUserType' shared autowired service.
     *
     * @return \Zikula\UsersModule\Form\Type\AdminModifyUserType
     */
    protected function getAdminModifyUserTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Form/Type/AdminModifyUserType.php';

        return $this->privates['Zikula\\UsersModule\\Form\\Type\\AdminModifyUserType'] = new \Zikula\UsersModule\Form\Type\AdminModifyUserType();
    }

    /**
     * Gets the private 'Zikula\UsersModule\Form\Type\ChangeLanguageType' shared autowired service.
     *
     * @return \Zikula\UsersModule\Form\Type\ChangeLanguageType
     */
    protected function getChangeLanguageTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Form/Type/ChangeLanguageType.php';

        return $this->privates['Zikula\\UsersModule\\Form\\Type\\ChangeLanguageType'] = new \Zikula\UsersModule\Form\Type\ChangeLanguageType();
    }

    /**
     * Gets the private 'Zikula\UsersModule\Form\Type\ConfigType\AuthenticationMethodsType' shared autowired service.
     *
     * @return \Zikula\UsersModule\Form\Type\ConfigType\AuthenticationMethodsType
     */
    protected function getAuthenticationMethodsTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Form/Type/ConfigType/AuthenticationMethodsType.php';

        return $this->privates['Zikula\\UsersModule\\Form\\Type\\ConfigType\\AuthenticationMethodsType'] = new \Zikula\UsersModule\Form\Type\ConfigType\AuthenticationMethodsType();
    }

    /**
     * Gets the private 'Zikula\UsersModule\Form\Type\ConfigType\ConfigType' shared autowired service.
     *
     * @return \Zikula\UsersModule\Form\Type\ConfigType\ConfigType
     */
    protected function getConfigType10Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Form/Type/ConfigType/ConfigType.php';

        return $this->privates['Zikula\\UsersModule\\Form\\Type\\ConfigType\\ConfigType'] = new \Zikula\UsersModule\Form\Type\ConfigType\ConfigType();
    }

    /**
     * Gets the private 'Zikula\UsersModule\Form\Type\DefaultLoginType' shared autowired service.
     *
     * @return \Zikula\UsersModule\Form\Type\DefaultLoginType
     */
    protected function getDefaultLoginTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Form/Type/DefaultLoginType.php';

        return $this->privates['Zikula\\UsersModule\\Form\\Type\\DefaultLoginType'] = new \Zikula\UsersModule\Form\Type\DefaultLoginType();
    }

    /**
     * Gets the private 'Zikula\UsersModule\Form\Type\DeleteConfirmationType' shared autowired service.
     *
     * @return \Zikula\UsersModule\Form\Type\DeleteConfirmationType
     */
    protected function getDeleteConfirmationTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Form/Type/DeleteConfirmationType.php';

        return $this->privates['Zikula\\UsersModule\\Form\\Type\\DeleteConfirmationType'] = new \Zikula\UsersModule\Form\Type\DeleteConfirmationType();
    }

    /**
     * Gets the private 'Zikula\UsersModule\Form\Type\DeleteType' shared autowired service.
     *
     * @return \Zikula\UsersModule\Form\Type\DeleteType
     */
    protected function getDeleteTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Form/Type/DeleteType.php';

        return $this->privates['Zikula\\UsersModule\\Form\\Type\\DeleteType'] = new \Zikula\UsersModule\Form\Type\DeleteType();
    }

    /**
     * Gets the private 'Zikula\UsersModule\Form\Type\ExportUsersType' shared autowired service.
     *
     * @return \Zikula\UsersModule\Form\Type\ExportUsersType
     */
    protected function getExportUsersTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Form/Type/ExportUsersType.php';

        return $this->privates['Zikula\\UsersModule\\Form\\Type\\ExportUsersType'] = new \Zikula\UsersModule\Form\Type\ExportUsersType();
    }

    /**
     * Gets the private 'Zikula\UsersModule\Form\Type\MailType' shared autowired service.
     *
     * @return \Zikula\UsersModule\Form\Type\MailType
     */
    protected function getMailTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Form/Type/MailType.php';

        return $this->privates['Zikula\\UsersModule\\Form\\Type\\MailType'] = new \Zikula\UsersModule\Form\Type\MailType();
    }

    /**
     * Gets the private 'Zikula\UsersModule\Form\Type\RegistrationType\ApproveRegistrationConfirmationType' shared autowired service.
     *
     * @return \Zikula\UsersModule\Form\Type\RegistrationType\ApproveRegistrationConfirmationType
     */
    protected function getApproveRegistrationConfirmationTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Form/Type/RegistrationType/ApproveRegistrationConfirmationType.php';

        return $this->privates['Zikula\\UsersModule\\Form\\Type\\RegistrationType\\ApproveRegistrationConfirmationType'] = new \Zikula\UsersModule\Form\Type\RegistrationType\ApproveRegistrationConfirmationType();
    }

    /**
     * Gets the private 'Zikula\UsersModule\Form\Type\RegistrationType\DefaultRegistrationType' shared autowired service.
     *
     * @return \Zikula\UsersModule\Form\Type\RegistrationType\DefaultRegistrationType
     */
    protected function getDefaultRegistrationTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Form/Type/RegistrationType/DefaultRegistrationType.php';

        return $this->privates['Zikula\\UsersModule\\Form\\Type\\RegistrationType\\DefaultRegistrationType'] = new \Zikula\UsersModule\Form\Type\RegistrationType\DefaultRegistrationType();
    }

    /**
     * Gets the private 'Zikula\UsersModule\Form\Type\SearchUserType' shared autowired service.
     *
     * @return \Zikula\UsersModule\Form\Type\SearchUserType
     */
    protected function getSearchUserTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Form/Type/SearchUserType.php';

        return $this->privates['Zikula\\UsersModule\\Form\\Type\\SearchUserType'] = new \Zikula\UsersModule\Form\Type\SearchUserType();
    }

    /**
     * Gets the private 'Zikula\UsersModule\Form\Type\UserLiveSearchType' shared autowired service.
     *
     * @return \Zikula\UsersModule\Form\Type\UserLiveSearchType
     */
    protected function getUserLiveSearchTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Form/Type/UserLiveSearchType.php';

        return $this->privates['Zikula\\UsersModule\\Form\\Type\\UserLiveSearchType'] = new \Zikula\UsersModule\Form\Type\UserLiveSearchType(($this->services['Zikula\\UsersModule\\Entity\\Repository\\UserRepository'] ?? $this->getUserRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\UsersModule\Helper\AccessHelper' shared autowired service.
     *
     * @return \Zikula\UsersModule\Helper\AccessHelper
     */
    protected function getAccessHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Helper/AccessHelper.php';

        return $this->privates['Zikula\\UsersModule\\Helper\\AccessHelper'] = new \Zikula\UsersModule\Helper\AccessHelper(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['Zikula\\UsersModule\\Entity\\Repository\\UserRepository'] ?? $this->getUserRepositoryService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()));
    }

    /**
     * Gets the private 'Zikula\UsersModule\Helper\AdministrationActionsHelper' shared autowired service.
     *
     * @return \Zikula\UsersModule\Helper\AdministrationActionsHelper
     */
    protected function getAdministrationActionsHelper2Service($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Helper/AdministrationActionsHelper.php';

        return $this->privates['Zikula\\UsersModule\\Helper\\AdministrationActionsHelper'] = new \Zikula\UsersModule\Helper\AdministrationActionsHelper(($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['router'] ?? $this->getRouterService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()));
    }

    /**
     * Gets the private 'Zikula\UsersModule\Helper\MailHelper' shared autowired service.
     *
     * @return \Zikula\UsersModule\Helper\MailHelper
     */
    protected function getMailHelper2Service($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Helper/MailHelper.php';

        return $this->privates['Zikula\\UsersModule\\Helper\\MailHelper'] = new \Zikula\UsersModule\Helper\MailHelper(($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['twig'] ?? $this->getTwigService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->privates['Zikula\\MailerModule\\Api\\MailerApi'] ?? $this->getMailerApiService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->privates['Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository'] ?? $this->getAuthenticationMappingRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\UsersModule\Helper\RegistrationHelper' shared autowired service.
     *
     * @return \Zikula\UsersModule\Helper\RegistrationHelper
     */
    protected function getRegistrationHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Helper/RegistrationHelper.php';

        return $this->privates['Zikula\\UsersModule\\Helper\\RegistrationHelper'] = new \Zikula\UsersModule\Helper\RegistrationHelper(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()), ($this->services['Zikula\\UsersModule\\Entity\\Repository\\UserRepository'] ?? $this->getUserRepositoryService()), ($this->services['Zikula\\GroupsModule\\Entity\\Repository\\GroupRepository'] ?? $this->getGroupRepositoryService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\UsersModule\Helper\SearchHelper' shared autowired service.
     *
     * @return \Zikula\UsersModule\Helper\SearchHelper
     */
    protected function getSearchHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/SearchModule/SearchableInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Helper/SearchHelper.php';

        return $this->privates['Zikula\\UsersModule\\Helper\\SearchHelper'] = new \Zikula\UsersModule\Helper\SearchHelper(($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['Zikula\\UsersModule\\Entity\\Repository\\UserRepository'] ?? $this->getUserRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\UsersModule\HookSubscriber\LoginUiHooksSubscriber' shared autowired service.
     *
     * @return \Zikula\UsersModule\HookSubscriber\LoginUiHooksSubscriber
     */
    protected function getLoginUiHooksSubscriberService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/HookInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/HookSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/HookSubscriber/LoginUiHooksSubscriber.php';

        return $this->privates['Zikula\\UsersModule\\HookSubscriber\\LoginUiHooksSubscriber'] = new \Zikula\UsersModule\HookSubscriber\LoginUiHooksSubscriber(($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\UsersModule\HookSubscriber\RegistrationUiHooksSubscriber' shared autowired service.
     *
     * @return \Zikula\UsersModule\HookSubscriber\RegistrationUiHooksSubscriber
     */
    protected function getRegistrationUiHooksSubscriberService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/HookInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/HookSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/HookSubscriber/RegistrationUiHooksSubscriber.php';

        return $this->privates['Zikula\\UsersModule\\HookSubscriber\\RegistrationUiHooksSubscriber'] = new \Zikula\UsersModule\HookSubscriber\RegistrationUiHooksSubscriber(($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\UsersModule\HookSubscriber\UserManagementUiHooksSubscriber' shared autowired service.
     *
     * @return \Zikula\UsersModule\HookSubscriber\UserManagementUiHooksSubscriber
     */
    protected function getUserManagementUiHooksSubscriberService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/HookInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Zikula/HookBundle/HookSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/HookSubscriber/UserManagementUiHooksSubscriber.php';

        return $this->privates['Zikula\\UsersModule\\HookSubscriber\\UserManagementUiHooksSubscriber'] = new \Zikula\UsersModule\HookSubscriber\UserManagementUiHooksSubscriber(($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\UsersModule\Listener\PendingContentListener' shared autowired service.
     *
     * @return \Zikula\UsersModule\Listener\PendingContentListener
     */
    protected function getPendingContentListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Listener/PendingContentListener.php';

        return $this->privates['Zikula\\UsersModule\\Listener\\PendingContentListener'] = new \Zikula\UsersModule\Listener\PendingContentListener(($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\UsersModule\\Entity\\Repository\\UserRepository'] ?? $this->getUserRepositoryService()), ($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\UsersModule\Listener\RegistrationEventsListener' shared autowired service.
     *
     * @return \Zikula\UsersModule\Listener\RegistrationEventsListener
     */
    protected function getRegistrationEventsListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Listener/RegistrationEventsListener.php';

        return $this->privates['Zikula\\UsersModule\\Listener\\RegistrationEventsListener'] = new \Zikula\UsersModule\Listener\RegistrationEventsListener(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->privates['Zikula\\UsersModule\\Helper\\MailHelper'] ?? $this->getMailHelper2Service()));
    }

    /**
     * Gets the private 'Zikula\UsersModule\Listener\UserEventListener' shared autowired service.
     *
     * @return \Zikula\UsersModule\Listener\UserEventListener
     */
    protected function getUserEventListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Listener/UserEventListener.php';

        return $this->privates['Zikula\\UsersModule\\Listener\\UserEventListener'] = new \Zikula\UsersModule\Listener\UserEventListener(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['router'] ?? $this->getRouterService()));
    }

    /**
     * Gets the private 'Zikula\UsersModule\Menu\ExtensionMenu' shared autowired service.
     *
     * @return \Zikula\UsersModule\Menu\ExtensionMenu
     */
    protected function getExtensionMenu14Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/ExtensionMenu/ExtensionMenuInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Menu/ExtensionMenu.php';

        return $this->privates['Zikula\\UsersModule\\Menu\\ExtensionMenu'] = new \Zikula\UsersModule\Menu\ExtensionMenu(($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()), ($this->services['Zikula\\SettingsModule\\Api\\LocaleApi'] ?? $this->getLocaleApiService()));
    }

    /**
     * Gets the private 'Zikula\UsersModule\ProfileModule\IdentityProfileModule' shared autowired service.
     *
     * @return \Zikula\UsersModule\ProfileModule\IdentityProfileModule
     */
    protected function getIdentityProfileModuleService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/ProfileModule/ProfileModuleInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/ProfileModule/IdentityProfileModule.php';

        return $this->privates['Zikula\\UsersModule\\ProfileModule\\IdentityProfileModule'] = new \Zikula\UsersModule\ProfileModule\IdentityProfileModule(($this->services['Zikula\\UsersModule\\Entity\\Repository\\UserRepository'] ?? $this->getUserRepositoryService()), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()));
    }

    /**
     * Gets the private 'Zikula\UsersModule\Validator\Constraints\ValidEmailValidator' shared autowired service.
     *
     * @return \Zikula\UsersModule\Validator\Constraints\ValidEmailValidator
     */
    protected function getValidEmailValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Validator/Constraints/ValidEmailValidator.php';

        return $this->privates['Zikula\\UsersModule\\Validator\\Constraints\\ValidEmailValidator'] = new \Zikula\UsersModule\Validator\Constraints\ValidEmailValidator(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['validator'] ?? $this->getValidatorService()));
    }

    /**
     * Gets the private 'Zikula\UsersModule\Validator\Constraints\ValidUnameValidator' shared autowired service.
     *
     * @return \Zikula\UsersModule\Validator\Constraints\ValidUnameValidator
     */
    protected function getValidUnameValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Validator/Constraints/ValidUnameValidator.php';

        return $this->privates['Zikula\\UsersModule\\Validator\\Constraints\\ValidUnameValidator'] = new \Zikula\UsersModule\Validator\Constraints\ValidUnameValidator(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['validator'] ?? $this->getValidatorService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()));
    }

    /**
     * Gets the private 'Zikula\UsersModule\Validator\Constraints\ValidUserFieldsValidator' shared autowired service.
     *
     * @return \Zikula\UsersModule\Validator\Constraints\ValidUserFieldsValidator
     */
    protected function getValidUserFieldsValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/Validator/Constraints/ValidUserFieldsValidator.php';

        return $this->privates['Zikula\\UsersModule\\Validator\\Constraints\\ValidUserFieldsValidator'] = new \Zikula\UsersModule\Validator\Constraints\ValidUserFieldsValidator(($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\UsersModule\\Entity\\Repository\\UserRepository'] ?? $this->getUserRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\AuthenticationMethod\NativeEitherAuthenticationMethod' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\AuthenticationMethod\NativeEitherAuthenticationMethod
     */
    protected function getNativeEitherAuthenticationMethodService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/AuthenticationMethodInterface/AuthenticationMethodInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/AuthenticationMethodInterface/NonReEntrantAuthenticationMethodInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/AuthenticationMethod/AbstractNativeAuthenticationMethod.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/AuthenticationMethod/NativeEitherAuthenticationMethod.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/ApiInterface/PasswordApiInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/PasswordApi.php';

        return $this->privates['Zikula\\ZAuthModule\\AuthenticationMethod\\NativeEitherAuthenticationMethod'] = new \Zikula\ZAuthModule\AuthenticationMethod\NativeEitherAuthenticationMethod(($this->privates['Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository'] ?? $this->getAuthenticationMappingRepositoryService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['validator'] ?? $this->getValidatorService()), ($this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] ?? ($this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] = new \Zikula\ZAuthModule\Api\PasswordApi())));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\AuthenticationMethod\NativeEmailAuthenticationMethod' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\AuthenticationMethod\NativeEmailAuthenticationMethod
     */
    protected function getNativeEmailAuthenticationMethodService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/AuthenticationMethodInterface/AuthenticationMethodInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/AuthenticationMethodInterface/NonReEntrantAuthenticationMethodInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/AuthenticationMethod/AbstractNativeAuthenticationMethod.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/AuthenticationMethod/NativeEmailAuthenticationMethod.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/ApiInterface/PasswordApiInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/PasswordApi.php';

        return $this->privates['Zikula\\ZAuthModule\\AuthenticationMethod\\NativeEmailAuthenticationMethod'] = new \Zikula\ZAuthModule\AuthenticationMethod\NativeEmailAuthenticationMethod(($this->privates['Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository'] ?? $this->getAuthenticationMappingRepositoryService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['validator'] ?? $this->getValidatorService()), ($this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] ?? ($this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] = new \Zikula\ZAuthModule\Api\PasswordApi())));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\AuthenticationMethod\NativeUnameAuthenticationMethod' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\AuthenticationMethod\NativeUnameAuthenticationMethod
     */
    protected function getNativeUnameAuthenticationMethodService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/AuthenticationMethodInterface/AuthenticationMethodInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/UsersModule/AuthenticationMethodInterface/NonReEntrantAuthenticationMethodInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/AuthenticationMethod/AbstractNativeAuthenticationMethod.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/AuthenticationMethod/NativeUnameAuthenticationMethod.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/ApiInterface/PasswordApiInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/PasswordApi.php';

        return $this->privates['Zikula\\ZAuthModule\\AuthenticationMethod\\NativeUnameAuthenticationMethod'] = new \Zikula\ZAuthModule\AuthenticationMethod\NativeUnameAuthenticationMethod(($this->privates['Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository'] ?? $this->getAuthenticationMappingRepositoryService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['validator'] ?? $this->getValidatorService()), ($this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] ?? ($this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] = new \Zikula\ZAuthModule\Api\PasswordApi())));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Entity\AuthenticationMappingEntity' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Entity\AuthenticationMappingEntity
     */
    protected function getAuthenticationMappingEntityService()
    {
        include_once \dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Doctrine/EntityAccess.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Entity/AuthenticationMappingEntity.php';

        return $this->privates['Zikula\\ZAuthModule\\Entity\\AuthenticationMappingEntity'] = new \Zikula\ZAuthModule\Entity\AuthenticationMappingEntity();
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository
     */
    protected function getAuthenticationMappingRepositoryService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Entity/RepositoryInterface/AuthenticationMappingRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Entity/Repository/AuthenticationMappingRepository.php';

        return $this->privates['Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository'] = new \Zikula\ZAuthModule\Entity\Repository\AuthenticationMappingRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository
     */
    protected function getUserVerificationRepositoryService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Entity/RepositoryInterface/UserVerificationRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Entity/Repository/UserVerificationRepository.php';

        return $this->privates['Zikula\\ZAuthModule\\Entity\\Repository\\UserVerificationRepository'] = new \Zikula\ZAuthModule\Entity\Repository\UserVerificationRepository(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Form\Type\AdminCreatedUserType' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Form\Type\AdminCreatedUserType
     */
    protected function getAdminCreatedUserTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Form/Type/AdminCreatedUserType.php';

        return $this->privates['Zikula\\ZAuthModule\\Form\\Type\\AdminCreatedUserType'] = new \Zikula\ZAuthModule\Form\Type\AdminCreatedUserType(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Form\Type\AdminModifyUserType' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Form\Type\AdminModifyUserType
     */
    protected function getAdminModifyUserType2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Form/Type/AdminModifyUserType.php';

        return $this->privates['Zikula\\ZAuthModule\\Form\\Type\\AdminModifyUserType'] = new \Zikula\ZAuthModule\Form\Type\AdminModifyUserType();
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Form\Type\ChangeEmailType' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Form\Type\ChangeEmailType
     */
    protected function getChangeEmailTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Form/Type/ChangeEmailType.php';

        return $this->privates['Zikula\\ZAuthModule\\Form\\Type\\ChangeEmailType'] = new \Zikula\ZAuthModule\Form\Type\ChangeEmailType();
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Form\Type\ChangePasswordType' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Form\Type\ChangePasswordType
     */
    protected function getChangePasswordTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Form/Type/ChangePasswordType.php';

        return $this->privates['Zikula\\ZAuthModule\\Form\\Type\\ChangePasswordType'] = new \Zikula\ZAuthModule\Form\Type\ChangePasswordType();
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Form\Type\ConfigType' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Form\Type\ConfigType
     */
    protected function getConfigType11Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Form/Type/ConfigType.php';

        return $this->privates['Zikula\\ZAuthModule\\Form\\Type\\ConfigType'] = new \Zikula\ZAuthModule\Form\Type\ConfigType();
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Form\Type\EitherLoginType' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Form\Type\EitherLoginType
     */
    protected function getEitherLoginTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Form/Type/EitherLoginType.php';

        return $this->privates['Zikula\\ZAuthModule\\Form\\Type\\EitherLoginType'] = new \Zikula\ZAuthModule\Form\Type\EitherLoginType();
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Form\Type\EmailLoginType' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Form\Type\EmailLoginType
     */
    protected function getEmailLoginTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Form/Type/EmailLoginType.php';

        return $this->privates['Zikula\\ZAuthModule\\Form\\Type\\EmailLoginType'] = new \Zikula\ZAuthModule\Form\Type\EmailLoginType();
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Form\Type\ImportUserType' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Form\Type\ImportUserType
     */
    protected function getImportUserTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Form/Type/ImportUserType.php';

        return $this->privates['Zikula\\ZAuthModule\\Form\\Type\\ImportUserType'] = new \Zikula\ZAuthModule\Form\Type\ImportUserType();
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Form\Type\LostPasswordType' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Form\Type\LostPasswordType
     */
    protected function getLostPasswordTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Form/Type/LostPasswordType.php';

        return $this->privates['Zikula\\ZAuthModule\\Form\\Type\\LostPasswordType'] = new \Zikula\ZAuthModule\Form\Type\LostPasswordType();
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Form\Type\LostUserNameType' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Form\Type\LostUserNameType
     */
    protected function getLostUserNameTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Form/Type/LostUserNameType.php';

        return $this->privates['Zikula\\ZAuthModule\\Form\\Type\\LostUserNameType'] = new \Zikula\ZAuthModule\Form\Type\LostUserNameType();
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Form\Type\RegistrationType' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Form\Type\RegistrationType
     */
    protected function getRegistrationTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Form/Type/RegistrationType.php';

        return $this->privates['Zikula\\ZAuthModule\\Form\\Type\\RegistrationType'] = new \Zikula\ZAuthModule\Form\Type\RegistrationType(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Form\Type\SendVerificationConfirmationType' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Form\Type\SendVerificationConfirmationType
     */
    protected function getSendVerificationConfirmationTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Form/Type/SendVerificationConfirmationType.php';

        return $this->privates['Zikula\\ZAuthModule\\Form\\Type\\SendVerificationConfirmationType'] = new \Zikula\ZAuthModule\Form\Type\SendVerificationConfirmationType();
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Form\Type\TogglePasswordConfirmationType' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Form\Type\TogglePasswordConfirmationType
     */
    protected function getTogglePasswordConfirmationTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Form/Type/TogglePasswordConfirmationType.php';

        return $this->privates['Zikula\\ZAuthModule\\Form\\Type\\TogglePasswordConfirmationType'] = new \Zikula\ZAuthModule\Form\Type\TogglePasswordConfirmationType();
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Form\Type\UnameLoginType' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Form\Type\UnameLoginType
     */
    protected function getUnameLoginTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Form/Type/UnameLoginType.php';

        return $this->privates['Zikula\\ZAuthModule\\Form\\Type\\UnameLoginType'] = new \Zikula\ZAuthModule\Form\Type\UnameLoginType();
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Form\Type\VerifyRegistrationType' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Form\Type\VerifyRegistrationType
     */
    protected function getVerifyRegistrationTypeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Form/Type/VerifyRegistrationType.php';

        return $this->privates['Zikula\\ZAuthModule\\Form\\Type\\VerifyRegistrationType'] = new \Zikula\ZAuthModule\Form\Type\VerifyRegistrationType();
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Helper\AdministrationActionsHelper' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Helper\AdministrationActionsHelper
     */
    protected function getAdministrationActionsHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Helper/AdministrationActionsHelper.php';

        return $this->privates['Zikula\\ZAuthModule\\Helper\\AdministrationActionsHelper'] = new \Zikula\ZAuthModule\Helper\AdministrationActionsHelper(($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['router'] ?? $this->getRouterService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->privates['Zikula\\ZAuthModule\\Entity\\Repository\\UserVerificationRepository'] ?? $this->getUserVerificationRepositoryService()), ($this->services['Zikula\\UsersModule\\Entity\\Repository\\UserRepository'] ?? $this->getUserRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Helper\FileIOHelper' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Helper\FileIOHelper
     */
    protected function getFileIOHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Helper/FileIOHelper.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/ApiInterface/PasswordApiInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/PasswordApi.php';

        return $this->privates['Zikula\\ZAuthModule\\Helper\\FileIOHelper'] = new \Zikula\ZAuthModule\Helper\FileIOHelper(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['validator'] ?? $this->getValidatorService()), ($this->services['doctrine.orm.default_entity_manager'] ?? $this->getDoctrine_Orm_DefaultEntityManagerService()), ($this->privates['Zikula\\ZAuthModule\\Helper\\MailHelper'] ?? $this->getMailHelperService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()), ($this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] ?? ($this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] = new \Zikula\ZAuthModule\Api\PasswordApi())), ($this->services['Zikula\\GroupsModule\\Entity\\Repository\\GroupRepository'] ?? $this->getGroupRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Helper\LostPasswordVerificationHelper' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Helper\LostPasswordVerificationHelper
     */
    protected function getLostPasswordVerificationHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Helper/LostPasswordVerificationHelper.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/ApiInterface/PasswordApiInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/PasswordApi.php';

        return $this->privates['Zikula\\ZAuthModule\\Helper\\LostPasswordVerificationHelper'] = new \Zikula\ZAuthModule\Helper\LostPasswordVerificationHelper(($this->privates['Zikula\\ZAuthModule\\Entity\\Repository\\UserVerificationRepository'] ?? $this->getUserVerificationRepositoryService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] ?? ($this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] = new \Zikula\ZAuthModule\Api\PasswordApi())));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Helper\MailHelper' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Helper\MailHelper
     */
    protected function getMailHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Helper/MailHelper.php';

        return $this->privates['Zikula\\ZAuthModule\\Helper\\MailHelper'] = new \Zikula\ZAuthModule\Helper\MailHelper(($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['twig'] ?? $this->getTwigService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->privates['Zikula\\MailerModule\\Api\\MailerApi'] ?? $this->getMailerApiService()));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Helper\RegistrationVerificationHelper' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Helper\RegistrationVerificationHelper
     */
    protected function getRegistrationVerificationHelperService($lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Helper/RegistrationVerificationHelper.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/ApiInterface/PasswordApiInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/PasswordApi.php';

        return $this->privates['Zikula\\ZAuthModule\\Helper\\RegistrationVerificationHelper'] = new \Zikula\ZAuthModule\Helper\RegistrationVerificationHelper(($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->privates['Zikula\\ZAuthModule\\Entity\\Repository\\UserVerificationRepository'] ?? $this->getUserVerificationRepositoryService()), ($this->privates['Zikula\\ZAuthModule\\Helper\\MailHelper'] ?? $this->getMailHelperService()), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()), ($this->services['Zikula\\UsersModule\\Entity\\Repository\\UserRepository'] ?? $this->getUserRepositoryService()), ($this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] ?? ($this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] = new \Zikula\ZAuthModule\Api\PasswordApi())));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Listener\RegistrationListener' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Listener\RegistrationListener
     */
    protected function getRegistrationListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Listener/RegistrationListener.php';

        return $this->privates['Zikula\\ZAuthModule\\Listener\\RegistrationListener'] = new \Zikula\ZAuthModule\Listener\RegistrationListener(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->privates['Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository'] ?? $this->getAuthenticationMappingRepositoryService()), ($this->privates['Zikula\\ZAuthModule\\Helper\\RegistrationVerificationHelper'] ?? $this->getRegistrationVerificationHelperService()));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Listener\UserDeleteListener' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Listener\UserDeleteListener
     */
    protected function getUserDeleteListenerService()
    {
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Listener/UserDeleteListener.php';

        return $this->privates['Zikula\\ZAuthModule\\Listener\\UserDeleteListener'] = new \Zikula\ZAuthModule\Listener\UserDeleteListener(($this->privates['Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository'] ?? $this->getAuthenticationMappingRepositoryService()), ($this->privates['Zikula\\ZAuthModule\\Entity\\Repository\\UserVerificationRepository'] ?? $this->getUserVerificationRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Listener\UserEventListener' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Listener\UserEventListener
     */
    protected function getUserEventListener2Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Listener/UserEventListener.php';

        return $this->privates['Zikula\\ZAuthModule\\Listener\\UserEventListener'] = new \Zikula\ZAuthModule\Listener\UserEventListener(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['router'] ?? $this->getRouterService()), ($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Menu\ExtensionMenu' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Menu\ExtensionMenu
     */
    protected function getExtensionMenu15Service()
    {
        include_once \dirname(__DIR__, 4).'/src/system/MenuModule/ExtensionMenu/ExtensionMenuInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Menu/ExtensionMenu.php';

        return $this->privates['Zikula\\ZAuthModule\\Menu\\ExtensionMenu'] = new \Zikula\ZAuthModule\Menu\ExtensionMenu(($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()), ($this->privates['Zikula\\PermissionsModule\\Api\\PermissionApi'] ?? $this->getPermissionApiService()), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['Zikula\\UsersModule\\Api\\CurrentUserApi'] ?? $this->getCurrentUserApiService()), ($this->privates['Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository'] ?? $this->getAuthenticationMappingRepositoryService()));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Validator\Constraints\ValidAntiSpamAnswerValidator' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Validator\Constraints\ValidAntiSpamAnswerValidator
     */
    protected function getValidAntiSpamAnswerValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Validator/Constraints/ValidAntiSpamAnswerValidator.php';

        return $this->privates['Zikula\\ZAuthModule\\Validator\\Constraints\\ValidAntiSpamAnswerValidator'] = new \Zikula\ZAuthModule\Validator\Constraints\ValidAntiSpamAnswerValidator(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['validator'] ?? $this->getValidatorService()));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Validator\Constraints\ValidEmailValidator' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Validator\Constraints\ValidEmailValidator
     */
    protected function getValidEmailValidator2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Validator/Constraints/ValidEmailValidator.php';

        return $this->privates['Zikula\\ZAuthModule\\Validator\\Constraints\\ValidEmailValidator'] = new \Zikula\ZAuthModule\Validator\Constraints\ValidEmailValidator(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['validator'] ?? $this->getValidatorService()));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Validator\Constraints\ValidPasswordChangeValidator' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Validator\Constraints\ValidPasswordChangeValidator
     */
    protected function getValidPasswordChangeValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Validator/Constraints/ValidPasswordChangeValidator.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/ApiInterface/PasswordApiInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/PasswordApi.php';

        return $this->privates['Zikula\\ZAuthModule\\Validator\\Constraints\\ValidPasswordChangeValidator'] = new \Zikula\ZAuthModule\Validator\Constraints\ValidPasswordChangeValidator(($this->privates['Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository'] ?? $this->getAuthenticationMappingRepositoryService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] ?? ($this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] = new \Zikula\ZAuthModule\Api\PasswordApi())));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Validator\Constraints\ValidPasswordValidator' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Validator\Constraints\ValidPasswordValidator
     */
    protected function getValidPasswordValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Validator/Constraints/ValidPasswordValidator.php';

        return $this->privates['Zikula\\ZAuthModule\\Validator\\Constraints\\ValidPasswordValidator'] = new \Zikula\ZAuthModule\Validator\Constraints\ValidPasswordValidator(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['validator'] ?? $this->getValidatorService()));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Validator\Constraints\ValidRegistrationVerificationValidator' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Validator\Constraints\ValidRegistrationVerificationValidator
     */
    protected function getValidRegistrationVerificationValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Validator/Constraints/ValidRegistrationVerificationValidator.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/ApiInterface/PasswordApiInterface.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Api/PasswordApi.php';

        return $this->privates['Zikula\\ZAuthModule\\Validator\\Constraints\\ValidRegistrationVerificationValidator'] = new \Zikula\ZAuthModule\Validator\Constraints\ValidRegistrationVerificationValidator(($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['Zikula\\UsersModule\\Entity\\Repository\\UserRepository'] ?? $this->getUserRepositoryService()), ($this->privates['Zikula\\ZAuthModule\\Entity\\Repository\\UserVerificationRepository'] ?? $this->getUserVerificationRepositoryService()), ($this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] ?? ($this->services['Zikula\\ZAuthModule\\Api\\PasswordApi'] = new \Zikula\ZAuthModule\Api\PasswordApi())));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Validator\Constraints\ValidUnameValidator' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Validator\Constraints\ValidUnameValidator
     */
    protected function getValidUnameValidator2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Validator/Constraints/ValidUnameValidator.php';

        return $this->privates['Zikula\\ZAuthModule\\Validator\\Constraints\\ValidUnameValidator'] = new \Zikula\ZAuthModule\Validator\Constraints\ValidUnameValidator(($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['validator'] ?? $this->getValidatorService()));
    }

    /**
     * Gets the private 'Zikula\ZAuthModule\Validator\Constraints\ValidUserFieldsValidator' shared autowired service.
     *
     * @return \Zikula\ZAuthModule\Validator\Constraints\ValidUserFieldsValidator
     */
    protected function getValidUserFieldsValidator2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/src/system/ZAuthModule/Validator/Constraints/ValidUserFieldsValidator.php';

        return $this->privates['Zikula\\ZAuthModule\\Validator\\Constraints\\ValidUserFieldsValidator'] = new \Zikula\ZAuthModule\Validator\Constraints\ValidUserFieldsValidator(($this->services['translator'] ?? $this->getTranslatorService()), ($this->privates['Zikula\\ZAuthModule\\Entity\\Repository\\AuthenticationMappingRepository'] ?? $this->getAuthenticationMappingRepositoryService()), ($this->privates['Zikula\\ZAuthModule\\Entity\\Repository\\UserVerificationRepository'] ?? $this->getUserVerificationRepositoryService()));
    }

    /**
     * Gets the private 'annotations.cache' shared service.
     *
     * @return \Symfony\Component\Cache\DoctrineProvider
     */
    protected function getAnnotations_CacheService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Cache/Traits/ProxyTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Cache/Adapter/PhpArrayAdapter.php';

        return new \Symfony\Component\Cache\DoctrineProvider(\Symfony\Component\Cache\Adapter\PhpArrayAdapter::create(($this->targetDir.''.'/annotations.php'), ($this->privates['cache.annotations'] ?? $this->getCache_AnnotationsService())));
    }

    /**
     * Gets the private 'annotations.cache_warmer' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer
     */
    protected function getAnnotations_CacheWarmerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheWarmer/CacheWarmerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/CacheWarmer/AbstractPhpFileCacheWarmer.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/CacheWarmer/AnnotationsCacheWarmer.php';

        return $this->privates['annotations.cache_warmer'] = new \Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer(($this->privates['annotations.reader'] ?? $this->getAnnotations_ReaderService()), ($this->targetDir.''.'/annotations.php'), '#^Symfony\\\\(?:Component\\\\HttpKernel\\\\|Bundle\\\\FrameworkBundle\\\\Controller\\\\(?!.*Controller$))#', true);
    }

    /**
     * Gets the private 'annotations.cached_reader' shared service.
     *
     * @return \Doctrine\Common\Annotations\CachedReader
     */
    protected function getAnnotations_CachedReaderService()
    {
        return $this->privates['annotations.cached_reader'] = new \Doctrine\Common\Annotations\CachedReader(($this->privates['annotations.reader'] ?? $this->getAnnotations_ReaderService()), $this->getAnnotations_CacheService(), true);
    }

    /**
     * Gets the private 'annotations.reader' shared service.
     *
     * @return \Doctrine\Common\Annotations\AnnotationReader
     */
    protected function getAnnotations_ReaderService()
    {
        $this->privates['annotations.reader'] = $instance = new \Doctrine\Common\Annotations\AnnotationReader();

        $a = new \Doctrine\Common\Annotations\AnnotationRegistry();
        $a->registerUniqueLoader('class_exists');

        $instance->addGlobalIgnoredName('required', $a);

        return $instance;
    }

    /**
     * Gets the private 'assets.packages' shared service.
     *
     * @return \Symfony\Component\Asset\Packages
     */
    protected function getAssets_PackagesService()
    {
        return $this->privates['assets.packages'] = new \Symfony\Component\Asset\Packages(new \Symfony\Component\Asset\PathPackage('', new \Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy(), new \Symfony\Component\Asset\Context\RequestStackContext(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), '', false)), []);
    }

    /**
     * Gets the private 'cache.annotations' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getCache_AnnotationsService()
    {
        return $this->privates['cache.annotations'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('NvT4olF2gA', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /**
     * Gets the private 'cache.security_expression_language' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getCache_SecurityExpressionLanguageService()
    {
        return $this->privates['cache.security_expression_language'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('ok3Rw6mO5u', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /**
     * Gets the private 'config_cache_factory' shared service.
     *
     * @return \Symfony\Component\Config\ResourceCheckerConfigCacheFactory
     */
    protected function getConfigCacheFactoryService()
    {
        return $this->privates['config_cache_factory'] = new \Symfony\Component\Config\ResourceCheckerConfigCacheFactory(new RewindableGenerator(function () {
            yield 0 => ($this->privates['dependency_injection.config.container_parameters_resource_checker'] ?? ($this->privates['dependency_injection.config.container_parameters_resource_checker'] = new \Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker($this)));
            yield 1 => ($this->privates['config.resource.self_checking_resource_checker'] ?? ($this->privates['config.resource.self_checking_resource_checker'] = new \Symfony\Component\Config\Resource\SelfCheckingResourceChecker()));
        }, 2));
    }

    /**
     * Gets the private 'console.command.about' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\AboutCommand
     */
    protected function getConsole_Command_AboutService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/AboutCommand.php';

        $this->privates['console.command.about'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\AboutCommand();

        $instance->setName('about');

        return $instance;
    }

    /**
     * Gets the private 'console.command.assets_install' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand
     */
    protected function getConsole_Command_AssetsInstallService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/AssetsInstallCommand.php';

        $this->privates['console.command.assets_install'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand(($this->services['filesystem'] ?? ($this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem())), \dirname(__DIR__, 4));

        $instance->setName('assets:install');

        return $instance;
    }

    /**
     * Gets the private 'console.command.cache_clear' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand
     */
    protected function getConsole_Command_CacheClearService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/CacheClearCommand.php';

        $this->privates['console.command.cache_clear'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand(($this->services['cache_clearer'] ?? $this->getCacheClearer3Service()), ($this->services['filesystem'] ?? ($this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem())));

        $instance->setName('cache:clear');

        return $instance;
    }

    /**
     * Gets the private 'console.command.cache_pool_clear' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand
     */
    protected function getConsole_Command_CachePoolClearService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/CachePoolClearCommand.php';

        $this->privates['console.command.cache_pool_clear'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand(($this->services['cache.global_clearer'] ?? $this->getCache_GlobalClearerService()));

        $instance->setName('cache:pool:clear');

        return $instance;
    }

    /**
     * Gets the private 'console.command.cache_pool_delete' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand
     */
    protected function getConsole_Command_CachePoolDeleteService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/CachePoolDeleteCommand.php';

        $this->privates['console.command.cache_pool_delete'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand(($this->services['cache.global_clearer'] ?? $this->getCache_GlobalClearerService()));

        $instance->setName('cache:pool:delete');

        return $instance;
    }

    /**
     * Gets the private 'console.command.cache_pool_list' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand
     */
    protected function getConsole_Command_CachePoolListService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/CachePoolListCommand.php';

        $this->privates['console.command.cache_pool_list'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand([0 => 'cache.app', 1 => 'cache.system', 2 => 'cache.validator', 3 => 'cache.serializer', 4 => 'cache.annotations', 5 => 'cache.property_info', 6 => 'doctrine.result_cache_pool', 7 => 'doctrine.system_cache_pool', 8 => 'cache.security_expression_language']);

        $instance->setName('cache:pool:list');

        return $instance;
    }

    /**
     * Gets the private 'console.command.cache_pool_prune' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand
     */
    protected function getConsole_Command_CachePoolPruneService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/CachePoolPruneCommand.php';

        $this->privates['console.command.cache_pool_prune'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand(new RewindableGenerator(function () {
            yield 'cache.app' => ($this->services['cache.app'] ?? $this->getCache_AppService());
            yield 'doctrine.result_cache_pool' => ($this->privates['doctrine.result_cache_pool'] ?? $this->getDoctrine_ResultCachePoolService());
        }, 2));

        $instance->setName('cache:pool:prune');

        return $instance;
    }

    /**
     * Gets the private 'console.command.cache_warmup' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand
     */
    protected function getConsole_Command_CacheWarmupService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/CacheWarmupCommand.php';

        $this->privates['console.command.cache_warmup'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand(($this->services['cache_warmer'] ?? $this->getCacheWarmerService()));

        $instance->setName('cache:warmup');

        return $instance;
    }

    /**
     * Gets the private 'console.command.config_debug' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand
     */
    protected function getConsole_Command_ConfigDebugService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/ContainerDebugCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/AbstractConfigCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/ConfigDebugCommand.php';

        $this->privates['console.command.config_debug'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand();

        $instance->setName('debug:config');

        return $instance;
    }

    /**
     * Gets the private 'console.command.config_dump_reference' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand
     */
    protected function getConsole_Command_ConfigDumpReferenceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/ContainerDebugCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/AbstractConfigCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/ConfigDumpReferenceCommand.php';

        $this->privates['console.command.config_dump_reference'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand();

        $instance->setName('config:dump-reference');

        return $instance;
    }

    /**
     * Gets the private 'console.command.container_debug' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand
     */
    protected function getConsole_Command_ContainerDebugService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/ContainerDebugCommand.php';

        $this->privates['console.command.container_debug'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand();

        $instance->setName('debug:container');

        return $instance;
    }

    /**
     * Gets the private 'console.command.container_lint' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand
     */
    protected function getConsole_Command_ContainerLintService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/ContainerLintCommand.php';

        $this->privates['console.command.container_lint'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand();

        $instance->setName('lint:container');

        return $instance;
    }

    /**
     * Gets the private 'console.command.debug_autowiring' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand
     */
    protected function getConsole_Command_DebugAutowiringService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/ContainerDebugCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/DebugAutowiringCommand.php';

        $this->privates['console.command.debug_autowiring'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand(NULL, ($this->privates['debug.file_link_formatter'] ?? ($this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL))));

        $instance->setName('debug:autowiring');

        return $instance;
    }

    /**
     * Gets the private 'console.command.event_dispatcher_debug' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand
     */
    protected function getConsole_Command_EventDispatcherDebugService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/EventDispatcherDebugCommand.php';

        $this->privates['console.command.event_dispatcher_debug'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand(($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));

        $instance->setName('debug:event-dispatcher');

        return $instance;
    }

    /**
     * Gets the private 'console.command.form_debug' shared service.
     *
     * @return \Symfony\Component\Form\Command\DebugCommand
     */
    protected function getConsole_Command_FormDebugService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Command/DebugCommand.php';

        $this->privates['console.command.form_debug'] = $instance = new \Symfony\Component\Form\Command\DebugCommand(($this->privates['form.registry'] ?? $this->getForm_RegistryService()), [0 => 'Symfony\\Component\\Form\\Extension\\Core\\Type', 1 => 'Symfony\\Bridge\\Doctrine\\Form\\Type', 2 => 'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type', 3 => 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type', 4 => 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions', 5 => 'Liip\\ImagineBundle\\Form\\Type', 6 => 'Zikula\\AdminModule\\Form\\Type', 7 => 'Zikula\\BlocksModule\\Block\\Form\\Type', 8 => 'Zikula\\BlocksModule\\Form\\Type', 9 => 'Zikula\\CategoriesModule\\Form\\Type', 10 => 'Zikula\\ExtensionsModule\\Form\\Type', 11 => 'Zikula\\GroupsModule\\Form\\Type', 12 => 'Zikula\\MailerModule\\Form\\Type', 13 => 'Zikula\\MenuModule\\Block\\Form\\Type', 14 => 'Zikula\\MenuModule\\Form\\Type', 15 => 'Zikula\\PermissionsModule\\Form\\Type', 16 => 'Zikula\\RoutesModule\\Form\\Type', 17 => 'Zikula\\RoutesModule\\Form\\Type\\Field', 18 => 'Zikula\\RoutesModule\\Form\\Type\\QuickNavigation', 19 => 'Zikula\\SearchModule\\Block\\Form\\Type', 20 => 'Zikula\\SearchModule\\Form\\Type', 21 => 'Zikula\\SecurityCenterModule\\Form\\Type', 22 => 'Zikula\\SettingsModule\\Form\\Type', 23 => 'Zikula\\ThemeModule\\Form\\Type', 24 => 'Zikula\\UsersModule\\Form\\Type', 25 => 'Zikula\\UsersModule\\Form\\Type\\ConfigType', 26 => 'Zikula\\UsersModule\\Form\\Type\\RegistrationType', 27 => 'Zikula\\ZAuthModule\\Form\\Type'], [0 => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType', 1 => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType', 2 => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType', 3 => 'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType', 4 => 'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\CreateAdminType', 5 => 'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\DbCredsType', 6 => 'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\LocaleType', 7 => 'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\LoginType', 8 => 'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\RequestContextType', 9 => 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DeletionType', 10 => 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicFieldType', 11 => 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\ChoiceFormOptionsArrayType', 12 => 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\DateTimeFormOptionsArrayType', 13 => 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\FormOptionsArrayType', 14 => 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\MoneyFormOptionsArrayType', 15 => 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\RegexibleFormOptionsArrayType', 16 => 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\IconType', 17 => 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\InlineFormDefinitionType', 18 => 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\LocaleType', 19 => 'Liip\\ImagineBundle\\Form\\Type\\ImageType', 20 => 'Zikula\\AdminModule\\Form\\Type\\AdminCategoryType', 21 => 'Zikula\\AdminModule\\Form\\Type\\ConfigType', 22 => 'Zikula\\BlocksModule\\Block\\Form\\Type\\FincludeBlockType', 23 => 'Zikula\\BlocksModule\\Block\\Form\\Type\\HtmlBlockType', 24 => 'Zikula\\BlocksModule\\Block\\Form\\Type\\TextBlockType', 25 => 'Zikula\\BlocksModule\\Block\\Form\\Type\\XsltBlockType', 26 => 'Zikula\\BlocksModule\\Form\\Type\\AdminViewFilterType', 27 => 'Zikula\\BlocksModule\\Form\\Type\\BlockFilterType', 28 => 'Zikula\\BlocksModule\\Form\\Type\\BlockPositionType', 29 => 'Zikula\\BlocksModule\\Form\\Type\\BlockType', 30 => 'Zikula\\BlocksModule\\Form\\Type\\ConfigType', 31 => 'Zikula\\BlocksModule\\Form\\Type\\NewBlockType', 32 => 'Zikula\\CategoriesModule\\Form\\Type\\CategoriesType', 33 => 'Zikula\\CategoriesModule\\Form\\Type\\CategoryAttributeType', 34 => 'Zikula\\CategoriesModule\\Form\\Type\\CategoryRegistryType', 35 => 'Zikula\\CategoriesModule\\Form\\Type\\CategoryTreeType', 36 => 'Zikula\\CategoriesModule\\Form\\Type\\CategoryType', 37 => 'Zikula\\ExtensionsModule\\Form\\Type\\ConfigType', 38 => 'Zikula\\ExtensionsModule\\Form\\Type\\ExtensionInstallType', 39 => 'Zikula\\ExtensionsModule\\Form\\Type\\ExtensionModifyType', 40 => 'Zikula\\GroupsModule\\Form\\Type\\ConfigType', 41 => 'Zikula\\GroupsModule\\Form\\Type\\CreateGroupType', 42 => 'Zikula\\GroupsModule\\Form\\Type\\EditGroupType', 43 => 'Zikula\\GroupsModule\\Form\\Type\\ManageApplicationType', 44 => 'Zikula\\GroupsModule\\Form\\Type\\MembershipApplicationType', 45 => 'Zikula\\GroupsModule\\Form\\Type\\RemoveUserType', 46 => 'Zikula\\MailerModule\\Form\\Type\\ConfigType', 47 => 'Zikula\\MailerModule\\Form\\Type\\TestType', 48 => 'Zikula\\MenuModule\\Block\\Form\\Type\\MenuType', 49 => 'Zikula\\MenuModule\\Form\\Type\\DeleteMenuItemType', 50 => 'Zikula\\MenuModule\\Form\\Type\\HiddenMenuItemType', 51 => 'Zikula\\MenuModule\\Form\\Type\\KeyValuePairType', 52 => 'Zikula\\MenuModule\\Form\\Type\\MenuItemType', 53 => 'Zikula\\PermissionsModule\\Form\\Type\\ConfigType', 54 => 'Zikula\\PermissionsModule\\Form\\Type\\FilterListType', 55 => 'Zikula\\PermissionsModule\\Form\\Type\\PermissionCheckType', 56 => 'Zikula\\PermissionsModule\\Form\\Type\\PermissionType', 57 => 'Zikula\\RoutesModule\\Form\\Type\\ConfigType', 58 => 'Zikula\\RoutesModule\\Form\\Type\\Field\\ArrayType', 59 => 'Zikula\\RoutesModule\\Form\\Type\\Field\\MultiListType', 60 => 'Zikula\\RoutesModule\\Form\\Type\\QuickNavigation\\RouteQuickNavType', 61 => 'Zikula\\RoutesModule\\Form\\Type\\RouteType', 62 => 'Zikula\\SearchModule\\Block\\Form\\Type\\SearchBlockType', 63 => 'Zikula\\SearchModule\\Form\\Type\\AmendableModuleSearchType', 64 => 'Zikula\\SearchModule\\Form\\Type\\ConfigType', 65 => 'Zikula\\SearchModule\\Form\\Type\\SearchType', 66 => 'Zikula\\SecurityCenterModule\\Form\\Type\\ConfigType', 67 => 'Zikula\\SecurityCenterModule\\Form\\Type\\IdsLogExportType', 68 => 'Zikula\\SecurityCenterModule\\Form\\Type\\IdsLogFilterType', 69 => 'Zikula\\SettingsModule\\Form\\Type\\LocaleSettingsType', 70 => 'Zikula\\SettingsModule\\Form\\Type\\MainSettingsType', 71 => 'Zikula\\ThemeModule\\Form\\Type\\DeleteThemeType', 72 => 'Zikula\\ThemeModule\\Form\\Type\\SetDefaultThemeType', 73 => 'Zikula\\UsersModule\\Form\\Type\\AdminModifyUserType', 74 => 'Zikula\\UsersModule\\Form\\Type\\ChangeLanguageType', 75 => 'Zikula\\UsersModule\\Form\\Type\\ConfigType\\AuthenticationMethodsType', 76 => 'Zikula\\UsersModule\\Form\\Type\\ConfigType\\ConfigType', 77 => 'Zikula\\UsersModule\\Form\\Type\\DefaultLoginType', 78 => 'Zikula\\UsersModule\\Form\\Type\\DeleteConfirmationType', 79 => 'Zikula\\UsersModule\\Form\\Type\\DeleteType', 80 => 'Zikula\\UsersModule\\Form\\Type\\ExportUsersType', 81 => 'Zikula\\UsersModule\\Form\\Type\\MailType', 82 => 'Zikula\\UsersModule\\Form\\Type\\RegistrationType\\ApproveRegistrationConfirmationType', 83 => 'Zikula\\UsersModule\\Form\\Type\\RegistrationType\\DefaultRegistrationType', 84 => 'Zikula\\UsersModule\\Form\\Type\\SearchUserType', 85 => 'Zikula\\UsersModule\\Form\\Type\\UserLiveSearchType', 86 => 'Zikula\\ZAuthModule\\Form\\Type\\AdminCreatedUserType', 87 => 'Zikula\\ZAuthModule\\Form\\Type\\AdminModifyUserType', 88 => 'Zikula\\ZAuthModule\\Form\\Type\\ChangeEmailType', 89 => 'Zikula\\ZAuthModule\\Form\\Type\\ChangePasswordType', 90 => 'Zikula\\ZAuthModule\\Form\\Type\\ConfigType', 91 => 'Zikula\\ZAuthModule\\Form\\Type\\EitherLoginType', 92 => 'Zikula\\ZAuthModule\\Form\\Type\\EmailLoginType', 93 => 'Zikula\\ZAuthModule\\Form\\Type\\ImportUserType', 94 => 'Zikula\\ZAuthModule\\Form\\Type\\LostPasswordType', 95 => 'Zikula\\ZAuthModule\\Form\\Type\\LostUserNameType', 96 => 'Zikula\\ZAuthModule\\Form\\Type\\RegistrationType', 97 => 'Zikula\\ZAuthModule\\Form\\Type\\SendVerificationConfirmationType', 98 => 'Zikula\\ZAuthModule\\Form\\Type\\TogglePasswordConfirmationType', 99 => 'Zikula\\ZAuthModule\\Form\\Type\\UnameLoginType', 100 => 'Zikula\\ZAuthModule\\Form\\Type\\VerifyRegistrationType'], [0 => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\TransformationFailureExtension', 1 => 'Symfony\\Component\\Form\\Extension\\HttpFoundation\\Type\\FormTypeHttpFoundationExtension', 2 => 'Symfony\\Component\\Form\\Extension\\Validator\\Type\\FormTypeValidatorExtension', 3 => 'Symfony\\Component\\Form\\Extension\\Validator\\Type\\RepeatedTypeValidatorExtension', 4 => 'Symfony\\Component\\Form\\Extension\\Validator\\Type\\SubmitTypeValidatorExtension', 5 => 'Symfony\\Component\\Form\\Extension\\Validator\\Type\\UploadValidatorExtension', 6 => 'Symfony\\Component\\Form\\Extension\\Csrf\\Type\\FormTypeCsrfExtension', 7 => 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Extension\\ButtonTypeIconExtension', 8 => 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Extension\\FormTypeHelpExtension', 9 => 'Matthias\\SymfonyConsoleForm\\Form\\ConsoleFormTypeExtension'], [0 => 'Symfony\\Component\\Form\\Extension\\Validator\\ValidatorTypeGuesser', 1 => 'Symfony\\Bridge\\Doctrine\\Form\\DoctrineOrmTypeGuesser'], ($this->privates['debug.file_link_formatter'] ?? ($this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL))));

        $instance->setName('debug:form');

        return $instance;
    }

    /**
     * Gets the private 'console.command.router_debug' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand
     */
    protected function getConsole_Command_RouterDebugService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/RouterDebugCommand.php';

        $this->privates['console.command.router_debug'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand(($this->services['router'] ?? $this->getRouterService()), ($this->privates['debug.file_link_formatter'] ?? ($this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL))));

        $instance->setName('debug:router');

        return $instance;
    }

    /**
     * Gets the private 'console.command.router_match' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand
     */
    protected function getConsole_Command_RouterMatchService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/RouterMatchCommand.php';

        $this->privates['console.command.router_match'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand(($this->services['router'] ?? $this->getRouterService()));

        $instance->setName('router:match');

        return $instance;
    }

    /**
     * Gets the private 'console.command.secrets_decrypt_to_local' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand
     */
    protected function getConsole_Command_SecretsDecryptToLocalService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/SecretsDecryptToLocalCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Secrets/AbstractVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/EnvVarLoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Secrets/SodiumVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Secrets/DotenvVault.php';

        $this->privates['console.command.secrets_decrypt_to_local'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand(($this->privates['secrets.vault'] ?? ($this->privates['secrets.vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault((\dirname(__DIR__, 4).'/config/secrets/prod'), $this->getEnv('base64:default::SYMFONY_DECRYPTION_SECRET')))), ($this->privates['secrets.local_vault'] ?? ($this->privates['secrets.local_vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault((\dirname(__DIR__, 4).'/.env.prod.local')))));

        $instance->setName('secrets:decrypt-to-local');

        return $instance;
    }

    /**
     * Gets the private 'console.command.secrets_encrypt_from_local' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand
     */
    protected function getConsole_Command_SecretsEncryptFromLocalService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/SecretsEncryptFromLocalCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Secrets/AbstractVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/EnvVarLoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Secrets/SodiumVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Secrets/DotenvVault.php';

        $this->privates['console.command.secrets_encrypt_from_local'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand(($this->privates['secrets.vault'] ?? ($this->privates['secrets.vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault((\dirname(__DIR__, 4).'/config/secrets/prod'), $this->getEnv('base64:default::SYMFONY_DECRYPTION_SECRET')))), ($this->privates['secrets.local_vault'] ?? ($this->privates['secrets.local_vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault((\dirname(__DIR__, 4).'/.env.prod.local')))));

        $instance->setName('secrets:encrypt-from-local');

        return $instance;
    }

    /**
     * Gets the private 'console.command.secrets_generate_key' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand
     */
    protected function getConsole_Command_SecretsGenerateKeyService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/SecretsGenerateKeysCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Secrets/AbstractVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/EnvVarLoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Secrets/SodiumVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Secrets/DotenvVault.php';

        $this->privates['console.command.secrets_generate_key'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand(($this->privates['secrets.vault'] ?? ($this->privates['secrets.vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault((\dirname(__DIR__, 4).'/config/secrets/prod'), $this->getEnv('base64:default::SYMFONY_DECRYPTION_SECRET')))), ($this->privates['secrets.local_vault'] ?? ($this->privates['secrets.local_vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault((\dirname(__DIR__, 4).'/.env.prod.local')))));

        $instance->setName('secrets:generate-keys');

        return $instance;
    }

    /**
     * Gets the private 'console.command.secrets_list' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand
     */
    protected function getConsole_Command_SecretsListService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/SecretsListCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Secrets/AbstractVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/EnvVarLoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Secrets/SodiumVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Secrets/DotenvVault.php';

        $this->privates['console.command.secrets_list'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand(($this->privates['secrets.vault'] ?? ($this->privates['secrets.vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault((\dirname(__DIR__, 4).'/config/secrets/prod'), $this->getEnv('base64:default::SYMFONY_DECRYPTION_SECRET')))), ($this->privates['secrets.local_vault'] ?? ($this->privates['secrets.local_vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault((\dirname(__DIR__, 4).'/.env.prod.local')))));

        $instance->setName('secrets:list');

        return $instance;
    }

    /**
     * Gets the private 'console.command.secrets_remove' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand
     */
    protected function getConsole_Command_SecretsRemoveService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/SecretsRemoveCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Secrets/AbstractVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/EnvVarLoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Secrets/SodiumVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Secrets/DotenvVault.php';

        $this->privates['console.command.secrets_remove'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand(($this->privates['secrets.vault'] ?? ($this->privates['secrets.vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault((\dirname(__DIR__, 4).'/config/secrets/prod'), $this->getEnv('base64:default::SYMFONY_DECRYPTION_SECRET')))), ($this->privates['secrets.local_vault'] ?? ($this->privates['secrets.local_vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault((\dirname(__DIR__, 4).'/.env.prod.local')))));

        $instance->setName('secrets:remove');

        return $instance;
    }

    /**
     * Gets the private 'console.command.secrets_set' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand
     */
    protected function getConsole_Command_SecretsSetService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/SecretsSetCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Secrets/AbstractVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/EnvVarLoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Secrets/SodiumVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Secrets/DotenvVault.php';

        $this->privates['console.command.secrets_set'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand(($this->privates['secrets.vault'] ?? ($this->privates['secrets.vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault((\dirname(__DIR__, 4).'/config/secrets/prod'), $this->getEnv('base64:default::SYMFONY_DECRYPTION_SECRET')))), ($this->privates['secrets.local_vault'] ?? ($this->privates['secrets.local_vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault((\dirname(__DIR__, 4).'/.env.prod.local')))));

        $instance->setName('secrets:set');

        return $instance;
    }

    /**
     * Gets the private 'console.command.translation_debug' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand
     */
    protected function getConsole_Command_TranslationDebugService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/TranslationDebugCommand.php';

        $this->privates['console.command.translation_debug'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand(($this->services['translator'] ?? $this->getTranslatorService()), ($this->privates['translation.reader'] ?? $this->getTranslation_ReaderService()), ($this->privates['translation.extractor'] ?? $this->getTranslation_ExtractorService()), (\dirname(__DIR__, 4).'/translations'), (\dirname(__DIR__, 4).'/templates'), [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations')], [0 => (\dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Email'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form'), 3 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/LocaleAwareListener.php'), 4 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/TranslationDebugCommand.php'), 5 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/FileType.php'), 6 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/TransformationFailureExtension.php'), 7 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Validator/Type/UploadValidatorExtension.php'), 8 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Csrf/Type/FormTypeCsrfExtension.php'), 9 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ValidatorBuilder.php'), 10 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/CacheWarmer/TranslationsCacheWarmer.php'), 11 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Routing/RouteLoader.php'), 12 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/TranslationExtension.php'), 13 => (\dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Twig/Extension/CoreExtension.php'), 14 => (\dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Twig/Extension/SessionExtension.php'), 15 => (\dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Twig/TranslationExtension.php'), 16 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Twig/Extension/ExtensionsExtension.php'), 17 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Twig/Extension/ModVarExtension.php'), 18 => (\dirname(__DIR__, 4).'/src/system/PermissionsModule/Twig/Extension/PermissionsExtension.php'), 19 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Twig/TwigExtension.php'), 20 => (\dirname(__DIR__, 4).'/src/system/ThemeModule/Twig/Extension/PageVarExtension.php'), 21 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Twig/Extension/MessageExtension.php'), 22 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Twig/Extension/ProfileExtension.php'), 23 => (\dirname(__DIR__, 4).'/src/Zikula/CoreBundle/EventListener/ExceptionListener.php'), 24 => (\dirname(__DIR__, 4).'/src/Zikula/CoreBundle/EventListener/SiteOffVetoLoginListener.php'), 25 => (\dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Helper/BundlesSchemaHelper.php'), 26 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Command/Install/FinishCommand.php'), 27 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Command/Install/StartCommand.php'), 28 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Command/UpgradeCommand.php'), 29 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Controller/DocController.php'), 30 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Helper/BlockHelper.php'), 31 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Helper/ControllerHelper.php'), 32 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Helper/ModuleHelper.php'), 33 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Stage/Upgrade/AjaxUpgraderStage.php'), 34 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Validator/Constraints/AuthenticateAdminLoginValidator.php'), 35 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Validator/Constraints/ValidPdoConnectionValidator.php'), 36 => (\dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/Form/Type/DynamicFieldType.php'), 37 => (\dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/Form/Type/InlineFormDefinitionType.php'), 38 => (\dirname(__DIR__, 4).'/src/Zikula/HookBundle/Listener/HooksListener.php'), 39 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Translation/ZikulaPatternGenerationStrategy.php'), 40 => (\dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/TextTransformer.php'), 41 => (\dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/NumberTransformer.php'), 42 => (\dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/DateTimeTransformer.php'), 43 => (\dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/PasswordTransformer.php'), 44 => (\dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/ChoiceTransformer.php'), 45 => (\dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/CheckboxTransformer.php'), 46 => (\dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Service/CacheClearer.php'), 47 => (\dirname(__DIR__, 4).'/vendor/willdurand/js-translation-bundle/Controller/Controller.php'), 48 => (\dirname(__DIR__, 4).'/src/system/AdminModule/Block/AdminnavBlock.php'), 49 => (\dirname(__DIR__, 4).'/src/system/AdminModule/Controller/AdminController.php'), 50 => (\dirname(__DIR__, 4).'/src/system/AdminModule/Controller/AdminInterfaceController.php'), 51 => (\dirname(__DIR__, 4).'/src/system/AdminModule/Controller/AjaxController.php'), 52 => (\dirname(__DIR__, 4).'/src/system/AdminModule/Controller/ConfigController.php'), 53 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Api/BlockFactoryApi.php'), 54 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Block/FincludeBlock.php'), 55 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Block/Form/Type/FincludeBlockType.php'), 56 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Block/Form/Type/XsltBlockType.php'), 57 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Block/HtmlBlock.php'), 58 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Block/PendingContentBlock.php'), 59 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Block/TextBlock.php'), 60 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Block/XsltBlock.php'), 61 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Controller/AdminController.php'), 62 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Controller/BlockController.php'), 63 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Controller/ConfigController.php'), 64 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Controller/PlacementController.php'), 65 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Controller/PositionController.php'), 66 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/HookSubscriber/UiHooksSubscriber.php'), 67 => (\dirname(__DIR__, 4).'/src/system/CategoriesModule/Controller/CategoryController.php'), 68 => (\dirname(__DIR__, 4).'/src/system/CategoriesModule/Controller/NodeController.php'), 69 => (\dirname(__DIR__, 4).'/src/system/CategoriesModule/Controller/RegistryController.php'), 70 => (\dirname(__DIR__, 4).'/src/system/CategoriesModule/Form/Type/CategoryRegistryType.php'), 71 => (\dirname(__DIR__, 4).'/src/system/CategoriesModule/Form/Type/CategoryTreeType.php'), 72 => (\dirname(__DIR__, 4).'/src/system/CategoriesModule/Form/Type/CategoryType.php'), 73 => (\dirname(__DIR__, 4).'/src/system/CategoriesModule/Validator/Constraints/UniqueNameForPositionValidator.php'), 74 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Controller/ConfigController.php'), 75 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Controller/ExtensionsInterfaceController.php'), 76 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Controller/ModuleController.php'), 77 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Controller/ServicesController.php'), 78 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Helper/BundleSyncHelper.php'), 79 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Helper/ComposerValidationHelper.php'), 80 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Helper/ExtensionHelper.php'), 81 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Helper/ExtensionStateHelper.php'), 82 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Listener/ExtensionServicesListener.php'), 83 => (\dirname(__DIR__, 4).'/src/system/GroupsModule/Controller/ApplicationController.php'), 84 => (\dirname(__DIR__, 4).'/src/system/GroupsModule/Controller/ConfigController.php'), 85 => (\dirname(__DIR__, 4).'/src/system/GroupsModule/Controller/GroupController.php'), 86 => (\dirname(__DIR__, 4).'/src/system/GroupsModule/Controller/MembershipController.php'), 87 => (\dirname(__DIR__, 4).'/src/system/GroupsModule/Entity/Repository/GroupRepository.php'), 88 => (\dirname(__DIR__, 4).'/src/system/GroupsModule/Helper/CommonHelper.php'), 89 => (\dirname(__DIR__, 4).'/src/system/GroupsModule/Listener/GroupEventListener.php'), 90 => (\dirname(__DIR__, 4).'/src/system/GroupsModule/Validator/Constraints/ValidGroupNameValidator.php'), 91 => (\dirname(__DIR__, 4).'/src/system/MailerModule/Api/MailerApi.php'), 92 => (\dirname(__DIR__, 4).'/src/system/MailerModule/Controller/ConfigController.php'), 93 => (\dirname(__DIR__, 4).'/src/system/MailerModule/HookSubscriber/UiHooksSubscriber.php'), 94 => (\dirname(__DIR__, 4).'/src/system/MenuModule/Block/Form/Type/MenuType.php'), 95 => (\dirname(__DIR__, 4).'/src/system/MenuModule/Block/MenuBlock.php'), 96 => (\dirname(__DIR__, 4).'/src/system/MenuModule/Controller/ConfigController.php'), 97 => (\dirname(__DIR__, 4).'/src/system/MenuModule/Controller/MenuController.php'), 98 => (\dirname(__DIR__, 4).'/src/system/MenuModule/Controller/NodeController.php'), 99 => (\dirname(__DIR__, 4).'/src/system/MenuModule/Form/EventListener/OptionValidatorListener.php'), 100 => (\dirname(__DIR__, 4).'/src/system/MenuModule/Form/Type/HiddenMenuItemType.php'), 101 => (\dirname(__DIR__, 4).'/src/system/MenuModule/Form/Type/MenuItemType.php'), 102 => (\dirname(__DIR__, 4).'/src/system/MenuModule/Menu/MenuBuilder.php'), 103 => (\dirname(__DIR__, 4).'/src/system/PermissionsModule/Api/PermissionApi.php'), 104 => (\dirname(__DIR__, 4).'/src/system/PermissionsModule/Controller/ConfigController.php'), 105 => (\dirname(__DIR__, 4).'/src/system/PermissionsModule/Controller/PermissionController.php'), 106 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Controller/AjaxController.php'), 107 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Controller/ConfigController.php'), 108 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Controller/RouteController.php'), 109 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Controller/UpdateController.php'), 110 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Form/Handler/Route/EditHandler.php'), 111 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/ControllerHelper.php'), 112 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/EntityDisplayHelper.php'), 113 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/ListEntriesHelper.php'), 114 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/RouteDumperHelper.php'), 115 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/WorkflowHelper.php'), 116 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Listener/UserListener.php'), 117 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Validator/Constraints/ListEntryValidator.php'), 118 => (\dirname(__DIR__, 4).'/src/system/SearchModule/Block/SearchBlock.php'), 119 => (\dirname(__DIR__, 4).'/src/system/SearchModule/Controller/ConfigController.php'), 120 => (\dirname(__DIR__, 4).'/src/system/SearchModule/Controller/SearchController.php'), 121 => (\dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Controller/ConfigController.php'), 122 => (\dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Controller/IdsLogController.php'), 123 => (\dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Form/Type/IdsLogFilterType.php'), 124 => (\dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Helper/PurifierHelper.php'), 125 => (\dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Listener/FilterListener.php'), 126 => (\dirname(__DIR__, 4).'/src/system/SettingsModule/Block/LocaleBlock.php'), 127 => (\dirname(__DIR__, 4).'/src/system/SettingsModule/Controller/SettingsController.php'), 128 => (\dirname(__DIR__, 4).'/src/system/SettingsModule/Form/Type/MainSettingsType.php'), 129 => (\dirname(__DIR__, 4).'/src/system/SettingsModule/Listener/ModuleListener.php'), 130 => (\dirname(__DIR__, 4).'/src/system/ThemeModule/Controller/CombinedAssetController.php'), 131 => (\dirname(__DIR__, 4).'/src/system/ThemeModule/Controller/ThemeController.php'), 132 => (\dirname(__DIR__, 4).'/src/system/ThemeModule/Controller/VarController.php'), 133 => (\dirname(__DIR__, 4).'/src/system/ThemeModule/EventListener/ExtensionInstallationListener.php'), 134 => (\dirname(__DIR__, 4).'/src/system/ThemeModule/Helper/BundleSyncHelper.php'), 135 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Block/AccountLinksBlock.php'), 136 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Block/LoginBlock.php'), 137 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Block/OnlineBlock.php'), 138 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Controller/AccessController.php'), 139 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Controller/AccountController.php'), 140 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Controller/ConfigController.php'), 141 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Controller/FileIOController.php'), 142 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Controller/LiveSearchController.php'), 143 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Controller/RegistrationController.php'), 144 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Controller/UserAdministrationController.php'), 145 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Helper/AdministrationActionsHelper.php'), 146 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Helper/MailHelper.php'), 147 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Helper/RegistrationHelper.php'), 148 => (\dirname(__DIR__, 4).'/src/system/UsersModule/HookSubscriber/LoginUiHooksSubscriber.php'), 149 => (\dirname(__DIR__, 4).'/src/system/UsersModule/HookSubscriber/RegistrationUiHooksSubscriber.php'), 150 => (\dirname(__DIR__, 4).'/src/system/UsersModule/HookSubscriber/UserManagementUiHooksSubscriber.php'), 151 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Listener/PendingContentListener.php'), 152 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Validator/Constraints/ValidEmailValidator.php'), 153 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Validator/Constraints/ValidUnameValidator.php'), 154 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Validator/Constraints/ValidUserFieldsValidator.php'), 155 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/AuthenticationMethod/NativeEitherAuthenticationMethod.php'), 156 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/AuthenticationMethod/NativeEmailAuthenticationMethod.php'), 157 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/AuthenticationMethod/NativeUnameAuthenticationMethod.php'), 158 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Controller/AccountController.php'), 159 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Controller/ConfigController.php'), 160 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Controller/FileIOController.php'), 161 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Controller/RegistrationController.php'), 162 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Controller/UserAdministrationController.php'), 163 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Helper/AdministrationActionsHelper.php'), 164 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Helper/FileIOHelper.php'), 165 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Helper/MailHelper.php'), 166 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Listener/UserEventListener.php'), 167 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Validator/Constraints/ValidAntiSpamAnswerValidator.php'), 168 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Validator/Constraints/ValidEmailValidator.php'), 169 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Validator/Constraints/ValidPasswordChangeValidator.php'), 170 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Validator/Constraints/ValidRegistrationVerificationValidator.php'), 171 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Validator/Constraints/ValidUnameValidator.php'), 172 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Validator/Constraints/ValidUserFieldsValidator.php'), 173 => (\dirname(__DIR__, 4).'/src/Zikula/HookBundle/Controller/HookController.php'), 174 => (\dirname(__DIR__, 4).'/src/Zikula/WorkflowBundle/Controller/EditorController.php')]);

        $instance->setName('debug:translation');

        return $instance;
    }

    /**
     * Gets the private 'console.command.translation_update' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand
     */
    protected function getConsole_Command_TranslationUpdateService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/TranslationUpdateCommand.php';

        $this->privates['console.command.translation_update'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand(($this->privates['translation.writer'] ?? $this->getTranslation_WriterService()), ($this->privates['translation.reader'] ?? $this->getTranslation_ReaderService()), ($this->privates['translation.extractor'] ?? $this->getTranslation_ExtractorService()), 'en', (\dirname(__DIR__, 4).'/translations'), (\dirname(__DIR__, 4).'/templates'), [0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations')], [0 => (\dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Email'), 2 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form'), 3 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/LocaleAwareListener.php'), 4 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/TranslationDebugCommand.php'), 5 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/FileType.php'), 6 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/TransformationFailureExtension.php'), 7 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Validator/Type/UploadValidatorExtension.php'), 8 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Csrf/Type/FormTypeCsrfExtension.php'), 9 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ValidatorBuilder.php'), 10 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/CacheWarmer/TranslationsCacheWarmer.php'), 11 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Routing/RouteLoader.php'), 12 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/TranslationExtension.php'), 13 => (\dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Twig/Extension/CoreExtension.php'), 14 => (\dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Twig/Extension/SessionExtension.php'), 15 => (\dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Twig/TranslationExtension.php'), 16 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Twig/Extension/ExtensionsExtension.php'), 17 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Twig/Extension/ModVarExtension.php'), 18 => (\dirname(__DIR__, 4).'/src/system/PermissionsModule/Twig/Extension/PermissionsExtension.php'), 19 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Twig/TwigExtension.php'), 20 => (\dirname(__DIR__, 4).'/src/system/ThemeModule/Twig/Extension/PageVarExtension.php'), 21 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Twig/Extension/MessageExtension.php'), 22 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Twig/Extension/ProfileExtension.php'), 23 => (\dirname(__DIR__, 4).'/src/Zikula/CoreBundle/EventListener/ExceptionListener.php'), 24 => (\dirname(__DIR__, 4).'/src/Zikula/CoreBundle/EventListener/SiteOffVetoLoginListener.php'), 25 => (\dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Helper/BundlesSchemaHelper.php'), 26 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Command/Install/FinishCommand.php'), 27 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Command/Install/StartCommand.php'), 28 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Command/UpgradeCommand.php'), 29 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Controller/DocController.php'), 30 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Helper/BlockHelper.php'), 31 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Helper/ControllerHelper.php'), 32 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Helper/ModuleHelper.php'), 33 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Stage/Upgrade/AjaxUpgraderStage.php'), 34 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Validator/Constraints/AuthenticateAdminLoginValidator.php'), 35 => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Validator/Constraints/ValidPdoConnectionValidator.php'), 36 => (\dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/Form/Type/DynamicFieldType.php'), 37 => (\dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/Form/Type/InlineFormDefinitionType.php'), 38 => (\dirname(__DIR__, 4).'/src/Zikula/HookBundle/Listener/HooksListener.php'), 39 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Translation/ZikulaPatternGenerationStrategy.php'), 40 => (\dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/TextTransformer.php'), 41 => (\dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/NumberTransformer.php'), 42 => (\dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/DateTimeTransformer.php'), 43 => (\dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/PasswordTransformer.php'), 44 => (\dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/ChoiceTransformer.php'), 45 => (\dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/CheckboxTransformer.php'), 46 => (\dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Service/CacheClearer.php'), 47 => (\dirname(__DIR__, 4).'/vendor/willdurand/js-translation-bundle/Controller/Controller.php'), 48 => (\dirname(__DIR__, 4).'/src/system/AdminModule/Block/AdminnavBlock.php'), 49 => (\dirname(__DIR__, 4).'/src/system/AdminModule/Controller/AdminController.php'), 50 => (\dirname(__DIR__, 4).'/src/system/AdminModule/Controller/AdminInterfaceController.php'), 51 => (\dirname(__DIR__, 4).'/src/system/AdminModule/Controller/AjaxController.php'), 52 => (\dirname(__DIR__, 4).'/src/system/AdminModule/Controller/ConfigController.php'), 53 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Api/BlockFactoryApi.php'), 54 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Block/FincludeBlock.php'), 55 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Block/Form/Type/FincludeBlockType.php'), 56 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Block/Form/Type/XsltBlockType.php'), 57 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Block/HtmlBlock.php'), 58 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Block/PendingContentBlock.php'), 59 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Block/TextBlock.php'), 60 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Block/XsltBlock.php'), 61 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Controller/AdminController.php'), 62 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Controller/BlockController.php'), 63 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Controller/ConfigController.php'), 64 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Controller/PlacementController.php'), 65 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Controller/PositionController.php'), 66 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/HookSubscriber/UiHooksSubscriber.php'), 67 => (\dirname(__DIR__, 4).'/src/system/CategoriesModule/Controller/CategoryController.php'), 68 => (\dirname(__DIR__, 4).'/src/system/CategoriesModule/Controller/NodeController.php'), 69 => (\dirname(__DIR__, 4).'/src/system/CategoriesModule/Controller/RegistryController.php'), 70 => (\dirname(__DIR__, 4).'/src/system/CategoriesModule/Form/Type/CategoryRegistryType.php'), 71 => (\dirname(__DIR__, 4).'/src/system/CategoriesModule/Form/Type/CategoryTreeType.php'), 72 => (\dirname(__DIR__, 4).'/src/system/CategoriesModule/Form/Type/CategoryType.php'), 73 => (\dirname(__DIR__, 4).'/src/system/CategoriesModule/Validator/Constraints/UniqueNameForPositionValidator.php'), 74 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Controller/ConfigController.php'), 75 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Controller/ExtensionsInterfaceController.php'), 76 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Controller/ModuleController.php'), 77 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Controller/ServicesController.php'), 78 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Helper/BundleSyncHelper.php'), 79 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Helper/ComposerValidationHelper.php'), 80 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Helper/ExtensionHelper.php'), 81 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Helper/ExtensionStateHelper.php'), 82 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Listener/ExtensionServicesListener.php'), 83 => (\dirname(__DIR__, 4).'/src/system/GroupsModule/Controller/ApplicationController.php'), 84 => (\dirname(__DIR__, 4).'/src/system/GroupsModule/Controller/ConfigController.php'), 85 => (\dirname(__DIR__, 4).'/src/system/GroupsModule/Controller/GroupController.php'), 86 => (\dirname(__DIR__, 4).'/src/system/GroupsModule/Controller/MembershipController.php'), 87 => (\dirname(__DIR__, 4).'/src/system/GroupsModule/Entity/Repository/GroupRepository.php'), 88 => (\dirname(__DIR__, 4).'/src/system/GroupsModule/Helper/CommonHelper.php'), 89 => (\dirname(__DIR__, 4).'/src/system/GroupsModule/Listener/GroupEventListener.php'), 90 => (\dirname(__DIR__, 4).'/src/system/GroupsModule/Validator/Constraints/ValidGroupNameValidator.php'), 91 => (\dirname(__DIR__, 4).'/src/system/MailerModule/Api/MailerApi.php'), 92 => (\dirname(__DIR__, 4).'/src/system/MailerModule/Controller/ConfigController.php'), 93 => (\dirname(__DIR__, 4).'/src/system/MailerModule/HookSubscriber/UiHooksSubscriber.php'), 94 => (\dirname(__DIR__, 4).'/src/system/MenuModule/Block/Form/Type/MenuType.php'), 95 => (\dirname(__DIR__, 4).'/src/system/MenuModule/Block/MenuBlock.php'), 96 => (\dirname(__DIR__, 4).'/src/system/MenuModule/Controller/ConfigController.php'), 97 => (\dirname(__DIR__, 4).'/src/system/MenuModule/Controller/MenuController.php'), 98 => (\dirname(__DIR__, 4).'/src/system/MenuModule/Controller/NodeController.php'), 99 => (\dirname(__DIR__, 4).'/src/system/MenuModule/Form/EventListener/OptionValidatorListener.php'), 100 => (\dirname(__DIR__, 4).'/src/system/MenuModule/Form/Type/HiddenMenuItemType.php'), 101 => (\dirname(__DIR__, 4).'/src/system/MenuModule/Form/Type/MenuItemType.php'), 102 => (\dirname(__DIR__, 4).'/src/system/MenuModule/Menu/MenuBuilder.php'), 103 => (\dirname(__DIR__, 4).'/src/system/PermissionsModule/Api/PermissionApi.php'), 104 => (\dirname(__DIR__, 4).'/src/system/PermissionsModule/Controller/ConfigController.php'), 105 => (\dirname(__DIR__, 4).'/src/system/PermissionsModule/Controller/PermissionController.php'), 106 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Controller/AjaxController.php'), 107 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Controller/ConfigController.php'), 108 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Controller/RouteController.php'), 109 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Controller/UpdateController.php'), 110 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Form/Handler/Route/EditHandler.php'), 111 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/ControllerHelper.php'), 112 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/EntityDisplayHelper.php'), 113 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/ListEntriesHelper.php'), 114 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/RouteDumperHelper.php'), 115 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Helper/WorkflowHelper.php'), 116 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Listener/UserListener.php'), 117 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Validator/Constraints/ListEntryValidator.php'), 118 => (\dirname(__DIR__, 4).'/src/system/SearchModule/Block/SearchBlock.php'), 119 => (\dirname(__DIR__, 4).'/src/system/SearchModule/Controller/ConfigController.php'), 120 => (\dirname(__DIR__, 4).'/src/system/SearchModule/Controller/SearchController.php'), 121 => (\dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Controller/ConfigController.php'), 122 => (\dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Controller/IdsLogController.php'), 123 => (\dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Form/Type/IdsLogFilterType.php'), 124 => (\dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Helper/PurifierHelper.php'), 125 => (\dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Listener/FilterListener.php'), 126 => (\dirname(__DIR__, 4).'/src/system/SettingsModule/Block/LocaleBlock.php'), 127 => (\dirname(__DIR__, 4).'/src/system/SettingsModule/Controller/SettingsController.php'), 128 => (\dirname(__DIR__, 4).'/src/system/SettingsModule/Form/Type/MainSettingsType.php'), 129 => (\dirname(__DIR__, 4).'/src/system/SettingsModule/Listener/ModuleListener.php'), 130 => (\dirname(__DIR__, 4).'/src/system/ThemeModule/Controller/CombinedAssetController.php'), 131 => (\dirname(__DIR__, 4).'/src/system/ThemeModule/Controller/ThemeController.php'), 132 => (\dirname(__DIR__, 4).'/src/system/ThemeModule/Controller/VarController.php'), 133 => (\dirname(__DIR__, 4).'/src/system/ThemeModule/EventListener/ExtensionInstallationListener.php'), 134 => (\dirname(__DIR__, 4).'/src/system/ThemeModule/Helper/BundleSyncHelper.php'), 135 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Block/AccountLinksBlock.php'), 136 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Block/LoginBlock.php'), 137 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Block/OnlineBlock.php'), 138 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Controller/AccessController.php'), 139 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Controller/AccountController.php'), 140 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Controller/ConfigController.php'), 141 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Controller/FileIOController.php'), 142 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Controller/LiveSearchController.php'), 143 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Controller/RegistrationController.php'), 144 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Controller/UserAdministrationController.php'), 145 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Helper/AdministrationActionsHelper.php'), 146 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Helper/MailHelper.php'), 147 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Helper/RegistrationHelper.php'), 148 => (\dirname(__DIR__, 4).'/src/system/UsersModule/HookSubscriber/LoginUiHooksSubscriber.php'), 149 => (\dirname(__DIR__, 4).'/src/system/UsersModule/HookSubscriber/RegistrationUiHooksSubscriber.php'), 150 => (\dirname(__DIR__, 4).'/src/system/UsersModule/HookSubscriber/UserManagementUiHooksSubscriber.php'), 151 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Listener/PendingContentListener.php'), 152 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Validator/Constraints/ValidEmailValidator.php'), 153 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Validator/Constraints/ValidUnameValidator.php'), 154 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Validator/Constraints/ValidUserFieldsValidator.php'), 155 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/AuthenticationMethod/NativeEitherAuthenticationMethod.php'), 156 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/AuthenticationMethod/NativeEmailAuthenticationMethod.php'), 157 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/AuthenticationMethod/NativeUnameAuthenticationMethod.php'), 158 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Controller/AccountController.php'), 159 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Controller/ConfigController.php'), 160 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Controller/FileIOController.php'), 161 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Controller/RegistrationController.php'), 162 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Controller/UserAdministrationController.php'), 163 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Helper/AdministrationActionsHelper.php'), 164 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Helper/FileIOHelper.php'), 165 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Helper/MailHelper.php'), 166 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Listener/UserEventListener.php'), 167 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Validator/Constraints/ValidAntiSpamAnswerValidator.php'), 168 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Validator/Constraints/ValidEmailValidator.php'), 169 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Validator/Constraints/ValidPasswordChangeValidator.php'), 170 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Validator/Constraints/ValidRegistrationVerificationValidator.php'), 171 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Validator/Constraints/ValidUnameValidator.php'), 172 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Validator/Constraints/ValidUserFieldsValidator.php'), 173 => (\dirname(__DIR__, 4).'/src/Zikula/HookBundle/Controller/HookController.php'), 174 => (\dirname(__DIR__, 4).'/src/Zikula/WorkflowBundle/Controller/EditorController.php')]);

        $instance->setName('translation:update');

        return $instance;
    }

    /**
     * Gets the private 'console.command.workflow_dump' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\WorkflowDumpCommand
     */
    protected function getConsole_Command_WorkflowDumpService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/WorkflowDumpCommand.php';

        $this->privates['console.command.workflow_dump'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\WorkflowDumpCommand();

        $instance->setName('workflow:dump');

        return $instance;
    }

    /**
     * Gets the private 'console.command.xliff_lint' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\XliffLintCommand
     */
    protected function getConsole_Command_XliffLintService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Command/XliffLintCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/XliffLintCommand.php';

        $this->privates['console.command.xliff_lint'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\XliffLintCommand();

        $instance->setName('lint:xliff');

        return $instance;
    }

    /**
     * Gets the private 'console.command.yaml_lint' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand
     */
    protected function getConsole_Command_YamlLintService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Yaml/Command/LintCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/YamlLintCommand.php';

        $this->privates['console.command.yaml_lint'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand();

        $instance->setName('lint:yaml');

        return $instance;
    }

    /**
     * Gets the private 'console.error_listener' shared service.
     *
     * @return \Symfony\Component\Console\EventListener\ErrorListener
     */
    protected function getConsole_ErrorListenerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/EventListener/ErrorListener.php';

        $a = new \Symfony\Bridge\Monolog\Logger('console');
        $a->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
        $a->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        return $this->privates['console.error_listener'] = new \Symfony\Component\Console\EventListener\ErrorListener($a);
    }

    /**
     * Gets the private 'container.env_var_processor' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\EnvVarProcessor
     */
    protected function getContainer_EnvVarProcessorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/EnvVarProcessorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/EnvVarProcessor.php';

        return $this->privates['container.env_var_processor'] = new \Symfony\Component\DependencyInjection\EnvVarProcessor($this, new RewindableGenerator(function () {
            yield 0 => ($this->privates['secrets.vault'] ?? ($this->privates['secrets.vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault((\dirname(__DIR__, 4).'/config/secrets/prod'), $this->getEnv('base64:default::SYMFONY_DECRYPTION_SECRET'))));
        }, 1));
    }

    /**
     * Gets the private 'debug.argument_resolver.default' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver
     */
    protected function getDebug_ArgumentResolver_DefaultService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentValueResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentResolver/TraceableValueResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentResolver/DefaultValueResolver.php';

        return $this->privates['debug.argument_resolver.default'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver(new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver(), ($this->privates['debug.stopwatch'] ?? ($this->privates['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true))));
    }

    /**
     * Gets the private 'debug.argument_resolver.not_tagged_controller' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver
     */
    protected function getDebug_ArgumentResolver_NotTaggedControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentValueResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentResolver/TraceableValueResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentResolver/NotTaggedControllerValueResolver.php';

        return $this->privates['debug.argument_resolver.not_tagged_controller'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver(new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\NotTaggedControllerValueResolver(($this->privates['.service_locator.JHsD_cg'] ?? $this->get_ServiceLocator_JHsDCgService())), ($this->privates['debug.stopwatch'] ?? ($this->privates['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true))));
    }

    /**
     * Gets the private 'debug.argument_resolver.request' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver
     */
    protected function getDebug_ArgumentResolver_RequestService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentValueResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentResolver/TraceableValueResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentResolver/RequestValueResolver.php';

        return $this->privates['debug.argument_resolver.request'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver(new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver(), ($this->privates['debug.stopwatch'] ?? ($this->privates['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true))));
    }

    /**
     * Gets the private 'debug.argument_resolver.request_attribute' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver
     */
    protected function getDebug_ArgumentResolver_RequestAttributeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentValueResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentResolver/TraceableValueResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentResolver/RequestAttributeValueResolver.php';

        return $this->privates['debug.argument_resolver.request_attribute'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver(new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver(), ($this->privates['debug.stopwatch'] ?? ($this->privates['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true))));
    }

    /**
     * Gets the private 'debug.argument_resolver.service' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver
     */
    protected function getDebug_ArgumentResolver_ServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentValueResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentResolver/TraceableValueResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentResolver/ServiceValueResolver.php';

        return $this->privates['debug.argument_resolver.service'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver(new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver(($this->privates['.service_locator.JHsD_cg'] ?? $this->get_ServiceLocator_JHsDCgService())), ($this->privates['debug.stopwatch'] ?? ($this->privates['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true))));
    }

    /**
     * Gets the private 'debug.argument_resolver.session' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver
     */
    protected function getDebug_ArgumentResolver_SessionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentValueResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentResolver/TraceableValueResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentResolver/SessionValueResolver.php';

        return $this->privates['debug.argument_resolver.session'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver(new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver(), ($this->privates['debug.stopwatch'] ?? ($this->privates['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true))));
    }

    /**
     * Gets the private 'debug.argument_resolver.variadic' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver
     */
    protected function getDebug_ArgumentResolver_VariadicService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentValueResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentResolver/TraceableValueResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentResolver/VariadicValueResolver.php';

        return $this->privates['debug.argument_resolver.variadic'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver(new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver(), ($this->privates['debug.stopwatch'] ?? ($this->privates['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true))));
    }

    /**
     * Gets the private 'debug.debug_handlers_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\DebugHandlersListener
     */
    protected function getDebug_DebugHandlersListenerService()
    {
        $a = new \Symfony\Bridge\Monolog\Logger('php');
        $a->pushHandler(($this->privates['monolog.handler.deprecation_filter'] ?? $this->getMonolog_Handler_DeprecationFilterService()));
        $a->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
        $a->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        return $this->privates['debug.debug_handlers_listener'] = new \Symfony\Component\HttpKernel\EventListener\DebugHandlersListener(NULL, $a, NULL, -1, true, ($this->privates['debug.file_link_formatter'] ?? ($this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL))), true);
    }

    /**
     * Gets the private 'debug.security.access.decision_manager' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager
     */
    protected function getDebug_Security_Access_DecisionManagerService()
    {
        return $this->privates['debug.security.access.decision_manager'] = new \Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager(new \Symfony\Component\Security\Core\Authorization\AccessDecisionManager(new RewindableGenerator(function () {
            yield 0 => ($this->privates['debug.security.voter.security.access.authenticated_voter'] ?? $this->getDebug_Security_Voter_Security_Access_AuthenticatedVoterService());
            yield 1 => ($this->privates['debug.security.voter.security.access.role_hierarchy_voter'] ?? $this->getDebug_Security_Voter_Security_Access_RoleHierarchyVoterService());
            yield 2 => ($this->privates['debug.security.voter.security.access.expression_voter'] ?? $this->getDebug_Security_Voter_Security_Access_ExpressionVoterService());
        }, 3), 'affirmative', false, true));
    }

    /**
     * Gets the private 'debug.security.firewall' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener
     */
    protected function getDebug_Security_FirewallService()
    {
        return $this->privates['debug.security.firewall'] = new \Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener(new \Symfony\Bundle\SecurityBundle\Security\FirewallMap(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'security.firewall.map.context.dev' => ['privates', 'security.firewall.map.context.dev', 'getSecurity_Firewall_Map_Context_DevService', false],
            'security.firewall.map.context.login' => ['privates', 'security.firewall.map.context.login', 'getSecurity_Firewall_Map_Context_LoginService', false],
            'security.firewall.map.context.secured_area' => ['privates', 'security.firewall.map.context.secured_area', 'getSecurity_Firewall_Map_Context_SecuredAreaService', false],
        ], [
            'security.firewall.map.context.dev' => '?',
            'security.firewall.map.context.login' => '?',
            'security.firewall.map.context.secured_area' => '?',
        ]), new RewindableGenerator(function () {
            yield 'security.firewall.map.context.dev' => ($this->privates['.security.request_matcher.Iy.T22O'] ?? ($this->privates['.security.request_matcher.Iy.T22O'] = new \Symfony\Component\HttpFoundation\RequestMatcher('^/(_(profiler|wdt)|css|images|js)/')));
            yield 'security.firewall.map.context.login' => ($this->privates['.security.request_matcher.LSAvh7L'] ?? ($this->privates['.security.request_matcher.LSAvh7L'] = new \Symfony\Component\HttpFoundation\RequestMatcher('^/demo/secured/login$')));
            yield 'security.firewall.map.context.secured_area' => ($this->privates['.security.request_matcher.1nJhEMn'] ?? ($this->privates['.security.request_matcher.1nJhEMn'] = new \Symfony\Component\HttpFoundation\RequestMatcher('^/demo/secured/')));
        }, 3)), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->privates['security.logout_url_generator'] ?? $this->getSecurity_LogoutUrlGeneratorService()));
    }

    /**
     * Gets the private 'debug.security.user_value_resolver' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver
     */
    protected function getDebug_Security_UserValueResolverService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentValueResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Controller/ArgumentResolver/TraceableValueResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Controller/UserValueResolver.php';

        return $this->privates['debug.security.user_value_resolver'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver(new \Symfony\Component\Security\Http\Controller\UserValueResolver(($this->services['security.token_storage'] ?? $this->getSecurity_TokenStorageService())), ($this->privates['debug.stopwatch'] ?? ($this->privates['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true))));
    }

    /**
     * Gets the private 'debug.security.voter.security.access.authenticated_voter' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter
     */
    protected function getDebug_Security_Voter_Security_Access_AuthenticatedVoterService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authorization/Voter/VoterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authorization/Voter/TraceableVoter.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authorization/Voter/AuthenticatedVoter.php';

        return $this->privates['debug.security.voter.security.access.authenticated_voter'] = new \Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter(new \Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter(($this->privates['security.authentication.trust_resolver'] ?? ($this->privates['security.authentication.trust_resolver'] = new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver()))), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /**
     * Gets the private 'debug.security.voter.security.access.expression_voter' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter
     */
    protected function getDebug_Security_Voter_Security_Access_ExpressionVoterService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authorization/Voter/VoterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authorization/Voter/TraceableVoter.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authorization/Voter/ExpressionVoter.php';

        return $this->privates['debug.security.voter.security.access.expression_voter'] = new \Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter(new \Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter(new \Symfony\Component\Security\Core\Authorization\ExpressionLanguage(($this->privates['cache.security_expression_language'] ?? $this->getCache_SecurityExpressionLanguageService())), ($this->privates['security.authentication.trust_resolver'] ?? ($this->privates['security.authentication.trust_resolver'] = new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver())), ($this->services['security.authorization_checker'] ?? $this->getSecurity_AuthorizationCheckerService()), ($this->privates['security.role_hierarchy'] ?? $this->getSecurity_RoleHierarchyService())), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /**
     * Gets the private 'debug.security.voter.security.access.role_hierarchy_voter' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter
     */
    protected function getDebug_Security_Voter_Security_Access_RoleHierarchyVoterService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authorization/Voter/VoterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authorization/Voter/TraceableVoter.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authorization/Voter/RoleVoter.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authorization/Voter/RoleHierarchyVoter.php';

        return $this->privates['debug.security.voter.security.access.role_hierarchy_voter'] = new \Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter(new \Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter(($this->privates['security.role_hierarchy'] ?? $this->getSecurity_RoleHierarchyService())), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /**
     * Gets the private 'debug.security.voter.vote_listener' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\EventListener\VoteListener
     */
    protected function getDebug_Security_Voter_VoteListenerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/EventListener/VoteListener.php';

        return $this->privates['debug.security.voter.vote_listener'] = new \Symfony\Bundle\SecurityBundle\EventListener\VoteListener(($this->privates['debug.security.access.decision_manager'] ?? $this->getDebug_Security_Access_DecisionManagerService()));
    }

    /**
     * Gets the private 'doctrine.cache_clear_metadata_command' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearMetadataCacheDoctrineCommand
     */
    protected function getDoctrine_CacheClearMetadataCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Tools/Console/Command/ClearCache/MetadataCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/Proxy/ClearMetadataCacheDoctrineCommand.php';

        $this->privates['doctrine.cache_clear_metadata_command'] = $instance = new \Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearMetadataCacheDoctrineCommand();

        $instance->setName('doctrine:cache:clear-metadata');

        return $instance;
    }

    /**
     * Gets the private 'doctrine.cache_clear_query_cache_command' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearQueryCacheDoctrineCommand
     */
    protected function getDoctrine_CacheClearQueryCacheCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Tools/Console/Command/ClearCache/QueryCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/Proxy/ClearQueryCacheDoctrineCommand.php';

        $this->privates['doctrine.cache_clear_query_cache_command'] = $instance = new \Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearQueryCacheDoctrineCommand();

        $instance->setName('doctrine:cache:clear-query');

        return $instance;
    }

    /**
     * Gets the private 'doctrine.cache_clear_result_command' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearResultCacheDoctrineCommand
     */
    protected function getDoctrine_CacheClearResultCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Tools/Console/Command/ClearCache/ResultCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/Proxy/ClearResultCacheDoctrineCommand.php';

        $this->privates['doctrine.cache_clear_result_command'] = $instance = new \Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearResultCacheDoctrineCommand();

        $instance->setName('doctrine:cache:clear-result');

        return $instance;
    }

    /**
     * Gets the private 'doctrine.cache_collection_region_command' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Command\Proxy\CollectionRegionDoctrineCommand
     */
    protected function getDoctrine_CacheCollectionRegionCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Tools/Console/Command/ClearCache/CollectionRegionCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/Proxy/CollectionRegionDoctrineCommand.php';

        $this->privates['doctrine.cache_collection_region_command'] = $instance = new \Doctrine\Bundle\DoctrineBundle\Command\Proxy\CollectionRegionDoctrineCommand();

        $instance->setName('doctrine:cache:clear-collection-region');

        return $instance;
    }

    /**
     * Gets the private 'doctrine.clear_entity_region_command' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Command\Proxy\EntityRegionCacheDoctrineCommand
     */
    protected function getDoctrine_ClearEntityRegionCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Tools/Console/Command/ClearCache/EntityRegionCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/Proxy/EntityRegionCacheDoctrineCommand.php';

        $this->privates['doctrine.clear_entity_region_command'] = $instance = new \Doctrine\Bundle\DoctrineBundle\Command\Proxy\EntityRegionCacheDoctrineCommand();

        $instance->setName('doctrine:cache:clear-entity-region');

        return $instance;
    }

    /**
     * Gets the private 'doctrine.clear_query_region_command' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Command\Proxy\QueryRegionCacheDoctrineCommand
     */
    protected function getDoctrine_ClearQueryRegionCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Tools/Console/Command/ClearCache/QueryRegionCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/Proxy/QueryRegionCacheDoctrineCommand.php';

        $this->privates['doctrine.clear_query_region_command'] = $instance = new \Doctrine\Bundle\DoctrineBundle\Command\Proxy\QueryRegionCacheDoctrineCommand();

        $instance->setName('doctrine:cache:clear-query-region');

        return $instance;
    }

    /**
     * Gets the private 'doctrine.database_create_command' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand
     */
    protected function getDoctrine_DatabaseCreateCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/DoctrineCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/CreateDatabaseDoctrineCommand.php';

        $this->privates['doctrine.database_create_command'] = $instance = new \Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand(($this->services['doctrine'] ?? $this->getDoctrineService()));

        $instance->setName('doctrine:database:create');

        return $instance;
    }

    /**
     * Gets the private 'doctrine.database_drop_command' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand
     */
    protected function getDoctrine_DatabaseDropCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/DoctrineCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/DropDatabaseDoctrineCommand.php';

        $this->privates['doctrine.database_drop_command'] = $instance = new \Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand(($this->services['doctrine'] ?? $this->getDoctrineService()));

        $instance->setName('doctrine:database:drop');

        return $instance;
    }

    /**
     * Gets the private 'doctrine.database_import_command' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Command\Proxy\ImportDoctrineCommand
     */
    protected function getDoctrine_DatabaseImportCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/dbal/lib/Doctrine/DBAL/Tools/Console/Command/ImportCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/Proxy/ImportDoctrineCommand.php';

        $this->privates['doctrine.database_import_command'] = $instance = new \Doctrine\Bundle\DoctrineBundle\Command\Proxy\ImportDoctrineCommand();

        $instance->setName('doctrine:database:import');

        return $instance;
    }

    /**
     * Gets the private 'doctrine.ensure_production_settings_command' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Command\Proxy\EnsureProductionSettingsDoctrineCommand
     */
    protected function getDoctrine_EnsureProductionSettingsCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Tools/Console/Command/EnsureProductionSettingsCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/Proxy/EnsureProductionSettingsDoctrineCommand.php';

        $this->privates['doctrine.ensure_production_settings_command'] = $instance = new \Doctrine\Bundle\DoctrineBundle\Command\Proxy\EnsureProductionSettingsDoctrineCommand();

        $instance->setName('doctrine:ensure-production-settings');

        return $instance;
    }

    /**
     * Gets the private 'doctrine.mapping_convert_command' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Command\Proxy\ConvertMappingDoctrineCommand
     */
    protected function getDoctrine_MappingConvertCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Tools/Console/Command/ConvertMappingCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/Proxy/ConvertMappingDoctrineCommand.php';

        $this->privates['doctrine.mapping_convert_command'] = $instance = new \Doctrine\Bundle\DoctrineBundle\Command\Proxy\ConvertMappingDoctrineCommand();

        $instance->setName('doctrine:mapping:convert');

        return $instance;
    }

    /**
     * Gets the private 'doctrine.mapping_import_command' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand
     */
    protected function getDoctrine_MappingImportCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/DoctrineCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/ImportMappingDoctrineCommand.php';

        $this->privates['doctrine.mapping_import_command'] = $instance = new \Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand(($this->services['doctrine'] ?? $this->getDoctrineService()), $this->parameters['kernel.bundles']);

        $instance->setName('doctrine:mapping:import');

        return $instance;
    }

    /**
     * Gets the private 'doctrine.mapping_info_command' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Command\Proxy\InfoDoctrineCommand
     */
    protected function getDoctrine_MappingInfoCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Tools/Console/Command/InfoCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/Proxy/InfoDoctrineCommand.php';

        $this->privates['doctrine.mapping_info_command'] = $instance = new \Doctrine\Bundle\DoctrineBundle\Command\Proxy\InfoDoctrineCommand();

        $instance->setName('doctrine:mapping:info');

        return $instance;
    }

    /**
     * Gets the private 'doctrine.orm.default_annotation_metadata_driver' shared service.
     *
     * @return \Doctrine\ORM\Mapping\Driver\AnnotationDriver
     */
    protected function getDoctrine_Orm_DefaultAnnotationMetadataDriverService()
    {
        return $this->privates['doctrine.orm.default_annotation_metadata_driver'] = new \Doctrine\ORM\Mapping\Driver\AnnotationDriver(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()), [0 => (\dirname(__DIR__, 4).'/src/Zikula/HookBundle/Dispatcher/Storage/Doctrine/Entity'), 1 => (\dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity'), 2 => (\dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity'), 3 => (\dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity'), 4 => (\dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity'), 5 => (\dirname(__DIR__, 4).'/src/system/AdminModule/Entity'), 6 => (\dirname(__DIR__, 4).'/src/system/BlocksModule/Entity'), 7 => (\dirname(__DIR__, 4).'/src/system/CategoriesModule/Entity'), 8 => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Entity'), 9 => (\dirname(__DIR__, 4).'/src/system/GroupsModule/Entity'), 10 => (\dirname(__DIR__, 4).'/src/system/MenuModule/Entity'), 11 => (\dirname(__DIR__, 4).'/src/system/PermissionsModule/Entity'), 12 => (\dirname(__DIR__, 4).'/src/system/RoutesModule/Entity'), 13 => (\dirname(__DIR__, 4).'/src/system/SearchModule/Entity'), 14 => (\dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Entity'), 15 => (\dirname(__DIR__, 4).'/src/system/ThemeModule/Entity'), 16 => (\dirname(__DIR__, 4).'/src/system/UsersModule/Entity'), 17 => (\dirname(__DIR__, 4).'/src/system/ZAuthModule/Entity')]);
    }

    /**
     * Gets the private 'doctrine.orm.default_listeners.attach_entity_listeners' shared service.
     *
     * @return \Doctrine\ORM\Tools\AttachEntityListenersListener
     */
    protected function getDoctrine_Orm_DefaultListeners_AttachEntityListenersService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Tools/AttachEntityListenersListener.php';

        return $this->privates['doctrine.orm.default_listeners.attach_entity_listeners'] = new \Doctrine\ORM\Tools\AttachEntityListenersListener();
    }

    /**
     * Gets the private 'doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager' shared service.
     *
     * @return \Symfony\Bridge\Doctrine\Messenger\DoctrineClearEntityManagerWorkerSubscriber
     */
    protected function getDoctrine_Orm_Messenger_EventSubscriber_DoctrineClearEntityManagerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/Messenger/DoctrineClearEntityManagerWorkerSubscriber.php';

        return $this->privates['doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager'] = new \Symfony\Bridge\Doctrine\Messenger\DoctrineClearEntityManagerWorkerSubscriber(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'doctrine.orm.proxy_cache_warmer' shared service.
     *
     * @return \Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer
     */
    protected function getDoctrine_Orm_ProxyCacheWarmerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheWarmer/CacheWarmerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/CacheWarmer/ProxyCacheWarmer.php';

        return $this->privates['doctrine.orm.proxy_cache_warmer'] = new \Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'doctrine.orm.validator.unique' shared service.
     *
     * @return \Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator
     */
    protected function getDoctrine_Orm_Validator_UniqueService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/Validator/Constraints/UniqueEntityValidator.php';

        return $this->privates['doctrine.orm.validator.unique'] = new \Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'doctrine.query_dql_command' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunDqlDoctrineCommand
     */
    protected function getDoctrine_QueryDqlCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Tools/Console/Command/RunDqlCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/Proxy/RunDqlDoctrineCommand.php';

        $this->privates['doctrine.query_dql_command'] = $instance = new \Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunDqlDoctrineCommand();

        $instance->setName('doctrine:query:dql');

        return $instance;
    }

    /**
     * Gets the private 'doctrine.query_sql_command' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand
     */
    protected function getDoctrine_QuerySqlCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/dbal/lib/Doctrine/DBAL/Tools/Console/Command/RunSqlCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/Proxy/RunSqlDoctrineCommand.php';

        $this->privates['doctrine.query_sql_command'] = $instance = new \Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand();

        $instance->setName('doctrine:query:sql');

        return $instance;
    }

    /**
     * Gets the private 'doctrine.result_cache_pool' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\FilesystemAdapter
     */
    protected function getDoctrine_ResultCachePoolService()
    {
        $this->privates['doctrine.result_cache_pool'] = $instance = new \Symfony\Component\Cache\Adapter\FilesystemAdapter('Rzyw7ZIsZv', 0, ($this->targetDir.''.'/pools'), ($this->privates['cache.default_marshaller'] ?? ($this->privates['cache.default_marshaller'] = new \Symfony\Component\Cache\Marshaller\DefaultMarshaller(NULL))));

        $instance->setLogger(($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));

        return $instance;
    }

    /**
     * Gets the private 'doctrine.schema_create_command' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Command\Proxy\CreateSchemaDoctrineCommand
     */
    protected function getDoctrine_SchemaCreateCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Tools/Console/Command/SchemaTool/AbstractCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Tools/Console/Command/SchemaTool/CreateCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/Proxy/CreateSchemaDoctrineCommand.php';

        $this->privates['doctrine.schema_create_command'] = $instance = new \Doctrine\Bundle\DoctrineBundle\Command\Proxy\CreateSchemaDoctrineCommand();

        $instance->setName('doctrine:schema:create');

        return $instance;
    }

    /**
     * Gets the private 'doctrine.schema_drop_command' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Command\Proxy\DropSchemaDoctrineCommand
     */
    protected function getDoctrine_SchemaDropCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Tools/Console/Command/SchemaTool/AbstractCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Tools/Console/Command/SchemaTool/DropCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/Proxy/DropSchemaDoctrineCommand.php';

        $this->privates['doctrine.schema_drop_command'] = $instance = new \Doctrine\Bundle\DoctrineBundle\Command\Proxy\DropSchemaDoctrineCommand();

        $instance->setName('doctrine:schema:drop');

        return $instance;
    }

    /**
     * Gets the private 'doctrine.schema_update_command' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Command\Proxy\UpdateSchemaDoctrineCommand
     */
    protected function getDoctrine_SchemaUpdateCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Tools/Console/Command/SchemaTool/AbstractCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Tools/Console/Command/SchemaTool/UpdateCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/Proxy/UpdateSchemaDoctrineCommand.php';

        $this->privates['doctrine.schema_update_command'] = $instance = new \Doctrine\Bundle\DoctrineBundle\Command\Proxy\UpdateSchemaDoctrineCommand();

        $instance->setName('doctrine:schema:update');

        return $instance;
    }

    /**
     * Gets the private 'doctrine.schema_validate_command' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Command\Proxy\ValidateSchemaCommand
     */
    protected function getDoctrine_SchemaValidateCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/lib/Doctrine/ORM/Tools/Console/Command/ValidateSchemaCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Command/Proxy/ValidateSchemaCommand.php';

        $this->privates['doctrine.schema_validate_command'] = $instance = new \Doctrine\Bundle\DoctrineBundle\Command\Proxy\ValidateSchemaCommand();

        $instance->setName('doctrine:schema:validate');

        return $instance;
    }

    /**
     * Gets the private 'doctrine.system_cache_pool' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getDoctrine_SystemCachePoolService()
    {
        return $this->privates['doctrine.system_cache_pool'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('PNoGXmLwjQ', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /**
     * Gets the private 'exception_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ErrorListener
     */
    protected function getExceptionListener2Service()
    {
        return $this->privates['exception_listener'] = new \Symfony\Component\HttpKernel\EventListener\ErrorListener('error_controller', ($this->privates['monolog.logger.request'] ?? $this->getMonolog_Logger_RequestService()), true);
    }

    /**
     * Gets the private 'form.choice_list_factory.cached' shared service.
     *
     * @return \Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator
     */
    protected function getForm_ChoiceListFactory_CachedService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/ChoiceList/Factory/ChoiceListFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/ChoiceList/Factory/CachingFactoryDecorator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/ChoiceList/Factory/PropertyAccessDecorator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/ChoiceList/Factory/DefaultChoiceListFactory.php';

        return $this->privates['form.choice_list_factory.cached'] = new \Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator(new \Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator(new \Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory(), ($this->privates['property_accessor'] ?? $this->getPropertyAccessorService())));
    }

    /**
     * Gets the private 'form.registry' shared service.
     *
     * @return \Symfony\Component\Form\FormRegistry
     */
    protected function getForm_RegistryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormRegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/DependencyInjection/DependencyInjectionExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/ResolvedFormTypeFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/ResolvedFormTypeFactory.php';

        return $this->privates['form.registry'] = new \Symfony\Component\Form\FormRegistry([0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'Liip\\ImagineBundle\\Form\\Type\\ImageType' => ['privates', 'liip_imagine.form.type.image', 'getLiipImagine_Form_Type_ImageService', false],
            'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => ['privates', 'form.type.entity', 'getForm_Type_EntityService', false],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => ['privates', 'form.type.choice', 'getForm_Type_ChoiceService', false],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => ['services', 'form.type.file', 'getForm_Type_FileService', false],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => ['privates', 'form.type.form', 'getForm_Type_FormService', false],
            'Zikula\\AdminModule\\Form\\Type\\AdminCategoryType' => ['privates', 'Zikula\\AdminModule\\Form\\Type\\AdminCategoryType', 'getAdminCategoryTypeService', false],
            'Zikula\\AdminModule\\Form\\Type\\ConfigType' => ['privates', 'Zikula\\AdminModule\\Form\\Type\\ConfigType', 'getConfigTypeService', false],
            'Zikula\\BlocksModule\\Block\\Form\\Type\\FincludeBlockType' => ['privates', 'Zikula\\BlocksModule\\Block\\Form\\Type\\FincludeBlockType', 'getFincludeBlockTypeService', false],
            'Zikula\\BlocksModule\\Block\\Form\\Type\\HtmlBlockType' => ['privates', 'Zikula\\BlocksModule\\Block\\Form\\Type\\HtmlBlockType', 'getHtmlBlockTypeService', false],
            'Zikula\\BlocksModule\\Block\\Form\\Type\\TextBlockType' => ['privates', 'Zikula\\BlocksModule\\Block\\Form\\Type\\TextBlockType', 'getTextBlockTypeService', false],
            'Zikula\\BlocksModule\\Block\\Form\\Type\\XsltBlockType' => ['privates', 'Zikula\\BlocksModule\\Block\\Form\\Type\\XsltBlockType', 'getXsltBlockTypeService', false],
            'Zikula\\BlocksModule\\Form\\Type\\AdminViewFilterType' => ['privates', 'Zikula\\BlocksModule\\Form\\Type\\AdminViewFilterType', 'getAdminViewFilterTypeService', false],
            'Zikula\\BlocksModule\\Form\\Type\\BlockFilterType' => ['privates', 'Zikula\\BlocksModule\\Form\\Type\\BlockFilterType', 'getBlockFilterTypeService', false],
            'Zikula\\BlocksModule\\Form\\Type\\BlockPositionType' => ['privates', 'Zikula\\BlocksModule\\Form\\Type\\BlockPositionType', 'getBlockPositionTypeService', false],
            'Zikula\\BlocksModule\\Form\\Type\\BlockType' => ['privates', 'Zikula\\BlocksModule\\Form\\Type\\BlockType', 'getBlockTypeService', false],
            'Zikula\\BlocksModule\\Form\\Type\\ConfigType' => ['privates', 'Zikula\\BlocksModule\\Form\\Type\\ConfigType', 'getConfigType2Service', false],
            'Zikula\\BlocksModule\\Form\\Type\\NewBlockType' => ['privates', 'Zikula\\BlocksModule\\Form\\Type\\NewBlockType', 'getNewBlockTypeService', false],
            'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\CreateAdminType' => ['services', 'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\CreateAdminType', 'getCreateAdminTypeService', false],
            'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\DbCredsType' => ['services', 'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\DbCredsType', 'getDbCredsTypeService', false],
            'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\LocaleType' => ['services', 'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\LocaleType', 'getLocaleTypeService', false],
            'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\LoginType' => ['services', 'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\LoginType', 'getLoginTypeService', false],
            'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\RequestContextType' => ['services', 'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\RequestContextType', 'getRequestContextTypeService', false],
            'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DeletionType' => ['privates', 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DeletionType', 'getDeletionTypeService', false],
            'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicFieldType' => ['privates', 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicFieldType', 'getDynamicFieldTypeService', false],
            'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\ChoiceFormOptionsArrayType' => ['privates', 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\ChoiceFormOptionsArrayType', 'getChoiceFormOptionsArrayTypeService', false],
            'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\DateTimeFormOptionsArrayType' => ['privates', 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\DateTimeFormOptionsArrayType', 'getDateTimeFormOptionsArrayTypeService', false],
            'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\FormOptionsArrayType' => ['privates', 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\FormOptionsArrayType', 'getFormOptionsArrayTypeService', false],
            'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\MoneyFormOptionsArrayType' => ['privates', 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\MoneyFormOptionsArrayType', 'getMoneyFormOptionsArrayTypeService', false],
            'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\RegexibleFormOptionsArrayType' => ['privates', 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\RegexibleFormOptionsArrayType', 'getRegexibleFormOptionsArrayTypeService', false],
            'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\IconType' => ['privates', 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\IconType', 'getIconTypeService', false],
            'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\InlineFormDefinitionType' => ['privates', 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\InlineFormDefinitionType', 'getInlineFormDefinitionTypeService', false],
            'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\LocaleType' => ['privates', 'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\LocaleType', 'getLocaleType2Service', false],
            'Zikula\\CategoriesModule\\Form\\Type\\CategoriesType' => ['privates', 'Zikula\\CategoriesModule\\Form\\Type\\CategoriesType', 'getCategoriesTypeService', false],
            'Zikula\\CategoriesModule\\Form\\Type\\CategoryAttributeType' => ['privates', 'Zikula\\CategoriesModule\\Form\\Type\\CategoryAttributeType', 'getCategoryAttributeTypeService', false],
            'Zikula\\CategoriesModule\\Form\\Type\\CategoryRegistryType' => ['privates', 'Zikula\\CategoriesModule\\Form\\Type\\CategoryRegistryType', 'getCategoryRegistryTypeService', false],
            'Zikula\\CategoriesModule\\Form\\Type\\CategoryTreeType' => ['privates', 'Zikula\\CategoriesModule\\Form\\Type\\CategoryTreeType', 'getCategoryTreeTypeService', false],
            'Zikula\\CategoriesModule\\Form\\Type\\CategoryType' => ['privates', 'Zikula\\CategoriesModule\\Form\\Type\\CategoryType', 'getCategoryTypeService', false],
            'Zikula\\ExtensionsModule\\Form\\Type\\ConfigType' => ['privates', 'Zikula\\ExtensionsModule\\Form\\Type\\ConfigType', 'getConfigType3Service', false],
            'Zikula\\ExtensionsModule\\Form\\Type\\ExtensionInstallType' => ['privates', 'Zikula\\ExtensionsModule\\Form\\Type\\ExtensionInstallType', 'getExtensionInstallTypeService', false],
            'Zikula\\ExtensionsModule\\Form\\Type\\ExtensionModifyType' => ['privates', 'Zikula\\ExtensionsModule\\Form\\Type\\ExtensionModifyType', 'getExtensionModifyTypeService', false],
            'Zikula\\GroupsModule\\Form\\Type\\ConfigType' => ['privates', 'Zikula\\GroupsModule\\Form\\Type\\ConfigType', 'getConfigType4Service', false],
            'Zikula\\GroupsModule\\Form\\Type\\CreateGroupType' => ['privates', 'Zikula\\GroupsModule\\Form\\Type\\CreateGroupType', 'getCreateGroupTypeService', false],
            'Zikula\\GroupsModule\\Form\\Type\\EditGroupType' => ['privates', 'Zikula\\GroupsModule\\Form\\Type\\EditGroupType', 'getEditGroupTypeService', false],
            'Zikula\\GroupsModule\\Form\\Type\\ManageApplicationType' => ['privates', 'Zikula\\GroupsModule\\Form\\Type\\ManageApplicationType', 'getManageApplicationTypeService', false],
            'Zikula\\GroupsModule\\Form\\Type\\MembershipApplicationType' => ['privates', 'Zikula\\GroupsModule\\Form\\Type\\MembershipApplicationType', 'getMembershipApplicationTypeService', false],
            'Zikula\\GroupsModule\\Form\\Type\\RemoveUserType' => ['privates', 'Zikula\\GroupsModule\\Form\\Type\\RemoveUserType', 'getRemoveUserTypeService', false],
            'Zikula\\MailerModule\\Form\\Type\\ConfigType' => ['privates', 'Zikula\\MailerModule\\Form\\Type\\ConfigType', 'getConfigType5Service', false],
            'Zikula\\MailerModule\\Form\\Type\\TestType' => ['privates', 'Zikula\\MailerModule\\Form\\Type\\TestType', 'getTestTypeService', false],
            'Zikula\\MenuModule\\Block\\Form\\Type\\MenuType' => ['privates', 'Zikula\\MenuModule\\Block\\Form\\Type\\MenuType', 'getMenuTypeService', false],
            'Zikula\\MenuModule\\Form\\Type\\DeleteMenuItemType' => ['privates', 'Zikula\\MenuModule\\Form\\Type\\DeleteMenuItemType', 'getDeleteMenuItemTypeService', false],
            'Zikula\\MenuModule\\Form\\Type\\HiddenMenuItemType' => ['privates', 'Zikula\\MenuModule\\Form\\Type\\HiddenMenuItemType', 'getHiddenMenuItemTypeService', false],
            'Zikula\\MenuModule\\Form\\Type\\KeyValuePairType' => ['privates', 'Zikula\\MenuModule\\Form\\Type\\KeyValuePairType', 'getKeyValuePairTypeService', false],
            'Zikula\\MenuModule\\Form\\Type\\MenuItemType' => ['privates', 'Zikula\\MenuModule\\Form\\Type\\MenuItemType', 'getMenuItemTypeService', false],
            'Zikula\\PermissionsModule\\Form\\Type\\ConfigType' => ['privates', 'Zikula\\PermissionsModule\\Form\\Type\\ConfigType', 'getConfigType6Service', false],
            'Zikula\\PermissionsModule\\Form\\Type\\FilterListType' => ['privates', 'Zikula\\PermissionsModule\\Form\\Type\\FilterListType', 'getFilterListTypeService', false],
            'Zikula\\PermissionsModule\\Form\\Type\\PermissionCheckType' => ['privates', 'Zikula\\PermissionsModule\\Form\\Type\\PermissionCheckType', 'getPermissionCheckTypeService', false],
            'Zikula\\PermissionsModule\\Form\\Type\\PermissionType' => ['privates', 'Zikula\\PermissionsModule\\Form\\Type\\PermissionType', 'getPermissionTypeService', false],
            'Zikula\\RoutesModule\\Form\\Type\\ConfigType' => ['privates', 'Zikula\\RoutesModule\\Form\\Type\\ConfigType', 'getConfigType7Service', false],
            'Zikula\\RoutesModule\\Form\\Type\\Field\\ArrayType' => ['privates', 'Zikula\\RoutesModule\\Form\\Type\\Field\\ArrayType', 'getArrayTypeService', false],
            'Zikula\\RoutesModule\\Form\\Type\\Field\\MultiListType' => ['privates', 'Zikula\\RoutesModule\\Form\\Type\\Field\\MultiListType', 'getMultiListTypeService', false],
            'Zikula\\RoutesModule\\Form\\Type\\QuickNavigation\\RouteQuickNavType' => ['privates', 'Zikula\\RoutesModule\\Form\\Type\\QuickNavigation\\RouteQuickNavType', 'getRouteQuickNavTypeService', false],
            'Zikula\\RoutesModule\\Form\\Type\\RouteType' => ['privates', 'Zikula\\RoutesModule\\Form\\Type\\RouteType', 'getRouteTypeService', false],
            'Zikula\\SearchModule\\Block\\Form\\Type\\SearchBlockType' => ['privates', 'Zikula\\SearchModule\\Block\\Form\\Type\\SearchBlockType', 'getSearchBlockTypeService', false],
            'Zikula\\SearchModule\\Form\\Type\\AmendableModuleSearchType' => ['privates', 'Zikula\\SearchModule\\Form\\Type\\AmendableModuleSearchType', 'getAmendableModuleSearchTypeService', false],
            'Zikula\\SearchModule\\Form\\Type\\ConfigType' => ['privates', 'Zikula\\SearchModule\\Form\\Type\\ConfigType', 'getConfigType8Service', false],
            'Zikula\\SearchModule\\Form\\Type\\SearchType' => ['privates', 'Zikula\\SearchModule\\Form\\Type\\SearchType', 'getSearchTypeService', false],
            'Zikula\\SecurityCenterModule\\Form\\Type\\ConfigType' => ['privates', 'Zikula\\SecurityCenterModule\\Form\\Type\\ConfigType', 'getConfigType9Service', false],
            'Zikula\\SecurityCenterModule\\Form\\Type\\IdsLogExportType' => ['privates', 'Zikula\\SecurityCenterModule\\Form\\Type\\IdsLogExportType', 'getIdsLogExportTypeService', false],
            'Zikula\\SecurityCenterModule\\Form\\Type\\IdsLogFilterType' => ['privates', 'Zikula\\SecurityCenterModule\\Form\\Type\\IdsLogFilterType', 'getIdsLogFilterTypeService', false],
            'Zikula\\SettingsModule\\Form\\Type\\LocaleSettingsType' => ['privates', 'Zikula\\SettingsModule\\Form\\Type\\LocaleSettingsType', 'getLocaleSettingsTypeService', false],
            'Zikula\\SettingsModule\\Form\\Type\\MainSettingsType' => ['privates', 'Zikula\\SettingsModule\\Form\\Type\\MainSettingsType', 'getMainSettingsTypeService', false],
            'Zikula\\ThemeModule\\Form\\Type\\DeleteThemeType' => ['privates', 'Zikula\\ThemeModule\\Form\\Type\\DeleteThemeType', 'getDeleteThemeTypeService', false],
            'Zikula\\ThemeModule\\Form\\Type\\SetDefaultThemeType' => ['privates', 'Zikula\\ThemeModule\\Form\\Type\\SetDefaultThemeType', 'getSetDefaultThemeTypeService', false],
            'Zikula\\UsersModule\\Form\\Type\\AdminModifyUserType' => ['privates', 'Zikula\\UsersModule\\Form\\Type\\AdminModifyUserType', 'getAdminModifyUserTypeService', false],
            'Zikula\\UsersModule\\Form\\Type\\ChangeLanguageType' => ['privates', 'Zikula\\UsersModule\\Form\\Type\\ChangeLanguageType', 'getChangeLanguageTypeService', false],
            'Zikula\\UsersModule\\Form\\Type\\ConfigType\\AuthenticationMethodsType' => ['privates', 'Zikula\\UsersModule\\Form\\Type\\ConfigType\\AuthenticationMethodsType', 'getAuthenticationMethodsTypeService', false],
            'Zikula\\UsersModule\\Form\\Type\\ConfigType\\ConfigType' => ['privates', 'Zikula\\UsersModule\\Form\\Type\\ConfigType\\ConfigType', 'getConfigType10Service', false],
            'Zikula\\UsersModule\\Form\\Type\\DefaultLoginType' => ['privates', 'Zikula\\UsersModule\\Form\\Type\\DefaultLoginType', 'getDefaultLoginTypeService', false],
            'Zikula\\UsersModule\\Form\\Type\\DeleteConfirmationType' => ['privates', 'Zikula\\UsersModule\\Form\\Type\\DeleteConfirmationType', 'getDeleteConfirmationTypeService', false],
            'Zikula\\UsersModule\\Form\\Type\\DeleteType' => ['privates', 'Zikula\\UsersModule\\Form\\Type\\DeleteType', 'getDeleteTypeService', false],
            'Zikula\\UsersModule\\Form\\Type\\ExportUsersType' => ['privates', 'Zikula\\UsersModule\\Form\\Type\\ExportUsersType', 'getExportUsersTypeService', false],
            'Zikula\\UsersModule\\Form\\Type\\MailType' => ['privates', 'Zikula\\UsersModule\\Form\\Type\\MailType', 'getMailTypeService', false],
            'Zikula\\UsersModule\\Form\\Type\\RegistrationType\\ApproveRegistrationConfirmationType' => ['privates', 'Zikula\\UsersModule\\Form\\Type\\RegistrationType\\ApproveRegistrationConfirmationType', 'getApproveRegistrationConfirmationTypeService', false],
            'Zikula\\UsersModule\\Form\\Type\\RegistrationType\\DefaultRegistrationType' => ['privates', 'Zikula\\UsersModule\\Form\\Type\\RegistrationType\\DefaultRegistrationType', 'getDefaultRegistrationTypeService', false],
            'Zikula\\UsersModule\\Form\\Type\\SearchUserType' => ['privates', 'Zikula\\UsersModule\\Form\\Type\\SearchUserType', 'getSearchUserTypeService', false],
            'Zikula\\UsersModule\\Form\\Type\\UserLiveSearchType' => ['privates', 'Zikula\\UsersModule\\Form\\Type\\UserLiveSearchType', 'getUserLiveSearchTypeService', false],
            'Zikula\\ZAuthModule\\Form\\Type\\AdminCreatedUserType' => ['privates', 'Zikula\\ZAuthModule\\Form\\Type\\AdminCreatedUserType', 'getAdminCreatedUserTypeService', false],
            'Zikula\\ZAuthModule\\Form\\Type\\AdminModifyUserType' => ['privates', 'Zikula\\ZAuthModule\\Form\\Type\\AdminModifyUserType', 'getAdminModifyUserType2Service', false],
            'Zikula\\ZAuthModule\\Form\\Type\\ChangeEmailType' => ['privates', 'Zikula\\ZAuthModule\\Form\\Type\\ChangeEmailType', 'getChangeEmailTypeService', false],
            'Zikula\\ZAuthModule\\Form\\Type\\ChangePasswordType' => ['privates', 'Zikula\\ZAuthModule\\Form\\Type\\ChangePasswordType', 'getChangePasswordTypeService', false],
            'Zikula\\ZAuthModule\\Form\\Type\\ConfigType' => ['privates', 'Zikula\\ZAuthModule\\Form\\Type\\ConfigType', 'getConfigType11Service', false],
            'Zikula\\ZAuthModule\\Form\\Type\\EitherLoginType' => ['privates', 'Zikula\\ZAuthModule\\Form\\Type\\EitherLoginType', 'getEitherLoginTypeService', false],
            'Zikula\\ZAuthModule\\Form\\Type\\EmailLoginType' => ['privates', 'Zikula\\ZAuthModule\\Form\\Type\\EmailLoginType', 'getEmailLoginTypeService', false],
            'Zikula\\ZAuthModule\\Form\\Type\\ImportUserType' => ['privates', 'Zikula\\ZAuthModule\\Form\\Type\\ImportUserType', 'getImportUserTypeService', false],
            'Zikula\\ZAuthModule\\Form\\Type\\LostPasswordType' => ['privates', 'Zikula\\ZAuthModule\\Form\\Type\\LostPasswordType', 'getLostPasswordTypeService', false],
            'Zikula\\ZAuthModule\\Form\\Type\\LostUserNameType' => ['privates', 'Zikula\\ZAuthModule\\Form\\Type\\LostUserNameType', 'getLostUserNameTypeService', false],
            'Zikula\\ZAuthModule\\Form\\Type\\RegistrationType' => ['privates', 'Zikula\\ZAuthModule\\Form\\Type\\RegistrationType', 'getRegistrationTypeService', false],
            'Zikula\\ZAuthModule\\Form\\Type\\SendVerificationConfirmationType' => ['privates', 'Zikula\\ZAuthModule\\Form\\Type\\SendVerificationConfirmationType', 'getSendVerificationConfirmationTypeService', false],
            'Zikula\\ZAuthModule\\Form\\Type\\TogglePasswordConfirmationType' => ['privates', 'Zikula\\ZAuthModule\\Form\\Type\\TogglePasswordConfirmationType', 'getTogglePasswordConfirmationTypeService', false],
            'Zikula\\ZAuthModule\\Form\\Type\\UnameLoginType' => ['privates', 'Zikula\\ZAuthModule\\Form\\Type\\UnameLoginType', 'getUnameLoginTypeService', false],
            'Zikula\\ZAuthModule\\Form\\Type\\VerifyRegistrationType' => ['privates', 'Zikula\\ZAuthModule\\Form\\Type\\VerifyRegistrationType', 'getVerifyRegistrationTypeService', false],
        ], [
            'Liip\\ImagineBundle\\Form\\Type\\ImageType' => '?',
            'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => '?',
            'Zikula\\AdminModule\\Form\\Type\\AdminCategoryType' => '?',
            'Zikula\\AdminModule\\Form\\Type\\ConfigType' => '?',
            'Zikula\\BlocksModule\\Block\\Form\\Type\\FincludeBlockType' => '?',
            'Zikula\\BlocksModule\\Block\\Form\\Type\\HtmlBlockType' => '?',
            'Zikula\\BlocksModule\\Block\\Form\\Type\\TextBlockType' => '?',
            'Zikula\\BlocksModule\\Block\\Form\\Type\\XsltBlockType' => '?',
            'Zikula\\BlocksModule\\Form\\Type\\AdminViewFilterType' => '?',
            'Zikula\\BlocksModule\\Form\\Type\\BlockFilterType' => '?',
            'Zikula\\BlocksModule\\Form\\Type\\BlockPositionType' => '?',
            'Zikula\\BlocksModule\\Form\\Type\\BlockType' => '?',
            'Zikula\\BlocksModule\\Form\\Type\\ConfigType' => '?',
            'Zikula\\BlocksModule\\Form\\Type\\NewBlockType' => '?',
            'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\CreateAdminType' => '?',
            'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\DbCredsType' => '?',
            'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\LocaleType' => '?',
            'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\LoginType' => '?',
            'Zikula\\Bundle\\CoreInstallerBundle\\Form\\Type\\RequestContextType' => '?',
            'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DeletionType' => '?',
            'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicFieldType' => '?',
            'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\ChoiceFormOptionsArrayType' => '?',
            'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\DateTimeFormOptionsArrayType' => '?',
            'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\FormOptionsArrayType' => '?',
            'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\MoneyFormOptionsArrayType' => '?',
            'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\DynamicOptions\\RegexibleFormOptionsArrayType' => '?',
            'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\IconType' => '?',
            'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\InlineFormDefinitionType' => '?',
            'Zikula\\Bundle\\FormExtensionBundle\\Form\\Type\\LocaleType' => '?',
            'Zikula\\CategoriesModule\\Form\\Type\\CategoriesType' => '?',
            'Zikula\\CategoriesModule\\Form\\Type\\CategoryAttributeType' => '?',
            'Zikula\\CategoriesModule\\Form\\Type\\CategoryRegistryType' => '?',
            'Zikula\\CategoriesModule\\Form\\Type\\CategoryTreeType' => '?',
            'Zikula\\CategoriesModule\\Form\\Type\\CategoryType' => '?',
            'Zikula\\ExtensionsModule\\Form\\Type\\ConfigType' => '?',
            'Zikula\\ExtensionsModule\\Form\\Type\\ExtensionInstallType' => '?',
            'Zikula\\ExtensionsModule\\Form\\Type\\ExtensionModifyType' => '?',
            'Zikula\\GroupsModule\\Form\\Type\\ConfigType' => '?',
            'Zikula\\GroupsModule\\Form\\Type\\CreateGroupType' => '?',
            'Zikula\\GroupsModule\\Form\\Type\\EditGroupType' => '?',
            'Zikula\\GroupsModule\\Form\\Type\\ManageApplicationType' => '?',
            'Zikula\\GroupsModule\\Form\\Type\\MembershipApplicationType' => '?',
            'Zikula\\GroupsModule\\Form\\Type\\RemoveUserType' => '?',
            'Zikula\\MailerModule\\Form\\Type\\ConfigType' => '?',
            'Zikula\\MailerModule\\Form\\Type\\TestType' => '?',
            'Zikula\\MenuModule\\Block\\Form\\Type\\MenuType' => '?',
            'Zikula\\MenuModule\\Form\\Type\\DeleteMenuItemType' => '?',
            'Zikula\\MenuModule\\Form\\Type\\HiddenMenuItemType' => '?',
            'Zikula\\MenuModule\\Form\\Type\\KeyValuePairType' => '?',
            'Zikula\\MenuModule\\Form\\Type\\MenuItemType' => '?',
            'Zikula\\PermissionsModule\\Form\\Type\\ConfigType' => '?',
            'Zikula\\PermissionsModule\\Form\\Type\\FilterListType' => '?',
            'Zikula\\PermissionsModule\\Form\\Type\\PermissionCheckType' => '?',
            'Zikula\\PermissionsModule\\Form\\Type\\PermissionType' => '?',
            'Zikula\\RoutesModule\\Form\\Type\\ConfigType' => '?',
            'Zikula\\RoutesModule\\Form\\Type\\Field\\ArrayType' => '?',
            'Zikula\\RoutesModule\\Form\\Type\\Field\\MultiListType' => '?',
            'Zikula\\RoutesModule\\Form\\Type\\QuickNavigation\\RouteQuickNavType' => '?',
            'Zikula\\RoutesModule\\Form\\Type\\RouteType' => '?',
            'Zikula\\SearchModule\\Block\\Form\\Type\\SearchBlockType' => '?',
            'Zikula\\SearchModule\\Form\\Type\\AmendableModuleSearchType' => '?',
            'Zikula\\SearchModule\\Form\\Type\\ConfigType' => '?',
            'Zikula\\SearchModule\\Form\\Type\\SearchType' => '?',
            'Zikula\\SecurityCenterModule\\Form\\Type\\ConfigType' => '?',
            'Zikula\\SecurityCenterModule\\Form\\Type\\IdsLogExportType' => '?',
            'Zikula\\SecurityCenterModule\\Form\\Type\\IdsLogFilterType' => '?',
            'Zikula\\SettingsModule\\Form\\Type\\LocaleSettingsType' => '?',
            'Zikula\\SettingsModule\\Form\\Type\\MainSettingsType' => '?',
            'Zikula\\ThemeModule\\Form\\Type\\DeleteThemeType' => '?',
            'Zikula\\ThemeModule\\Form\\Type\\SetDefaultThemeType' => '?',
            'Zikula\\UsersModule\\Form\\Type\\AdminModifyUserType' => '?',
            'Zikula\\UsersModule\\Form\\Type\\ChangeLanguageType' => '?',
            'Zikula\\UsersModule\\Form\\Type\\ConfigType\\AuthenticationMethodsType' => '?',
            'Zikula\\UsersModule\\Form\\Type\\ConfigType\\ConfigType' => '?',
            'Zikula\\UsersModule\\Form\\Type\\DefaultLoginType' => '?',
            'Zikula\\UsersModule\\Form\\Type\\DeleteConfirmationType' => '?',
            'Zikula\\UsersModule\\Form\\Type\\DeleteType' => '?',
            'Zikula\\UsersModule\\Form\\Type\\ExportUsersType' => '?',
            'Zikula\\UsersModule\\Form\\Type\\MailType' => '?',
            'Zikula\\UsersModule\\Form\\Type\\RegistrationType\\ApproveRegistrationConfirmationType' => '?',
            'Zikula\\UsersModule\\Form\\Type\\RegistrationType\\DefaultRegistrationType' => '?',
            'Zikula\\UsersModule\\Form\\Type\\SearchUserType' => '?',
            'Zikula\\UsersModule\\Form\\Type\\UserLiveSearchType' => '?',
            'Zikula\\ZAuthModule\\Form\\Type\\AdminCreatedUserType' => '?',
            'Zikula\\ZAuthModule\\Form\\Type\\AdminModifyUserType' => '?',
            'Zikula\\ZAuthModule\\Form\\Type\\ChangeEmailType' => '?',
            'Zikula\\ZAuthModule\\Form\\Type\\ChangePasswordType' => '?',
            'Zikula\\ZAuthModule\\Form\\Type\\ConfigType' => '?',
            'Zikula\\ZAuthModule\\Form\\Type\\EitherLoginType' => '?',
            'Zikula\\ZAuthModule\\Form\\Type\\EmailLoginType' => '?',
            'Zikula\\ZAuthModule\\Form\\Type\\ImportUserType' => '?',
            'Zikula\\ZAuthModule\\Form\\Type\\LostPasswordType' => '?',
            'Zikula\\ZAuthModule\\Form\\Type\\LostUserNameType' => '?',
            'Zikula\\ZAuthModule\\Form\\Type\\RegistrationType' => '?',
            'Zikula\\ZAuthModule\\Form\\Type\\SendVerificationConfirmationType' => '?',
            'Zikula\\ZAuthModule\\Form\\Type\\TogglePasswordConfirmationType' => '?',
            'Zikula\\ZAuthModule\\Form\\Type\\UnameLoginType' => '?',
            'Zikula\\ZAuthModule\\Form\\Type\\VerifyRegistrationType' => '?',
        ]), ['Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['form.type_extension.form.transformation_failure_handling'] ?? $this->getForm_TypeExtension_Form_TransformationFailureHandlingService());
            yield 1 => ($this->privates['form.type_extension.form.http_foundation'] ?? $this->getForm_TypeExtension_Form_HttpFoundationService());
            yield 2 => ($this->privates['form.type_extension.form.validator'] ?? $this->getForm_TypeExtension_Form_ValidatorService());
            yield 3 => ($this->privates['form.type_extension.upload.validator'] ?? $this->getForm_TypeExtension_Upload_ValidatorService());
            yield 4 => ($this->privates['form.type_extension.csrf'] ?? $this->getForm_TypeExtension_CsrfService());
            yield 5 => ($this->privates['Zikula\\Bundle\\FormExtensionBundle\\Form\\Extension\\FormTypeHelpExtension'] ?? ($this->privates['Zikula\\Bundle\\FormExtensionBundle\\Form\\Extension\\FormTypeHelpExtension'] = new \Zikula\Bundle\FormExtensionBundle\Form\Extension\FormTypeHelpExtension()));
            yield 6 => ($this->services['matthias_symfony_console_form.console_form_type_extension'] ?? ($this->services['matthias_symfony_console_form.console_form_type_extension'] = new \Matthias\SymfonyConsoleForm\Form\ConsoleFormTypeExtension()));
        }, 7), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['form.type_extension.repeated.validator'] ?? ($this->privates['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension()));
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['form.type_extension.submit.validator'] ?? ($this->privates['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension()));
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\ButtonType' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['Zikula\\Bundle\\FormExtensionBundle\\Form\\Extension\\ButtonTypeIconExtension'] ?? ($this->privates['Zikula\\Bundle\\FormExtensionBundle\\Form\\Extension\\ButtonTypeIconExtension'] = new \Zikula\Bundle\FormExtensionBundle\Form\Extension\ButtonTypeIconExtension()));
        }, 1)], new RewindableGenerator(function () {
            yield 0 => ($this->privates['form.type_guesser.validator'] ?? $this->getForm_TypeGuesser_ValidatorService());
            yield 1 => ($this->privates['form.type_guesser.doctrine'] ?? $this->getForm_TypeGuesser_DoctrineService());
        }, 2))], new \Symfony\Component\Form\ResolvedFormTypeFactory());
    }

    /**
     * Gets the private 'form.server_params' shared service.
     *
     * @return \Symfony\Component\Form\Util\ServerParams
     */
    protected function getForm_ServerParamsService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Util/ServerParams.php';

        return $this->privates['form.server_params'] = new \Symfony\Component\Form\Util\ServerParams(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }

    /**
     * Gets the private 'form.type.choice' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\ChoiceType
     */
    protected function getForm_Type_ChoiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/ChoiceType.php';

        return $this->privates['form.type.choice'] = new \Symfony\Component\Form\Extension\Core\Type\ChoiceType(($this->privates['form.choice_list_factory.cached'] ?? $this->getForm_ChoiceListFactory_CachedService()));
    }

    /**
     * Gets the private 'form.type.entity' shared service.
     *
     * @return \Symfony\Bridge\Doctrine\Form\Type\EntityType
     */
    protected function getForm_Type_EntityService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/Form/Type/DoctrineType.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/Form/Type/EntityType.php';

        return $this->privates['form.type.entity'] = new \Symfony\Bridge\Doctrine\Form\Type\EntityType(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'form.type.form' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\FormType
     */
    protected function getForm_Type_FormService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/BaseType.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/FormType.php';

        return $this->privates['form.type.form'] = new \Symfony\Component\Form\Extension\Core\Type\FormType(($this->privates['property_accessor'] ?? $this->getPropertyAccessorService()));
    }

    /**
     * Gets the private 'form.type_extension.csrf' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension
     */
    protected function getForm_TypeExtension_CsrfService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractTypeExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Csrf/Type/FormTypeCsrfExtension.php';

        return $this->privates['form.type_extension.csrf'] = new \Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension(($this->services['security.csrf.token_manager'] ?? $this->getSecurity_Csrf_TokenManagerService()), true, '_token', ($this->services['translator'] ?? $this->getTranslatorService()), 'validators', ($this->privates['form.server_params'] ?? $this->getForm_ServerParamsService()));
    }

    /**
     * Gets the private 'form.type_extension.form.http_foundation' shared service.
     *
     * @return \Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension
     */
    protected function getForm_TypeExtension_Form_HttpFoundationService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractTypeExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/HttpFoundation/Type/FormTypeHttpFoundationExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/RequestHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/HttpFoundation/HttpFoundationRequestHandler.php';

        return $this->privates['form.type_extension.form.http_foundation'] = new \Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension(new \Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler(($this->privates['form.server_params'] ?? $this->getForm_ServerParamsService())));
    }

    /**
     * Gets the private 'form.type_extension.form.transformation_failure_handling' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension
     */
    protected function getForm_TypeExtension_Form_TransformationFailureHandlingService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractTypeExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/TransformationFailureExtension.php';

        return $this->privates['form.type_extension.form.transformation_failure_handling'] = new \Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension(($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /**
     * Gets the private 'form.type_extension.form.validator' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension
     */
    protected function getForm_TypeExtension_Form_ValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractTypeExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Validator/Type/BaseValidatorExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Validator/Type/FormTypeValidatorExtension.php';

        return $this->privates['form.type_extension.form.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension(($this->services['validator'] ?? $this->getValidatorService()));
    }

    /**
     * Gets the private 'form.type_extension.upload.validator' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension
     */
    protected function getForm_TypeExtension_Upload_ValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractTypeExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Validator/Type/UploadValidatorExtension.php';

        return $this->privates['form.type_extension.upload.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension(($this->services['translator'] ?? $this->getTranslatorService()), 'validators');
    }

    /**
     * Gets the private 'form.type_guesser.doctrine' shared service.
     *
     * @return \Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser
     */
    protected function getForm_TypeGuesser_DoctrineService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeGuesserInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/Form/DoctrineOrmTypeGuesser.php';

        return $this->privates['form.type_guesser.doctrine'] = new \Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser(($this->services['doctrine'] ?? $this->getDoctrineService()));
    }

    /**
     * Gets the private 'form.type_guesser.validator' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser
     */
    protected function getForm_TypeGuesser_ValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeGuesserInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Validator/ValidatorTypeGuesser.php';

        return $this->privates['form.type_guesser.validator'] = new \Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser(($this->services['validator'] ?? $this->getValidatorService()));
    }

    /**
     * Gets the private 'fos_js_routing.dump_command' shared service.
     *
     * @return \FOS\JsRoutingBundle\Command\DumpCommand
     */
    protected function getFosJsRouting_DumpCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/friendsofsymfony/jsrouting-bundle/Command/DumpCommand.php';

        $this->privates['fos_js_routing.dump_command'] = $instance = new \FOS\JsRoutingBundle\Command\DumpCommand(($this->services['fos_js_routing.extractor'] ?? $this->getFosJsRouting_ExtractorService()), ($this->services['fos_js_routing.serializer'] ?? $this->getFosJsRouting_SerializerService()), \dirname(__DIR__, 4), NULL);

        $instance->setName('fos:js-routing:dump');

        return $instance;
    }

    /**
     * Gets the private 'fos_js_routing.router_debug_exposed_command' shared service.
     *
     * @return \FOS\JsRoutingBundle\Command\RouterDebugExposedCommand
     */
    protected function getFosJsRouting_RouterDebugExposedCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/friendsofsymfony/jsrouting-bundle/Command/RouterDebugExposedCommand.php';

        $this->privates['fos_js_routing.router_debug_exposed_command'] = $instance = new \FOS\JsRoutingBundle\Command\RouterDebugExposedCommand(($this->services['fos_js_routing.extractor'] ?? $this->getFosJsRouting_ExtractorService()), ($this->services['router'] ?? $this->getRouterService()));

        $instance->setName('fos:js-routing:debug');

        return $instance;
    }

    /**
     * Gets the private 'fragment.handler' shared service.
     *
     * @return \Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler
     */
    protected function getFragment_HandlerService()
    {
        return $this->privates['fragment.handler'] = new \Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'inline' => ['privates', 'fragment.renderer.inline', 'getFragment_Renderer_InlineService', false],
        ], [
            'inline' => '?',
        ]), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), true);
    }

    /**
     * Gets the private 'fragment.renderer.inline' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer
     */
    protected function getFragment_Renderer_InlineService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Fragment/FragmentRendererInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Fragment/RoutableFragmentRenderer.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Fragment/InlineFragmentRenderer.php';

        $this->privates['fragment.renderer.inline'] = $instance = new \Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer(($this->services['http_kernel'] ?? $this->getHttpKernelService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));

        $instance->setFragmentPath('/_fragment');

        return $instance;
    }

    /**
     * Gets the private 'framework_extra_bundle.argument_name_convertor' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter
     */
    protected function getFrameworkExtraBundle_ArgumentNameConvertorService()
    {
        return $this->privates['framework_extra_bundle.argument_name_convertor'] = new \Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter(($this->privates['argument_metadata_factory'] ?? ($this->privates['argument_metadata_factory'] = new \Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory())));
    }

    /**
     * Gets the private 'framework_extra_bundle.event.is_granted' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener
     */
    protected function getFrameworkExtraBundle_Event_IsGrantedService()
    {
        return $this->privates['framework_extra_bundle.event.is_granted'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener(($this->privates['framework_extra_bundle.argument_name_convertor'] ?? $this->getFrameworkExtraBundle_ArgumentNameConvertorService()), ($this->services['security.authorization_checker'] ?? $this->getSecurity_AuthorizationCheckerService()));
    }

    /**
     * Gets the private 'jms_i18n_routing.route_exclusion_strategy' shared autowired service.
     *
     * @return \Zikula\RoutesModule\Translation\DefaultRouteExclusionStrategy
     */
    protected function getJmsI18nRouting_RouteExclusionStrategyService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/jms/i18n-routing-bundle/JMS/I18nRoutingBundle/Router/RouteExclusionStrategyInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/jms/i18n-routing-bundle/JMS/I18nRoutingBundle/Router/DefaultRouteExclusionStrategy.php';
        include_once \dirname(__DIR__, 4).'/src/system/RoutesModule/Translation/DefaultRouteExclusionStrategy.php';

        return $this->privates['jms_i18n_routing.route_exclusion_strategy'] = new \Zikula\RoutesModule\Translation\DefaultRouteExclusionStrategy(($this->privates['Zikula\\RoutesModule\\Helper\\ExtractTranslationHelper'] ?? $this->getExtractTranslationHelperService()));
    }

    /**
     * Gets the private 'knp_menu.menu_provider.builder_alias' shared service.
     *
     * @return \Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider
     */
    protected function getKnpMenu_MenuProvider_BuilderAliasService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu-bundle/src/Provider/BuilderAliasProvider.php';

        return $this->privates['knp_menu.menu_provider.builder_alias'] = new \Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider(($this->services['kernel'] ?? $this->get('kernel', 1)), $this, ($this->services['knp_menu.factory'] ?? $this->getKnpMenu_FactoryService()));
    }

    /**
     * Gets the private 'knp_menu.menu_provider.lazy' shared service.
     *
     * @return \Knp\Menu\Provider\LazyProvider
     */
    protected function getKnpMenu_MenuProvider_LazyService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Provider/LazyProvider.php';

        return $this->privates['knp_menu.menu_provider.lazy'] = new \Knp\Menu\Provider\LazyProvider(['zikulaExtensionsAdminMenu' => [0 => function () {
            return ($this->privates['Zikula\\ExtensionsModule\\Menu\\MenuBuilder'] ?? $this->getMenuBuilderService());
        }, 1 => 'createAdminMenu'], 'zikulaGroupsAdminMenu' => [0 => function () {
            return ($this->privates['Zikula\\GroupsModule\\Menu\\MenuBuilder'] ?? $this->getMenuBuilder2Service());
        }, 1 => 'createAdminMenu'], 'zikulaGroupsUserMenu' => [0 => function () {
            return ($this->privates['Zikula\\GroupsModule\\Menu\\MenuBuilder'] ?? $this->getMenuBuilder2Service());
        }, 1 => 'createUserMenu'], 'zikulaMenuAdminMenu' => [0 => function () {
            return ($this->privates['Zikula\\MenuModule\\Menu\\MenuBuilder'] ?? $this->getMenuBuilder3Service());
        }, 1 => 'createAdminMenu'], 'zikulaMenuAdminActionsMenu' => [0 => function () {
            return ($this->privates['Zikula\\MenuModule\\Menu\\MenuBuilder'] ?? $this->getMenuBuilder3Service());
        }, 1 => 'createAdminActionsMenu'], 'zikulaPermissionsAdminActionsMenu' => [0 => function () {
            return ($this->privates['Zikula\\PermissionsModule\\Menu\\MenuBuilder'] ?? $this->getMenuBuilder4Service());
        }, 1 => 'createAdminActionsMenu'], 'zikulaRoutesMenuItemActions' => [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Menu\\MenuBuilder'] ?? $this->getMenuBuilder5Service());
        }, 1 => 'createItemActionsMenu'], 'zikulaRoutesMenuViewActions' => [0 => function () {
            return ($this->privates['Zikula\\RoutesModule\\Menu\\MenuBuilder'] ?? $this->getMenuBuilder5Service());
        }, 1 => 'createViewActionsMenu']]);
    }

    /**
     * Gets the private 'knp_menu.renderer.list' shared service.
     *
     * @return \Knp\Menu\Renderer\ListRenderer
     */
    protected function getKnpMenu_Renderer_ListService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Renderer/Renderer.php';
        include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Renderer/RendererInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Renderer/ListRenderer.php';

        return $this->privates['knp_menu.renderer.list'] = new \Knp\Menu\Renderer\ListRenderer(($this->services['knp_menu.matcher'] ?? $this->getKnpMenu_MatcherService()), [], 'UTF-8');
    }

    /**
     * Gets the private 'knp_menu.renderer.twig' shared service.
     *
     * @return \Knp\Menu\Renderer\TwigRenderer
     */
    protected function getKnpMenu_Renderer_TwigService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Renderer/RendererInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Renderer/TwigRenderer.php';

        return $this->privates['knp_menu.renderer.twig'] = new \Knp\Menu\Renderer\TwigRenderer(($this->services['twig'] ?? $this->getTwigService()), '@KnpMenu/menu.html.twig', ($this->services['knp_menu.matcher'] ?? $this->getKnpMenu_MatcherService()), []);
    }

    /**
     * Gets the private 'knp_menu.voter.router' shared service.
     *
     * @return \Knp\Menu\Matcher\Voter\RouteVoter
     */
    protected function getKnpMenu_Voter_RouterService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Matcher/Voter/VoterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Matcher/Voter/RouteVoter.php';

        return $this->privates['knp_menu.voter.router'] = new \Knp\Menu\Matcher\Voter\RouteVoter(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }

    /**
     * Gets the private 'liip_imagine.binary.mime_type_guesser' shared service.
     *
     * @return \Liip\ImagineBundle\Binary\SimpleMimeTypeGuesser
     */
    protected function getLiipImagine_Binary_MimeTypeGuesserService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Binary/MimeTypeGuesserInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Binary/SimpleMimeTypeGuesser.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Mime/MimeTypeGuesserInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Mime/MimeTypesInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Mime/MimeTypes.php';

        return $this->privates['liip_imagine.binary.mime_type_guesser'] = new \Liip\ImagineBundle\Binary\SimpleMimeTypeGuesser(\Symfony\Component\Mime\MimeTypes::getDefault());
    }

    /**
     * Gets the private 'liip_imagine.command.cache_remove' shared service.
     *
     * @return \Liip\ImagineBundle\Command\RemoveCacheCommand
     */
    protected function getLiipImagine_Command_CacheRemoveService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Command/CacheCommandTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Command/RemoveCacheCommand.php';

        $this->privates['liip_imagine.command.cache_remove'] = $instance = new \Liip\ImagineBundle\Command\RemoveCacheCommand(($this->services['liip_imagine.cache.manager'] ?? $this->getLiipImagine_Cache_ManagerService()), ($this->services['liip_imagine.filter.manager'] ?? $this->getLiipImagine_Filter_ManagerService()));

        $instance->setName('liip:imagine:cache:remove');

        return $instance;
    }

    /**
     * Gets the private 'liip_imagine.command.cache_resolve' shared service.
     *
     * @return \Liip\ImagineBundle\Command\ResolveCacheCommand
     */
    protected function getLiipImagine_Command_CacheResolveService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Command/CacheCommandTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Command/ResolveCacheCommand.php';

        $this->privates['liip_imagine.command.cache_resolve'] = $instance = new \Liip\ImagineBundle\Command\ResolveCacheCommand(($this->services['liip_imagine.data.manager'] ?? $this->getLiipImagine_Data_ManagerService()), ($this->services['liip_imagine.cache.manager'] ?? $this->getLiipImagine_Cache_ManagerService()), ($this->services['liip_imagine.filter.manager'] ?? $this->getLiipImagine_Filter_ManagerService()));

        $instance->setName('liip:imagine:cache:resolve');

        return $instance;
    }

    /**
     * Gets the private 'liip_imagine.filter.configuration' shared service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\FilterConfiguration
     */
    protected function getLiipImagine_Filter_ConfigurationService()
    {
        return $this->privates['liip_imagine.filter.configuration'] = new \Liip\ImagineBundle\Imagine\Filter\FilterConfiguration($this->parameters['liip_imagine.filter_sets']);
    }

    /**
     * Gets the private 'liip_imagine.form.type.image' shared service.
     *
     * @return \Liip\ImagineBundle\Form\Type\ImageType
     */
    protected function getLiipImagine_Form_Type_ImageService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Form/Type/ImageType.php';

        return $this->privates['liip_imagine.form.type.image'] = new \Liip\ImagineBundle\Form\Type\ImageType();
    }

    /**
     * Gets the private 'liip_imagine.gd' shared service.
     *
     * @return \Imagine\Gd\Imagine
     */
    protected function getLiipImagine_GdService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/imagine/imagine/src/Factory/ClassFactoryAwareInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/imagine/imagine/src/Image/ImagineInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/imagine/imagine/src/Image/AbstractImagine.php';
        include_once \dirname(__DIR__, 4).'/vendor/imagine/imagine/src/Gd/Imagine.php';
        include_once \dirname(__DIR__, 4).'/vendor/imagine/imagine/src/Image/Metadata/MetadataReaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/imagine/imagine/src/Image/Metadata/AbstractMetadataReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/imagine/imagine/src/Image/Metadata/ExifMetadataReader.php';

        $this->privates['liip_imagine.gd'] = $instance = new \Imagine\Gd\Imagine();

        $instance->setMetadataReader(new \Imagine\Image\Metadata\ExifMetadataReader());

        return $instance;
    }

    /**
     * Gets the private 'locale_aware_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\LocaleAwareListener
     */
    protected function getLocaleAwareListenerService()
    {
        return $this->privates['locale_aware_listener'] = new \Symfony\Component\HttpKernel\EventListener\LocaleAwareListener(new RewindableGenerator(function () {
            yield 0 => ($this->privates['slugger'] ?? ($this->privates['slugger'] = new \Symfony\Component\String\Slugger\AsciiSlugger('en')));
            yield 1 => ($this->services['translator'] ?? $this->getTranslatorService());
        }, 2), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }

    /**
     * Gets the private 'locale_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\LocaleListener
     */
    protected function getLocaleListener2Service()
    {
        return $this->privates['locale_listener'] = new \Symfony\Component\HttpKernel\EventListener\LocaleListener(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), 'en', ($this->services['router'] ?? $this->getRouterService()));
    }

    /**
     * Gets the private 'matthias_symfony_console_form.delegating_interactor' shared service.
     *
     * @return \Matthias\SymfonyConsoleForm\Bridge\Interaction\DelegatingInteractor
     */
    protected function getMatthiasSymfonyConsoleForm_DelegatingInteractorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Interaction/FormInteractor.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Interaction/DelegatingInteractor.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Interaction/FieldWithNoInteractionInteractor.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Interaction/NonInteractiveRootInteractor.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Interaction/CollectionInteractor.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Interaction/CompoundInteractor.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Interaction/FieldInteractor.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/TransformerResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/TypeAncestryBasedTransformerResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/FormToQuestionTransformer.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/AbstractTransformer.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/TextTransformer.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/NumberTransformer.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/DateTimeTransformer.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/PasswordTransformer.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/ChoiceTransformer.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/Transformer/CheckboxTransformer.php';

        $this->privates['matthias_symfony_console_form.delegating_interactor'] = $instance = new \Matthias\SymfonyConsoleForm\Bridge\Interaction\DelegatingInteractor();

        $a = new \Matthias\SymfonyConsoleForm\Bridge\Transformer\TypeAncestryBasedTransformerResolver();

        $b = ($this->services['translator'] ?? $this->getTranslatorService());
        $c = new \Matthias\SymfonyConsoleForm\Bridge\Transformer\DateTimeTransformer($b);
        $d = new \Matthias\SymfonyConsoleForm\Bridge\Transformer\ChoiceTransformer($b);

        $a->addTransformer('Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType', new \Matthias\SymfonyConsoleForm\Bridge\Transformer\TextTransformer($b));
        $a->addTransformer('Symfony\\Component\\Form\\Extension\\Core\\Type\\NumberType', new \Matthias\SymfonyConsoleForm\Bridge\Transformer\NumberTransformer($b));
        $a->addTransformer('Symfony\\Component\\Form\\Extension\\Core\\Type\\TimeType', $c);
        $a->addTransformer('Symfony\\Component\\Form\\Extension\\Core\\Type\\DateType', $c);
        $a->addTransformer('Symfony\\Component\\Form\\Extension\\Core\\Type\\DateTimeType', $c);
        $a->addTransformer('Symfony\\Component\\Form\\Extension\\Core\\Type\\PasswordType', new \Matthias\SymfonyConsoleForm\Bridge\Transformer\PasswordTransformer($b));
        $a->addTransformer('Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType', $d);
        $a->addTransformer('Symfony\\Component\\Form\\Extension\\Core\\Type\\CountryType', $d);
        $a->addTransformer('Symfony\\Component\\Form\\Extension\\Core\\Type\\CheckboxType', new \Matthias\SymfonyConsoleForm\Bridge\Transformer\CheckboxTransformer($b));

        $instance->addInteractor(new \Matthias\SymfonyConsoleForm\Bridge\Interaction\FieldWithNoInteractionInteractor());
        $instance->addInteractor(new \Matthias\SymfonyConsoleForm\Bridge\Interaction\NonInteractiveRootInteractor($instance));
        $instance->addInteractor(new \Matthias\SymfonyConsoleForm\Bridge\Interaction\CollectionInteractor($instance));
        $instance->addInteractor(new \Matthias\SymfonyConsoleForm\Bridge\Interaction\CompoundInteractor($instance));
        $instance->addInteractor(new \Matthias\SymfonyConsoleForm\Bridge\Interaction\FieldInteractor($a));

        return $instance;
    }

    /**
     * Gets the private 'matthias_symfony_console_form.form_helper' shared service.
     *
     * @return \Matthias\SymfonyConsoleForm\Console\Helper\FormHelper
     */
    protected function getMatthiasSymfonyConsoleForm_FormHelperService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Helper/HelperInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Helper/Helper.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Console/Helper/FormHelper.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/FormFactory/ConsoleFormFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bridge/FormFactory/ConsoleFormWithDefaultValuesAndOptionsFactory.php';

        return $this->privates['matthias_symfony_console_form.form_helper'] = new \Matthias\SymfonyConsoleForm\Console\Helper\FormHelper(new \Matthias\SymfonyConsoleForm\Bridge\FormFactory\ConsoleFormWithDefaultValuesAndOptionsFactory(($this->services['form.factory'] ?? $this->getForm_FactoryService()), ($this->privates['form.registry'] ?? $this->getForm_RegistryService())), ($this->privates['matthias_symfony_console_form.delegating_interactor'] ?? $this->getMatthiasSymfonyConsoleForm_DelegatingInteractorService()));
    }

    /**
     * Gets the private 'monolog.handler.console' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Handler\ConsoleHandler
     */
    protected function getMonolog_Handler_ConsoleService()
    {
        return $this->privates['monolog.handler.console'] = new \Symfony\Bridge\Monolog\Handler\ConsoleHandler(NULL, true, [], []);
    }

    /**
     * Gets the private 'monolog.handler.deprecation' shared service.
     *
     * @return \Monolog\Handler\StreamHandler
     */
    protected function getMonolog_Handler_DeprecationService()
    {
        $this->privates['monolog.handler.deprecation'] = $instance = new \Monolog\Handler\StreamHandler((\dirname(__DIR__, 3).'/log/prod.deprecations.log'), 100, true, NULL, false);

        $instance->pushProcessor(($this->privates['monolog.processor.psr_log_message'] ?? ($this->privates['monolog.processor.psr_log_message'] = new \Monolog\Processor\PsrLogMessageProcessor())));

        return $instance;
    }

    /**
     * Gets the private 'monolog.handler.deprecation_filter' shared service.
     *
     * @return \Monolog\Handler\FilterHandler
     */
    protected function getMonolog_Handler_DeprecationFilterService()
    {
        return $this->privates['monolog.handler.deprecation_filter'] = new \Monolog\Handler\FilterHandler(($this->privates['monolog.handler.deprecation'] ?? $this->getMonolog_Handler_DeprecationService()), 100, 200, true);
    }

    /**
     * Gets the private 'monolog.handler.main' shared service.
     *
     * @return \Monolog\Handler\FingersCrossedHandler
     */
    protected function getMonolog_Handler_MainService()
    {
        $a = new \Monolog\Handler\StreamHandler((\dirname(__DIR__, 3).'/log/prod.log'), 100, true, NULL, false);
        $a->pushProcessor(($this->privates['monolog.processor.psr_log_message'] ?? ($this->privates['monolog.processor.psr_log_message'] = new \Monolog\Processor\PsrLogMessageProcessor())));

        return $this->privates['monolog.handler.main'] = new \Monolog\Handler\FingersCrossedHandler($a, new \Symfony\Bridge\Monolog\Handler\FingersCrossed\HttpCodeActivationStrategy(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), [0 => ['code' => 404, 'urls' => []], 1 => ['code' => 405, 'urls' => []]], 400), 0, true, true, NULL);
    }

    /**
     * Gets the private 'monolog.logger' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_LoggerService()
    {
        $this->privates['monolog.logger'] = $instance = new \Symfony\Bridge\Monolog\Logger('app');

        $instance->useMicrosecondTimestamps(true);
        $instance->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
        $instance->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        return $instance;
    }

    /**
     * Gets the private 'monolog.logger.cache' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_CacheService()
    {
        $this->privates['monolog.logger.cache'] = $instance = new \Symfony\Bridge\Monolog\Logger('cache');

        $instance->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
        $instance->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        return $instance;
    }

    /**
     * Gets the private 'monolog.logger.request' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_RequestService()
    {
        $this->privates['monolog.logger.request'] = $instance = new \Symfony\Bridge\Monolog\Logger('request');

        $instance->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
        $instance->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        return $instance;
    }

    /**
     * Gets the private 'monolog.logger.security' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_SecurityService()
    {
        $this->privates['monolog.logger.security'] = $instance = new \Symfony\Bridge\Monolog\Logger('security');

        $instance->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
        $instance->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        return $instance;
    }

    /**
     * Gets the private 'parameter_bag' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag
     */
    protected function getParameterBagService()
    {
        return $this->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($this);
    }

    /**
     * Gets the private 'php_translation.configuration.extension' shared service.
     *
     * @return \Translation\Bundle\Model\Configuration
     */
    protected function getPhpTranslation_Configuration_ExtensionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Model/Configuration.php';

        return $this->privates['php_translation.configuration.extension'] = new \Translation\Bundle\Model\Configuration(['excluded_names' => [0 => '*TestCase.php', 1 => '*Test.php'], 'excluded_dirs' => [0 => 'vendor'], 'output_format' => 'yaml', 'local_file_storage_options' => ['default_output_format' => 'yaml'], 'dirs' => [], 'external_translations_dirs' => [], 'blacklist_domains' => [], 'whitelist_domains' => [], 'remote_storage' => [], 'local_storage' => [0 => 'php_translation.local_file_storage.abstract'], 'output_dir' => (\dirname(__DIR__, 4).'/Resources/translations'), 'xliff_version' => '2.0', 'project_root' => \dirname(__DIR__, 5), 'name' => 'extension', 'locales' => $this->parameters['localisation.locales']]);
    }

    /**
     * Gets the private 'php_translation.configuration.zikula' shared service.
     *
     * @return \Translation\Bundle\Model\Configuration
     */
    protected function getPhpTranslation_Configuration_ZikulaService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Model/Configuration.php';

        return $this->privates['php_translation.configuration.zikula'] = new \Translation\Bundle\Model\Configuration(['dirs' => [0 => (\dirname(__DIR__, 4).'/templates'), 1 => (\dirname(__DIR__, 4).'/src/system'), 2 => (\dirname(__DIR__, 4).'/src/Zikula')], 'output_dir' => (\dirname(__DIR__, 4).'/translations'), 'excluded_names' => [0 => '*TestCase.php', 1 => '*Test.php'], 'excluded_dirs' => [0 => 'vendor', 1 => 'cache', 2 => 'data', 3 => 'log'], 'output_format' => 'yaml', 'local_file_storage_options' => ['default_output_format' => 'yaml'], 'external_translations_dirs' => [], 'blacklist_domains' => [], 'whitelist_domains' => [], 'remote_storage' => [], 'local_storage' => [0 => 'php_translation.local_file_storage.abstract'], 'xliff_version' => '2.0', 'project_root' => \dirname(__DIR__, 5), 'name' => 'zikula', 'locales' => $this->parameters['localisation.locales']]);
    }

    /**
     * Gets the private 'property_accessor' shared service.
     *
     * @return \Symfony\Component\PropertyAccess\PropertyAccessor
     */
    protected function getPropertyAccessorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/PropertyAccess/PropertyAccessorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/PropertyAccess/PropertyAccessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Cache/Adapter/ArrayAdapter.php';

        return $this->privates['property_accessor'] = new \Symfony\Component\PropertyAccess\PropertyAccessor(false, false, new \Symfony\Component\Cache\Adapter\ArrayAdapter(0, false), true);
    }

    /**
     * Gets the private 'router.cache_warmer' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer
     */
    protected function getRouter_CacheWarmerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheWarmer/CacheWarmerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/CacheWarmer/RouterCacheWarmer.php';

        return $this->privates['router.cache_warmer'] = new \Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer((new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'router' => ['services', 'router', 'getRouterService', false],
        ], [
            'router' => '?',
        ]))->withContext('router.cache_warmer', $this));
    }

    /**
     * Gets the private 'router.request_context' shared service.
     *
     * @return \Symfony\Component\Routing\RequestContext
     */
    protected function getRouter_RequestContextService()
    {
        return $this->privates['router.request_context'] = new \Symfony\Component\Routing\RequestContext('', 'GET', 'localhost', 'http', 80, 443);
    }

    /**
     * Gets the private 'router_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\RouterListener
     */
    protected function getRouterListenerService()
    {
        return $this->privates['router_listener'] = new \Symfony\Component\HttpKernel\EventListener\RouterListener(($this->services['router'] ?? $this->getRouterService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService()), ($this->privates['monolog.logger.request'] ?? $this->getMonolog_Logger_RequestService()), \dirname(__DIR__, 4), true);
    }

    /**
     * Gets the private 'security.access_listener' shared service.
     *
     * @return \Symfony\Component\Security\Http\Firewall\AccessListener
     */
    protected function getSecurity_AccessListenerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/AbstractListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/AccessListener.php';

        return $this->privates['security.access_listener'] = new \Symfony\Component\Security\Http\Firewall\AccessListener(($this->services['security.token_storage'] ?? $this->getSecurity_TokenStorageService()), ($this->privates['debug.security.access.decision_manager'] ?? $this->getDebug_Security_Access_DecisionManagerService()), ($this->privates['security.access_map'] ?? $this->getSecurity_AccessMapService()), ($this->privates['security.authentication.manager'] ?? $this->getSecurity_Authentication_ManagerService()));
    }

    /**
     * Gets the private 'security.access_map' shared service.
     *
     * @return \Symfony\Component\Security\Http\AccessMap
     */
    protected function getSecurity_AccessMapService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/AccessMapInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/AccessMap.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/RequestMatcherInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/RequestMatcher.php';

        $this->privates['security.access_map'] = $instance = new \Symfony\Component\Security\Http\AccessMap();

        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/demo/secured/hello/admin/'), [0 => 'ROLE_ADMIN'], NULL);

        return $instance;
    }

    /**
     * Gets the private 'security.authentication.listener.form.secured_area' shared service.
     *
     * @return \Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener
     */
    protected function getSecurity_Authentication_Listener_Form_SecuredAreaService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/AbstractListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/AbstractAuthenticationListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Session/SessionAuthenticationStrategyInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Session/SessionAuthenticationStrategy.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Authentication/AuthenticationSuccessHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Util/TargetPathTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Authentication/DefaultAuthenticationSuccessHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Authentication/AuthenticationFailureHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Authentication/DefaultAuthenticationFailureHandler.php';

        $a = ($this->privates['security.http_utils'] ?? $this->getSecurity_HttpUtilsService());
        $b = new \Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler($a, []);
        $b->setOptions(['login_path' => '_demo_login', 'always_use_default_target_path' => false, 'default_target_path' => '/', 'target_path_parameter' => '_target_path', 'use_referer' => false]);
        $b->setProviderKey('secured_area');
        $c = ($this->privates['monolog.logger.security'] ?? $this->getMonolog_Logger_SecurityService());

        $d = new \Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler(($this->services['http_kernel'] ?? $this->getHttpKernelService()), $a, [], $c);
        $d->setOptions(['login_path' => '_demo_login', 'failure_path' => NULL, 'failure_forward' => false, 'failure_path_parameter' => '_failure_path']);

        return $this->privates['security.authentication.listener.form.secured_area'] = new \Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener(($this->services['security.token_storage'] ?? $this->getSecurity_TokenStorageService()), ($this->privates['security.authentication.manager'] ?? $this->getSecurity_Authentication_ManagerService()), new \Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy('migrate'), $a, 'secured_area', $b, $d, ['check_path' => '_security_check', 'use_forward' => false, 'require_previous_session' => false, 'username_parameter' => '_username', 'password_parameter' => '_password', 'csrf_parameter' => '_csrf_token', 'csrf_token_id' => 'authenticate', 'post_only' => true], $c, ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), NULL);
    }

    /**
     * Gets the private 'security.authentication.manager' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager
     */
    protected function getSecurity_Authentication_ManagerService()
    {
        $this->privates['security.authentication.manager'] = $instance = new \Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager(new RewindableGenerator(function () {
            yield 0 => ($this->privates['security.authentication.provider.dao.secured_area'] ?? $this->getSecurity_Authentication_Provider_Dao_SecuredAreaService());
        }, 1), true);

        $instance->setEventDispatcher(($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));

        return $instance;
    }

    /**
     * Gets the private 'security.authentication.provider.dao.secured_area' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider
     */
    protected function getSecurity_Authentication_Provider_Dao_SecuredAreaService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/Provider/AuthenticationProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/Provider/UserAuthenticationProvider.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/Provider/DaoAuthenticationProvider.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/User/UserCheckerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/User/UserChecker.php';

        return $this->privates['security.authentication.provider.dao.secured_area'] = new \Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider(($this->privates['security.user.provider.concrete.in_memory'] ?? $this->getSecurity_User_Provider_Concrete_InMemoryService()), new \Symfony\Component\Security\Core\User\UserChecker(), 'secured_area', ($this->privates['security.encoder_factory.generic'] ?? $this->getSecurity_EncoderFactory_GenericService()), true);
    }

    /**
     * Gets the private 'security.channel_listener' shared service.
     *
     * @return \Symfony\Component\Security\Http\Firewall\ChannelListener
     */
    protected function getSecurity_ChannelListenerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/AbstractListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/ChannelListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/EntryPoint/AuthenticationEntryPointInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/EntryPoint/RetryAuthenticationEntryPoint.php';

        return $this->privates['security.channel_listener'] = new \Symfony\Component\Security\Http\Firewall\ChannelListener(($this->privates['security.access_map'] ?? $this->getSecurity_AccessMapService()), new \Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint(80, 443), ($this->privates['monolog.logger.security'] ?? $this->getMonolog_Logger_SecurityService()));
    }

    /**
     * Gets the private 'security.command.user_password_encoder' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand
     */
    protected function getSecurity_Command_UserPasswordEncoderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Command/UserPasswordEncoderCommand.php';

        $this->privates['security.command.user_password_encoder'] = $instance = new \Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand(($this->privates['security.encoder_factory.generic'] ?? $this->getSecurity_EncoderFactory_GenericService()), [0 => 'Symfony\\Component\\Security\\Core\\User\\User']);

        $instance->setName('security:encode-password');

        return $instance;
    }

    /**
     * Gets the private 'security.context_listener.0' shared service.
     *
     * @return \Symfony\Component\Security\Http\Firewall\ContextListener
     */
    protected function getSecurity_ContextListener_0Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/AbstractListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/ContextListener.php';

        return $this->privates['security.context_listener.0'] = new \Symfony\Component\Security\Http\Firewall\ContextListener(($this->privates['security.untracked_token_storage'] ?? ($this->privates['security.untracked_token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage())), new RewindableGenerator(function () {
            yield 0 => ($this->privates['security.user.provider.concrete.in_memory'] ?? $this->getSecurity_User_Provider_Concrete_InMemoryService());
        }, 1), 'secured_area', ($this->privates['monolog.logger.security'] ?? $this->getMonolog_Logger_SecurityService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->privates['security.authentication.trust_resolver'] ?? ($this->privates['security.authentication.trust_resolver'] = new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver())), [0 => ($this->services['security.token_storage'] ?? $this->getSecurity_TokenStorageService()), 1 => 'enableUsageTracking']);
    }

    /**
     * Gets the private 'security.csrf.token_storage' shared service.
     *
     * @return \Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage
     */
    protected function getSecurity_Csrf_TokenStorageService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Csrf/TokenStorage/TokenStorageInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Csrf/TokenStorage/ClearableTokenStorageInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Csrf/TokenStorage/SessionTokenStorage.php';

        return $this->privates['security.csrf.token_storage'] = new \Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage(($this->services['session'] ?? $this->getSessionService()));
    }

    /**
     * Gets the private 'security.encoder_factory.generic' shared service.
     *
     * @return \Symfony\Component\Security\Core\Encoder\EncoderFactory
     */
    protected function getSecurity_EncoderFactory_GenericService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Encoder/EncoderFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Encoder/EncoderFactory.php';

        return $this->privates['security.encoder_factory.generic'] = new \Symfony\Component\Security\Core\Encoder\EncoderFactory(['Symfony\\Component\\Security\\Core\\User\\User' => ['class' => 'Symfony\\Component\\Security\\Core\\Encoder\\PlaintextPasswordEncoder', 'arguments' => [0 => false]]]);
    }

    /**
     * Gets the private 'security.firewall.map.context.dev' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext
     */
    protected function getSecurity_Firewall_Map_Context_DevService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Security/FirewallContext.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Security/FirewallConfig.php';

        return $this->privates['security.firewall.map.context.dev'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(new RewindableGenerator(function () {
            return new \EmptyIterator();
        }, 0), NULL, NULL, new \Symfony\Bundle\SecurityBundle\Security\FirewallConfig('dev', 'security.user_checker', '.security.request_matcher.Iy.T22O', false, false, '', '', '', '', '', [], NULL));
    }

    /**
     * Gets the private 'security.firewall.map.context.login' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext
     */
    protected function getSecurity_Firewall_Map_Context_LoginService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Security/FirewallContext.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Security/FirewallConfig.php';

        return $this->privates['security.firewall.map.context.login'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(new RewindableGenerator(function () {
            return new \EmptyIterator();
        }, 0), NULL, NULL, new \Symfony\Bundle\SecurityBundle\Security\FirewallConfig('login', 'security.user_checker', '.security.request_matcher.LSAvh7L', false, false, '', '', '', '', '', [], NULL));
    }

    /**
     * Gets the private 'security.firewall.map.context.secured_area' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext
     */
    protected function getSecurity_Firewall_Map_Context_SecuredAreaService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Security/FirewallContext.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Util/TargetPathTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/ExceptionListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/EntryPoint/AuthenticationEntryPointInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/EntryPoint/FormAuthenticationEntryPoint.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/AbstractListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/LogoutListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Logout/LogoutSuccessHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Logout/DefaultLogoutSuccessHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Logout/LogoutHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Logout/CsrfTokenClearingLogoutHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Logout/SessionLogoutHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Security/FirewallConfig.php';

        $a = ($this->services['security.token_storage'] ?? $this->getSecurity_TokenStorageService());
        $b = ($this->privates['security.http_utils'] ?? $this->getSecurity_HttpUtilsService());
        $c = new \Symfony\Component\Security\Http\Firewall\LogoutListener($a, $b, new \Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler($b, '_demo'), ['csrf_parameter' => '_csrf_token', 'csrf_token_id' => 'logout', 'logout_path' => '_demo_logout']);
        $c->addHandler(new \Symfony\Component\Security\Http\Logout\CsrfTokenClearingLogoutHandler(($this->privates['security.csrf.token_storage'] ?? $this->getSecurity_Csrf_TokenStorageService())));
        $c->addHandler(new \Symfony\Component\Security\Http\Logout\SessionLogoutHandler());

        return $this->privates['security.firewall.map.context.secured_area'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(new RewindableGenerator(function () {
            yield 0 => ($this->privates['security.channel_listener'] ?? $this->getSecurity_ChannelListenerService());
            yield 1 => ($this->privates['security.context_listener.0'] ?? $this->getSecurity_ContextListener_0Service());
            yield 2 => ($this->privates['security.authentication.listener.form.secured_area'] ?? $this->getSecurity_Authentication_Listener_Form_SecuredAreaService());
            yield 3 => ($this->privates['security.access_listener'] ?? $this->getSecurity_AccessListenerService());
        }, 4), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, ($this->privates['security.authentication.trust_resolver'] ?? ($this->privates['security.authentication.trust_resolver'] = new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver())), $b, 'secured_area', new \Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint(($this->services['http_kernel'] ?? $this->getHttpKernelService()), $b, '_demo_login', false), NULL, NULL, ($this->privates['monolog.logger.security'] ?? $this->getMonolog_Logger_SecurityService()), false), $c, new \Symfony\Bundle\SecurityBundle\Security\FirewallConfig('secured_area', 'security.user_checker', '.security.request_matcher.1nJhEMn', true, false, 'security.user.provider.concrete.in_memory', 'secured_area', 'security.authentication.form_entry_point.secured_area', NULL, NULL, [0 => 'form_login'], NULL));
    }

    /**
     * Gets the private 'security.http_utils' shared service.
     *
     * @return \Symfony\Component\Security\Http\HttpUtils
     */
    protected function getSecurity_HttpUtilsService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Http/HttpUtils.php';

        $a = ($this->services['router'] ?? $this->getRouterService());

        return $this->privates['security.http_utils'] = new \Symfony\Component\Security\Http\HttpUtils($a, $a, '{^https?://%s$}i', '{^https://%s$}i');
    }

    /**
     * Gets the private 'security.logout_url_generator' shared service.
     *
     * @return \Symfony\Component\Security\Http\Logout\LogoutUrlGenerator
     */
    protected function getSecurity_LogoutUrlGeneratorService()
    {
        $this->privates['security.logout_url_generator'] = $instance = new \Symfony\Component\Security\Http\Logout\LogoutUrlGenerator(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['router'] ?? $this->getRouterService()), ($this->services['security.token_storage'] ?? $this->getSecurity_TokenStorageService()));

        $instance->registerListener('secured_area', '_demo_logout', 'logout', '_csrf_token', NULL, NULL);

        return $instance;
    }

    /**
     * Gets the private 'security.role_hierarchy' shared service.
     *
     * @return \Symfony\Component\Security\Core\Role\RoleHierarchy
     */
    protected function getSecurity_RoleHierarchyService()
    {
        return $this->privates['security.role_hierarchy'] = new \Symfony\Component\Security\Core\Role\RoleHierarchy($this->parameters['security.role_hierarchy.roles']);
    }

    /**
     * Gets the private 'security.user.provider.concrete.in_memory' shared service.
     *
     * @return \Symfony\Component\Security\Core\User\InMemoryUserProvider
     */
    protected function getSecurity_User_Provider_Concrete_InMemoryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/User/UserProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/User/InMemoryUserProvider.php';

        return $this->privates['security.user.provider.concrete.in_memory'] = new \Symfony\Component\Security\Core\User\InMemoryUserProvider(['user' => ['password' => 'userpass', 'roles' => [0 => 'ROLE_USER']], 'admin' => ['password' => 'adminpass', 'roles' => [0 => 'ROLE_ADMIN']]]);
    }

    /**
     * Gets the private 'security.validator.user_password' shared service.
     *
     * @return \Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator
     */
    protected function getSecurity_Validator_UserPasswordService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Validator/Constraints/UserPasswordValidator.php';

        return $this->privates['security.validator.user_password'] = new \Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator(($this->services['security.token_storage'] ?? $this->getSecurity_TokenStorageService()), ($this->privates['security.encoder_factory.generic'] ?? $this->getSecurity_EncoderFactory_GenericService()));
    }

    /**
     * Gets the private 'sensio_framework_extra.controller.listener' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener
     */
    protected function getSensioFrameworkExtra_Controller_ListenerService()
    {
        return $this->privates['sensio_framework_extra.controller.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()));
    }

    /**
     * Gets the private 'sensio_framework_extra.converter.listener' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener
     */
    protected function getSensioFrameworkExtra_Converter_ListenerService()
    {
        $a = new \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager();
        $a->add(new \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter(($this->services['doctrine'] ?? $this->getDoctrineService()), new \Symfony\Component\ExpressionLanguage\ExpressionLanguage()), 0, 'doctrine.orm');
        $a->add(new \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter(), 0, 'datetime');

        return $this->privates['sensio_framework_extra.converter.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener($a, true);
    }

    /**
     * Gets the private 'sensio_framework_extra.routing.loader.annot_class' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader
     *
     * @deprecated The "sensio_framework_extra.routing.loader.annot_class" service is deprecated since version 5.2
     */
    protected function getSensioFrameworkExtra_Routing_Loader_AnnotClassService()
    {
        @trigger_error('The "sensio_framework_extra.routing.loader.annot_class" service is deprecated since version 5.2', E_USER_DEPRECATED);

        return $this->privates['sensio_framework_extra.routing.loader.annot_class'] = new \Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()));
    }

    /**
     * Gets the private 'sensio_framework_extra.routing.loader.annot_dir' shared service.
     *
     * @return \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader
     *
     * @deprecated The "sensio_framework_extra.routing.loader.annot_dir" service is deprecated since version 5.2
     */
    protected function getSensioFrameworkExtra_Routing_Loader_AnnotDirService()
    {
        @trigger_error('The "sensio_framework_extra.routing.loader.annot_dir" service is deprecated since version 5.2', E_USER_DEPRECATED);

        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Config/FileLocatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Config/FileLocator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Config/FileLocator.php';

        return new \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader(($this->privates['file_locator'] ?? ($this->privates['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator(($this->services['kernel'] ?? $this->get('kernel', 1))))), ($this->privates['sensio_framework_extra.routing.loader.annot_class'] ?? $this->getSensioFrameworkExtra_Routing_Loader_AnnotClassService()));
    }

    /**
     * Gets the private 'sensio_framework_extra.routing.loader.annot_file' shared service.
     *
     * @return \Symfony\Component\Routing\Loader\AnnotationFileLoader
     *
     * @deprecated The "sensio_framework_extra.routing.loader.annot_file" service is deprecated since version 5.2
     */
    protected function getSensioFrameworkExtra_Routing_Loader_AnnotFileService()
    {
        @trigger_error('The "sensio_framework_extra.routing.loader.annot_file" service is deprecated since version 5.2', E_USER_DEPRECATED);

        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Config/FileLocatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Config/FileLocator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Config/FileLocator.php';

        return new \Symfony\Component\Routing\Loader\AnnotationFileLoader(($this->privates['file_locator'] ?? ($this->privates['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator(($this->services['kernel'] ?? $this->get('kernel', 1))))), ($this->privates['sensio_framework_extra.routing.loader.annot_class'] ?? $this->getSensioFrameworkExtra_Routing_Loader_AnnotClassService()));
    }

    /**
     * Gets the private 'sensio_framework_extra.security.listener' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener
     */
    protected function getSensioFrameworkExtra_Security_ListenerService()
    {
        return $this->privates['sensio_framework_extra.security.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener(($this->privates['framework_extra_bundle.argument_name_convertor'] ?? $this->getFrameworkExtraBundle_ArgumentNameConvertorService()), new \Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage(), ($this->privates['security.authentication.trust_resolver'] ?? ($this->privates['security.authentication.trust_resolver'] = new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver())), ($this->privates['security.role_hierarchy'] ?? $this->getSecurity_RoleHierarchyService()), ($this->services['security.token_storage'] ?? $this->getSecurity_TokenStorageService()), ($this->services['security.authorization_checker'] ?? $this->getSecurity_AuthorizationCheckerService()), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()));
    }

    /**
     * Gets the private 'sensio_framework_extra.view.listener' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener
     */
    protected function getSensioFrameworkExtra_View_ListenerService()
    {
        return $this->privates['sensio_framework_extra.view.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener(new \Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser(($this->services['kernel'] ?? $this->get('kernel', 1))), ($this->services['twig'] ?? $this->getTwigService()));
    }

    /**
     * Gets the private 'session_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\SessionListener
     */
    protected function getSessionListenerService()
    {
        return $this->privates['session_listener'] = new \Symfony\Component\HttpKernel\EventListener\SessionListener(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'initialized_session' => ['services', 'session', NULL, false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'session' => ['services', 'session', 'getSessionService', false],
            'session_storage' => ['privates', 'zikula_core.bridge.http_foundation.zikula_session_storage_file', 'getZikulaCore_Bridge_HttpFoundation_ZikulaSessionStorageFileService', false],
        ], [
            'initialized_session' => '?',
            'request_stack' => '?',
            'session' => '?',
            'session_storage' => '?',
        ]));
    }

    /**
     * Gets the private 'stof_doctrine_extensions.event_listener.blame' shared service.
     *
     * @return \Zikula\Bundle\CoreBundle\EventListener\BlameListener
     */
    protected function getStofDoctrineExtensions_EventListener_BlameService()
    {
        return $this->privates['stof_doctrine_extensions.event_listener.blame'] = new \Zikula\Bundle\CoreBundle\EventListener\BlameListener(($this->privates['stof_doctrine_extensions.listener.blameable'] ?? $this->getStofDoctrineExtensions_Listener_BlameableService()), ($this->services['doctrine.orm.default_entity_manager'] ?? $this->getDoctrine_Orm_DefaultEntityManagerService()), ($this->services['session'] ?? $this->getSessionService()), false);
    }

    /**
     * Gets the private 'stof_doctrine_extensions.event_listener.locale' shared service.
     *
     * @return \Stof\DoctrineExtensionsBundle\EventListener\LocaleListener
     */
    protected function getStofDoctrineExtensions_EventListener_LocaleService()
    {
        return $this->privates['stof_doctrine_extensions.event_listener.locale'] = new \Stof\DoctrineExtensionsBundle\EventListener\LocaleListener(($this->privates['stof_doctrine_extensions.listener.translatable'] ?? $this->getStofDoctrineExtensions_Listener_TranslatableService()));
    }

    /**
     * Gets the private 'stof_doctrine_extensions.event_listener.logger' shared service.
     *
     * @return \Stof\DoctrineExtensionsBundle\EventListener\LoggerListener
     */
    protected function getStofDoctrineExtensions_EventListener_LoggerService()
    {
        return $this->privates['stof_doctrine_extensions.event_listener.logger'] = new \Stof\DoctrineExtensionsBundle\EventListener\LoggerListener(($this->privates['stof_doctrine_extensions.listener.loggable'] ?? $this->getStofDoctrineExtensions_Listener_LoggableService()), ($this->services['security.token_storage'] ?? $this->getSecurity_TokenStorageService()), ($this->services['security.authorization_checker'] ?? $this->getSecurity_AuthorizationCheckerService()));
    }

    /**
     * Gets the private 'stof_doctrine_extensions.listener.blameable' shared service.
     *
     * @return \Gedmo\Blameable\BlameableListener
     */
    protected function getStofDoctrineExtensions_Listener_BlameableService()
    {
        $this->privates['stof_doctrine_extensions.listener.blameable'] = $instance = new \Gedmo\Blameable\BlameableListener();

        $instance->setAnnotationReader(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()));

        return $instance;
    }

    /**
     * Gets the private 'stof_doctrine_extensions.listener.loggable' shared service.
     *
     * @return \Gedmo\Loggable\LoggableListener
     */
    protected function getStofDoctrineExtensions_Listener_LoggableService()
    {
        $this->privates['stof_doctrine_extensions.listener.loggable'] = $instance = new \Gedmo\Loggable\LoggableListener();

        $instance->setAnnotationReader(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()));

        return $instance;
    }

    /**
     * Gets the private 'stof_doctrine_extensions.listener.translatable' shared service.
     *
     * @return \Gedmo\Translatable\TranslatableListener
     */
    protected function getStofDoctrineExtensions_Listener_TranslatableService()
    {
        $this->privates['stof_doctrine_extensions.listener.translatable'] = $instance = new \Gedmo\Translatable\TranslatableListener();

        $instance->setAnnotationReader(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()));
        $instance->setDefaultLocale('en_US');
        $instance->setTranslatableLocale('en_US');
        $instance->setTranslationFallback(true);
        $instance->setPersistDefaultLocaleTranslation(false);
        $instance->setSkipOnLoad(false);

        return $instance;
    }

    /**
     * Gets the private 'stof_doctrine_extensions.listener.uploadable' shared service.
     *
     * @return \Gedmo\Uploadable\UploadableListener
     */
    protected function getStofDoctrineExtensions_Listener_UploadableService()
    {
        $this->privates['stof_doctrine_extensions.listener.uploadable'] = $instance = new \Gedmo\Uploadable\UploadableListener(new \Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter());

        $instance->setAnnotationReader(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()));
        $instance->setDefaultFileInfoClass('Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadedFileInfo');
        (new \Stof\DoctrineExtensionsBundle\Uploadable\ValidatorConfigurator(true))->configure($instance);

        return $instance;
    }

    /**
     * Gets the private 'swiftmailer.command.debug' shared service.
     *
     * @return \Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand
     */
    protected function getSwiftmailer_Command_DebugService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/Command/AbstractSwiftMailerCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/Command/DebugCommand.php';

        $this->privates['swiftmailer.command.debug'] = $instance = new \Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand();

        $instance->setName('debug:swiftmailer');

        return $instance;
    }

    /**
     * Gets the private 'swiftmailer.command.new_email' shared service.
     *
     * @return \Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand
     */
    protected function getSwiftmailer_Command_NewEmailService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/Command/AbstractSwiftMailerCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/Command/NewEmailCommand.php';

        $this->privates['swiftmailer.command.new_email'] = $instance = new \Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand();

        $instance->setName('swiftmailer:email:send');

        return $instance;
    }

    /**
     * Gets the private 'swiftmailer.command.send_email' shared service.
     *
     * @return \Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand
     */
    protected function getSwiftmailer_Command_SendEmailService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/Command/AbstractSwiftMailerCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/Command/SendEmailCommand.php';

        $this->privates['swiftmailer.command.send_email'] = $instance = new \Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand();

        $instance->setName('swiftmailer:spool:send');

        return $instance;
    }

    /**
     * Gets the private 'swiftmailer.email_sender.listener' shared service.
     *
     * @return \Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener
     */
    protected function getSwiftmailer_EmailSender_ListenerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/EventListener/EmailSenderListener.php';

        return $this->privates['swiftmailer.email_sender.listener'] = new \Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener($this, ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()));
    }

    /**
     * Gets the private 'translation.extractor' shared service.
     *
     * @return \Symfony\Component\Translation\Extractor\ChainExtractor
     */
    protected function getTranslation_ExtractorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Extractor/ExtractorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Extractor/ChainExtractor.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Extractor/AbstractFileExtractor.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Extractor/PhpExtractor.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Translation/TwigExtractor.php';

        $this->privates['translation.extractor'] = $instance = new \Symfony\Component\Translation\Extractor\ChainExtractor();

        $instance->addExtractor('php', new \Symfony\Component\Translation\Extractor\PhpExtractor());
        $instance->addExtractor('twig', new \Symfony\Bridge\Twig\Translation\TwigExtractor(($this->services['twig'] ?? $this->getTwigService())));

        return $instance;
    }

    /**
     * Gets the private 'translation.loader.csv' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\CsvFileLoader
     */
    protected function getTranslation_Loader_CsvService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/ArrayLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/CsvFileLoader.php';

        return $this->privates['translation.loader.csv'] = new \Symfony\Component\Translation\Loader\CsvFileLoader();
    }

    /**
     * Gets the private 'translation.loader.dat' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\IcuDatFileLoader
     */
    protected function getTranslation_Loader_DatService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/IcuResFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/IcuDatFileLoader.php';

        return $this->privates['translation.loader.dat'] = new \Symfony\Component\Translation\Loader\IcuDatFileLoader();
    }

    /**
     * Gets the private 'translation.loader.ini' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\IniFileLoader
     */
    protected function getTranslation_Loader_IniService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/ArrayLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/IniFileLoader.php';

        return $this->privates['translation.loader.ini'] = new \Symfony\Component\Translation\Loader\IniFileLoader();
    }

    /**
     * Gets the private 'translation.loader.json' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\JsonFileLoader
     */
    protected function getTranslation_Loader_JsonService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/ArrayLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/JsonFileLoader.php';

        return $this->privates['translation.loader.json'] = new \Symfony\Component\Translation\Loader\JsonFileLoader();
    }

    /**
     * Gets the private 'translation.loader.mo' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\MoFileLoader
     */
    protected function getTranslation_Loader_MoService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/ArrayLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/MoFileLoader.php';

        return $this->privates['translation.loader.mo'] = new \Symfony\Component\Translation\Loader\MoFileLoader();
    }

    /**
     * Gets the private 'translation.loader.php' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\PhpFileLoader
     */
    protected function getTranslation_Loader_PhpService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/ArrayLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/PhpFileLoader.php';

        return $this->privates['translation.loader.php'] = new \Symfony\Component\Translation\Loader\PhpFileLoader();
    }

    /**
     * Gets the private 'translation.loader.po' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\PoFileLoader
     */
    protected function getTranslation_Loader_PoService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/ArrayLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/PoFileLoader.php';

        return $this->privates['translation.loader.po'] = new \Symfony\Component\Translation\Loader\PoFileLoader();
    }

    /**
     * Gets the private 'translation.loader.qt' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\QtFileLoader
     */
    protected function getTranslation_Loader_QtService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/QtFileLoader.php';

        return $this->privates['translation.loader.qt'] = new \Symfony\Component\Translation\Loader\QtFileLoader();
    }

    /**
     * Gets the private 'translation.loader.res' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\IcuResFileLoader
     */
    protected function getTranslation_Loader_ResService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/IcuResFileLoader.php';

        return $this->privates['translation.loader.res'] = new \Symfony\Component\Translation\Loader\IcuResFileLoader();
    }

    /**
     * Gets the private 'translation.loader.xliff' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\XliffFileLoader
     */
    protected function getTranslation_Loader_XliffService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/XliffFileLoader.php';

        return $this->privates['translation.loader.xliff'] = new \Symfony\Component\Translation\Loader\XliffFileLoader();
    }

    /**
     * Gets the private 'translation.loader.yml' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\YamlFileLoader
     */
    protected function getTranslation_Loader_YmlService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/ArrayLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/YamlFileLoader.php';

        return $this->privates['translation.loader.yml'] = new \Symfony\Component\Translation\Loader\YamlFileLoader();
    }

    /**
     * Gets the private 'translation.reader' shared service.
     *
     * @return \Symfony\Component\Translation\Reader\TranslationReader
     */
    protected function getTranslation_ReaderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Reader/TranslationReaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Reader/TranslationReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/ArrayLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/PhpFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/YamlFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/XliffFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/PoFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/MoFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/QtFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/CsvFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/IcuResFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/IcuDatFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/IniFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Loader/JsonFileLoader.php';

        $this->privates['translation.reader'] = $instance = new \Symfony\Component\Translation\Reader\TranslationReader();

        $a = ($this->privates['translation.loader.yml'] ?? ($this->privates['translation.loader.yml'] = new \Symfony\Component\Translation\Loader\YamlFileLoader()));
        $b = ($this->privates['translation.loader.xliff'] ?? ($this->privates['translation.loader.xliff'] = new \Symfony\Component\Translation\Loader\XliffFileLoader()));

        $instance->addLoader('php', ($this->privates['translation.loader.php'] ?? ($this->privates['translation.loader.php'] = new \Symfony\Component\Translation\Loader\PhpFileLoader())));
        $instance->addLoader('yaml', $a);
        $instance->addLoader('yml', $a);
        $instance->addLoader('xlf', $b);
        $instance->addLoader('xliff', $b);
        $instance->addLoader('po', ($this->privates['translation.loader.po'] ?? ($this->privates['translation.loader.po'] = new \Symfony\Component\Translation\Loader\PoFileLoader())));
        $instance->addLoader('mo', ($this->privates['translation.loader.mo'] ?? ($this->privates['translation.loader.mo'] = new \Symfony\Component\Translation\Loader\MoFileLoader())));
        $instance->addLoader('ts', ($this->privates['translation.loader.qt'] ?? ($this->privates['translation.loader.qt'] = new \Symfony\Component\Translation\Loader\QtFileLoader())));
        $instance->addLoader('csv', ($this->privates['translation.loader.csv'] ?? ($this->privates['translation.loader.csv'] = new \Symfony\Component\Translation\Loader\CsvFileLoader())));
        $instance->addLoader('res', ($this->privates['translation.loader.res'] ?? ($this->privates['translation.loader.res'] = new \Symfony\Component\Translation\Loader\IcuResFileLoader())));
        $instance->addLoader('dat', ($this->privates['translation.loader.dat'] ?? ($this->privates['translation.loader.dat'] = new \Symfony\Component\Translation\Loader\IcuDatFileLoader())));
        $instance->addLoader('ini', ($this->privates['translation.loader.ini'] ?? ($this->privates['translation.loader.ini'] = new \Symfony\Component\Translation\Loader\IniFileLoader())));
        $instance->addLoader('json', ($this->privates['translation.loader.json'] ?? ($this->privates['translation.loader.json'] = new \Symfony\Component\Translation\Loader\JsonFileLoader())));

        return $instance;
    }

    /**
     * Gets the private 'translation.warmer' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer
     */
    protected function getTranslation_WarmerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheWarmer/CacheWarmerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/CacheWarmer/TranslationsCacheWarmer.php';

        return $this->privates['translation.warmer'] = new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer((new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'translator' => ['services', 'translator', 'getTranslatorService', false],
        ], [
            'translator' => '?',
        ]))->withContext('translation.warmer', $this));
    }

    /**
     * Gets the private 'translation.writer' shared service.
     *
     * @return \Symfony\Component\Translation\Writer\TranslationWriter
     */
    protected function getTranslation_WriterService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Writer/TranslationWriterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Writer/TranslationWriter.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Dumper/DumperInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Dumper/FileDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Dumper/PhpFileDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Dumper/XliffFileDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Dumper/PoFileDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Dumper/MoFileDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Dumper/YamlFileDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Dumper/QtFileDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Dumper/CsvFileDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Dumper/IniFileDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Dumper/JsonFileDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Translation/Dumper/IcuResFileDumper.php';

        $this->privates['translation.writer'] = $instance = new \Symfony\Component\Translation\Writer\TranslationWriter();

        $instance->addDumper('php', new \Symfony\Component\Translation\Dumper\PhpFileDumper());
        $instance->addDumper('xlf', new \Symfony\Component\Translation\Dumper\XliffFileDumper());
        $instance->addDumper('po', new \Symfony\Component\Translation\Dumper\PoFileDumper());
        $instance->addDumper('mo', new \Symfony\Component\Translation\Dumper\MoFileDumper());
        $instance->addDumper('yml', new \Symfony\Component\Translation\Dumper\YamlFileDumper());
        $instance->addDumper('yaml', new \Symfony\Component\Translation\Dumper\YamlFileDumper('yaml'));
        $instance->addDumper('ts', new \Symfony\Component\Translation\Dumper\QtFileDumper());
        $instance->addDumper('csv', new \Symfony\Component\Translation\Dumper\CsvFileDumper());
        $instance->addDumper('ini', new \Symfony\Component\Translation\Dumper\IniFileDumper());
        $instance->addDumper('json', new \Symfony\Component\Translation\Dumper\JsonFileDumper());
        $instance->addDumper('res', new \Symfony\Component\Translation\Dumper\IcuResFileDumper());

        return $instance;
    }

    /**
     * Gets the private 'twig.command.debug' shared service.
     *
     * @return \Symfony\Bridge\Twig\Command\DebugCommand
     */
    protected function getTwig_Command_DebugService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Command/DebugCommand.php';

        $this->privates['twig.command.debug'] = $instance = new \Symfony\Bridge\Twig\Command\DebugCommand(($this->services['twig'] ?? $this->getTwigService()), \dirname(__DIR__, 4), $this->parameters['kernel.bundles_metadata'], (\dirname(__DIR__, 4).'/templates'), ($this->privates['debug.file_link_formatter'] ?? ($this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL))));

        $instance->setName('debug:twig');

        return $instance;
    }

    /**
     * Gets the private 'twig.command.lint' shared service.
     *
     * @return \Symfony\Bundle\TwigBundle\Command\LintCommand
     */
    protected function getTwig_Command_LintService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Command/LintCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Command/LintCommand.php';

        $this->privates['twig.command.lint'] = $instance = new \Symfony\Bundle\TwigBundle\Command\LintCommand(($this->services['twig'] ?? $this->getTwigService()));

        $instance->setName('lint:twig');

        return $instance;
    }

    /**
     * Gets the private 'twig.form.renderer' shared service.
     *
     * @return \Symfony\Component\Form\FormRenderer
     */
    protected function getTwig_Form_RendererService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormRendererInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormRenderer.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/FormRendererEngineInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/AbstractRendererEngine.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Form/TwigRendererEngine.php';

        return $this->privates['twig.form.renderer'] = new \Symfony\Component\Form\FormRenderer(new \Symfony\Bridge\Twig\Form\TwigRendererEngine($this->parameters['twig.form.resources'], ($this->services['twig'] ?? $this->getTwigService())), ($this->services['security.csrf.token_manager'] ?? $this->getSecurity_Csrf_TokenManagerService()));
    }

    /**
     * Gets the private 'twig.loader.native_filesystem' shared service.
     *
     * @return \Twig\Loader\FilesystemLoader
     */
    protected function getTwig_Loader_NativeFilesystemService()
    {
        $this->privates['twig.loader.native_filesystem'] = $instance = new \Twig\Loader\FilesystemLoader([], \dirname(__DIR__, 4));

        $instance->addPath((\dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views'));
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views'), 'Framework');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views'), '!Framework');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views'), 'Security');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views'), '!Security');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/Resources/views'), 'Swiftmailer');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/Resources/views'), '!Swiftmailer');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Resources/views'), 'Doctrine');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/Resources/views'), '!Doctrine');
        $instance->addPath((\dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Resources/views'), 'Core');
        $instance->addPath((\dirname(__DIR__, 4).'/src/Zikula/CoreBundle/Resources/views'), '!Core');
        $instance->addPath((\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Resources/views'), 'ZikulaCoreInstaller');
        $instance->addPath((\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle/Resources/views'), '!ZikulaCoreInstaller');
        $instance->addPath((\dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/Resources/views'), 'ZikulaFormExtension');
        $instance->addPath((\dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle/Resources/views'), '!ZikulaFormExtension');
        $instance->addPath((\dirname(__DIR__, 4).'/src/Zikula/HookBundle/Resources/views'), 'ZikulaHook');
        $instance->addPath((\dirname(__DIR__, 4).'/src/Zikula/HookBundle/Resources/views'), '!ZikulaHook');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/knplabs/knp-menu-bundle/src/Resources/views'), 'KnpMenu');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/knplabs/knp-menu-bundle/src/Resources/views'), '!KnpMenu');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Resources/views'), 'LiipImagine');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/liip/imagine-bundle/Resources/views'), '!LiipImagine');
        $instance->addPath((\dirname(__DIR__, 4).'/templates/bundles/TranslationBundle'), 'Translation');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Resources/views'), 'Translation');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Resources/views'), '!Translation');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/willdurand/js-translation-bundle/Resources/views'), 'BazingaJsTranslation');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/willdurand/js-translation-bundle/Resources/views'), '!BazingaJsTranslation');
        $instance->addPath((\dirname(__DIR__, 4).'/src/Zikula/WorkflowBundle/Resources/views'), 'ZikulaWorkflow');
        $instance->addPath((\dirname(__DIR__, 4).'/src/Zikula/WorkflowBundle/Resources/views'), '!ZikulaWorkflow');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/AdminModule/Resources/views'), 'ZikulaAdminModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/AdminModule/Resources/views'), '!ZikulaAdminModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/BlocksModule/Resources/views'), 'ZikulaBlocksModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/BlocksModule/Resources/views'), '!ZikulaBlocksModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/CategoriesModule/Resources/views'), 'ZikulaCategoriesModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/CategoriesModule/Resources/views'), '!ZikulaCategoriesModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Resources/views'), 'ZikulaExtensionsModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/ExtensionsModule/Resources/views'), '!ZikulaExtensionsModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/GroupsModule/Resources/views'), 'ZikulaGroupsModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/GroupsModule/Resources/views'), '!ZikulaGroupsModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/MailerModule/Resources/views'), 'ZikulaMailerModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/MailerModule/Resources/views'), '!ZikulaMailerModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/MenuModule/Resources/views'), 'ZikulaMenuModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/MenuModule/Resources/views'), '!ZikulaMenuModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/PermissionsModule/Resources/views'), 'ZikulaPermissionsModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/PermissionsModule/Resources/views'), '!ZikulaPermissionsModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/RoutesModule/Resources/views'), 'ZikulaRoutesModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/RoutesModule/Resources/views'), '!ZikulaRoutesModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/SearchModule/Resources/views'), 'ZikulaSearchModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/SearchModule/Resources/views'), '!ZikulaSearchModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Resources/views'), 'ZikulaSecurityCenterModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/SecurityCenterModule/Resources/views'), '!ZikulaSecurityCenterModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/SettingsModule/Resources/views'), 'ZikulaSettingsModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/SettingsModule/Resources/views'), '!ZikulaSettingsModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/ThemeModule/Resources/views'), 'ZikulaThemeModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/ThemeModule/Resources/views'), '!ZikulaThemeModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/UsersModule/Resources/views'), 'ZikulaUsersModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/UsersModule/Resources/views'), '!ZikulaUsersModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/ZAuthModule/Resources/views'), 'ZikulaZAuthModule');
        $instance->addPath((\dirname(__DIR__, 4).'/src/system/ZAuthModule/Resources/views'), '!ZikulaZAuthModule');
        $instance->addPath((\dirname(__DIR__, 4).'/templates'));
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Email'), 'email');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Email'), '!email');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form'));

        return $instance;
    }

    /**
     * Gets the private 'twig.mailer.message_listener' shared service.
     *
     * @return \Symfony\Component\Mailer\EventListener\MessageListener
     */
    protected function getTwig_Mailer_MessageListenerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Mailer/EventListener/MessageListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Mime/BodyRendererInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Mime/BodyRenderer.php';

        return $this->privates['twig.mailer.message_listener'] = new \Symfony\Component\Mailer\EventListener\MessageListener(NULL, new \Symfony\Bridge\Twig\Mime\BodyRenderer(($this->services['twig'] ?? $this->getTwigService())));
    }

    /**
     * Gets the private 'twig.runtime.httpkernel' shared service.
     *
     * @return \Symfony\Bridge\Twig\Extension\HttpKernelRuntime
     */
    protected function getTwig_Runtime_HttpkernelService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/HttpKernelRuntime.php';

        return $this->privates['twig.runtime.httpkernel'] = new \Symfony\Bridge\Twig\Extension\HttpKernelRuntime(($this->privates['fragment.handler'] ?? $this->getFragment_HandlerService()));
    }

    /**
     * Gets the private 'twig.runtime.markdown' shared service.
     *
     * @return \Twig\Extra\Markdown\MarkdownRuntime
     */
    protected function getTwig_Runtime_MarkdownService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/twig/markdown-extra/src/MarkdownRuntime.php';
        include_once \dirname(__DIR__, 4).'/vendor/twig/markdown-extra/src/MarkdownInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/twig/markdown-extra/src/DefaultMarkdown.php';

        return $this->privates['twig.runtime.markdown'] = new \Twig\Extra\Markdown\MarkdownRuntime(new \Twig\Extra\Markdown\DefaultMarkdown());
    }

    /**
     * Gets the private 'twig.runtime.security_csrf' shared service.
     *
     * @return \Symfony\Bridge\Twig\Extension\CsrfRuntime
     */
    protected function getTwig_Runtime_SecurityCsrfService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Extension/CsrfRuntime.php';

        return $this->privates['twig.runtime.security_csrf'] = new \Symfony\Bridge\Twig\Extension\CsrfRuntime(($this->services['security.csrf.token_manager'] ?? $this->getSecurity_Csrf_TokenManagerService()));
    }

    /**
     * Gets the private 'twig.template_cache_warmer' shared service.
     *
     * @return \Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer
     */
    protected function getTwig_TemplateCacheWarmerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheWarmer/CacheWarmerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/CacheWarmer/TemplateCacheWarmer.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/TemplateIterator.php';

        return $this->privates['twig.template_cache_warmer'] = new \Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer((new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'twig' => ['services', 'twig', 'getTwigService', false],
        ], [
            'twig' => 'Twig\\Environment',
        ]))->withContext('twig.template_cache_warmer', $this), new \Symfony\Bundle\TwigBundle\TemplateIterator(($this->services['kernel'] ?? $this->get('kernel', 1)), [(\dirname(__DIR__, 4).'/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views') => NULL, (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Email') => 'email', (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form') => NULL], (\dirname(__DIR__, 4).'/templates')));
    }

    /**
     * Gets the private 'validator.builder' shared service.
     *
     * @return \Symfony\Component\Validator\ValidatorBuilder
     */
    protected function getValidator_BuilderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Validation.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ContainerConstraintValidatorFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ObjectInitializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/Validator/DoctrineInitializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Mapping/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Mapping/Loader/AutoMappingTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/Validator/DoctrineLoader.php';

        $this->privates['validator.builder'] = $instance = \Symfony\Component\Validator\Validation::createValidatorBuilder();

        $instance->setConstraintValidatorFactory(new \Symfony\Component\Validator\ContainerConstraintValidatorFactory(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator' => ['privates', 'doctrine.orm.validator.unique', 'getDoctrine_Orm_Validator_UniqueService', false],
            'Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPasswordValidator' => ['privates', 'security.validator.user_password', 'getSecurity_Validator_UserPasswordService', false],
            'Symfony\\Component\\Validator\\Constraints\\EmailValidator' => ['privates', 'validator.email', 'getValidator_EmailService', false],
            'Symfony\\Component\\Validator\\Constraints\\ExpressionValidator' => ['privates', 'validator.expression', 'getValidator_ExpressionService', false],
            'Symfony\\Component\\Validator\\Constraints\\NotCompromisedPasswordValidator' => ['privates', 'validator.not_compromised_password', 'getValidator_NotCompromisedPasswordService', false],
            'Zikula\\Bundle\\CoreInstallerBundle\\Validator\\Constraints\\AuthenticateAdminLoginValidator' => ['services', 'Zikula\\Bundle\\CoreInstallerBundle\\Validator\\Constraints\\AuthenticateAdminLoginValidator', 'getAuthenticateAdminLoginValidatorService', false],
            'Zikula\\Bundle\\CoreInstallerBundle\\Validator\\Constraints\\ValidPdoConnectionValidator' => ['services', 'Zikula\\Bundle\\CoreInstallerBundle\\Validator\\Constraints\\ValidPdoConnectionValidator', 'getValidPdoConnectionValidatorService', false],
            'Zikula\\CategoriesModule\\Validator\\Constraints\\UniqueNameForPositionValidator' => ['privates', 'Zikula\\CategoriesModule\\Validator\\Constraints\\UniqueNameForPositionValidator', 'getUniqueNameForPositionValidatorService', false],
            'Zikula\\GroupsModule\\Validator\\Constraints\\ValidGroupNameValidator' => ['privates', 'Zikula\\GroupsModule\\Validator\\Constraints\\ValidGroupNameValidator', 'getValidGroupNameValidatorService', false],
            'Zikula\\RoutesModule\\Validator\\Constraints\\ListEntryValidator' => ['privates', 'Zikula\\RoutesModule\\Validator\\Constraints\\ListEntryValidator', 'getListEntryValidatorService', false],
            'Zikula\\SettingsModule\\Validator\\Constraints\\ValidControllerValidator' => ['privates', 'Zikula\\SettingsModule\\Validator\\Constraints\\ValidControllerValidator', 'getValidControllerValidatorService', false],
            'Zikula\\UsersModule\\Validator\\Constraints\\ValidEmailValidator' => ['privates', 'Zikula\\UsersModule\\Validator\\Constraints\\ValidEmailValidator', 'getValidEmailValidatorService', false],
            'Zikula\\UsersModule\\Validator\\Constraints\\ValidUnameValidator' => ['privates', 'Zikula\\UsersModule\\Validator\\Constraints\\ValidUnameValidator', 'getValidUnameValidatorService', false],
            'Zikula\\UsersModule\\Validator\\Constraints\\ValidUserFieldsValidator' => ['privates', 'Zikula\\UsersModule\\Validator\\Constraints\\ValidUserFieldsValidator', 'getValidUserFieldsValidatorService', false],
            'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidAntiSpamAnswerValidator' => ['privates', 'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidAntiSpamAnswerValidator', 'getValidAntiSpamAnswerValidatorService', false],
            'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidEmailValidator' => ['privates', 'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidEmailValidator', 'getValidEmailValidator2Service', false],
            'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidPasswordChangeValidator' => ['privates', 'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidPasswordChangeValidator', 'getValidPasswordChangeValidatorService', false],
            'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidPasswordValidator' => ['privates', 'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidPasswordValidator', 'getValidPasswordValidatorService', false],
            'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidRegistrationVerificationValidator' => ['privates', 'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidRegistrationVerificationValidator', 'getValidRegistrationVerificationValidatorService', false],
            'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidUnameValidator' => ['privates', 'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidUnameValidator', 'getValidUnameValidator2Service', false],
            'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidUserFieldsValidator' => ['privates', 'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidUserFieldsValidator', 'getValidUserFieldsValidator2Service', false],
            'doctrine.orm.validator.unique' => ['privates', 'doctrine.orm.validator.unique', 'getDoctrine_Orm_Validator_UniqueService', false],
            'security.validator.user_password' => ['privates', 'security.validator.user_password', 'getSecurity_Validator_UserPasswordService', false],
            'validator.expression' => ['privates', 'validator.expression', 'getValidator_ExpressionService', false],
        ], [
            'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator' => '?',
            'Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPasswordValidator' => '?',
            'Symfony\\Component\\Validator\\Constraints\\EmailValidator' => '?',
            'Symfony\\Component\\Validator\\Constraints\\ExpressionValidator' => '?',
            'Symfony\\Component\\Validator\\Constraints\\NotCompromisedPasswordValidator' => '?',
            'Zikula\\Bundle\\CoreInstallerBundle\\Validator\\Constraints\\AuthenticateAdminLoginValidator' => '?',
            'Zikula\\Bundle\\CoreInstallerBundle\\Validator\\Constraints\\ValidPdoConnectionValidator' => '?',
            'Zikula\\CategoriesModule\\Validator\\Constraints\\UniqueNameForPositionValidator' => '?',
            'Zikula\\GroupsModule\\Validator\\Constraints\\ValidGroupNameValidator' => '?',
            'Zikula\\RoutesModule\\Validator\\Constraints\\ListEntryValidator' => '?',
            'Zikula\\SettingsModule\\Validator\\Constraints\\ValidControllerValidator' => '?',
            'Zikula\\UsersModule\\Validator\\Constraints\\ValidEmailValidator' => '?',
            'Zikula\\UsersModule\\Validator\\Constraints\\ValidUnameValidator' => '?',
            'Zikula\\UsersModule\\Validator\\Constraints\\ValidUserFieldsValidator' => '?',
            'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidAntiSpamAnswerValidator' => '?',
            'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidEmailValidator' => '?',
            'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidPasswordChangeValidator' => '?',
            'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidPasswordValidator' => '?',
            'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidRegistrationVerificationValidator' => '?',
            'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidUnameValidator' => '?',
            'Zikula\\ZAuthModule\\Validator\\Constraints\\ValidUserFieldsValidator' => '?',
            'doctrine.orm.validator.unique' => '?',
            'security.validator.user_password' => '?',
            'validator.expression' => '?',
        ])));
        if ($this->has('translator')) {
            $instance->setTranslator(($this->services['translator'] ?? $this->getTranslatorService()));
        }
        $instance->setTranslationDomain('validators');
        $instance->addXmlMappings([0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/config/validation.xml')]);
        $instance->addYamlMappings([0 => (\dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle/Resources/config/validation.yaml')]);
        $instance->enableAnnotationMapping(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()));
        $instance->addMethodMapping('loadValidatorMetadata');
        $instance->addObjectInitializers([0 => new \Symfony\Bridge\Doctrine\Validator\DoctrineInitializer(($this->services['doctrine'] ?? $this->getDoctrineService()))]);
        $instance->addLoader(new \Symfony\Bridge\Doctrine\Validator\DoctrineLoader(($this->services['doctrine.orm.default_entity_manager'] ?? $this->getDoctrine_Orm_DefaultEntityManagerService()), NULL));

        return $instance;
    }

    /**
     * Gets the private 'validator.email' shared service.
     *
     * @return \Symfony\Component\Validator\Constraints\EmailValidator
     */
    protected function getValidator_EmailService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Constraints/EmailValidator.php';

        return $this->privates['validator.email'] = new \Symfony\Component\Validator\Constraints\EmailValidator('loose');
    }

    /**
     * Gets the private 'validator.expression' shared service.
     *
     * @return \Symfony\Component\Validator\Constraints\ExpressionValidator
     */
    protected function getValidator_ExpressionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Constraints/ExpressionValidator.php';

        return $this->privates['validator.expression'] = new \Symfony\Component\Validator\Constraints\ExpressionValidator();
    }

    /**
     * Gets the private 'validator.mapping.cache_warmer' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer
     */
    protected function getValidator_Mapping_CacheWarmerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheWarmer/CacheWarmerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/CacheWarmer/AbstractPhpFileCacheWarmer.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/CacheWarmer/ValidatorCacheWarmer.php';

        return $this->privates['validator.mapping.cache_warmer'] = new \Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer(($this->privates['validator.builder'] ?? $this->getValidator_BuilderService()), ($this->targetDir.''.'/validation.php'));
    }

    /**
     * Gets the private 'validator.not_compromised_password' shared service.
     *
     * @return \Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator
     */
    protected function getValidator_NotCompromisedPasswordService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Validator/Constraints/NotCompromisedPasswordValidator.php';

        return $this->privates['validator.not_compromised_password'] = new \Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator(NULL, 'UTF-8', true, NULL);
    }

    /**
     * Gets the private 'workflow.registry' shared service.
     *
     * @return \Symfony\Component\Workflow\Registry
     */
    protected function getWorkflow_RegistryService()
    {
        $this->privates['workflow.registry'] = $instance = new \Symfony\Component\Workflow\Registry();

        $instance->addWorkflow(($this->services['state_machine.zikularoutesmodule_none'] ?? $this->getStateMachine_ZikularoutesmoduleNoneService()), new \Symfony\Component\Workflow\SupportStrategy\InstanceOfSupportStrategy('Zikula\\RoutesModule\\Entity\\RouteEntity'));

        return $instance;
    }

    /**
     * Gets the private 'zikula_core.bridge.http_foundation.zikula_session_storage_file' shared autowired service.
     *
     * @return \Zikula\Bundle\CoreBundle\HttpFoundation\Session\ZikulaSessionStorage
     */
    protected function getZikulaCore_Bridge_HttpFoundation_ZikulaSessionStorageFileService()
    {
        $a = new \Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler(new \Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler(($this->targetDir.''.'/sessions')));

        $this->privates['zikula_core.bridge.http_foundation.zikula_session_storage_file'] = $instance = new \Zikula\Bundle\CoreBundle\HttpFoundation\Session\ZikulaSessionStorage(($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), $this->parameters['session.storage.options'], $a);

        $instance->setSaveHandler($a);

        return $instance;
    }

    /**
     * Gets the private 'zikula_core.common.theme.pagevars' shared autowired service.
     *
     * @return \Zikula\ThemeModule\Engine\ParameterBag
     */
    protected function getZikulaCore_Common_Theme_PagevarsService()
    {
        return $this->privates['zikula_core.common.theme.pagevars'] = new \Zikula\ThemeModule\Engine\ParameterBag(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['Zikula\\ExtensionsModule\\Api\\VariableApi'] ?? $this->getVariableApiService()), ($this->services['Zikula\\ExtensionsModule\\Entity\\Repository\\ExtensionRepository'] ?? $this->getExtensionRepositoryService()));
    }

    public function getParameter(string $name)
    {
        if (isset($this->buildParameters[$name])) {
            return $this->buildParameters[$name];
        }

        if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {
            throw new InvalidArgumentException(sprintf('The parameter "%s" must be defined.', $name));
        }
        if (isset($this->loadedDynamicParameters[$name])) {
            return $this->loadedDynamicParameters[$name] ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
        }

        return $this->parameters[$name];
    }

    public function hasParameter(string $name): bool
    {
        if (isset($this->buildParameters[$name])) {
            return true;
        }

        return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);
    }

    public function setParameter(string $name, $value): void
    {
        throw new LogicException('Impossible to call set() on a frozen ParameterBag.');
    }

    public function getParameterBag(): ParameterBagInterface
    {
        if (null === $this->parameterBag) {
            $parameters = $this->parameters;
            foreach ($this->loadedDynamicParameters as $name => $loaded) {
                $parameters[$name] = $loaded ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
            }
            foreach ($this->buildParameters as $name => $value) {
                $parameters[$name] = $value;
            }
            $this->parameterBag = new FrozenParameterBag($parameters);
        }

        return $this->parameterBag;
    }

    private $loadedDynamicParameters = [
        'kernel.cache_dir' => false,
        'zikula.session.save_path' => false,
        'session.save_path' => false,
        'validator.mapping.cache.file' => false,
        'debug.container.dump' => false,
        'doctrine.orm.proxy_dir' => false,
        'matthias_symfony_console_form.cache_directory' => false,
    ];
    private $dynamicParameters = [];

    private function getDynamicParameter(string $name)
    {
        switch ($name) {
            case 'kernel.cache_dir': $value = $this->targetDir.''; break;
            case 'zikula.session.save_path': $value = ($this->targetDir.''.'/sessions'); break;
            case 'session.save_path': $value = ($this->targetDir.''.'/sessions'); break;
            case 'validator.mapping.cache.file': $value = ($this->targetDir.''.'/validation.php'); break;
            case 'debug.container.dump': $value = ($this->targetDir.''.'/KernelProdDebugContainer.xml'); break;
            case 'doctrine.orm.proxy_dir': $value = ($this->targetDir.''.'/doctrine/orm/DoctrineProxy'); break;
            case 'matthias_symfony_console_form.cache_directory': $value = ($this->targetDir.''.'/matthias_symfony_console_form'); break;
            default: throw new InvalidArgumentException(sprintf('The dynamic parameter "%s" must be defined.', $name));
        }
        $this->loadedDynamicParameters[$name] = true;

        return $this->dynamicParameters[$name] = $value;
    }

    protected function getDefaultParameters(): array
    {
        return [
            'kernel.project_dir' => \dirname(__DIR__, 4),
            'kernel.environment' => 'prod',
            'kernel.debug' => true,
            'kernel.logs_dir' => (\dirname(__DIR__, 3).'/log'),
            'kernel.bundles' => [
                'FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle',
                'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle',
                'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle',
                'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle',
                'SwiftmailerBundle' => 'Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle',
                'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle',
                'SensioFrameworkExtraBundle' => 'Sensio\\Bundle\\FrameworkExtraBundle\\SensioFrameworkExtraBundle',
                'StofDoctrineExtensionsBundle' => 'Stof\\DoctrineExtensionsBundle\\StofDoctrineExtensionsBundle',
                'TwigExtraBundle' => 'Twig\\Extra\\TwigExtraBundle\\TwigExtraBundle',
                'CoreBundle' => 'Zikula\\Bundle\\CoreBundle\\CoreBundle',
                'ZikulaCoreInstallerBundle' => 'Zikula\\Bundle\\CoreInstallerBundle\\ZikulaCoreInstallerBundle',
                'ZikulaFormExtensionBundle' => 'Zikula\\Bundle\\FormExtensionBundle\\ZikulaFormExtensionBundle',
                'ZikulaHookBundle' => 'Zikula\\Bundle\\HookBundle\\ZikulaHookBundle',
                'JMSI18nRoutingBundle' => 'JMS\\I18nRoutingBundle\\JMSI18nRoutingBundle',
                'FOSJsRoutingBundle' => 'FOS\\JsRoutingBundle\\FOSJsRoutingBundle',
                'SymfonyConsoleFormBundle' => 'Matthias\\SymfonyConsoleForm\\Bundle\\SymfonyConsoleFormBundle',
                'KnpMenuBundle' => 'Knp\\Bundle\\MenuBundle\\KnpMenuBundle',
                'LiipImagineBundle' => 'Liip\\ImagineBundle\\LiipImagineBundle',
                'TranslationBundle' => 'Translation\\Bundle\\TranslationBundle',
                'BazingaJsTranslationBundle' => 'Bazinga\\Bundle\\JsTranslationBundle\\BazingaJsTranslationBundle',
                'ZikulaWorkflowBundle' => 'Zikula\\Bundle\\WorkflowBundle\\ZikulaWorkflowBundle',
                'ZikulaAdminModule' => 'Zikula\\AdminModule\\ZikulaAdminModule',
                'ZikulaBlocksModule' => 'Zikula\\BlocksModule\\ZikulaBlocksModule',
                'ZikulaCategoriesModule' => 'Zikula\\CategoriesModule\\ZikulaCategoriesModule',
                'ZikulaExtensionsModule' => 'Zikula\\ExtensionsModule\\ZikulaExtensionsModule',
                'ZikulaGroupsModule' => 'Zikula\\GroupsModule\\ZikulaGroupsModule',
                'ZikulaMailerModule' => 'Zikula\\MailerModule\\ZikulaMailerModule',
                'ZikulaMenuModule' => 'Zikula\\MenuModule\\ZikulaMenuModule',
                'ZikulaPermissionsModule' => 'Zikula\\PermissionsModule\\ZikulaPermissionsModule',
                'ZikulaRoutesModule' => 'Zikula\\RoutesModule\\ZikulaRoutesModule',
                'ZikulaSearchModule' => 'Zikula\\SearchModule\\ZikulaSearchModule',
                'ZikulaSecurityCenterModule' => 'Zikula\\SecurityCenterModule\\ZikulaSecurityCenterModule',
                'ZikulaSettingsModule' => 'Zikula\\SettingsModule\\ZikulaSettingsModule',
                'ZikulaThemeModule' => 'Zikula\\ThemeModule\\ZikulaThemeModule',
                'ZikulaUsersModule' => 'Zikula\\UsersModule\\ZikulaUsersModule',
                'ZikulaZAuthModule' => 'Zikula\\ZAuthModule\\ZikulaZAuthModule',
            ],
            'kernel.bundles_metadata' => [
                'FrameworkBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle'),
                    'namespace' => 'Symfony\\Bundle\\FrameworkBundle',
                ],
                'SecurityBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle'),
                    'namespace' => 'Symfony\\Bundle\\SecurityBundle',
                ],
                'TwigBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle'),
                    'namespace' => 'Symfony\\Bundle\\TwigBundle',
                ],
                'MonologBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/symfony/monolog-bundle'),
                    'namespace' => 'Symfony\\Bundle\\MonologBundle',
                ],
                'SwiftmailerBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle'),
                    'namespace' => 'Symfony\\Bundle\\SwiftmailerBundle',
                ],
                'DoctrineBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle'),
                    'namespace' => 'Doctrine\\Bundle\\DoctrineBundle',
                ],
                'SensioFrameworkExtraBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src'),
                    'namespace' => 'Sensio\\Bundle\\FrameworkExtraBundle',
                ],
                'StofDoctrineExtensionsBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/antishov/doctrine-extensions-bundle'),
                    'namespace' => 'Stof\\DoctrineExtensionsBundle',
                ],
                'TwigExtraBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/twig/extra-bundle/src'),
                    'namespace' => 'Twig\\Extra\\TwigExtraBundle',
                ],
                'CoreBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/src/Zikula/CoreBundle'),
                    'namespace' => 'Zikula\\Bundle\\CoreBundle',
                ],
                'ZikulaCoreInstallerBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/src/Zikula/CoreInstallerBundle'),
                    'namespace' => 'Zikula\\Bundle\\CoreInstallerBundle',
                ],
                'ZikulaFormExtensionBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/src/Zikula/FormExtensionBundle'),
                    'namespace' => 'Zikula\\Bundle\\FormExtensionBundle',
                ],
                'ZikulaHookBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/src/Zikula/HookBundle'),
                    'namespace' => 'Zikula\\Bundle\\HookBundle',
                ],
                'JMSI18nRoutingBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/jms/i18n-routing-bundle/JMS/I18nRoutingBundle'),
                    'namespace' => 'JMS\\I18nRoutingBundle',
                ],
                'FOSJsRoutingBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/friendsofsymfony/jsrouting-bundle'),
                    'namespace' => 'FOS\\JsRoutingBundle',
                ],
                'SymfonyConsoleFormBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/matthiasnoback/symfony-console-form/src/Bundle'),
                    'namespace' => 'Matthias\\SymfonyConsoleForm\\Bundle',
                ],
                'KnpMenuBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/knplabs/knp-menu-bundle/src'),
                    'namespace' => 'Knp\\Bundle\\MenuBundle',
                ],
                'LiipImagineBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/liip/imagine-bundle'),
                    'namespace' => 'Liip\\ImagineBundle',
                ],
                'TranslationBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/php-translation/symfony-bundle'),
                    'namespace' => 'Translation\\Bundle',
                ],
                'BazingaJsTranslationBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/willdurand/js-translation-bundle'),
                    'namespace' => 'Bazinga\\Bundle\\JsTranslationBundle',
                ],
                'ZikulaWorkflowBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/src/Zikula/WorkflowBundle'),
                    'namespace' => 'Zikula\\Bundle\\WorkflowBundle',
                ],
                'ZikulaAdminModule' => [
                    'path' => (\dirname(__DIR__, 4).'/src/system/AdminModule'),
                    'namespace' => 'Zikula\\AdminModule',
                ],
                'ZikulaBlocksModule' => [
                    'path' => (\dirname(__DIR__, 4).'/src/system/BlocksModule'),
                    'namespace' => 'Zikula\\BlocksModule',
                ],
                'ZikulaCategoriesModule' => [
                    'path' => (\dirname(__DIR__, 4).'/src/system/CategoriesModule'),
                    'namespace' => 'Zikula\\CategoriesModule',
                ],
                'ZikulaExtensionsModule' => [
                    'path' => (\dirname(__DIR__, 4).'/src/system/ExtensionsModule'),
                    'namespace' => 'Zikula\\ExtensionsModule',
                ],
                'ZikulaGroupsModule' => [
                    'path' => (\dirname(__DIR__, 4).'/src/system/GroupsModule'),
                    'namespace' => 'Zikula\\GroupsModule',
                ],
                'ZikulaMailerModule' => [
                    'path' => (\dirname(__DIR__, 4).'/src/system/MailerModule'),
                    'namespace' => 'Zikula\\MailerModule',
                ],
                'ZikulaMenuModule' => [
                    'path' => (\dirname(__DIR__, 4).'/src/system/MenuModule'),
                    'namespace' => 'Zikula\\MenuModule',
                ],
                'ZikulaPermissionsModule' => [
                    'path' => (\dirname(__DIR__, 4).'/src/system/PermissionsModule'),
                    'namespace' => 'Zikula\\PermissionsModule',
                ],
                'ZikulaRoutesModule' => [
                    'path' => (\dirname(__DIR__, 4).'/src/system/RoutesModule'),
                    'namespace' => 'Zikula\\RoutesModule',
                ],
                'ZikulaSearchModule' => [
                    'path' => (\dirname(__DIR__, 4).'/src/system/SearchModule'),
                    'namespace' => 'Zikula\\SearchModule',
                ],
                'ZikulaSecurityCenterModule' => [
                    'path' => (\dirname(__DIR__, 4).'/src/system/SecurityCenterModule'),
                    'namespace' => 'Zikula\\SecurityCenterModule',
                ],
                'ZikulaSettingsModule' => [
                    'path' => (\dirname(__DIR__, 4).'/src/system/SettingsModule'),
                    'namespace' => 'Zikula\\SettingsModule',
                ],
                'ZikulaThemeModule' => [
                    'path' => (\dirname(__DIR__, 4).'/src/system/ThemeModule'),
                    'namespace' => 'Zikula\\ThemeModule',
                ],
                'ZikulaUsersModule' => [
                    'path' => (\dirname(__DIR__, 4).'/src/system/UsersModule'),
                    'namespace' => 'Zikula\\UsersModule',
                ],
                'ZikulaZAuthModule' => [
                    'path' => (\dirname(__DIR__, 4).'/src/system/ZAuthModule'),
                    'namespace' => 'Zikula\\ZAuthModule',
                ],
            ],
            'kernel.charset' => 'UTF-8',
            'kernel.container_class' => 'KernelProdDebugContainer',
            'container.dumper.inline_class_loader' => true,
            'container.dumper.inline_factories' => true,
            'installed' => false,
            'env' => 'prod',
            'debug' => false,
            'script_position' => 'foot',
            'datadir' => 'public/uploads',
            'system.chmod_dir' => 511,
            'database_driver' => 'pdo_mysql',
            'database_host' => 'localhost',
            'database_port' => NULL,
            'database_name' => NULL,
            'database_user' => NULL,
            'database_password' => NULL,
            'database_path' => NULL,
            'database_socket' => NULL,
            'database_server_version' => '5.7',
            'locale' => 'en',
            'secret' => 'ThisTokenIsNotSoSecretChangeIt',
            'url_secret' => NULL,
            'assets_version' => NULL,
            'zikula_asset_manager.combine' => true,
            'zikula_asset_manager.lifetime' => '1 day',
            'zikula_asset_manager.compress' => true,
            'zikula_asset_manager.minify' => true,
            'umask' => NULL,
            'security.x_frame_options' => 'SAMEORIGIN',
            'zikula.javascript.bootstrap.min.path' => '/bootstrap/js/bootstrap.bundle.min.js',
            'zikula.stylesheet.bootstrap.min.path' => '/bootstrap/css/bootstrap.min.css',
            'zikula.stylesheet.fontawesome.min.path' => '/font-awesome/css/all.min.css',
            'localisation.locales' => [
                0 => 'en',
            ],
            'zikula.session.name' => '_zsid',
            'zikula.session.handler_id' => 'session.handler.native_file',
            'zikula.session.storage_id' => 'zikula_core.bridge.http_foundation.zikula_session_storage_file',
            'multisites' => [
                'enabled' => false,
                'mainsiteurl' => NULL,
                'based_on_domains' => NULL,
                'protected.systemvars' => [

                ],
            ],
            'fragment.renderer.hinclude.global_template' => '',
            'fragment.path' => '/_fragment',
            'kernel.secret' => 'ThisTokenIsNotSoSecretChangeIt',
            'kernel.http_method_override' => true,
            'kernel.trusted_hosts' => [

            ],
            'kernel.default_locale' => 'en',
            'kernel.error_controller' => 'error_controller',
            'debug.file_link_format' => NULL,
            'session.metadata.storage_key' => '_sf2_meta',
            'session.storage.options' => [
                'cache_limiter' => '0',
                'name' => '_zsid',
                'cookie_secure' => 'auto',
                'cookie_httponly' => true,
                'cookie_samesite' => 'lax',
                'gc_probability' => 1,
            ],
            'session.metadata.update_threshold' => 0,
            'form.type_extension.csrf.enabled' => true,
            'form.type_extension.csrf.field_name' => '_token',
            'asset.request_context.base_path' => '',
            'asset.request_context.secure' => false,
            'validator.mapping.cache.prefix' => '',
            'validator.translation_domain' => 'validators',
            'translator.logging' => false,
            'translator.default_path' => (\dirname(__DIR__, 4).'/translations'),
            'data_collector.templates' => [

            ],
            'debug.error_handler.throw_at' => -1,
            'router.request_context.host' => 'localhost',
            'router.request_context.scheme' => 'http',
            'router.request_context.base_url' => '',
            'router.resource' => 'kernel::loadRoutes',
            'request_listener.http_port' => 80,
            'request_listener.https_port' => 443,
            'security.role_hierarchy.roles' => [
                'ROLE_ADMIN' => [
                    0 => 'ROLE_USER',
                ],
                'ROLE_SUPER_ADMIN' => [
                    0 => 'ROLE_USER',
                    1 => 'ROLE_ADMIN',
                    2 => 'ROLE_ALLOWED_TO_SWITCH',
                ],
            ],
            'security.access.denied_url' => NULL,
            'security.authentication.manager.erase_credentials' => true,
            'security.authentication.session_strategy.strategy' => 'migrate',
            'security.access.always_authenticate_before_granting' => false,
            'security.authentication.hide_user_not_found' => true,
            'twig.form.resources' => [
                0 => 'form_div_layout.html.twig',
                1 => '@LiipImagine/Form/form_div_layout.html.twig',
            ],
            'twig.default_path' => (\dirname(__DIR__, 4).'/templates'),
            'monolog.use_microseconds' => true,
            'monolog.swift_mailer.handlers' => [

            ],
            'monolog.handlers_to_channels' => [
                'monolog.handler.deprecation_filter' => [
                    'type' => 'inclusive',
                    'elements' => [
                        0 => 'php',
                    ],
                ],
                'monolog.handler.console' => [
                    'type' => 'exclusive',
                    'elements' => [
                        0 => 'event',
                        1 => 'doctrine',
                    ],
                ],
                'monolog.handler.main' => NULL,
            ],
            'swiftmailer.mailer.default.transport.name' => 'smtp',
            'swiftmailer.mailer.default.transport.smtp.encryption' => NULL,
            'swiftmailer.mailer.default.transport.smtp.port' => 25,
            'swiftmailer.mailer.default.transport.smtp.host' => 'localhost',
            'swiftmailer.mailer.default.transport.smtp.username' => '',
            'swiftmailer.mailer.default.transport.smtp.password' => '',
            'swiftmailer.mailer.default.transport.smtp.auth_mode' => NULL,
            'swiftmailer.mailer.default.transport.smtp.timeout' => 30,
            'swiftmailer.mailer.default.transport.smtp.source_ip' => NULL,
            'swiftmailer.mailer.default.transport.smtp.local_domain' => NULL,
            'swiftmailer.mailer.default.spool.enabled' => false,
            'swiftmailer.mailer.default.plugin.impersonate' => NULL,
            'swiftmailer.mailer.default.single_address' => NULL,
            'swiftmailer.mailer.default.delivery.enabled' => true,
            'swiftmailer.spool.enabled' => false,
            'swiftmailer.delivery.enabled' => true,
            'swiftmailer.single_address' => NULL,
            'swiftmailer.mailers' => [
                'default' => 'swiftmailer.mailer.default',
            ],
            'swiftmailer.default_mailer' => 'default',
            'doctrine.dbal.logger.chain.class' => 'Doctrine\\DBAL\\Logging\\LoggerChain',
            'doctrine.dbal.logger.profiling.class' => 'Doctrine\\DBAL\\Logging\\DebugStack',
            'doctrine.dbal.logger.class' => 'Symfony\\Bridge\\Doctrine\\Logger\\DbalLogger',
            'doctrine.dbal.configuration.class' => 'Doctrine\\DBAL\\Configuration',
            'doctrine.data_collector.class' => 'Doctrine\\Bundle\\DoctrineBundle\\DataCollector\\DoctrineDataCollector',
            'doctrine.dbal.connection.event_manager.class' => 'Symfony\\Bridge\\Doctrine\\ContainerAwareEventManager',
            'doctrine.dbal.connection_factory.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ConnectionFactory',
            'doctrine.dbal.events.mysql_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\MysqlSessionInit',
            'doctrine.dbal.events.oracle_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\OracleSessionInit',
            'doctrine.class' => 'Doctrine\\Bundle\\DoctrineBundle\\Registry',
            'doctrine.entity_managers' => [
                'default' => 'doctrine.orm.default_entity_manager',
            ],
            'doctrine.default_entity_manager' => 'default',
            'doctrine.dbal.connection_factory.types' => [
                'utcdatetime' => [
                    'class' => 'Zikula\\Bundle\\CoreBundle\\Doctrine\\DBAL\\Type\\UTCDateTimeType',
                ],
            ],
            'doctrine.connections' => [
                'default' => 'doctrine.dbal.default_connection',
            ],
            'doctrine.default_connection' => 'default',
            'doctrine.orm.configuration.class' => 'Doctrine\\ORM\\Configuration',
            'doctrine.orm.entity_manager.class' => 'Doctrine\\ORM\\EntityManager',
            'doctrine.orm.manager_configurator.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ManagerConfigurator',
            'doctrine.orm.cache.array.class' => 'Doctrine\\Common\\Cache\\ArrayCache',
            'doctrine.orm.cache.apc.class' => 'Doctrine\\Common\\Cache\\ApcCache',
            'doctrine.orm.cache.memcache.class' => 'Doctrine\\Common\\Cache\\MemcacheCache',
            'doctrine.orm.cache.memcache_host' => 'localhost',
            'doctrine.orm.cache.memcache_port' => 11211,
            'doctrine.orm.cache.memcache_instance.class' => 'Memcache',
            'doctrine.orm.cache.memcached.class' => 'Doctrine\\Common\\Cache\\MemcachedCache',
            'doctrine.orm.cache.memcached_host' => 'localhost',
            'doctrine.orm.cache.memcached_port' => 11211,
            'doctrine.orm.cache.memcached_instance.class' => 'Memcached',
            'doctrine.orm.cache.redis.class' => 'Doctrine\\Common\\Cache\\RedisCache',
            'doctrine.orm.cache.redis_host' => 'localhost',
            'doctrine.orm.cache.redis_port' => 6379,
            'doctrine.orm.cache.redis_instance.class' => 'Redis',
            'doctrine.orm.cache.xcache.class' => 'Doctrine\\Common\\Cache\\XcacheCache',
            'doctrine.orm.cache.wincache.class' => 'Doctrine\\Common\\Cache\\WinCacheCache',
            'doctrine.orm.cache.zenddata.class' => 'Doctrine\\Common\\Cache\\ZendDataCache',
            'doctrine.orm.metadata.driver_chain.class' => 'Doctrine\\Common\\Persistence\\Mapping\\Driver\\MappingDriverChain',
            'doctrine.orm.metadata.annotation.class' => 'Doctrine\\ORM\\Mapping\\Driver\\AnnotationDriver',
            'doctrine.orm.metadata.xml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedXmlDriver',
            'doctrine.orm.metadata.yml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedYamlDriver',
            'doctrine.orm.metadata.php.class' => 'Doctrine\\ORM\\Mapping\\Driver\\PHPDriver',
            'doctrine.orm.metadata.staticphp.class' => 'Doctrine\\ORM\\Mapping\\Driver\\StaticPHPDriver',
            'doctrine.orm.proxy_cache_warmer.class' => 'Symfony\\Bridge\\Doctrine\\CacheWarmer\\ProxyCacheWarmer',
            'form.type_guesser.doctrine.class' => 'Symfony\\Bridge\\Doctrine\\Form\\DoctrineOrmTypeGuesser',
            'doctrine.orm.validator.unique.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator',
            'doctrine.orm.validator_initializer.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\DoctrineInitializer',
            'doctrine.orm.security.user.provider.class' => 'Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider',
            'doctrine.orm.listeners.resolve_target_entity.class' => 'Doctrine\\ORM\\Tools\\ResolveTargetEntityListener',
            'doctrine.orm.listeners.attach_entity_listeners.class' => 'Doctrine\\ORM\\Tools\\AttachEntityListenersListener',
            'doctrine.orm.naming_strategy.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultNamingStrategy',
            'doctrine.orm.naming_strategy.underscore.class' => 'Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy',
            'doctrine.orm.quote_strategy.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy',
            'doctrine.orm.quote_strategy.ansi.class' => 'Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy',
            'doctrine.orm.entity_listener_resolver.class' => 'Doctrine\\Bundle\\DoctrineBundle\\Mapping\\ContainerEntityListenerResolver',
            'doctrine.orm.second_level_cache.default_cache_factory.class' => 'Doctrine\\ORM\\Cache\\DefaultCacheFactory',
            'doctrine.orm.second_level_cache.default_region.class' => 'Doctrine\\ORM\\Cache\\Region\\DefaultRegion',
            'doctrine.orm.second_level_cache.filelock_region.class' => 'Doctrine\\ORM\\Cache\\Region\\FileLockRegion',
            'doctrine.orm.second_level_cache.logger_chain.class' => 'Doctrine\\ORM\\Cache\\Logging\\CacheLoggerChain',
            'doctrine.orm.second_level_cache.logger_statistics.class' => 'Doctrine\\ORM\\Cache\\Logging\\StatisticsCacheLogger',
            'doctrine.orm.second_level_cache.cache_configuration.class' => 'Doctrine\\ORM\\Cache\\CacheConfiguration',
            'doctrine.orm.second_level_cache.regions_configuration.class' => 'Doctrine\\ORM\\Cache\\RegionsConfiguration',
            'doctrine.orm.auto_generate_proxy_classes' => false,
            'doctrine.orm.proxy_namespace' => 'DoctrineProxy',
            'stof_doctrine_extensions.listener.translatable.class' => 'Gedmo\\Translatable\\TranslatableListener',
            'stof_doctrine_extensions.event_listener.locale.class' => 'Stof\\DoctrineExtensionsBundle\\EventListener\\LocaleListener',
            'stof_doctrine_extensions.listener.timestampable.class' => 'Gedmo\\Timestampable\\TimestampableListener',
            'stof_doctrine_extensions.listener.blameable.class' => 'Gedmo\\Blameable\\BlameableListener',
            'stof_doctrine_extensions.event_listener.blame.class' => 'Stof\\DoctrineExtensionsBundle\\EventListener\\BlameListener',
            'stof_doctrine_extensions.listener.sluggable.class' => 'Gedmo\\Sluggable\\SluggableListener',
            'stof_doctrine_extensions.listener.tree.class' => 'Gedmo\\Tree\\TreeListener',
            'stof_doctrine_extensions.listener.loggable.class' => 'Gedmo\\Loggable\\LoggableListener',
            'stof_doctrine_extensions.event_listener.logger.class' => 'Stof\\DoctrineExtensionsBundle\\EventListener\\LoggerListener',
            'stof_doctrine_extensions.listener.sortable.class' => 'Gedmo\\Sortable\\SortableListener',
            'stof_doctrine_extensions.listener.softdeleteable.class' => 'Gedmo\\SoftDeleteable\\SoftDeleteableListener',
            'stof_doctrine_extensions.listener.uploadable.class' => 'Gedmo\\Uploadable\\UploadableListener',
            'stof_doctrine_extensions.uploadable.manager.class' => 'Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadableManager',
            'stof_doctrine_extensions.uploadable.mime_type_guesser.class' => 'Stof\\DoctrineExtensionsBundle\\Uploadable\\MimeTypeGuesserAdapter',
            'stof_doctrine_extensions.uploadable.default_file_info.class' => 'Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadedFileInfo',
            'stof_doctrine_extensions.listener.reference_integrity.class' => 'Gedmo\\ReferenceIntegrity\\ReferenceIntegrityListener',
            'stof_doctrine_extensions.default_locale' => 'en_US',
            'stof_doctrine_extensions.translation_fallback' => true,
            'stof_doctrine_extensions.persist_default_translation' => false,
            'stof_doctrine_extensions.skip_translation_on_load' => false,
            'stof_doctrine_extensions.default_file_path' => NULL,
            'stof_doctrine_extensions.uploadable.validate_writable_directory' => true,
            'jms_i18n_routing.router.class' => 'JMS\\I18nRoutingBundle\\Router\\I18nRouter',
            'jms_i18n_routing.locale_resolver.class' => 'JMS\\I18nRoutingBundle\\Router\\DefaultLocaleResolver',
            'jms_i18n_routing.loader.class' => 'JMS\\I18nRoutingBundle\\Router\\I18nLoader',
            'jms_i18n_routing.route_exclusion_strategy.class' => 'Zikula\\RoutesModule\\Translation\\DefaultRouteExclusionStrategy',
            'jms_i18n_routing.pattern_generation_strategy.class' => 'Zikula\\RoutesModule\\Translation\\ZikulaPatternGenerationStrategy',
            'jms_i18n_routing.locale_choosing_listener.class' => 'JMS\\I18nRoutingBundle\\EventListener\\LocaleChoosingListener',
            'jms_i18n_routing.cookie_setting_listener.class' => 'JMS\\I18nRoutingBundle\\EventListener\\CookieSettingListener',
            'jms_i18n_routing.route_translation_extractor.class' => 'Zikula\\RoutesModule\\Translation\\ZikulaRouteTranslationExtractor',
            'jms_i18n_routing.default_locale' => 'en',
            'jms_i18n_routing.locales' => [
                0 => 'en',
            ],
            'jms_i18n_routing.catalogue' => 'routes',
            'jms_i18n_routing.strategy' => 'prefix_except_default',
            'jms_i18n_routing.redirect_to_host' => true,
            'jms_i18n_routing.cookie.name' => 'hl',
            'fos_js_routing.extractor.class' => 'FOS\\JsRoutingBundle\\Extractor\\ExposedRoutesExtractor',
            'fos_js_routing.controller.class' => 'FOS\\JsRoutingBundle\\Controller\\Controller',
            'fos_js_routing.normalizer.route_collection.class' => 'FOS\\JsRoutingBundle\\Serializer\\Normalizer\\RouteCollectionNormalizer',
            'fos_js_routing.normalizer.routes_response.class' => 'FOS\\JsRoutingBundle\\Serializer\\Normalizer\\RoutesResponseNormalizer',
            'fos_js_routing.denormalizer.route_collection.class' => 'FOS\\JsRoutingBundle\\Serializer\\Denormalizer\\RouteCollectionDenormalizer',
            'fos_js_routing.request_context_base_url' => NULL,
            'fos_js_routing.cache_control' => [
                'enabled' => false,
            ],
            'knp_menu.renderer.list.options' => [

            ],
            'knp_menu.twig.extension.class' => 'Knp\\Menu\\Twig\\MenuExtension',
            'knp_menu.renderer.twig.class' => 'Knp\\Menu\\Renderer\\TwigRenderer',
            'knp_menu.renderer.twig.options' => [

            ],
            'knp_menu.renderer.twig.template' => '@KnpMenu/menu.html.twig',
            'knp_menu.default_renderer' => 'twig',
            'liip_imagine.resolvers' => [
                'default' => [
                    'web_path' => [
                        'web_root' => (\dirname(__DIR__, 4).'/public'),
                        'cache_prefix' => 'media/cache',
                    ],
                ],
            ],
            'liip_imagine.loaders' => [
                'zikula_root' => [
                    'filesystem' => [
                        'data_root' => [
                            0 => (\dirname(__DIR__, 4).'/public'),
                        ],
                        'locator' => 'filesystem',
                        'allow_unresolvable_data_roots' => false,
                        'bundle_resources' => [
                            'enabled' => false,
                            'access_control_type' => 'blacklist',
                            'access_control_list' => [

                            ],
                        ],
                    ],
                ],
                'default' => [
                    'filesystem' => [
                        'data_root' => [
                            0 => (\dirname(__DIR__, 4).'/public'),
                        ],
                        'locator' => 'filesystem',
                        'allow_unresolvable_data_roots' => false,
                        'bundle_resources' => [
                            'enabled' => false,
                            'access_control_type' => 'blacklist',
                            'access_control_list' => [

                            ],
                        ],
                    ],
                ],
            ],
            'liip_imagine.jpegoptim.binary' => '/usr/bin/jpegoptim',
            'liip_imagine.jpegoptim.stripAll' => true,
            'liip_imagine.jpegoptim.max' => NULL,
            'liip_imagine.jpegoptim.progressive' => true,
            'liip_imagine.jpegoptim.tempDir' => NULL,
            'liip_imagine.optipng.binary' => '/usr/bin/optipng',
            'liip_imagine.optipng.level' => 7,
            'liip_imagine.optipng.stripAll' => true,
            'liip_imagine.optipng.tempDir' => NULL,
            'liip_imagine.pngquant.binary' => '/usr/bin/pngquant',
            'liip_imagine.mozjpeg.binary' => '/opt/mozjpeg/bin/cjpeg',
            'liip_imagine.driver_service' => 'liip_imagine.gd',
            'liip_imagine.cache.resolver.default' => 'default',
            'liip_imagine.default_image' => NULL,
            'liip_imagine.filter_sets' => [
                'cache' => [
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'filters' => [

                    ],
                    'post_processors' => [

                    ],
                ],
                'my_thumb' => [
                    'quality' => 100,
                    'jpeg_quality' => 90,
                    'png_compression_level' => 7,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'filters' => [
                        'thumbnail' => [
                            'size' => [
                                0 => 120,
                                1 => 90,
                            ],
                            'mode' => 'outbound',
                        ],
                        'background' => [
                            'size' => [
                                0 => 124,
                                1 => 94,
                            ],
                            'position' => 'center',
                            'color' => '#000000',
                        ],
                    ],
                    'post_processors' => [

                    ],
                ],
                'zkroot' => [
                    'quality' => 100,
                    'jpeg_quality' => 90,
                    'png_compression_level' => 7,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => 'zikula_root',
                    'default_image' => NULL,
                    'filters' => [
                        'thumbnail' => [
                            'size' => [
                                0 => 100,
                                1 => 100,
                            ],
                            'mode' => 'inset',
                        ],
                    ],
                    'post_processors' => [

                    ],
                ],
            ],
            'liip_imagine.binary.loader.default' => 'default',
            'liip_imagine.controller.filter_action' => 'Liip\\ImagineBundle\\Controller\\ImagineController::filterAction',
            'liip_imagine.controller.filter_runtime_action' => 'Liip\\ImagineBundle\\Controller\\ImagineController::filterRuntimeAction',
            'php_translation.locales' => [
                0 => 'en',
            ],
            'php_translation.default_locale' => 'en',
            'php_translation.webui.enabled' => false,
            'bazinga.jstranslation.translation_finder.class' => 'Bazinga\\Bundle\\JsTranslationBundle\\Finder\\TranslationFinder',
            'bazinga.jstranslation.translation_dumper.class' => 'Bazinga\\Bundle\\JsTranslationBundle\\Dumper\\TranslationDumper',
            'bazinga.jstranslation.controller.class' => 'Bazinga\\Bundle\\JsTranslationBundle\\Controller\\Controller',
            'console.command.ids' => [
                0 => 'console.command.public_alias.Zikula\\Bundle\\CoreBundle\\Command\\AssetsInstallCommand',
                1 => 'Zikula\\Bundle\\CoreInstallerBundle\\Command\\Install\\FinishCommand',
                2 => 'Zikula\\Bundle\\CoreInstallerBundle\\Command\\Install\\StartCommand',
                3 => 'Zikula\\Bundle\\CoreInstallerBundle\\Command\\UpgradeCommand',
            ],
        ];
    }
}
